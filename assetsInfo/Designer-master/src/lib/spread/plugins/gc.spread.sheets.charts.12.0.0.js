/*!
 * 
 * Spread.Sheets Library 12.0.0
 * 
 * Copyright(c) GrapeCity, Inc.  All rights reserved.
 * 
 * Licensed under the SpreadJS Commercial License.
 * us.sales@grapecity.com
 * http://www.grapecity.com/en/licensing/grapecity/
 * 
 * 
 */

(function (factory) {
   if(typeof module === 'object' && typeof module.exports === 'object') {
       module.exports = factory(require('@grapecity/spread-sheets'));
   } else if(typeof define === 'function' && define.amd) {
       define(['@grapecity/spread-sheets'], factory)
   } else if(typeof exports === 'object') {
       exports['Spread'] = factory(require('@grapecity/spread-sheets'));
   } else {
       factory(GC);
   }
}(function (GC) {
   GC = GC || {}; GC["Spread"] = GC["Spread"] || {}; GC["Spread"]["Sheets"] = GC["Spread"]["Sheets"] || {}; GC["Spread"]["Sheets"]["Charts"] =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/assets/";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

	(function () {
	    'use strict';
	    __webpack_require__(1);
	    __webpack_require__(2);
	    var Charts = __webpack_require__(3);
	    __webpack_require__(5);
	    __webpack_require__(8);
	    __webpack_require__(9);
	    __webpack_require__(7);
	    __webpack_require__(16);
	    __webpack_require__(14);
	    __webpack_require__(17);
	    __webpack_require__(18);
	    __webpack_require__(10);
	    __webpack_require__(19);
	    __webpack_require__(21);
	    __webpack_require__(15);
	    __webpack_require__(22);
	    module.exports = Charts;
	}());

/***/ }),
/* 1 */
/***/ (function(module, exports) {

	var dv,__extends=this&&this.__extends||function(){var n=function(t,e){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var i in e)e.hasOwnProperty(i)&&(t[i]=e[i])})(t,e)};return function(t,e){function i(){this.constructor=t}n(t,e),t.prototype=null===e?Object.create(e):(i.prototype=e.prototype,new i)}}();!function(t){"use strict";t.__Constant_Precision=.01,t.__Constant_Core_Control_ClassName="gcdv-flexdv",t.__Constant_Core_Header_ClassName="gcdv-header",t.__Constant_Core_Footer_ClassName="gcdv-footer",t.__Constant_Core_Plot_Area_ClassName="gcdv-plotarea",t.__Constant_Core_Plot_ClassName="gcdv-plot",t.__Constant_Core_Legends_ClassName="gcdv-legends",t.__Constant_Core_Legend_ClassName="gcdv-legend",t.__Constant_Core_Legend_Content_ClassName="gcdv-legend-content",t.__Constant_Core_Axis_X_ClassName="gcdv-axis-x",t.__Constant_Core_Axis_Y_ClassName="gcdv-axis-y",t.__Constant_Core_Label_ClassName="gcdv-label",t.__Constant_Core_Title_ClassName="gcdv-title",t.__Constant_Core_Tick_Major_ClassName="gcdv-tick-major",t.__Constant_Core_Tick_Minor_ClassName="gcdv-tick-minor",t.__Constant_Core_Grid_Line_Major_ClassName="gcdv-gridline-major",t.__Constant_Core_Grid_Line_Minor_ClassName="gcdv-gridline-minor",t.__Constant_Core_Line_ClassName="gcdv-line",t.__Constant_Core_Trellis_ClassName="gcdv-trellis",t.__Constant_Core_Trellis_Rows_ClassName="gcdv-trellis-rows",t.__Constant_Core_Trellis_Rows_Gridline_ClassName="gcdv-trellis-rows-gridline",t.__Constant_Core_Trellis_Rows_Header_ClassName="gcdv-trellis-rows-header",t.__Constant_Core_Trellis_Row_ClassName="gcdv-trellis-row",t.__Constant_Core_Trellis_Columns_ClassName="gcdv-trellis-columns",t.__Constant_Core_Trellis_Columns_Gridline_ClassName="gcdv-trellis-columns-gridline",t.__Constant_Core_Trellis_Columns_Header_ClassName="gcdv-trellis-columns-header",t.__Constant_Core_Trellis_Column_ClassName="gcdv-trellis-column",t.__Constant_Core_Trellis_Cells_ClassName="gcdv-trellis-cells",t.__Constant_Core_Trellis_Cell_ClassName="gcdv-trellis-cell",t.__Constant_Core_Trellis_Header_Cell_ClassName="gcdv-trellis-header-cell",t.__Constant_Core_Style_Stroke="#666666",t.__Constant_Core_Style_Fill="#666666",t.__Constant_Core_Style_Color="#666666",t.__Constant_Core_LABEL_PADDING=2,t.__Constant_Core_Tooltip_Threshold=15,t.__Constant_Core_Default_Date_Formats=["r"],t.__Constant_Core_Bar_Lines_Color="black",t.__Constant_Core_Color_Field_VALUESNAME="VALUESNAME"}(dv||(dv={})),function(t){"use strict";function e(t){var e=[].concat(n);for(n.length=0;;){var i=e.shift();if(null==i)break;i(t)}e.length=0}t.requestAnimationFrame=function(t){0==n.length?(n.length=0,n.push(t),window.requestAnimationFrame(e)):n.push(t)},t.__frameCallBack=e;var n=[]}(dv||(dv={})),function(t){!function(t){"use strict";var e=function(){function t(){}return t._parseCssPixel=function(t){return(t=t.trim()).toLowerCase().indexOf("px")==t.length-2?parseFloat(t.substr(0,t.length-2)):NaN},t}();t._Parser=e}(t.core||(t.core={}))}(dv||(dv={})),function(t){!function(r){"use strict";var t=function(){function o(t,e,i,n){this.left=r.asNumber(t),this.top=r.asNumber(e),this.width=r.asNumber(i),this.height=r.asNumber(n)}return o.union=function(t,e){var i=Math.min(t.left,e.left),n=Math.min(t.top,e.top);return new o(i,n,Math.max(t.right,e.right)-i,Math.max(t.bottom,e.bottom)-n)},Object.defineProperty(o.prototype,"right",{get:function(){return this.left+this.width},enumerable:!0,configurable:!0}),Object.defineProperty(o.prototype,"bottom",{get:function(){return this.top+this.height},enumerable:!0,configurable:!0}),Object.defineProperty(o.prototype,"location",{get:function(){return new r.Point(this.left,this.top)},enumerable:!0,configurable:!0}),Object.defineProperty(o.prototype,"center",{get:function(){return new r.Point(this.left+this.width/2,this.top+this.height/2)},enumerable:!0,configurable:!0}),Object.defineProperty(o.prototype,"size",{get:function(){return new r.Size(this.width,this.height)},enumerable:!0,configurable:!0}),o.prototype.equals=function(t){return t instanceof o&&this.left==t.left&&this.top==t.top&&this.width==t.width&&this.height==t.height},o.prototype.clone=function(){return new o(this.left,this.top,this.width,this.height)},o.fromBoundingRect=function(t){return null!=t.left?new o(t.left,t.top,t.width,t.height):null!=t.x?new o(t.x,t.y,t.width,t.height):void r.assert(!1,"Invalid source rectangle.")},o.intersection=function(t,e){var i=Math.max(t.left,e.left),n=Math.max(t.top,e.top);return new o(i,n,Math.min(t.right,e.right)-i,Math.min(t.bottom,e.bottom)-n)},o.prototype.contains=function(t){if(t instanceof r.Point)return t.x>=this.left&&t.x<this.right&&t.y>=this.top&&t.y<this.bottom;if(t instanceof o){var e=t;return e.left>=this.left&&e.right<=this.right&&e.top>=this.top&&e.bottom<=this.bottom}r.assert(!1,"Point or Rect expected.")},o.prototype.intersectsWith=function(t){return this.left<t.right&&this.right>t.left&&this.top<t.bottom&&this.bottom>t.top},o.prototype.inflate=function(t,e){return new o(this.left-t,this.top-e,this.width+2*t,this.height+2*e)},o}();r.Rect=t}(t.core||(t.core={}))}(dv||(dv={})),function(t){!function(n){"use strict";n.asType=function(t,e,i){return void 0===i&&(i=!1),t=n.tryCast(t,e),n.assert(i||null!=t,e+" expected."),t}}(t.core||(t.core={}))}(dv||(dv={})),function(t){!function(t){"use strict";var e=function(){function t(t){this._path(t)}return t.prototype._path=function(t){var i=this;if(null==t)return this.__path;this.__path=t,this.__parts=null!=t?t.split("."):[];for(var n,o,r,e=function(e){var t=s.__parts[e];n=t.split(/\[([^\[\]]+)\]/g),1<(o=n.filter(function(t){return t})).length&&(s.__parts.splice(e,1),o.forEach(function(t){i.__parts.splice(e++,0,t)})),r=e},s=this,a=0;a<this.__parts.length;a++)e(a),a=r;this.__key=1==this.__parts.length?this.__parts[0]:null},t.prototype.getValue=function(t){if(t){if(this.__key)return t[this.__key];if(this.__path in t)return t[this.__path];for(var e=0;e<this.__parts.length&&t;e++)t=t[this.__parts[e]]}return t},t.prototype.setValue=function(t,e){if(t){if(this.__path in t)return void(t[this.__path]=e);for(var i=0;i<this.__parts.length-1;i++)if(null==(t=t[this.__parts[i]]))return;t[this.__parts[this.__parts.length-1]]=e}},t}();t._Binding=e}(t.core||(t.core={}))}(dv||(dv={})),function(a){var f;(function(n){"use strict";var _=function(){function t(t,e,i,n){this._gd=t,this._name=e,this._level=i,this._isBottomLevel=n,this._groups=[],this._items=[]}return Object.defineProperty(t.prototype,"name",{get:function(){return this._name},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"level",{get:function(){return this._level},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"items",{get:function(){return this._items},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"groups",{get:function(){return this._groups},enumerable:!0,configurable:!0}),t}();n.CollectionViewGroup=_;var t=function(){function t(t,e){var i=this;this._idx=-1,this._srtDsc=new n.ObservableArray,this._grpDesc=new n.ObservableArray,this._newItem=null,this._edtItem=null,this._pgSz=0,this._pgIdx=0,this._updating=0,this._stableSort=!1,this._canFilter=!0,this._canGroup=!0,this._canSort=!0,this._canAddNew=!0,this._canCancelEdit=!0,this._canRemove=!0,this._canChangePage=!0,this._trackChanges=!1,this._chgAdded=new n.ObservableArray,this._chgRemoved=new n.ObservableArray,this._chgEdited=new n.ObservableArray,this.collectionChanged=new f.Event,this.sourceCollectionChanging=new f.Event,this.sourceCollectionChanged=new f.Event,this.currentChanged=new f.Event,this.currentChanging=new f.Event,this.pageChanged=new f.Event,this.pageChanging=new f.Event,this._srtDsc.collectionChanged.addHandler(function(){for(var t=i._srtDsc,e=0;e<t.length;e++)f.assert(t[e]instanceof r,"sortDescriptions array must contain SortDescription objects.");i.canSort&&i.refresh()}),this._grpDesc.collectionChanged.addHandler(function(){for(var t=i._grpDesc,e=0;e<t.length;e++)f.assert(t[e]instanceof o,"groupDescriptions array must contain GroupDescription objects.");i.canGroup&&i.refresh()}),this.sourceCollection=t||new n.ObservableArray,e&&(this.beginUpdate(),f.copy(this,e),this.endUpdate())}return Object.defineProperty(t.prototype,"sortComparer",{get:function(){return this._srtCmp},set:function(t){t!=this._srtCmp&&(this._srtCmp=f.asFunction(t,!0))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"useStableSort",{get:function(){return this._stableSort},set:function(t){this._stableSort=f.asBoolean(t)},enumerable:!0,configurable:!0}),t.prototype.getAggregate=function(t,e,i){var n=i?this._pgView:this._view;return a._getAggregate(t,n,e)},Object.defineProperty(t.prototype,"trackChanges",{get:function(){return this._trackChanges},set:function(t){this._trackChanges=f.asBoolean(t)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"itemsAdded",{get:function(){return this._chgAdded},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"itemsRemoved",{get:function(){return this._chgRemoved},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"itemsEdited",{get:function(){return this._chgEdited},enumerable:!0,configurable:!0}),t.prototype.clearChanges=function(){this._chgAdded.clear(),this._chgRemoved.clear(),this._chgEdited.clear()},t.prototype.implementsInterface=function(t){switch(t){case"ICollectionView":case"IEditableCollectionView":case"IPagedCollectionView":case"INotifyCollectionChanged":return!0}return!1},t.prototype.onCollectionChanged=function(t){void 0===t&&(t=f.NotifyCollectionChangedEventArgs.reset),this._committing||this._canceling||t.action!=f.NotifyCollectionChangedAction.Change||t.item==this.currentEditItem||this._trackItemChanged(t.item),this.collectionChanged.raise(this,t)},t.prototype._raiseCollectionChanged=function(t,e,i){void 0===t&&(t=f.NotifyCollectionChangedAction.Reset);var n=new f.NotifyCollectionChangedEventArgs(t,e,i);this.onCollectionChanged(n)},t.prototype.onSourceCollectionChanging=function(t){return this.sourceCollectionChanging.raise(this,t),!t.cancel},t.prototype.onSourceCollectionChanged=function(t){this.sourceCollectionChanged.raise(this,t)},Object.defineProperty(t.prototype,"canFilter",{get:function(){return this._canFilter},set:function(t){this._canFilter=f.asBoolean(t)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"canGroup",{get:function(){return this._canGroup},set:function(t){this._canGroup=f.asBoolean(t)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"canSort",{get:function(){return this._canSort},set:function(t){this._canSort=f.asBoolean(t)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"currentItem",{get:function(){return this._pgView&&-1<this._idx&&this._idx<this._pgView.length?this._pgView[this._idx]:null},set:function(t){this.moveCurrentTo(t)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"currentPosition",{get:function(){return this._idx},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"filter",{get:function(){return this._filter},set:function(t){this._filter!=t&&(this._filter=f.asFunction(t),this.canFilter&&this.refresh())},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"groupDescriptions",{get:function(){return this._grpDesc},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"groups",{get:function(){return this._groups},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"isEmpty",{get:function(){return!this._pgView||!this._pgView.length},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"sortDescriptions",{get:function(){return this._srtDsc},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"sourceCollection",{get:function(){return this._src},set:function(t){if(t!=this._src){if(!this.onSourceCollectionChanging(new f.CancelEventArgs))return;var e=this.currentPosition;this.commitEdit(),this.commitNew(),null!=this._ncc&&this._ncc.collectionChanged.removeHandler(this._sourceChanged),this._src=f.asArray(t,!1),this._ncc=f.tryCast(this._src,"INotifyCollectionChanged"),this._ncc&&this._ncc.collectionChanged.addHandler(this._sourceChanged,this),this.clearChanges(),this.refresh(),this.moveCurrentToFirst(),this.onSourceCollectionChanged(),this.currentPosition<0&&-1<e&&this.onCurrentChanged()}},enumerable:!0,configurable:!0}),t.prototype._sourceChanged=function(t,e){this._updating<=0&&this.refresh()},t.prototype.contains=function(t){return-1<this._pgView.indexOf(t)},t.prototype.moveCurrentTo=function(t){return this.moveCurrentToPosition(this._pgView.indexOf(t))},t.prototype.moveCurrentToFirst=function(){return this.moveCurrentToPosition(0)},t.prototype.moveCurrentToLast=function(){return this.moveCurrentToPosition(this._pgView.length-1)},t.prototype.moveCurrentToPrevious=function(){return 0<this._idx&&this.moveCurrentToPosition(this._idx-1)},t.prototype.moveCurrentToNext=function(){return this.moveCurrentToPosition(this._idx+1)},t.prototype.moveCurrentToPosition=function(t){if(-1<=t&&t<this._pgView.length){var e=new f.CancelEventArgs;this._idx!=t&&this.onCurrentChanging(e)&&(this._edtItem&&this._pgView[t]!=this._edtItem&&this.commitEdit(),this._newItem&&this._pgView[t]!=this._newItem&&this.commitNew(),this._idx=t,this.onCurrentChanged())}return this._idx==t},t.prototype.refresh=function(){0<this._updating||this._newItem||this._edtItem||(this._performRefresh(),this.onCollectionChanged())},t.prototype._performRefresh=function(){var t=this.currentItem;this._src?this._filter&&this.canFilter?this._view=this._performFilter(this._src):this._view=0<this._srtDsc.length&&this.canSort?this._src.slice(0):this._src:this._view=[],this.canSort&&0<this._srtDsc.length&&this._performSort(this._view),this._groups=this.canGroup?this._createGroups(this._view):null,this._fullGroups=this._groups,this._groups&&(this._view=this._mergeGroupItems(this._groups)),this._pgIdx=s(this._pgIdx,0,this.pageCount-1),this._pgView=this._getPageView(),this._groups&&1<this.pageCount&&(this._groups=this._createGroups(this._pgView),this._mergeGroupItems(this._groups));var e=this._pgView.indexOf(t);e<0&&(e=Math.min(this._idx,this._pgView.length-1)),this._idx=e,this._digest=this._getGroupsDigest(this.groups),this.currentItem!==t&&this.onCurrentChanged()},t.prototype._performSort=function(t){if(this._stableSort){var e=t.map(function(t,e){return{item:t,index:e}}),n=this._compareItems();e.sort(function(t,e){var i=n(t.item,e.item);return 0==i?t.index-e.index:i});for(var i=0;i<t.length;i++)t[i]=e[i].item}else t.sort(this._compareItems())},t.prototype._compareItems=function(){var l=this._srtDsc,_=this._srtCvt,u=this._srtCmp,h=!0,c=0;return function(t,e){for(var i=0;i<l.length;i++){var n=l[i],o=n._bnd.getValue(t),r=n._bnd.getValue(e);if(_&&(o=_(n,t,o,h),r=_(n,e,r,!1),h=!1),u&&null!=(c=u(o,r)))return n.ascending?+c:-c;if(o!=o&&(o=null),r!=r&&(r=null),"string"==typeof o&&"string"==typeof r){var s=o.toLowerCase(),a=r.toLowerCase();s!=a&&(o=s,r=a)}if(null!=o&&null==r)return-1;if(null==o&&null!=r)return 1;if(0!=(c=o<r?-1:r<o?1:0))return n.ascending?+c:-c}return 0}},t.prototype._performFilter=function(t){return this.canFilter&&this._filter?t.filter(this._filter,this):t},t.prototype.onCurrentChanged=function(t){void 0===t&&(t=f.EventArgs.empty),this.currentChanged.raise(this,t)},t.prototype.onCurrentChanging=function(t){return this.currentChanging.raise(this,t),!t.cancel},Object.defineProperty(t.prototype,"items",{get:function(){return this._pgView},enumerable:!0,configurable:!0}),t.prototype.beginUpdate=function(){this._updating++},t.prototype.endUpdate=function(){this._updating--,this._updating<=0&&this.refresh()},Object.defineProperty(t.prototype,"isUpdating",{get:function(){return 0<this._updating},enumerable:!0,configurable:!0}),t.prototype.deferUpdate=function(t){try{this.beginUpdate(),t()}finally{this.endUpdate()}},Object.defineProperty(t.prototype,"canAddNew",{get:function(){return this._canAddNew},set:function(t){this._canAddNew=f.asBoolean(t)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"canCancelEdit",{get:function(){return this._canCancelEdit},set:function(t){this._canCancelEdit=f.asBoolean(t)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"canRemove",{get:function(){return this._canRemove},set:function(t){this._canRemove=f.asBoolean(t)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"currentAddItem",{get:function(){return this._newItem},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"currentEditItem",{get:function(){return this._edtItem},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"isAddingNew",{get:function(){return null!=this._newItem},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"isEditingItem",{get:function(){return null!=this._edtItem},enumerable:!0,configurable:!0}),t.prototype.editItem=function(t){t!=this._edtItem&&this.moveCurrentTo(t)&&(this.commitEdit(),this._edtItem=t,this._edtClone={},this._extend(this._edtClone,this._edtItem))},t.prototype.commitEdit=function(){var t=this._edtItem;if(null!=t){this._committing=!0;var e=this._sameContent(t,this._edtClone);this._edtItem=null,this._edtClone=null;var i=this._pgView.indexOf(t),n=this._digest;this._performRefresh(),e||this._trackItemChanged(t),this._pgView.indexOf(t)==i&&n==this._digest?this._raiseCollectionChanged(f.NotifyCollectionChangedAction.Change,t,i):this._raiseCollectionChanged(),this._committing=!1}},t.prototype.cancelEdit=function(){var t=this._edtItem;if(null!=t){if(this._edtItem=null,!this.canCancelEdit)return void f.assert(!1,"cannot cancel edits (canCancelEdit == false).");var e=this._src.indexOf(t);if(e<0||!this._edtClone)return;this._extend(this._src[e],this._edtClone),this._edtClone=null,this._canceling=!0,this._raiseCollectionChanged(f.NotifyCollectionChangedAction.Change,t,e),this._canceling=!1}},t.prototype.commitNew=function(){var t=this._newItem;if(null!=t){this._newItem=null;var e=this._pgView.indexOf(t),i=this._digest;if(this._performRefresh(),1==this._trackChanges){var n=this._chgEdited.indexOf(t);-1<n&&this._chgEdited.removeAt(n),this._chgAdded.indexOf(t)<0&&this._chgAdded.push(t)}this._pgView.indexOf(t)==e&&i==this._digest?this._raiseCollectionChanged(f.NotifyCollectionChangedAction.Change,t,e):this._raiseCollectionChanged()}},t.prototype.cancelNew=function(){var t=this._newItem;null!=t&&this.remove(t)},t.prototype.remove=function(t){var e=t==this._newItem;if(e&&(this._newItem=null),t==this._edtItem&&this.cancelEdit(),this.canRemove){var i=this._src.indexOf(t);if(-1<i){var n=this.currentItem;this._updating++,this._src.splice(i,1),this._updating--;var o=this._digest;if(this._performRefresh(),1==this._trackChanges){var r=this._chgAdded.indexOf(t);-1<r&&this._chgAdded.removeAt(r);var s=this._chgEdited.indexOf(t);-1<s&&this._chgEdited.removeAt(s),this._chgRemoved.indexOf(t)<0&&!e&&r<0&&this._chgRemoved.push(t)}var a=0<this.sortDescriptions.length,l=0<this.pageSize&&-1<this._pgIdx;a||l||o!=this._getGroupsDigest(this.groups)?this._raiseCollectionChanged():this._raiseCollectionChanged(f.NotifyCollectionChangedAction.Remove,t,i),this.currentItem!==n&&this.onCurrentChanged()}}else f.assert(!1,"cannot remove items (canRemove == false).")},t.prototype.removeAt=function(t){t=f.asInt(t),this.remove(this._pgView[t])},t.prototype._trackItemChanged=function(t){if(this._trackChanges){var e=this._chgEdited.indexOf(t);if(e<0&&this._chgAdded.indexOf(t)<0)this._chgEdited.push(t);else if(-1<e){var i=new f.NotifyCollectionChangedEventArgs(f.NotifyCollectionChangedAction.Change,t,e);this._chgEdited.onCollectionChanged(i)}else-1<(e=this._chgAdded.indexOf(t))&&(i=new f.NotifyCollectionChangedEventArgs(f.NotifyCollectionChangedAction.Change,t,e),this._chgAdded.onCollectionChanged(i))}},t.prototype._extend=function(t,e){for(var i in e)t[i]=e[i]},t.prototype._sameContent=function(t,e){for(var i in e)if(!this._sameValue(t[i],e[i]))return!1;for(var i in t)if(!this._sameValue(t[i],e[i]))return!1;return!0},t.prototype._sameValue=function(t,e){return t==e||f.DateTime.equals(t,e)},Object.defineProperty(t.prototype,"canChangePage",{get:function(){return this._canChangePage},set:function(t){this._canChangePage=f.asBoolean(t)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"isPageChanging",{get:function(){return!1},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"itemCount",{get:function(){return this._pgView.length},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"pageIndex",{get:function(){return this._pgIdx},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"pageSize",{get:function(){return this._pgSz},set:function(t){t!=this._pgSz&&(this._pgSz=f.asInt(t),this.refresh())},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"totalItemCount",{get:function(){return this._view.length},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"pageCount",{get:function(){return this.pageSize?Math.ceil(this.totalItemCount/this.pageSize):1},enumerable:!0,configurable:!0}),t.prototype.moveToFirstPage=function(){return this.moveToPage(0)},t.prototype.moveToLastPage=function(){return this.moveToPage(this.pageCount-1)},t.prototype.moveToNextPage=function(){return this.moveToPage(this.pageIndex+1)},t.prototype.moveToPage=function(t){var e=s(t,0,this.pageCount-1);if(e!=this._pgIdx){this.canChangePage||f.assert(!1,"cannot change pages (canChangePage == false).");var i=new f.PageChangingEventArgs(e);this.onPageChanging(i)&&(this._pgIdx=e,this._pgView=this._getPageView(),this._idx=0,this.groupDescriptions&&0!=this.groupDescriptions.length?this.refresh():(this.onPageChanged(),this.onCollectionChanged()))}return this._pgIdx==t},t.prototype.moveToPreviousPage=function(){return this.moveToPage(this.pageIndex-1)},t.prototype.onPageChanged=function(t){void 0===t&&(t=f.EventArgs.empty),this.pageChanged.raise(this,t)},t.prototype.onPageChanging=function(t){return this.pageChanging.raise(this,t),!t.cancel},t.prototype._getFullGroup=function(t){var e=this._getGroupByPath(this._fullGroups,t.level,t._path);return null!=e&&(t=e),t},t.prototype._getGroupByPath=function(t,e,i){for(var n=0;n<t.length;n++){var o=t[n];if(o.level==e&&o._path==i)return o;if(o.level<e&&0==i.indexOf(o._path)&&null!=(o=this._getGroupByPath(o.groups,e,i)))return o}return null},t.prototype._getPageView=function(){if(this.pageSize<=0||this._pgIdx<0)return this._view;var t=this._pgSz*this._pgIdx,e=Math.min(t+this._pgSz,this._view.length);return this._view.slice(t,e)},t.prototype._createGroups=function(t){if(!this._grpDesc||!this._grpDesc.length)return null;for(var e=[],i={},n=null,o=0;o<t.length;o++)for(var r=t[o],s=e,a=this._grpDesc.length,l="",_=0;_<a;_++){var u=this._grpDesc[_],h=u.groupNameFromItem(r,_),c=_==a-1;!(n=i[l])&&f.isPrimitive(h)&&(n={},i[l]=n);var p=this._getGroup(u,s,n,h,_,c);l+="/"+h,p._path=l,c&&p.items.push(r),s=p.groups}return e},t.prototype._getGroupsDigest=function(t){for(var e="",i=0;null!=t&&i<t.length;i++){var n=t[i];e+="{"+n.name+":"+(n.items?n.items.length:"*"),0<n.groups.length&&(e+=",",e+=this._getGroupsDigest(n.groups)),e+="}"}return e},t.prototype._mergeGroupItems=function(t){for(var e=[],i=0;i<t.length;i++){var n=t[i];if(!n._isBottomLevel)for(var o=this._mergeGroupItems(n.groups),r=0,s=o.length;r<s;r++)n._items.push(o[r]);for(r=0,s=n._items.length;r<s;r++)e.push(n._items[r])}return e},t.prototype._getGroup=function(t,e,i,n,o,r){var s;if(i&&f.isPrimitive(n)){if(s=i[n])return s}else for(var a=0;a<e.length;a++)if(t.namesMatch(e[a].name,n))return e[a];var l=new _(t,n,o,r);return e.push(l),i&&(i[n]=l),l},t}();n.CollectionView=t;var o=function(){function t(){}return t.prototype.groupNameFromItem=function(t,e){return""},t.prototype.namesMatch=function(t,e){return t===e},t}(),e=function(n){function t(t,e){var i=n.call(this)||this;return i._bnd=new f._Binding(t),i._converter=e,i}return __extends(t,n),Object.defineProperty(t.prototype,"propertyName",{get:function(){return this._bnd._path()},enumerable:!0,configurable:!0}),t.prototype.groupNameFromItem=function(t,e){return this._converter?this._converter(t,this.propertyName):this._bnd.getValue(t)},t.prototype.namesMatch=function(t,e){return t===e},t}(n.GroupDescription=o);n.PropertyGroupDescription=e;var r=function(){function t(t,e){this._bnd=new f._Binding(t),this._asc=e}return Object.defineProperty(t.prototype,"property",{get:function(){return this._bnd._path()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"ascending",{get:function(){return this._asc},enumerable:!0,configurable:!0}),t}();function s(t,e,i){return null!=t&&(null!=i&&i<t&&(t=i),null!=e&&t<e&&(t=e)),t}})((f=a.core||(a.core={})).collections||(f.collections={}))}(dv||(dv={})),function(t){var r;(function(t){"use strict";var e=function(){function t(){this.length=0,Array.apply(this,arguments)}return t.prototype.pop=function(){return null},t.prototype.push=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];return 0},t.prototype.splice=function(t,e,i){return null},t.prototype.slice=function(t,e){return null},t.prototype.indexOf=function(t,e){return-1},t.prototype.sort=function(t){return null},t.prototype.forEach=function(t,e){return null},t.prototype.filter=function(t,e){return null},t}();(t.ArrayBase=e).prototype=Array.prototype;var i=function(o){function t(t){var e=o.call(this)||this;if(e._updating=0,e.collectionChanged=new r.Event,t){t=r.asArray(t),e._updating++;for(var i=0;i<t.length;i++)e.push(t[i]);e._updating--}return e}return __extends(t,o),t.prototype.push=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];for(var i=this.length,n=0;t&&n<t.length;n++)i=o.prototype.push.call(this,t[n]),this._updating||this._raiseCollectionChanged(r.NotifyCollectionChangedAction.Add,t[n],i-1);return i},t.prototype.pop=function(){var t=o.prototype.pop.call(this);return this._raiseCollectionChanged(r.NotifyCollectionChangedAction.Remove,t,this.length),t},t.prototype.splice=function(t,e,i){var n;return e&&i?(n=o.prototype.splice.call(this,t,e,i),1==e?this._raiseCollectionChanged(r.NotifyCollectionChangedAction.Change,i,t):this._raiseCollectionChanged()):i?(n=o.prototype.splice.call(this,t,0,i),this._raiseCollectionChanged(r.NotifyCollectionChangedAction.Add,i,t)):(n=o.prototype.splice.call(this,t,e),1==e?this._raiseCollectionChanged(r.NotifyCollectionChangedAction.Remove,n[0],t):this._raiseCollectionChanged()),n},t.prototype.slice=function(t,e){return o.prototype.slice.call(this,t,e)},t.prototype.indexOf=function(t,e){return o.prototype.indexOf.call(this,t,e)},t.prototype.sort=function(t){var e=o.prototype.sort.call(this,t);return this._raiseCollectionChanged(),e},t.prototype.insert=function(t,e){this.splice(t,0,e)},t.prototype.remove=function(t){var e=this.indexOf(t);return-1<e&&(this.removeAt(e),!0)},t.prototype.removeAt=function(t){this.splice(t,1)},t.prototype.setAt=function(t,e){t>this.length&&(this.length=t),this.splice(t,1,e)},t.prototype.clear=function(){0!==this.length&&(this.splice(0,this.length),this._raiseCollectionChanged())},t.prototype.beginUpdate=function(){this._updating++},t.prototype.endUpdate=function(){0<this._updating&&(this._updating--,0==this._updating&&this._raiseCollectionChanged())},Object.defineProperty(t.prototype,"isUpdating",{get:function(){return 0<this._updating},enumerable:!0,configurable:!0}),t.prototype.deferUpdate=function(t){try{this.beginUpdate(),t()}finally{this.endUpdate()}},t.prototype.implementsInterface=function(t){return"INotifyCollectionChanged"==t},t.prototype.onCollectionChanged=function(t){void 0===t&&(t=r.NotifyCollectionChangedEventArgs.reset),this.isUpdating||this.collectionChanged.raise(this,t)},t.prototype._raiseCollectionChanged=function(t,e,i){if(void 0===t&&(t=r.NotifyCollectionChangedAction.Reset),!this.isUpdating){var n=new r.NotifyCollectionChangedEventArgs(t,e,i);this.onCollectionChanged(n)}},t}(e);t.ObservableArray=i})((r=t.core||(t.core={})).collections||(r.collections={}))}(dv||(dv={})),function(t){!function(n){"use strict";var t=function(){function t(t){void 0===t&&(t=1),this.alpha=n.clamp(t,0,1)}return t.fromCss=function(t){var e=n._RgbaColor.fromCss(t);if(null!=e)return e;var i=n._HslaColor.fromCss(t);return null!=i?i:null},t.tint=function(t,e){return t instanceof n._RgbaColor?n._RgbaColor.tint(t,e):t instanceof n._HslaColor?n._HslaColor.tint(t,e):t},t.prototype.toCss=function(){return null},t}();n._Color=t}(t.core||(t.core={}))}(dv||(dv={})),function(t){!function(t){"use strict";var e=function(){function t(){this.__namedColors={},this.__namedColors.aliceblue="rgb(240, 248, 255)",this.__namedColors.antiquewhite="rgb(250, 235, 215)",this.__namedColors.aqua="rgb( 0, 255, 255)",this.__namedColors.aquamarine="rgb(127, 255, 212)",this.__namedColors.azure="rgb(240, 255, 255)",this.__namedColors.beige="rgb(245, 245, 220)",this.__namedColors.bisque="rgb(255, 228, 196)",this.__namedColors.black="rgb( 0, 0, 0)",this.__namedColors.blanchedalmond="rgb(255, 235, 205)",this.__namedColors.blue="rgb( 0, 0, 255)",this.__namedColors.blueviolet="rgb(138, 43, 226)",this.__namedColors.brown="rgb(165, 42, 42)",this.__namedColors.burlywood="rgb(222, 184, 135)",this.__namedColors.cadetblue="rgb( 95, 158, 160)",this.__namedColors.chartreuse="rgb(127, 255, 0)",this.__namedColors.chocolate="rgb(210, 105, 30)",this.__namedColors.coral="rgb(255, 127, 80)",this.__namedColors.cornflowerblue="rgb(100, 149, 237)",this.__namedColors.cornsilk="rgb(255, 248, 220)",this.__namedColors.crimson="rgb(220, 20, 60)",this.__namedColors.cyan="rgb( 0, 255, 255)",this.__namedColors.darkblue="rgb( 0, 0, 139)",this.__namedColors.darkcyan="rgb( 0, 139, 139)",this.__namedColors.darkgoldenrod="rgb(184, 134, 11)",this.__namedColors.darkgray="rgb(169, 169, 169)",this.__namedColors.darkgreen="rgb( 0, 100, 0)",this.__namedColors.darkgrey="rgb(169, 169, 169)",this.__namedColors.darkkhaki="rgb(189, 183, 107)",this.__namedColors.darkmagenta="rgb(139, 0, 139)",this.__namedColors.darkolivegreen="rgb( 85, 107, 47)",this.__namedColors.darkorange="rgb(255, 140, 0)",this.__namedColors.darkorchid="rgb(153, 50, 204)",this.__namedColors.darkred="rgb(139, 0, 0)",this.__namedColors.darksalmon="rgb(233, 150, 122)",this.__namedColors.darkseagreen="rgb(143, 188, 143)",this.__namedColors.darkslateblue="rgb( 72, 61, 139)",this.__namedColors.darkslategray="rgb( 47, 79, 79)",this.__namedColors.darkslategrey="rgb( 47, 79, 79)",this.__namedColors.darkturquoise="rgb( 0, 206, 209)",this.__namedColors.darkviolet="rgb(148, 0, 211)",this.__namedColors.deeppink="rgb(255, 20, 147)",this.__namedColors.deepskyblue="rgb( 0, 191, 255)",this.__namedColors.dimgray="rgb(105, 105, 105)",this.__namedColors.dimgrey="rgb(105, 105, 105)",this.__namedColors.dodgerblue="rgb( 30, 144, 255)",this.__namedColors.firebrick="rgb(178, 34, 34)",this.__namedColors.floralwhite="rgb(255, 250, 240)",this.__namedColors.forestgreen="rgb( 34, 139, 34)",this.__namedColors.fuchsia="rgb(255, 0, 255)",this.__namedColors.gainsboro="rgb(220, 220, 220)",this.__namedColors.ghostwhite="rgb(248, 248, 255)",this.__namedColors.gold="rgb(255, 215, 0)",this.__namedColors.goldenrod="rgb(218, 165, 32)",this.__namedColors.gray="rgb(128, 128, 128)",this.__namedColors.grey="rgb(128, 128, 128)",this.__namedColors.green="rgb( 0, 128, 0)",this.__namedColors.greenyellow="rgb(173, 255, 47)",this.__namedColors.honeydew="rgb(240, 255, 240)",this.__namedColors.hotpink="rgb(255, 105, 180)",this.__namedColors.indianred="rgb(205, 92, 92)",this.__namedColors.indigo="rgb( 75, 0, 130)",this.__namedColors.ivory="rgb(255, 255, 240)",this.__namedColors.khaki="rgb(240, 230, 140)",this.__namedColors.lavender="rgb(230, 230, 250)",this.__namedColors.lavenderblush="rgb(255, 240, 245)",this.__namedColors.lawngreen="rgb(124, 252, 0)",this.__namedColors.lemonchiffon="rgb(255, 250, 205)",this.__namedColors.lightblue="rgb(173, 216, 230)",this.__namedColors.lightcoral="rgb(240, 128, 128)",this.__namedColors.lightcyan="rgb(224, 255, 255)",this.__namedColors.lightgoldenrodyellow="rgb(250, 250, 210)",this.__namedColors.lightgray="rgb(211, 211, 211)",this.__namedColors.lightgreen="rgb(144, 238, 144)",this.__namedColors.lightgrey="rgb(211, 211, 211)",this.__namedColors.lightpink="rgb(255, 182, 193)",this.__namedColors.lightsalmon="rgb(255, 160, 122)",this.__namedColors.lightseagreen="rgb( 32, 178, 170)",this.__namedColors.lightskyblue="rgb(135, 206, 250)",this.__namedColors.lightslategray="rgb(119, 136, 153)",this.__namedColors.lightslategrey="rgb(119, 136, 153)",this.__namedColors.lightsteelblue="rgb(176, 196, 222)",this.__namedColors.lightyellow="rgb(255, 255, 224)",this.__namedColors.lime="rgb( 0, 255, 0)",this.__namedColors.limegreen="rgb( 50, 205, 50)",this.__namedColors.linen="rgb(250, 240, 230)",this.__namedColors.magenta="rgb(255, 0, 255)",this.__namedColors.maroon="rgb(128, 0, 0)",this.__namedColors.mediumaquamarine="rgb(102, 205, 170)",this.__namedColors.mediumblue="rgb( 0, 0, 205)",this.__namedColors.mediumorchid="rgb(186, 85, 211)",this.__namedColors.mediumpurple="rgb(147, 112, 219)",this.__namedColors.mediumseagreen="rgb( 60, 179, 113)",this.__namedColors.mediumslateblue="rgb(123, 104, 238)",this.__namedColors.mediumspringgreen="rgb( 0, 250, 154)",this.__namedColors.mediumturquoise="rgb( 72, 209, 204)",this.__namedColors.mediumvioletred="rgb(199, 21, 133)",this.__namedColors.midnightblue="rgb( 25, 25, 112)",this.__namedColors.mintcream="rgb(245, 255, 250)",this.__namedColors.mistyrose="rgb(255, 228, 225)",this.__namedColors.moccasin="rgb(255, 228, 181)",this.__namedColors.navajowhite="rgb(255, 222, 173)",this.__namedColors.navy="rgb( 0, 0, 128)",this.__namedColors.oldlace="rgb(253, 245, 230)",this.__namedColors.olive="rgb(128, 128, 0)",this.__namedColors.olivedrab="rgb(107, 142, 35)",this.__namedColors.orange="rgb(255, 165, 0)",this.__namedColors.orangered="rgb(255, 69, 0)",this.__namedColors.orchid="rgb(218, 112, 214)",this.__namedColors.palegoldenrod="rgb(238, 232, 170)",this.__namedColors.palegreen="rgb(152, 251, 152)",this.__namedColors.paleturquoise="rgb(175, 238, 238)",this.__namedColors.palevioletred="rgb(219, 112, 147)",this.__namedColors.papayawhip="rgb(255, 239, 213)",this.__namedColors.peachpuff="rgb(255, 218, 185)",this.__namedColors.peru="rgb(205, 133, 63)",this.__namedColors.pink="rgb(255, 192, 203)",this.__namedColors.plum="rgb(221, 160, 221)",this.__namedColors.powderblue="rgb(176, 224, 230)",this.__namedColors.purple="rgb(128, 0, 128)",this.__namedColors.red="rgb(255, 0, 0)",this.__namedColors.rosybrown="rgb(188, 143, 143)",this.__namedColors.royalblue="rgb( 65, 105, 225)",this.__namedColors.saddlebrown="rgb(139, 69, 19)",this.__namedColors.salmon="rgb(250, 128, 114)",this.__namedColors.sandybrown="rgb(244, 164, 96)",this.__namedColors.seagreen="rgb( 46, 139, 87)",this.__namedColors.seashell="rgb(255, 245, 238)",this.__namedColors.sienna="rgb(160, 82, 45)",this.__namedColors.silver="rgb(192, 192, 192)",this.__namedColors.skyblue="rgb(135, 206, 235)",this.__namedColors.slateblue="rgb(106, 90, 205)",this.__namedColors.slategray="rgb(112, 128, 144)",this.__namedColors.slategrey="rgb(112, 128, 144)",this.__namedColors.snow="rgb(255, 250, 250)",this.__namedColors.springgreen="rgb( 0, 255, 127)",this.__namedColors.steelblue="rgb( 70, 130, 180)",this.__namedColors.tan="rgb(210, 180, 140)",this.__namedColors.teal="rgb( 0, 128, 128)",this.__namedColors.thistle="rgb(216, 191, 216)",this.__namedColors.tomato="rgb(255, 99, 71)",this.__namedColors.turquoise="rgb( 64, 224, 208)",this.__namedColors.violet="rgb(238, 130, 238)",this.__namedColors.wheat="rgb(245, 222, 179)",this.__namedColors.white="rgb(255, 255, 255)",this.__namedColors.whitesmoke="rgb(245, 245, 245)",this.__namedColors.yellow="rgb(255, 255, 0)",this.__namedColors.yellowgreen="rgb(154, 205, 50)"}return t.prototype.toCssRgbaColor=function(t){return this.__namedColors[t.toLowerCase()]},t}();t._CssNamedColor=e}(t.core||(t.core={}))}(dv||(dv={})),function(t){!function(l){"use strict";var t=function(r){function u(t,e,i,n){void 0===n&&(n=1);var o=r.call(this,n)||this;return t%=360,o.hue=l.clamp(t,0,360),o.saturation=l.clamp(e,0,1),o.lightness=l.clamp(i,0,1),o}return __extends(u,r),u.fromCss=function(t){if(0==t.indexOf("hsla(")&&t.indexOf(")")==t.length-1){var e=t.substring(5,t.length-1).split(",");return 4==e.length?new u(parseFloat(e[0]),u._parsePercent(e[1]),u._parsePercent(e[2]),parseFloat(e[3])):null}if(0!=t.indexOf("hsl(")||t.indexOf(")")!=t.length-1)return null;var i=t.substring(4,t.length-1).split(",");return 3==i.length?new u(parseFloat(i[0]),u._parsePercent(i[1]),u._parsePercent(i[2])):null},u.tint=function(t,e){if(0===e)return t;var i=240*t.lightness;return i+=parseInt((0<e?((240-i)*e).toString():i*e).toString(),10),i/=240,new u(t.hue,t.saturation,i,t.alpha)},u._parsePercent=function(t){return t.lastIndexOf("%")==t.length-1?Number(t.slice(0,t.length-1))/100:NaN},u.prototype.toCss=function(){var t=Math.round(100*this.alpha);return 99<t?"hsl("+this.hue+","+Math.round(100*this.saturation)+"%,"+Math.round(100*this.lightness)+"%)":"hsla("+this.hue+","+Math.round(100*this.saturation)+"%,"+Math.round(100*this.lightness)+"%,"+t/100+")"},u.fromRgba=function(t){var e,i,n=t.red/255,o=t.green/255,r=t.blue/255,s=Math.max(n,o,r),a=Math.min(n,o,r),l=(s+a)/2;if(s==a)e=i=0;else{var _=s-a;switch(i=.5<l?_/(2-s-a):_/(s+a),s){case n:e=(o-r)/_+(o<r?6:0);break;case o:e=(r-n)/_+2;break;case r:e=(n-o)/_+4}e/=6}return new u(360*e,i,l,t.alpha)},u.prototype.toRgba=function(){var t=this._hslToRgb(this.hue/360,this.saturation,this.lightness);return new l._RgbaColor(t[0],t[1],t[2],this.alpha)},u.prototype._hslToRgb=function(t,e,i){var n,o,r;if(l.assert(0<=t&&t<=1&&0<=e&&e<=1&&0<=i&&i<=1,"bad HSL values"),0==e)n=o=r=i;else{var s=i<.5?i*(1+e):i+e-i*e,a=2*i-s;n=this._hue2rgb(a,s,t+1/3),o=this._hue2rgb(a,s,t),r=this._hue2rgb(a,s,t-1/3)}return[Math.round(255*n),Math.round(255*o),Math.round(255*r)]},u.prototype._hue2rgb=function(t,e,i){return i<0&&(i+=1),1<i&&(i-=1),i<1/6?t+6*(e-t)*i:i<.5?e:i<2/3?t+(e-t)*(2/3-i)*6:t},u}(l._Color);l._HslaColor=t}(t.core||(t.core={}))}(dv||(dv={})),function(t){!function(s){"use strict";var t=function(r){function n(t,e,i,n){void 0===n&&(n=1);var o=r.call(this,n)||this;return o.red=s.clamp(t,0,255),o.green=s.clamp(e,0,255),o.blue=s.clamp(i,0,255),o}return __extends(n,r),n.fromCss=function(t){var e,i=n._cssNamedColor.toCssRgbaColor(t);return null==i&&(i=t),"transparent"==i.toLowerCase()?new n(0,0,0,0):0==i.indexOf("#")?4==i.length?new n(parseInt(i[1]+i[1],16),parseInt(i[2]+i[2],16),parseInt(i[3]+i[3],16)):7==i.length?new n(parseInt(i.substr(1,2),16),parseInt(i.substr(3,2),16),parseInt(i.substr(5,2),16)):null:0==i.indexOf("rgba(")&&i.indexOf(")")==i.length-1?4==(e=i.substring(5,i.length-1).split(",")).length?new n(parseInt(e[0]),parseInt(e[1]),parseInt(e[2]),parseFloat(e[3])):null:0!=i.indexOf("rgb(")||i.indexOf(")")!=i.length-1?null:3==(e=i.substring(4,i.length-1).split(",")).length?new n(parseInt(e[0]),parseInt(e[1]),parseInt(e[2])):null},n.tint=function(t,e){if(0===e)return t;var i=s._HslaColor.fromRgba(t);return s._HslaColor.tint(i,e).toRgba()},n.prototype.toCss=function(){var t=Math.round(100*this.alpha);return 99<t?"#"+((1<<24)+(this.red<<16)+(this.green<<8)+this.blue).toString(16).slice(1):"rgba("+this.red+","+this.green+","+this.blue+","+t/100+")"},n._cssNamedColor=new s._CssNamedColor,n}(s._Color);s._RgbaColor=t}(t.core||(t.core={}))}(dv||(dv={})),function(t){!function(o){"use strict";var t=function(){function n(){}return n.addDays=function(t,e){var i=new Date(t.valueOf());return i.setDate(i.getDate()+e),i},n.addMonths=function(t,e){var i=new Date(t.valueOf());return i.setMonth(i.getMonth()+e),i},n.addYears=function(t,e){var i=new Date(t.valueOf());return i.setFullYear(i.getFullYear()+e),i},n.addHours=function(t,e){var i=new Date(t.valueOf());return i.setHours(i.getHours()+e),i},n.addMinutes=function(t,e){var i=new Date(t.valueOf());return i.setMinutes(i.getMinutes()+e),i},n.addSeconds=function(t,e){var i=new Date(t.valueOf());return i.setSeconds(i.getSeconds()+e),i},n.sameDate=function(t,e){return o.isDate(t)&&o.isDate(e)&&t.getFullYear()==e.getFullYear()&&t.getMonth()==e.getMonth()&&t.getDate()==e.getDate()},n.sameTime=function(t,e){return o.isDate(t)&&o.isDate(e)&&t.getHours()==e.getHours()&&t.getMinutes()==e.getMinutes()&&t.getSeconds()==e.getSeconds()},n.equals=function(t,e){return o.isDate(t)&&o.isDate(e)&&t.getTime()==e.getTime()},n.fromDateTime=function(t,e){return t||e?(t||(t=e),e||(e=t),new Date(t.getFullYear(),t.getMonth(),t.getDate(),e.getHours(),e.getMinutes(),e.getSeconds())):null},n.toFiscal=function(t,e){var i=o.culture.Globalize.calendar;return Array.isArray(i.fiscalYearOffsets)?n.addMonths(t,-i.fiscalYearOffsets[e?0:1]):t},n.fromFiscal=function(t,e){var i=o.culture.Globalize.calendar;return Array.isArray(i.fiscalYearOffsets)?n.addMonths(t,+i.fiscalYearOffsets[e?0:1]):t},n.newDate=function(){var t=new Date;return new Date(t.getFullYear(),t.getMonth(),t.getDate())},n.isMonthLastDay=function(t){var e=new Date(t.valueOf());return e.setDate(e.getDate()+1),e.getMonth()!=t.getMonth()},n.clone=function(t){return n.fromDateTime(t,t)},n}();o.DateTime=t}(t.core||(t.core={}))}(dv||(dv={})),function(t){!function(o){"use strict";var r,t;(t=r=o.NotifyCollectionChangedAction||(o.NotifyCollectionChangedAction={}))[t.Add=0]="Add",t[t.Remove=1]="Remove",t[t.Change=2]="Change",t[t.Reset=3]="Reset";var i=function(t,e){this.handler=t,this.self=e},e=function(){function t(){this._handlers=[]}return t.prototype.addHandler=function(t,e){o.asFunction(t),this._handlers.push(new i(t,e))},t.prototype.removeHandler=function(t,e){o.asFunction(t);for(var i=0;i<this._handlers.length;i++){var n=this._handlers[i];if((n.handler==t||null==t)&&(n.self==e||null==e)&&(this._handlers.splice(i,1),t&&e))break}},t.prototype.removeAllHandlers=function(){this._handlers.length=0},t.prototype.raise=function(t,e){void 0===e&&(e=s.empty);for(var i=0;i<this._handlers.length;i++){var n=this._handlers[i];n.handler.call(n.self,t,e)}},Object.defineProperty(t.prototype,"hasHandlers",{get:function(){return 0<this._handlers.length},enumerable:!0,configurable:!0}),t}();o.Event=e;var s=function(){function t(){}return t.empty=new t,t}(),n=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.cancel=!1,t}return __extends(t,e),t}(o.EventArgs=s);o.CancelEventArgs=n;var a=function(o){function t(t,e,i){void 0===t&&(t=r.Reset),void 0===e&&(e=null),void 0===i&&(i=-1);var n=o.call(this)||this;return n.action=t,n.item=e,n.index=i,n}return __extends(t,o),t.reset=new t(r.Reset),t}(s);o.NotifyCollectionChangedEventArgs=a;var l=function(i){function t(t){var e=i.call(this)||this;return e.newPageIndex=t,e}return __extends(t,i),t}(n);o.PageChangingEventArgs=l}(t.core||(t.core={}))}(dv||(dv={})),function(t){(t.core||(t.core={})).clamp=function(t,e,i){return null!=t&&(null!=i&&i<t&&(t=i),null!=e&&t<e&&(t=e)),t}}(dv||(dv={})),function(e){!function(t){"use strict";(e.core||(e.core={})).cloneDeep=function t(e){if(null==e||"number"==typeof e||"string"==typeof e||"boolean"==typeof e)return e;if(Array.isArray(e)){for(var i=[],n=0,o=e;n<o.length;n++){var r=o[n];i.push(t(r))}return i}if(e instanceof Date)return new Date(e.getTime());var s={};for(var a in e)"function"==typeof e[a]?s[a]=e[a]:s[a]=t(e[a]);return s}}()}(dv||(dv={})),function(e){!function(t){"use strict";(e.core||(e.core={})).culture={Globalize:{numberFormat:{".":".",",":",",percent:{pattern:["-n %","n %"]},currency:{decimals:2,symbol:"$",pattern:["($n)","$n"]}},calendar:{"/":"/",":":":",firstDay:0,days:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],daysAbbr:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],months:["January","February","March","April","May","June","July","August","September","October","November","December"],monthsAbbr:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],am:["AM","A"],pm:["PM","P"],eras:["A.D.","B.C."],patterns:{d:"M/d/yyyy",D:"dddd, MMMM dd, yyyy",f:"dddd, MMMM dd, yyyy h:mm tt",F:"dddd, MMMM dd, yyyy h:mm:ss tt",t:"h:mm tt",T:"h:mm:ss tt",M:"MMMM d",m:"MMMM d",Y:"MMMM, yyyy",y:"MMMM, yyyy",g:"M/d/yyyy h:mm tt",G:"M/d/yyyy h:mm:ss tt",s:'yyyy"-"MM"-"dd"T"HH":"mm":"ss',o:'yyyy"-"MM"-"dd"T"HH":"mm":"ss"."fffffffK',O:'yyyy"-"MM"-"dd"T"HH":"mm":"ss"."fffffffK',U:"dddd, MMMM dd, yyyy h:mm:ss tt"},fiscalYearOffsets:[-3,-3]}}}}()}(dv||(dv={})),function(e){!function(t){"use strict";(e.core||(e.core={})).find=function(t,e){if(null!=t)for(var i=0,n=t;i<n.length;i++){var o=n[i];if(e(o))return o}return null}}()}(dv||(dv={})),function(t){var i;(i=t.core||(t.core={})).asArray=function(t,e){return void 0===e&&(e=!0),i.assert(e&&null==t||i.isArray(t),"Array expected."),t}}(dv||(dv={})),function(t){var i;(i=t.core||(t.core={})).asBoolean=function(t,e){return void 0===e&&(e=!1),i.assert(e&&null==t||i.isBoolean(t),"Boolean expected."),t}}(dv||(dv={})),function(t){var o;(o=t.core||(t.core={})).asEnum=function(t,e,i){if(void 0===i&&(i=!1),null==t&&i)return null;var n=e[t];return o.assert(null!=n,"Invalid enum value."),o.isNumber(n)?n:t}}(dv||(dv={})),function(t){!function(i){"use strict";i.asFunction=function(t,e){return void 0===e&&(e=!0),i.assert(e&&null==t||i.isFunction(t),"Function expected."),t}}(t.core||(t.core={}))}(dv||(dv={})),function(t){var n;(n=t.core||(t.core={})).asInt=function(t,e,i){if(void 0===e&&(e=!1),void 0===i&&(i=!1),n.assert(e&&null==t||n.isInt(t),"Integer expected."),i&&t&&t<0)throw"Positive integer expected.";return t}}(dv||(dv={})),function(t){!function(n){"use strict";n.asNumber=function(t,e,i){if(void 0===e&&(e=!1),void 0===i&&(i=!1),n.assert(e&&null==t||n.isNumber(t),"Number expected."),i&&t&&t<0)throw"Positive number expected.";return t}}(t.core||(t.core={}))}(dv||(dv={})),function(e){!function(t){"use strict";(e.core||(e.core={})).assert=function(t,e){if(!t)throw e?"Assertion failed: "+e:"Assertion failed!"}}()}(dv||(dv={})),function(t){!function(i){"use strict";i.asString=function(t,e){return void 0===e&&(e=!0),"string"==typeof t?t:e?null:void i.assert(!1,"A string value is expected.")}}(t.core||(t.core={}))}(dv||(dv={})),function(t){(t.core||(t.core={})).isArray=function(t){return t instanceof Array}}(dv||(dv={})),function(t){(t.core||(t.core={})).isBoolean=function(t){return"boolean"==typeof t}}(dv||(dv={})),function(e){!function(t){"use strict";(e.core||(e.core={})).isDate=function(t){return t instanceof Date&&!isNaN(t.getTime())}}()}(dv||(dv={})),function(t){(t.core||(t.core={})).isFunction=function(t){return"function"==typeof t}}(dv||(dv={})),function(t){var e;(e=t.core||(t.core={})).isInt=function(t){return e.isNumber(t)&&t==Math.round(t)}}(dv||(dv={})),function(e){!function(t){"use strict";(e.core||(e.core={})).isNumber=function(t){return"number"==typeof t}}()}(dv||(dv={})),function(t){var e;(e=t.core||(t.core={})).isObject=function(t){return null!=t&&"object"==typeof t&&!e.isDate(t)&&!e.isArray(t)}}(dv||(dv={})),function(t){var e;(e=t.core||(t.core={})).isPrimitive=function(t){return e.isString(t)||e.isNumber(t)||e.isBoolean(t)||e.isDate(t)}}(dv||(dv={})),function(e){!function(t){"use strict";(e.core||(e.core={})).isString=function(t){return"string"==typeof t}}()}(dv||(dv={})),function(e){!function(t){"use strict";(e.core||(e.core={})).merge=function t(){for(var e=[],i=0;i<arguments.length;i++)e[i]=arguments[i];for(var n=new Object,o=0,r=e;o<r.length;o++){var s=r[o];if(null!=s&&"number"!=typeof s&&"string"!=typeof s&&"boolean"!=typeof s)if(Array.isArray(s)){Array.isArray(n)||(n=[]);for(var a=0;a<s.length;a++)a<s.length&&a<n.length?n[a]=t(n[a],s[a]):n.push(t(s[a]))}else for(var l in s)null===s[l]||"number"==typeof s[l]||"string"==typeof s[l]||"boolean"==typeof s[l]?n[l]=s[l]:void 0===s[l]||(n[l]=t(n[l],s[l]))}return n}}()}(dv||(dv={})),function(e){!function(t){"use strict";(e.core||(e.core={})).toFixed=function(t,e,i){if(i){var n=(o=t.toString()).indexOf(".");-1<n&&(o=o.substr(0,n+1+e),t=parseFloat(o))}else{var o=t.toFixed(e);t=parseFloat(o)}return t}}()}(dv||(dv={})),function(t){!function(L){"use strict";var t=function(){function T(){}return T.format=function(t,e,i,n){return L.isString(t)?t:L.isNumber(t)?(e=e||(t==Math.round(t)?"n0":"n2"),T.formatNumber(t,e,i,n)):L.isDate(t)?T.formatDate(t,e=e||"d"):null!=t?t.toString():""},T.formatNumber=function(t,e,i,n){L.asNumber(t),L.asString(e,!0);var o,r=e?e.match(/([a-z])(\d*)(,*)(.*)/i):null,s=L.culture.Globalize.numberFormat,a=r?r[1].toLowerCase():"n",l=r&&r[2]?parseInt(r[2]):"c"==a?s.currency.decimals:t==Math.round(t)?0:2,_=r&&r[3]?3*r[3].length:0,u=r&&r[4]?r[4]:s.currency.symbol,h=s["."],c=s[","];if(_&&(t/=Math.pow(10,_)),"d"==a||"x"==a){for(o=Math.round(Math.abs(t)).toString("d"==a?10:16);o.length<l;)o="0"+o;return t<0&&(o="-"+o),e&&"X"==e[0]&&(o=o.toUpperCase()),o}if("p"==a&&(t=T._mul100(t)),n&&(t=L.toFixed(t,l,!0)),o="c"==a||"p"==a?Math.abs(t).toFixed(l):t.toFixed(l),(i||"g"==a)&&-1<o.indexOf(".")&&(o=(o=o.replace(/(\.[0-9]*?)0+$/g,"$1")).replace(/\.$/,"")),"."!=h&&(o=o.replace(".",h)),c&&("n"==a||"c"==a||"p"==a)){var p=o.indexOf(h),f=/\B(?=(\d\d\d)+(?!\d))/g;o=-1<p?o.substr(0,p).replace(f,c)+o.substr(p):o.replace(f,c)}"c"==a&&(o=s.currency.pattern[t<0?0:1].replace("n",o).replace("$",u));"p"==a&&(o=s.percent.pattern[t<0?0:1].replace("n",o));return o},T.formatDate=function(t,e){switch(e){case"r":case"R":return t.toUTCString();case"u":return t.toISOString().replace(/\.\d{3}/,"")}e=T._expandFormat(e);for(var i=T._parseDateFormat(e),n="",o=0;o<i.length;o++)n+=T._formatDatePart(t,e,i[o]);return n},T.parseInt=function(t,e){return Math.round(T.parseFloat(t,e))},T.parseFloat=function(t,e){var i=-1<t.indexOf("-")||-1<t.indexOf("(")&&-1<t.indexOf(")")?-1:1,n=-1<t.indexOf("%")?.01:1,o=e?e.match(/,+/):null,r=o?3*o[0].length:0;if(e&&("x"==e[0]||"X"==e[0]))return t=t.replace(/[^0-9a-f]+.*$/gi,""),parseInt(t,16)*i*n*Math.pow(10,r);var s=L.culture.Globalize.numberFormat["."],a=new RegExp("[^\\d\\"+s+"]","g"),l=t.replace(a,"").replace(s,".");return parseFloat(l)*i*n*Math.pow(10,r)},T.parseDate=function(t,e){if(!(t=L.asString(t,!0)))return null;if("u"==e)return new Date(t);if("R"==e||"r"==e){var i=t.match(/(([0-9]+)\-([0-9]+)\-([0-9]+))?\s?(([0-9]+):([0-9]+)(:([0-9]+))?)?/);if(i[1]||i[5]){var n=i[1]?new Date(parseInt(i[2]),parseInt(i[3])-1,parseInt(i[4])):new Date;i[5]&&(n.setHours(parseInt(i[6])),n.setMinutes(parseInt(i[7])),n.setSeconds(i[8]?parseInt(i[9]):0))}else n=new Date(t);return isNaN(n.getTime())?null:n}e=T._expandFormat(e||"d");var o,r,s,a,l,_=L.culture.Globalize.calendar,u=T._CJK,h=new RegExp("(\\"+_["/"]+")|(\\"+_[":"]+")|(\\d+)|(["+u+"\\.]{2,})|(["+u+"]+)","gi"),c=t.match(h),p=T._parseDateFormat(e),f=0,d=-1,g=0,y=1,m=0,v=0,w=0,b=0,x=-1;if(!(c&&c.length&&p&&p.length))return null;for(var S=0;S<p.length&&c;S++){var P=S-f,V=-1<P&&P<c.length?c[P]:"",C=p[S].length;switch(p[S]){case"EEEE":case"EEE":case"EE":case"E":case"eeee":case"eee":case"ee":case"e":l=p[S];case"yyyy":case"yyy":case"yy":case"y":1<C&&V.length>C&&(c[P]=V.substr(C),V=V.substr(0,C),f++),d=parseInt(V);break;case"MMMM":case"MMM":a=!0;var A=V.toLowerCase();g=-1;for(var D=0;D<12;D++)if(0==_.months[D].toLowerCase().indexOf(A)){g=D;break}if(-1<g)break;case"MM":case"M":a=!0,1<C&&V.length>C&&(c[P]=V.substr(C),V=V.substr(0,C),f++),g=parseInt(V)-1;break;case"dddd":case"ddd":o=!0;break;case"dd":case"d":1<C&&V.length>C&&(c[P]=V.substr(C),V=V.substr(0,C),f++),y=parseInt(V),r=!0;break;case"hh":case"h":1<C&&V.length>C&&(c[P]=V.substr(C),V=V.substr(0,C),f++),m=12==(m=parseInt(V))?0:m;break;case"HH":1<C&&V.length>C&&(c[P]=V.substr(C),V=V.substr(0,C),f++),m=parseInt(V);break;case"H":m=parseInt(V);break;case"mm":case"m":1<C&&V.length>C&&(c[P]=V.substr(C),V=V.substr(0,C),f++),v=parseInt(V);break;case"ss":case"s":1<C&&V.length>C&&(c[P]=V.substr(C),V=V.substr(0,C),f++),w=parseInt(V);break;case"fffffff":case"FFFFFFF":case"ffffff":case"FFFFFF":case"fffff":case"FFFFF":case"ffff":case"FFFF":case"fff":case"FFF":case"ff":case"FF":case"f":case"F":b=parseInt(V)/Math.pow(10,C-3);break;case"tt":case"t":V=V.toUpperCase(),(_.pm[0]&&V==_.pm[0]&&m<12||_.pm[1]&&V==_.pm[1]&&m<12)&&(m+=12);break;case"q":case"Q":case"u":case"U":s=!0;break;case"ggg":case"gg":case"g":x=1<_.eras.length?T._getEra(V,_):-1;break;case _["/"]:case _[":"]:if(V&&V!=p[S])return null;break;case"K":break;default:T._unquote(p[S])!=V&&f++}}if(a&&r&&(isNaN(m)&&(m=0),isNaN(v)&&(v=0),isNaN(w)&&(w=0)),g<0||11<g||isNaN(g)||y<0||31<y||isNaN(y)||m<0||24<m||isNaN(m)||v<0||60<v||isNaN(v)||w<0||60<w||isNaN(w))return null;if(l){if(!a)return null;n=new Date(d,g),d=(n=L.DateTime.fromFiscal(n,"E"==l[0])).getFullYear(),g=n.getMonth()}if(o&&!r)return null;if(s&&!a)return null;if(d<0&&(d=(new Date).getFullYear()),-1<x)d=d+_.eras[x].start.getFullYear()-1;else if(d<100){d+=d+2e3<(L.isNumber(_.twoDigitYearMax)?_.twoDigitYearMax:2029)?2e3:1900}return n=new Date(d,g,y,m,v+0,w,b),isNaN(n.getTime())?null:n},T.getFirstDayOfWeek=function(){var t=L.culture.Globalize.calendar.firstDay;return t||0},T.getNumberDecimalSeparator=function(){var t=L.culture.Globalize.numberFormat["."];return t||"."},T._unquote=function(t){return 1<t.length&&t[0]==t[t.length-1]&&("'"==t[0]||'"'==t[0])?t.substr(1,t.length-2):t},T._parseDateFormat=function(t){if(t in T.__dateFomatParts)return T.__dateFomatParts[t];var e,i,n=[];for(e=0;-1<e&&e<t.length;e++){var o=t[e];if(("'"==o||'"'==o)&&-1<(i=t.indexOf(o,e+1)))n.push(t.substring(e,i+1)),e=i;else{for(i=e+1;i<t.length&&t[i]==o;i++);n.push(t.substring(e,i)),e=i-1}}return T.__dateFomatParts[t]=n},T._formatDatePart=function(t,e,i){var n,o=L.culture.Globalize.calendar,r=0,s=0,a=0,l=i.length;switch(i){case"yyyy":case"yyy":case"yy":case"y":case"EEEE":case"EEE":case"EE":case"E":case"eeee":case"eee":case"ee":case"e":return s=(n="E"==i[0]?L.DateTime.toFiscal(t,!0):"e"==i[0]?L.DateTime.toFiscal(t,!1):t).getFullYear(),1<o.eras.length&&-1<e.indexOf("g")&&-1<(r=T._getEra(t,o))&&(s=s-o.eras[r].start.getFullYear()+1),T._zeroPad(s,4).substr(4-i.length);case"MMMM":return o.months[t.getMonth()];case"MMM":return o.monthsAbbr[t.getMonth()];case"MM":case"M":return T._zeroPad(t.getMonth()+1,l);case"dddd":return o.days[t.getDay()];case"ddd":return o.daysAbbr[t.getDay()];case"dd":return T._zeroPad(t.getDate(),2);case"d":return t.getDate().toString();case"hh":case"h":return T._zeroPad(T._h12(t),l);case"HH":case"H":return T._zeroPad(t.getHours(),l);case"mm":case"m":return T._zeroPad(t.getMinutes(),l);case"ss":case"s":return T._zeroPad(t.getSeconds(),l);case"fffffff":case"FFFFFFF":case"ffffff":case"FFFFFF":case"fffff":case"FFFFF":case"ffff":case"FFFF":case"fff":case"FFF":case"ff":case"FF":case"f":case"F":return a=t.getMilliseconds()*Math.pow(10,l-3),"f"==i[0]?T._zeroPad(a,l):a.toFixed(0);case"tt":return t.getHours()<12?o.am[0]:o.pm[0];case"t":return t.getHours()<12?o.am[1]:o.pm[1];case"q":case"Q":return(Math.floor(t.getMonth()/3)+1).toString();case"u":case"U":return n=L.DateTime.toFiscal(t,"U"==i),(Math.floor(n.getMonth()/3)+1).toString();case"ggg":case"gg":case"g":return 1<o.eras.length&&-1<(r=T._getEra(t,o))?"ggg"==i?o.eras[r].name:"gg"==i?o.eras[r].name[0]:o.eras[r].symbol:o.eras[0];case":":case"/":return o[i];case"K":var _=t.toString().match(/(\+|\-)(\d{2})(\d{2})/);return _?_[1]+_[2]+_[3]:""}return 1<l&&i[0]==i[l-1]&&('"'==i[0]||"'"==i[0])?i.substr(1,l-2):i},T._getEra=function(t,e){if(L.isDate(t)){for(var i=0;i<e.eras.length;i++)if(t>=e.eras[i].start)return i}else if(L.isString(t))for(i=0;i<e.eras.length;i++)if(e.eras[i].name&&(0==e.eras[i].name.indexOf(t)||0==e.eras[i].symbol.indexOf(t)))return i;return-1},T._expandFormat=function(t){var e=L.culture.Globalize.calendar.patterns[t];return e||t},T._zeroPad=function(t,e){var i=t.toFixed(0),n=e-i.length+1;return 0<n?Array(n).join("0")+i:i},T._h12=function(t){var e=L.culture.Globalize.calendar,i=t.getHours();return e.am&&e.am[0]&&0==(i%=12)&&(i=12),i},T._mul100=function(t){var e=t.toString(),i=e.indexOf(".");return i<0?e+="00":(i+=2,e=(e=e.replace(".","")+"00").substr(0,i)+"."+e.substr(i)),parseFloat(e)},T._CJK="a-z"+"u00c0-u017fu3000-u30ffu4e00-u9faf".replace(/u/g,"\\u")+"u1100-u11ffu3130-u318fua960-ua97fuac00-ud7afud7b0-ud7ff".replace(/u/g,"\\u"),T.__dateFomatParts={},T}();L.Globalize=t}(t.core||(t.core={}))}(dv||(dv={})),function(T){!function(V){"use strict";function C(t,e){t.style.display="none",e&&t.parentElement&&t.parentElement.removeChild(t)}function A(){var t=document.activeElement;if(t){var e=t.shadowRoot;e&&e.activeElement&&(t=e.activeElement)}return t}function D(e,i,t){void 0===i&&(i=400),void 0===t&&(t=35),V.asFunction(e),V.asNumber(i,!1,!0),V.asNumber(t,!1,!0);var n=Date.now(),o=setInterval(function(){var t=Math.min(1,(Date.now()-n)/i);t=Math.sin(t*Math.PI/2),t*=t,T.requestAnimationFrame(function(){e(t)}),1<=t&&clearInterval(o)},t);return Number(o)}V.showPopup=function(e,t,i,n,o){void 0===t&&(t=null),void 0===i&&(i=!1),void 0===n&&(n=!1),void 0===o&&(o=!0);var r=document.body;if(t instanceof HTMLElement){if(!V.contains(document.body,t))return;for(var s=t.parentElement;s;s=s.parentElement)if("fixed"==getComputedStyle(s).position){r=s;break}}else for(s=A();s;s=s.parentElement)if(!V.hasClass(s,"gcdv-popup")&&"fixed"==getComputedStyle(s).position){r=s;break}if(r.lastChild!=e&&r.appendChild(e),t instanceof HTMLElement&&o){var a=getComputedStyle(t),l=V._Color.fromCss(a.backgroundColor);null!=l&&0<l.alpha&&V.setCss(e,{color:a.color,backgroundColor:a.backgroundColor,fontFamily:a.fontFamily,fontSize:a.fontSize,fontWeight:a.fontWeight,fontStyle:a.fontStyle})}V.setCss(e,{position:"absolute",visibility:"hidden",display:""}),T.Control.refreshAll(e);var _=getComputedStyle(e),u=parseFloat(_.marginTop)+parseFloat(_.marginBottom),h=parseFloat(_.marginLeft)+parseFloat(_.marginRight),c=new V.Size(e.offsetWidth+h,e.offsetHeight+u),p=new V.Point,f=null;if(t&&null!=t.clientX&&null!=t.clientY&&null!=t.pageX&&null!=t.pageY)t.clientX<=0&&t.clientY<=0&&t.target?f=t.target.getBoundingClientRect():(p.x=Math.max(0,t.pageX-pageXOffset),p.y=Math.max(0,t.pageY-pageYOffset));else if(t instanceof V.Point)p=t;else if(t instanceof HTMLElement)f=t.getBoundingClientRect();else if(t&&null!=t.top&&null!=t.left)f=t;else{if(null!=t)throw"Invalid ref parameter.";p.x=Math.max(0,(innerWidth-c.width)/2),p.y=Math.max(0,Math.round((innerHeight-c.height)/2*.7))}var d=parseFloat(_.minWidth);if(f){var g=f.top,y=innerHeight-f.bottom,m="rtl"==getComputedStyle(e).direction;p.x=m?Math.max(0,f.right-c.width):Math.max(0,Math.min(f.left,innerWidth-c.width)),p.y=i?g>c.height||y<g?Math.max(0,f.top-c.height):f.bottom:y>c.height||g<y?f.bottom:Math.max(0,f.top-c.height),d=Math.max(d,f.width),V.isIE()&&(d-=e.offsetWidth-(e.clientWidth+parseInt(_.borderLeftWidth)+parseInt(_.borderRightWidth)))}var v=new V.Point(0,0);if(null!=t)if(r==document.body)v=new V.Point(-pageXOffset,-pageYOffset);else if(r){var w=r.getBoundingClientRect();v=new V.Point(w.left-r.scrollLeft,w.top-r.scrollTop)}var b={position:null==t?"fixed":"absolute",left:p.x-v.x,top:p.y-v.y,minWidth:d,display:"",visibility:"",zIndex:1500};n&&(e.style.opacity="0",D(function(t){e.style.opacity=1==t?"":t.toString()})),V.setCss(e,b);var x=t instanceof MouseEvent?t.target:t;if(x instanceof HTMLElement)for(var S,P=x.parentElement;P&&P!=document.body;P=P.parentElement)"auto"==getComputedStyle(P).overflowY&&P.scrollHeight>P.offsetHeight&&(S||(S=new T.Control(document.createElement("div"))),S.addEventListener(P,"scroll",function(t){C(e,!0),S.dispose()}))},V.hidePopup=function(e,i,t){void 0===i&&(i=!0),void 0===t&&(t=!1),t?D(function(t){e.style.opacity=(1-t).toString(),1==t&&(C(e,i),e.style.opacity="")}):C(e,i)},V.getActiveElement=A,V.animate=D}(T.core||(T.core={}))}(dv||(dv={})),function(t){!function(s){"use strict";var t=function(){function r(t){this._showAutoTipBnd=this._showAutoTip.bind(this),this._hideAutoTipBnd=this._hideAutoTip.bind(this),this._html=!0,this._gap=6,this._showAtMouse=!1,this._showDelay=500,this._hideDelay=0,this._tips=[],this.popup=new s.Event,s.copy(this,t)}return r.prototype.setTooltip=function(t,e){t=s.getElement(t),e=this._getContent(e);var i=this._indexOf(t);-1<i&&(this._detach(t),this._tips.splice(i,1)),e&&(this._attach(t),this._tips.push({element:t,content:e}))},r.prototype.show=function(t,e,i){t=s.getElement(t),e=this._getContent(e),i||(i=s.Rect.fromBoundingRect(t.getBoundingClientRect()));var n=r._eTip;n||(n=r._eTip=document.createElement("div"),s.addClass(n,"gcdv-tooltip"),n.style.visibility="none",document.body.appendChild(n)),this._setContent(e);var o=new a(e);this.onPopup(o),o.content&&!o.cancel&&(this._setContent(o.content),n.style.minWidth="",i=new s.Rect(i.left-(n.offsetWidth-i.width)/2,i.top-this.gap,n.offsetWidth,i.height+2*this.gap),s.showPopup(n,i,!0),document.addEventListener("mousedown",this._hideAutoTipBnd))},r.prototype.hide=function(){r._eTip&&(r._eTip.style.visibility="hidden",r._eTip.innerHTML=""),document.removeEventListener("mousedown",this._hideAutoTipBnd)},Object.defineProperty(r.prototype,"isVisible",{get:function(){return r._eTip&&"hidden"!=r._eTip.style.visibility},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"isContentHtml",{get:function(){return this._html},set:function(t){this._html=s.asBoolean(t)},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"gap",{get:function(){return this._gap},set:function(t){this._gap=s.asNumber(t)},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"showAtMouse",{get:function(){return this._showAtMouse},set:function(t){this._showAtMouse=s.asBoolean(t)},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"showDelay",{get:function(){return this._showDelay},set:function(t){this._showDelay=s.asInt(t)},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"hideDelay",{get:function(){return this._hideDelay},set:function(t){this._hideDelay=s.asInt(t)},enumerable:!0,configurable:!0}),r.prototype.onPopup=function(t){this.popup&&this.popup.raise(this,t)},r.prototype._indexOf=function(t){for(var e=0;e<this._tips.length;e++)if(this._tips[e].element==t)return e;return-1},r.prototype._attach=function(t){t.addEventListener("mouseenter",this._showAutoTipBnd),t.addEventListener("mouseleave",this._hideAutoTipBnd),t.addEventListener("click",this._showAutoTipBnd)},r.prototype._detach=function(t){t.removeEventListener("mouseenter",this._showAutoTipBnd),t.removeEventListener("mouseleave",this._hideAutoTipBnd),t.removeEventListener("click",this._showAutoTipBnd)},r.prototype._showAutoTip=function(n){var o=this,t="mouseenter"==n.type?this._showDelay:0;this._clearTimeouts(),this._toShow=setTimeout(function(){var t=o._indexOf(n.target);if(-1<t){var e=o._tips[t],i=o._showAtMouse?new s.Rect(n.clientX,n.clientY,0,0):null;o.show(e.element,e.content,i),0<o._hideDelay&&(o._toHide=setTimeout(function(){o.hide()},o._hideDelay))}},t)},r.prototype._hideAutoTip=function(){this._clearTimeouts(),this.hide()},r.prototype._clearTimeouts=function(){this._toShow&&(clearTimeout(this._toShow),this._toShow=null),this._toHide&&(clearTimeout(this._toHide),this._toHide=null)},r.prototype._getContent=function(t){if((t=s.asString(t,!0))&&"#"==t[0]){var e=s.getElement(t);e&&(t=e.innerHTML)}return t},r.prototype._setContent=function(t){var e=r._eTip;e&&(this.isContentHtml?e.innerHTML=t:e.textContent=t)},r}();s.Tooltip=t;var a=function(i){function t(t){var e=i.call(this)||this;return e._content=s.asString(t,!0),e}return __extends(t,i),Object.defineProperty(t.prototype,"content",{get:function(){return this._content},set:function(t){this._content=s.asString(t,!0)},enumerable:!0,configurable:!0}),t}(s.CancelEventArgs);s.TooltipEventArgs=a}(t.core||(t.core={}))}(dv||(dv={})),function(t){!function(i){"use strict";i.tryCast=function(t,e){return null==t?null:i.isString(e)?i.isFunction(t.implementsInterface)&&t.implementsInterface(e)?t:null:t instanceof e?t:null}}(t.core||(t.core={}))}(dv||(dv={})),function(t){!function(s){var t=function(){function e(t,e){void 0===t&&(t=0),void 0===e&&(e=0),this.width=s.asNumber(t),this.height=s.asNumber(e)}return e.prototype.equals=function(t){return t instanceof e&&this.width==t.width&&this.height==t.height},e.prototype.clone=function(){return new e(this.width,this.height)},e}();function n(t,e){if(t&&e&&t.setAttribute&&!o(t,e)){var i=t.getAttribute("class");t.setAttribute("class",i?i+" "+e:e)}}function o(t,e){if(t&&t.getAttribute){var i=new RegExp("(\\s|^)"+e+"(\\s|$)");return t&&i.test(t.getAttribute("class"))}return!1}s.Size=t,s.addClass=n,s.createElement=function(t,e){var i=document.createElement("div");i.innerHTML=t;var n=i.removeChild(i.firstChild);return e instanceof HTMLElement?e.appendChild(n):n},s.getElement=function(t){return t instanceof Element?t:s.isString(t)?document.querySelector(t):t&&t.jquery?t[0]:null},s.hasClass=o;var r,e,i=function(){function e(t,e){void 0===t&&(t=0),void 0===e&&(e=0),this.x=s.asNumber(t),this.y=s.asNumber(e)}return e.prototype.equals=function(t){return t instanceof e&&this.x==t.x&&this.y==t.y},e.prototype.clone=function(){return new e(this.x,this.y)},e}();function a(t,e,i){null==i&&(i=!o(t,e)),i?n(t,e):l(t,e)}function l(t,e){if(t&&e&&t.setAttribute&&o(t,e)){var i=new RegExp("((\\s|^)"+e+"(\\s|$))","g"),n=t.getAttribute("class");n=n.replace(i," ").replace(/ +/g," ").trim(),t.setAttribute("class",n)}}function _(t,e,i){if(null!=t){if(s.isString(t))switch(e){case r.Number:var n=s.Globalize.parseFloat(t,i);return isNaN(n)?t:n;case r.Date:var o=s.Globalize.parseDate(t,i);return o||i||!t||(o=new Date(t)),o&&isFinite(o.getTime())?o:t;case r.Boolean:switch(t.toLowerCase()){case"true":return!0;case"false":return!1}return t}if(e==r.String)return s.Globalize.format(t,i)}return t}s.Point=i,s.copy=function t(e,i){if(i)for(var n in i)if("_"!=n[0]){s.assert(n in e,'Unknown property "'+n+'".');var o=i[n];e._copy&&e._copy(n,o)||(e[n]instanceof s.Event&&s.isFunction(o)?e[n].addHandler(o):s.isObject(o)&&e[n]&&"itemsSource"!=n?t(e[n],o):e[n]=o)}},s.getElementRect=function(t){var e=t.getBoundingClientRect();return new s.Rect(e.left+pageXOffset,e.top+pageYOffset,e.width,e.height)},s.contains=function(t,e){for(var i=e;i&&t;){if(i===t)return!0;var n=i;i=n=n.parentNode||n.host}return!1},s.setCss=function e(t,i){if(s.isArray(t))t.forEach(function(t){e(t,i)});else{var n=t.style;for(var o in i){var r=i[o];"number"==typeof r&&o.match(/width|height|left|top|right|bottom|size|padding|margin'/i)&&(r+="px"),n[o]!=r&&(n[o]=r.toString())}}},s.isIE=function(){return null!=navigator.userAgent.match(/MSIE |Trident\/|Edge\//)},s.closest=function(t,e){var i=t?t.matches||t.webkitMatchesSelector||t.mozMatchesSelector||t.msMatchesSelector:null;if(i)for(;t;t=t.parentNode)if(t instanceof Element&&i.call(t,e))return t;return null},s.enable=function(t,e){a(t,"gcdv-state-disabled",!e),e?t.removeAttribute("disabled"):t.setAttribute("disabled","true");for(var i=t.querySelectorAll("input"),n=0;n<i.length;n++){var o=i[n];e?o.removeAttribute("disabled"):o.setAttribute("disabled","true")}},s.toggleClass=a,s.removeClass=l,s._deprecated=function(t,e){console.error('** WARNING: "'+t+'" has been deprecated; please use "'+e+'" instead.')},(e=r=s.DataType||(s.DataType={}))[e.Object=0]="Object",e[e.String=1]="String",e[e.Number=2]="Number",e[e.Boolean=3]="Boolean",e[e.Date=4]="Date",e[e.Array=5]="Array",s.asDate=function(t,e){if(void 0===e&&(e=!1),s.isString(t)){var i=_(t,r.Date,"r");s.isDate(i)&&(t=i)}return s.assert(e&&null==t||s.isDate(t),"Date expected."),t},s.changeType=_}(t.core||(t.core={}))}(dv||(dv={})),function(d){"use strict";var t=function(){function t(t){this.__hoverInteractions=[],this.__control=t}return t.prototype._process=function(i){var n=-1;if(null==i){for(var t=0,e=this.__hoverInteractions;t<e.length;t++){var o=(f=e[t]).onLeave(null);n<o&&(n=o)}this.__hoverInteractions=[]}else if(i.event.action==d.MotionEvent.ACTION_CLICK){if(null!=i.model)for(var r=0,s=d.plugins._Plugins._clickInteractions();r<s.length;r++){o=s[r].onClick(i.event,i.model);n<o&&(n=o)}}else if(i.event.action==d.MotionEvent.ACTION_MOUSE_MOVE||i.event.action==d.MotionEvent.ACTION_MOUSE_OVER||i.event.action==d.MotionEvent.ACTION_WHEEL){for(var a=this.__hoverInteractions.length-1;0<=a;a--){if((f=this.__hoverInteractions[a]).model!=i.model){o=f.onLeave(i.event);this.__hoverInteractions.splice(a,1),n<o&&(n=o)}else{o=f.onMove(i.event);n<o&&(n=o)}}d.plugins._Plugins._hoverInteractions().slice();if(null!=i.model)for(var l=function(e){if(!_.__hoverInteractions.some(function(t){return t.name==e.name})&&e.hover(i.event,i.model)){_.__hoverInteractions.push(e);var t=e.onEnter(i.event);n<t&&(n=t)}},_=this,u=0,h=d.plugins._Plugins._hoverInteractions();u<h.length;u++){l(h[u])}}else if(i.event.action==d.MotionEvent.ACTION_MOUSE_LEAVE){for(var c=0,p=this.__hoverInteractions;c<p.length;c++){var f;o=(f=p[c]).onLeave(i.event);n<o&&(n=o)}this.__hoverInteractions=[]}1==n?this.__control.invalidate():1<n&&this.__control.refresh()},t}();d._InteractionProcessor=t}(dv||(dv={})),function(l){"use strict";var t=function(){function r(t,e,i){this.__x=e,this.__y=i,this.__action=t}return r._fromEvent=function(t,e){var i=e||window.event,n=new r(0,0,0);switch(i.type){case"touchstart":n=new r(r.ACTION_DOWN);break;case"touchend":n=new r(r.ACTION_UP);break;case"touchcancel":n=new r(r.ACTION_CANCEL);break;case"touchmove":n=new r(r.ACTION_MOVE);break;case"mousedown":n=new r(r.ACTION_MOUSE_DOWN);break;case"mousemove":n=new r(r.ACTION_MOUSE_MOVE);break;case"mouseup":n=new r(r.ACTION_MOUSE_UP);break;case"mouseout":n=new r(r.ACTION_MOUSE_OUT);break;case"mouseover":n=new r(r.ACTION_MOUSE_OVER);break;case"click":n=new r(r.ACTION_CLICK);break;case"mouseenter":n=new r(r.ACTION_MOUSE_ENTER);break;case"mouseleave":n=new r(r.ACTION_MOUSE_LEAVE);break;case"wheel":n=new r(r.ACTION_WHEEL)}var o=n._toControl(t,i);return n.x=o.x,n.y=o.y,n.originalEvent=i,n},Object.defineProperty(r.prototype,"action",{get:function(){return this.__action},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"x",{get:function(){return this.__x},set:function(t){this.__x=t},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"y",{get:function(){return this.__y},set:function(t){this.__y=t},enumerable:!0,configurable:!0}),r.prototype.contains=function(t){return!!t&&t.contains(new l.core.Point(this.x,this.y))},r.prototype._toControl=function(t,e){var i=new l.core.Point(0,0);e instanceof MouseEvent&&(i=new l.core.Point(e.pageX,e.pageY));var n=i.clone(),o=l.core.getElementRect(t);n.x-=o.left,n.y-=o.top;var r=null;if(null!=t&&null!=t.ownerDocument&&null!=t.ownerDocument.defaultView&&(r=t.ownerDocument.defaultView.getComputedStyle(t)),r){var s=parseInt(r.paddingLeft.replace("px",""));s&&!isNaN(s)&&(n.x-=s);var a=parseInt(r.paddingTop.replace("px",""));a&&!isNaN(a)&&(n.y-=a)}return n},r.ACTION_DOWN=0,r.ACTION_UP=1,r.ACTION_MOVE=2,r.ACTION_CANCEL=3,r.ACTION_OUTSIDE=4,r.ACTION_MOUSE_DOWN=5,r.ACTION_MOUSE_MOVE=6,r.ACTION_MOUSE_UP=7,r.ACTION_MOUSE_OVER=8,r.ACTION_MOUSE_OUT=9,r.ACTION_CLICK=10,r.ACTION_MOUSE_ENTER=11,r.ACTION_MOUSE_LEAVE=12,r.ACTION_WHEEL=13,r}();l.MotionEvent=t}(dv||(dv={})),function(e){"use strict";var t=function(){function t(){this.ease=e._AnimationEase.Linear,this.start=0,this.duration=0,this.from=1,this.to=1,this.state=e.AnimationState.BeforeStart,this.fillAfter=!1,this.keyframesType=e.AnimationKeyFramesType.Percentage}return t.prototype.setAnimationCallBack=function(t,e){this._startCallBack=t,this._endCallBack=e},t.prototype.Interrupt=function(t){t.animation.state=e.AnimationState.End,t.animation.onEndAnimation(null,t),t.animation.__innerAnimationEnd(null,t),t.animation=null},t.prototype.Reverse=function(){var t=e.core.cloneDeep(this);return t.from=this.to,t.to=this.from,t.start=0,t.state=e.AnimationState.BeforeStart,t.keyframesType=this.keyframesType,t},t.prototype.isAnimationRunning=function(){return this.state==e.AnimationState.Animating},t.prototype.isAniamtionEnd=function(){return this.start+this.duration<Date.now()||this.state==e.AnimationState.End},t.prototype.scale=function(t){return this.ease((t-this.start)/this.duration)},t.prototype.applyTransformation=function(t,e,i){},t.prototype.onStartAniamtion=function(t,e){},t.prototype.onEndAnimation=function(t,e){},t.prototype.__innerAnimationEnd=function(t,e){},t.prototype.__innerAnimationStart=function(t,e){},t}();e.Animation=t}(dv||(dv={})),function(t){"use strict";var e=function(){function e(){}return e.Linear=function(t){return t},e.Swing=function(t){var e=1.70158;return(t/=.5)<1?t*t*((1+(e*=1.525))*t-e)*.5:.5*((t-=2)*t*((1+(e*=1.525))*t+e)+2)},e.EaseInQuad=function(t){return t*t},e.EaseOutQuad=function(t){return t*(2-t)},e.EaseInOutQuad=function(t){return t<.5?2*t*t:(4-2*t)*t-1},e.EaseInCubic=function(t){return t*t*t},e.EaseOutCubic=function(t){return--t*t*t+1},e.EaseInOutCubic=function(t){return t<.5?4*t*t*t:(t-1)*(2*t-2)*(2*t-2)+1},e.EaseInQuart=function(t){return t*t*t*t},e.EaseOutQuart=function(t){return 1- --t*t*t*t},e.EaseInOutQuart=function(t){return t<.5?8*t*t*t*t:1-8*--t*t*t*t},e.EaseInQuint=function(t){return t*t*t*t*t},e.EaseOutQuint=function(t){return 1+--t*t*t*t*t},e.EaseInOutQuint=function(t){return t<.5?16*t*t*t*t*t:1+16*--t*t*t*t*t},e.EaseInSine=function(t){return 1-Math.cos(t*(Math.PI/2))},e.EaseOutSine=function(t){return Math.sin(t*(Math.PI/2))},e.EaseInOutSine=function(t){return-.5*(Math.cos(Math.PI*t)-1)},e.EaseInExpo=function(t){return 0==t?0:Math.pow(2,10*(t-1))},e.EaseOutExpo=function(t){return 1==t?1:1-Math.pow(2,-10*t)},e.EaseInOutExpo=function(t){return(t/=.5)<1?.5*Math.pow(2,10*(t-1)):.5*(2-Math.pow(2,-10*--t))},e.EaseInCirc=function(t){return-(Math.sqrt(1-t*t)-1)},e.EaseOutCirc=function(t){return Math.sqrt(1-Math.pow(t-1,2))},e.EaseInOutCirc=function(t){return(t/=.5)<1?-.5*(Math.sqrt(1-t*t)-1):.5*(Math.sqrt(1-(t-=2)*t)+1)},e.EaseInBack=function(t){return t*t*(2.70158*t-1.70158)},e.EaseOutBack=function(t){return(t-=1)*t*(2.70158*t+1.70158)+1},e.EaseInOutBack=function(t){var e=1.70158;return(t/=.5)<1?t*t*((1+(e*=1.525))*t-e)*.5:.5*((t-=2)*t*((1+(e*=1.525))*t+e)+2)},e.EaseInBounce=function(t){return 1-e.EaseOutBounce(1-t)},e.EaseOutBounce=function(t){var e=7.5625;return t<1/2.75?e*t*t:t<2/2.75?e*(t-=1.5/2.75)*t+.75:t<2.5/2.75?e*(t-=2.25/2.75)*t+.9375:e*(t-=2.625/2.75)*t+.984375},e.EaseInOutBounce=function(t){return t<.5?.5*e.EaseInBounce(2*t):.5*e.EaseOutBounce(2*t-1)+.5},e.EaseInElastic=function(t){return-Math.pow(2,10*(t-=1))*Math.sin((t-.075)*(2*Math.PI)/.3)},e.EaseOutElastic=function(t){return Math.pow(2,-10*t)*Math.sin((t-.075)*(2*Math.PI)/.3)+1},e.EaseInOutElastic=function(t){return(t*=2)<1?Math.pow(2,10*(t-=1))*Math.sin((t-.1125)*(2*Math.PI)/.45)*-.5:Math.pow(2,-10*(t-=1))*Math.sin((t-.1125)*(2*Math.PI)/.45)*.5+1},e}();t._AnimationEase=e}(dv||(dv={})),function(t){"use strict";var e;(e=t.AnimationKeyFramesType||(t.AnimationKeyFramesType={}))[e.Percentage=0]="Percentage",e[e.Pixel=1]="Pixel"}(dv||(dv={})),function(t){"use strict";var e;(e=t.AnimationState||(t.AnimationState={}))[e.BeforeStart=0]="BeforeStart",e[e.Animating=1]="Animating",e[e.End=2]="End"}(dv||(dv={})),dv||(dv={}),function(p){"use strict";var t=function(){function c(){}return c._setAniamtion=function(t,e){if(null!=e){for(var i=null,n=[],o=0,r=0,s=t;r<s.length;r++){var a=s[r],l=null;if(a instanceof p._LineSeriesView?l=new p._LineSeriesLoadAnimation(a._seriesShapes(),a._swapAxes(),e.mode):a instanceof p._AreaSeriesView?l=new p._AreaSeriesLoadAnimation(a._seriesShapes(),a._swapAxes(),e.mode):a instanceof p._BarPointView?l=new p._BarLoadAnimation(a._rectangle(),a._plotView()._swapAxes(),a._reversed()):a instanceof p._FunnelPointView?l=new p._FunnelLoadAnimation(a._ys()):a instanceof p._RadialBarPointView?l=e.mode===p.AnimationMode.All||e.mode===p.AnimationMode.Group?new p._RadialBarRadiusLoadAnimation(a._radius(),a._innerRadius()):new p._RadialBarSweepLoadAnimation(a._sweep()):a instanceof p._CartesianSymbolPointView?l=new p._ScaleAnimation(a._rectangle()):a instanceof p._SunburstPointView?l=new p._SunBurstLoadAnimation(a._sweep(),a._radius(),a._innerRadius()):a instanceof p._TreeMapPointView?l=new p._TreeMapLoadAnimation(a._rectangle()):null!=a._rectangle&&null!=a._rectangle()&&(l=new p._ScaleAnimation(a._rectangle())),null!=l){var _=c.__getAniamtionStagger(i,a,t.length,e);i=_.staggering,a.__preparingAnimation=!0,l.duration=_.duration,l.from=0,l.to=1,l.ease=p._Util.__createAnimationEase(e.easing),l.delay=null!=e.startDelay?e.startDelay+i:i,l.delay>o&&(o=l.delay),a.animation=l,n.push(a)}}var u=0,h=function(){if(0!=n.length){var t=(new Date).getTime(),e=t-u,i=n.filter(function(t){if(null!=t.animation&&!t.animation.isAnimationRunning()&&t.animation.delay<=e)return!0});i.forEach(function(t){t.__preparingAnimation=!1,t.__startAnimation(t.animation)}),n=n.filter(function(t){return i.indexOf(t)<0&&null!=t.animation||(t.__preparingAnimation=!1)}),t-u<=o?p.requestAnimationFrame(h):0<n.length&&(n.forEach(function(t){t.__preparingAnimation=!1,t.__startAnimation(t.animation)}),p.requestAnimationFrame(h),n.length=0)}};u=(new Date).getTime(),p.requestAnimationFrame(h)}},c.__getAniamtionStagger=function(t,e,i,n){var o=0;if(e instanceof p._CartesianSeriesView)n.mode==p.AnimationMode.All?(t=0,o=n.duration):n.mode==p.AnimationMode.Group?(null==t&&(t=0),o=e._data()instanceof p.models._CartesianSeriesData?n.staggering?(t+=n.duration/2/e._data()._plot().seriesList.length,n.duration/2/e._data()._plot().seriesList.length):(t+=n.duration/3/e._data()._plot().seriesList.length,n.duration/3*2):(t=0,n.duration)):n.mode==p.AnimationMode.Point&&(null==t?t=0:t+=n.duration/3/i,o=n.duration/3*2);else if(e instanceof p._CartesianPointView)if(n.mode==p.AnimationMode.Point)o=n.staggering?(null==t?t=0:t+=n.duration/i/2,n.duration/i/2):(null==t?t=0:t+=n.duration/3/i,n.duration/3*2);else if(n.mode===p.AnimationMode.Group){null==t&&(t=0);var r=e._data()._series(),s=e._data()._series()._plot().seriesList.indexOf(r),a=e._data()._series();a instanceof p.models._CartesianSeriesData&&(o=n.staggering?(t=n.duration/2/a._plot().seriesList.length*s,n.duration/2+n.duration/2/a._plot().seriesList.length):(t=n.duration/3/a._plot().seriesList.length*s,n.duration/3*2+n.duration/3/a._plot().seriesList.length))}else n.mode===p.AnimationMode.All&&(t=0,o=n.duration);else t=0,o=n.duration;return{staggering:t,duration:o}},c}();p._LoadingAnimationManager=t}(dv||(dv={})),function(f){"use strict";var t=function(){function t(){this._cache={},this.__prepareAnimation=!1}return t.prototype._isEmpty=function(){var t=0;for(var e in this._cache)if(0<++t)return!1;return!0},t.prototype._clear=function(){this._cache={}},t.prototype._prepareAnimation=function(t){return null!=t&&(this.__prepareAnimation=t),this.__prepareAnimation},t.prototype._startCompare=function(t,e,i){this.__animationoption=i;for(var n={},o=0,r=0,s=e;r<s.length;r++){var a=s[r];null!=a.id&&a instanceof f._View&&a._visible()&&(n[a.id]=a,o++)}if(this._isEmpty())return this._cache[t]=n,!1;this.__prepareAnimation=!1;var l=void 0,_=this._cache[t]||{};for(var u in _){var h=_[u];if(null!=(c=n[u])&&null!=h)l=(p=f._LoadingAnimationManager.__getAniamtionStagger(l,c,o,this.__animationoption)).staggering,this.__startUpdateAnimation(h,c,l,p.duration),0;else null!=h&&this.__startDisapperAnimation(h)}for(var u in n){var c;if(!(u in _))if(null!=(c=n[u])){var p=f._LoadingAnimationManager.__getAniamtionStagger(l,c,o,this.__animationoption);this.__startApperAnimation(c,l,p.duration)}}return this._cache[t]=n,!0},t.prototype.__startDisapperAnimation=function(t){},t.prototype.__startApperAnimation=function(t,e,i){var n=new f._OpacityAnimation;n.from=0,n.to=1,n.duration=i,t.__preparingAnimation=!0,this.__animationoption.staggering||(e=0),this.__animationoption.startDelay+e==0?(t.__preparingAnimation=!1,t.__startAnimation(n)):setTimeout(function(){t.__preparingAnimation=!1,t.__startAnimation(n)},this.__animationoption.startDelay+e)},t.prototype.__startUpdateAnimation=function(t,e,i,n){if(!(t instanceof f._View&&e instanceof f._View)||t._visible()||e._visible()){var o=e.__getUpdateAnimation(t);null!=o&&(o.duration=n,o.ease=f._Util.__createAnimationEase(this.__animationoption.easing),o.from=0,o.to=1,e.__preparingAnimation=!0,this.__animationoption.staggering||(i=0),null!=o&&(this.__animationoption.startDelay+i==0?(e.__preparingAnimation=!1,e.__startAnimation(o)):setTimeout(function(){e.__preparingAnimation=!1,e.__startAnimation(o)},this.__animationoption.startDelay+i)))}},t}();f.UpdateAnimationManager=t}(dv||(dv={})),function(x){"use strict";var t=function(){function c(t,e,i){void 0===e&&(e=null),void 0===i&&(i=!1);var n=this;this._focus=!1,this._updating=0,this._fullUpdate=!1,this._orgAttrs={},this.gotFocus=new x.core.Event,this.lostFocus=new x.core.Event,x.core.assert(null==c.getControl(t),"Element is already hosting a control.");var o=x.core.getElement(t);x.core.assert(null!=o,"Cannot find the host element.");for(var r=0,s=o.attributes.length;r<s;r++)this._orgAttrs[o.attributes[r].name]=o.attributes[r].value;if(this._orgInner=o.innerHTML,this._orgTag=o.tagName,"INPUT"!=o.tagName&&"SELECT"!=o.tagName||(o=this._replaceWithDiv(o)),(this._e=o)[c.__DATA_KEY]=this,1==i){this._szCtl=new x.core.Size(o.offsetWidth,o.offsetHeight);var a=this._handleResize.bind(this);this.addEventListener(window,"resize",a)}this.addEventListener(o,"focus",function(){setTimeout(function(){n._updateFocusState()})},!0),this.addEventListener(o,"blur",function(){setTimeout(function(){n._updateFocusState()},20)},!0);var l=this._handleDisabled.bind(this);if(this.addEventListener(o,"mousedown",l,!0),this.addEventListener(o,"mouseup",l,!0),this.addEventListener(o,"click",l,!0),this.addEventListener(o,"dblclick",l,!0),this.addEventListener(o,"keydown",l,!0),this.addEventListener(o,"wheel",l,!0),null==c._touching&&(c._touching=!1,"ontouchstart"in window||"onpointerdown"in window)){var _=document.body,u=this._handleTouchStart,h=this._handleTouchEnd;"ontouchstart"in window?(_.addEventListener("touchstart",u),_.addEventListener("touchend",h),_.addEventListener("touchcancel",h),_.addEventListener("touchleave",h)):"onpointerdown"in window&&(_.addEventListener("pointerdown",u),_.addEventListener("pointerup",h),_.addEventListener("pointerout",h),_.addEventListener("pointercancel",h),_.addEventListener("pointerleave",h))}}return c.prototype.getTemplate=function(){for(var t=Object.getPrototypeOf(this);t;t=Object.getPrototypeOf(t)){var e=t.constructor.controlTemplate;if(e)return e}return null},c.prototype.applyTemplate=function(t,e,i,n){var o=this._e;t&&x.core.addClass(o,t);var r=null;e&&(r=x.core.createElement(e,o));var s=o.querySelectorAll("input"),a=1==s.length?s[0]:null,l=o.attributes;if(a&&l)for(var _=0;_<l.length;_++)l[_].name.match(/name|autofocus|autocomplete|minlength|maxlength|pattern/i)&&a.setAttribute(l[_].name,l[_].value);if(a&&o.id){var u=document.querySelector('label[for="'+o.id+'"]'),h=o.id+"_input",c=h;if(u instanceof HTMLLabelElement){for(_=0;null!=document.getElementById(c);_++)c=h+_;a.id=c,u.htmlFor=c}}if(a){var p=document.createEvent("HTMLEvents"),f=a.value;p.initEvent("change",!0,!1),this.addEventListener(a,"input",function(){f=a.value},!0),this.gotFocus.addHandler(function(){f=a.value}),this.lostFocus.addHandler(function(){f!=a.value&&a.dispatchEvent(p)})}if(o.getAttribute("tabindex")||(o.tabIndex=null!=a?-1:0),this._updateState(),i){var d=i,g=this;for(var y in d){var m=d[y];if(g[y]=r.querySelector('[wj-part="'+m+'"]'),null==g[y]&&r.getAttribute("wj-part")==m&&(g[y]=r),null==g[y])throw'Missing template part: "'+m+'"';if(m==n){var v=o.attributes,w="name",b=v[w];b&&b.value&&g[y].setAttribute(w,b.value),(b=v[w="accesskey"])&&b.value&&(g[y].setAttribute(w,b.value),o.removeAttribute(w))}}}return r},c.prototype.dispose=function(){for(var t=this._e.querySelectorAll(".wj-control"),e=0;e<t.length;e++){var i=c.getControl(t[e]);i&&i.dispose()}this._toInv&&clearTimeout(this._toInv),this.removeEventListener();for(var n in this){if(2<n.length&&0==n.indexOf("on"))(s=this[n[2].toLowerCase()+n.substr(3)])instanceof x.core.Event&&s.removeAllHandlers()}var o=this.collectionView;if(o instanceof x.core.collections.CollectionView){var r=o;for(var n in r){var s;(s=r[n])instanceof x.core.Event&&s.removeHandler(null,this)}}if(this._e.parentNode){this._e.innerHTML=this._orgInner;for(var a=0;a<this._e.attributes.length;++a)this._e.removeAttribute(this._e.attributes[a].name);for(var l in this._orgAttrs)this._e.setAttribute(l,this._orgAttrs[l])}this._e[c.__DATA_KEY]=null,this._e=this._orgInner=this._orgTag=null},c.getControl=function(t){var e=x.core.getElement(t);return e?x.core.asType(e[c.__DATA_KEY],c,!0):null},Object.defineProperty(c.prototype,"hostElement",{get:function(){return this._e},enumerable:!0,configurable:!0}),c.prototype.focus=function(){this._e&&this._e.focus()},c.prototype.containsFocus=function(){if(!this._e)return!1;for(var t=this._e.querySelectorAll(".wj-control"),e=0;e<t.length;e++){var i=c.getControl(t[e]);if(i&&i!=this&&i.containsFocus())return!0}var n=x.core.getActiveElement(),o=c.getControl(x.core.closest(n,".wj-control.wj-popup"));return!!(o&&o.owner&&x.core.contains(this._e,o.owner))||x.core.contains(this._e,n)},c.prototype.refreshDelay=function(t){var e=this;void 0===t&&(t=!0),this._fullUpdate=this._fullUpdate||t,this._toInv&&(clearTimeout(this._toInv),this._toInv=null),this.isUpdating||(this._toInv=window.setTimeout(function(){e.refresh(e._fullUpdate)},c.__REFRESH_INTERVAL))},c.prototype.refresh=function(t){void 0===t&&(t=!0),!this.isUpdating&&this._toInv&&(clearTimeout(this._toInv),this._toInv=null,this._fullUpdate=!1)},c.invalidateAll=function(t){if(t||(t=document.body),t.children)for(var e=0;e<t.children.length;e++)c.invalidateAll(t.children[e]);var i=c.getControl(t);i&&i.refreshDelay()},c.refreshAll=function(t){if(t||(t=document.body),t.children)for(var e=0;e<t.children.length;e++)c.refreshAll(t.children[e]);var i=c.getControl(t);i&&i.refresh()},c.disposeAll=function(t){var e=c.getControl(t);if(e)e.dispose();else if(t.children)for(var i=0;i<t.children.length;i++)c.disposeAll(t.children[i])},c.prototype.beginUpdate=function(){this._updating++},c.prototype.endUpdate=function(){this._updating--,this._updating<=0&&this.refreshDelay()},Object.defineProperty(c.prototype,"isUpdating",{get:function(){return 0<this._updating},enumerable:!0,configurable:!0}),c.prototype.deferUpdate=function(t){try{this.beginUpdate(),t()}finally{this.endUpdate()}},Object.defineProperty(c.prototype,"isTouching",{get:function(){return c._touching},enumerable:!0,configurable:!0}),Object.defineProperty(c.prototype,"isDisabled",{get:function(){return this._e&&null!=this._e.getAttribute("disabled")},set:function(t){(t=x.core.asBoolean(t,!0))!=this.isDisabled&&x.core.enable(this._e,!t)},enumerable:!0,configurable:!0}),Object.defineProperty(c.prototype,"disabled",{get:function(){return x.core._deprecated("disabled","isDisabled"),this.isDisabled},set:function(t){x.core._deprecated("disabled","isDisabled"),this.isDisabled=t},enumerable:!0,configurable:!0}),c.prototype.initialize=function(t){t&&(this.beginUpdate(),x.core.copy(this,t),this.endUpdate())},c.prototype.addEventListener=function(t,e,i,n){void 0===n&&(n=!1),t&&(t.addEventListener(e,i,n),null==this._listeners&&(this._listeners=[]),this._listeners.push({target:t,type:e,fn:i,capture:n}))},c.prototype.removeEventListener=function(t,e,i,n){var o=0;if(this._listeners)for(var r=0;r<this._listeners.length;r++){var s=this._listeners[r];null!=t&&t!=s.target||null!=e&&e!=s.type||null!=i&&i!=s.fn||null!=n&&n!=s.capture||(s.target.removeEventListener(s.type,s.fn,s.capture),this._listeners.splice(r,1),r--,o++)}return o},c.prototype.onGotFocus=function(t){this.gotFocus.raise(this,t)},c.prototype.onLostFocus=function(t){this.lostFocus.raise(this,t)},c.prototype._handleResize=function(){if(this._e.parentElement){var t=new x.core.Size(this._e.offsetWidth,this._e.offsetHeight);t.equals(this._szCtl)||(this._szCtl=t,this.refreshDelay())}},c.prototype._updateFocusState=function(){var n=this;setTimeout(function(){for(var t=n._e;t;t=t.parentElement){var e=c.getControl(t);if(e){var i=e.containsFocus();i!=e._focus&&((e._focus=i)?e.onGotFocus():e.onLostFocus(),e._updateState())}}})},c.prototype._updateState=function(){var t=this.hostElement;if(t){x.core.toggleClass(t,"wj-state-focused",this.containsFocus());var e=t.querySelector("input");if(e instanceof HTMLInputElement){x.core.toggleClass(t,"wj-state-empty",0==e.value.length),x.core.toggleClass(t,"wj-state-readonly",e.readOnly);var i=e.validationMessage;x.core.toggleClass(t,"wj-state-invalid",i&&0<i.length)}}},c.prototype._handleTouchStart=function(t){null!=t.pointerType&&"touch"!=t.pointerType||(c._touching=!0)},c.prototype._handleTouchEnd=function(t){null!=t.pointerType&&"touch"!=t.pointerType||setTimeout(function(){c._touching=!1},400)},c.prototype._handleDisabled=function(t){this.isDisabled&&(t.preventDefault(),t.stopPropagation(),t.stopImmediatePropagation())},c.prototype._replaceWithDiv=function(t){var e=document.createElement("div");t.parentElement.replaceChild(e,t),e.innerHTML=t.innerHTML;for(var i=t.attributes,n=0;n<i.length;n++){var o=i[n].name;i[n].name.match(/id|style|class/i)&&e.setAttribute(o,i[n].value)}return e},c.__DATA_KEY="gcdv-Control",c.__REFRESH_INTERVAL=10,c}();x.Control=t}(dv||(dv={})),function(t){"use strict";var e=null;t._isCalculationEngineExist=function(){if(null==e){var t=window.GC;if(null==t)return!1;if(null==(t=t.Spread))return!1;if(null==(t=t.CalcEngine))return!1;e=!0}return e}}(dv||(dv={})),function(p){"use strict";var f,t;(t=f=p.Aggregate||(p.Aggregate={}))[t.List=0]="List",t[t.Sum=1]="Sum",t[t.Count=2]="Count",t[t.Average=3]="Average",t[t.Max=4]="Max",t[t.Min=5]="Min",t[t.Range=6]="Range",t[t.StandardDeviation=7]="StandardDeviation",t[t.Variance=8]="Variance",t[t.PopulationStandardDeviation=9]="PopulationStandardDeviation",t[t.PopulationVariance=10]="PopulationVariance",t[t.CountOfAll=11]="CountOfAll",p._getAggregate=function(t,e,i){var n=0,o=0,r=0,s=0,a=null,l=null,_=i?new p.core._Binding(i):null;if((t=p.core.asEnum(t,p.Aggregate))==p.Aggregate.CountOfAll)return e.length;for(var u=0;u<e.length;u++){var h=e[u];_&&(h=_.getValue(h)),null!=h&&(n++,(null==a||h<a)&&(a=h),(null==l||l<h)&&(l=h),p.core.isNumber(h)&&!isNaN(h)?(o++,r+=h,s+=h*h):"boolean"==typeof h&&(o++,1==h&&(r++,s++)))}var c=0==o?0:r/o;switch(t){case f.Average:return c;case f.Count:return n;case f.Max:return l;case f.Min:return a;case f.Range:return l-a;case f.Sum:return r;case f.PopulationVariance:return o<=1?0:s/o-c*c;case f.PopulationStandardDeviation:return o<=1?0:Math.sqrt(s/o-c*c);case f.Variance:return o<=1?0:(s/o-c*c)*o/(o-1);case f.StandardDeviation:return o<=1?0:Math.sqrt((s/o-c*c)*o/(o-1))}throw"Invalid aggregate type."}}(dv||(dv={})),function(t){"use strict";var e;(e=t.AnimationEasing||(t.AnimationEasing={}))[e.Linear=0]="Linear",e[e.Swing=1]="Swing",e[e.EaseInQuad=2]="EaseInQuad",e[e.EaseOutQuad=3]="EaseOutQuad",e[e.EaseInOutQuad=4]="EaseInOutQuad",e[e.EaseInCubic=5]="EaseInCubic",e[e.EaseOutCubic=6]="EaseOutCubic",e[e.EaseInOutCubic=7]="EaseInOutCubic",e[e.EaseInQuart=8]="EaseInQuart",e[e.EaseOutQuart=9]="EaseOutQuart",e[e.EaseInOutQuart=10]="EaseInOutQuart",e[e.EaseInQuint=11]="EaseInQuint",e[e.EaseOutQuint=12]="EaseOutQuint",e[e.EaseInOutQuint=13]="EaseInOutQuint",e[e.EaseInSine=14]="EaseInSine",e[e.EaseOutSine=15]="EaseOutSine",e[e.EaseInOutSine=16]="EaseInOutSine",e[e.EaseInExpo=17]="EaseInExpo",e[e.EaseOutExpo=18]="EaseOutExpo",e[e.EaseInOutExpo=19]="EaseInOutExpo",e[e.EaseInCirc=20]="EaseInCirc",e[e.EaseOutCirc=21]="EaseOutCirc",e[e.EaseInOutCirc=22]="EaseInOutCirc",e[e.EaseInBack=23]="EaseInBack",e[e.EaseOutBack=24]="EaseOutBack",e[e.EaseInOutBack=25]="EaseInOutBack",e[e.EaseInBounce=26]="EaseInBounce",e[e.EaseOutBounce=27]="EaseOutBounce",e[e.EaseInOutBounce=28]="EaseInOutBounce",e[e.EaseInElastic=29]="EaseInElastic",e[e.EaseOutElastic=30]="EaseOutElastic",e[e.EaseInOutElastic=31]="EaseInOutElastic"}(dv||(dv={})),function(t){"use strict";var e;(e=t.AnimationMode||(t.AnimationMode={}))[e.All=0]="All",e[e.Point=1]="Point",e[e.Group=2]="Group"}(dv||(dv={})),function(t){"use strict";var e;(e=t.AxisMode||(t.AxisMode={}))[e.Cartesian=0]="Cartesian",e[e.Radial=1]="Radial",e[e.Polygonal=2]="Polygonal"}(dv||(dv={})),function(t){"use strict";var e;(e=t.AxisPosition||(t.AxisPosition={}))[e.None=0]="None",e[e.Near=1]="Near",e[e.Far=2]="Far"}(dv||(dv={})),function(t){"use strict";var e;(e=t.AxisType||(t.AxisType={}))[e.X=0]="X",e[e.Y=1]="Y"}(dv||(dv={})),function(t){"use strict";var e;(e=t.ClippingMode||(t.ClippingMode={}))[e.None=0]="None",e[e.Fit=1]="Fit",e[e.Clip=2]="Clip"}(dv||(dv={})),function(t){"use strict";var e;(e=t.DateMode||(t.DateMode={}))[e.MilliSecond=0]="MilliSecond",e[e.Second=1]="Second",e[e.Minute=2]="Minute",e[e.Hour=3]="Hour",e[e.Day=4]="Day",e[e.DayOfWeek=5]="DayOfWeek",e[e.Month=6]="Month",e[e.Year=7]="Year"}(dv||(dv={})),function(t){"use strict";var e;(e=t.ElementType||(t.ElementType={}))[e.Control=0]="Control",e[e.Header=1]="Header",e[e.Footter=2]="Footter",e[e.PlotArea=3]="PlotArea",e[e.Legend=4]="Legend",e[e.LegendItem=260]="LegendItem",e[e.LegendTitle=516]="LegendTitle",e[e.PlotsPane=5]="PlotsPane",e[e.Plot=6]="Plot",e[e.DataPoint=7]="DataPoint",e[e.DataPointLabel=263]="DataPointLabel",e[e.Series=8]="Series",e[e.Axis=9]="Axis",e[e.AxisLabel=265]="AxisLabel",e[e.AxisTitle=521]="AxisTitle",e[e.Trellis=16]="Trellis",e[e.TrellisRowHeader=272]="TrellisRowHeader",e[e.TrellisColumnHeader=528]="TrellisColumnHeader",e[e.TrellisRow=784]="TrellisRow",e[e.TrellisColumn=1040]="TrellisColumn",e[e.TrellisCell=1296]="TrellisCell",e[e.TrellisCorner=1552]="TrellisCorner"}(dv||(dv={})),function(t){"use strict";var e;(e=t.FontStyle||(t.FontStyle={}))[e.Normal=0]="Normal",e[e.Italic=1]="Italic",e[e.Oblique=2]="Oblique"}(dv||(dv={})),function(t){"use strict";var e;(e=t.FontWeight||(t.FontWeight={}))[e.Normal=0]="Normal",e[e.Bold=1]="Bold"}(dv||(dv={})),function(t){"use strict";var e;(e=t.GradientSideOrCorner||(t.GradientSideOrCorner={}))[e.ToLeft=4026531840]="ToLeft",e[e.ToRight=1879048192]="ToRight",e[e.ToTop=805306368]="ToTop",e[e.ToBottom=268435456]="ToBottom",e[e.ToLeftTop=4076863488]="ToLeftTop",e[e.ToRightTop=1929379840]="ToRightTop",e[e.ToLeftBottom=4043309056]="ToLeftBottom",e[e.ToRightBottom=1895825408]="ToRightBottom"}(dv||(dv={})),function(t){"use strict";var e;(e=t.GradientExtentKeyword||(t.GradientExtentKeyword={}))[e.ClosestSide=0]="ClosestSide",e[e.ClosestCorner=1]="ClosestCorner",e[e.FarthestSide=2]="FarthestSide",e[e.FarthestCorner=3]="FarthestCorner"}(dv||(dv={})),function(t){"use strict";var e;(e=t.GradientType||(t.GradientType={}))[e.Linear=0]="Linear",e[e.Radial=1]="Radial"}(dv||(dv={})),function(t){"use strict";var e;(e=t.GradientPosition||(t.GradientPosition={}))[e.Center=0]="Center",e[e.Left=1]="Left",e[e.Right=2]="Right",e[e.Top=3]="Top",e[e.Bottom=4]="Bottom",e[e.LeftTop=5]="LeftTop",e[e.RightTop=6]="RightTop",e[e.LeftBottom=7]="LeftBottom",e[e.RightBottom=8]="RightBottom"}(dv||(dv={})),function(t){"use strict";var e;(e=t.Group||(t.Group={}))[e.Cluster=0]="Cluster",e[e.Stack=1]="Stack"}(dv||(dv={})),function(t){"use strict";var e;(e=t.HAlign||(t.HAlign={}))[e.Left=0]="Left",e[e.Center=1]="Center",e[e.Right=2]="Right"}(dv||(dv={})),function(t){"use strict";var e;(e=t.LegendType||(t.LegendType={}))[e.Color=0]="Color",e[e.Size=1]="Size",e[e.Shape=2]="Shape",e[e.Overlay=3]="Overlay"}(dv||(dv={})),function(t){"use strict";var e;(e=t.LineAspect||(t.LineAspect={}))[e.Default=0]="Default",e[e.Spline=1]="Spline",e[e.StepLeft=2]="StepLeft",e[e.StepRight=3]="StepRight",e[e.StepCenter=4]="StepCenter"}(dv||(dv={})),function(t){"use strict";var e;(e=t.LinePosition||(t.LinePosition={}))[e.Auto=0]="Auto",e[e.Center=1]="Center"}(dv||(dv={})),function(t){"use strict";var e;(e=t.OrderType||(t.OrderType={}))[e.Ascending=0]="Ascending",e[e.Descending=1]="Descending"}(dv||(dv={})),function(t){"use strict";var e;(e=t.Orientation||(t.Orientation={}))[e.Horizontal=0]="Horizontal",e[e.Vertical=1]="Vertical"}(dv||(dv={})),function(t){"use strict";var e;(e=t.OverlappingLabels||(t.OverlappingLabels={}))[e.Auto=0]="Auto",e[e.Show=1]="Show"}(dv||(dv={})),function(t){"use strict";var e;(e=t.OverlayLabelDisplay||(t.OverlayLabelDisplay={}))[e.Legend=0]="Legend",e[e.Plot=1]="Plot",e[e.Both=2]="Both",e[e.None=3]="None"}(dv||(dv={})),function(t){"use strict";var e;(e=t.OverlayLabelPosition||(t.OverlayLabelPosition={}))[e.TopLeft=0]="TopLeft",e[e.TopCenter=1]="TopCenter",e[e.TopRight=2]="TopRight",e[e.BottomLeft=3]="BottomLeft",e[e.BottomCenter=4]="BottomCenter",e[e.BottomRight=5]="BottomRight"}(dv||(dv={})),function(t){"use strict";var e;(e=t.OverlayPosition||(t.OverlayPosition={}))[e.Front=0]="Front",e[e.Back=1]="Back"}(dv||(dv={})),function(t){"use strict";var e;(e=t.Palette||(t.Palette={}))[e.Standard=0]="Standard",e[e.Cocoa=1]="Cocoa",e[e.Coral=2]="Coral",e[e.Dark=3]="Dark",e[e.HighContrast=4]="HighContrast",e[e.Light=5]="Light",e[e.Midnight=6]="Midnight",e[e.Modern=7]="Modern",e[e.Organic=8]="Organic",e[e.Slate=9]="Slate",e[e.Zen=10]="Zen",e[e.Cyborg=11]="Cyborg",e[e.Superhero=12]="Superhero",e[e.Flatly=13]="Flatly",e[e.Darkly=14]="Darkly",e[e.Cerulan=15]="Cerulan",e[e.Office=16]="Office",e[e.Office2010=17]="Office2010",e[e.Grayscale=18]="Grayscale",e[e.BlueWarm=19]="BlueWarm",e[e.Blue=20]="Blue",e[e.Blue2=21]="Blue2",e[e.BlueGreen=22]="BlueGreen",e[e.Green=23]="Green",e[e.GreenYellow=24]="GreenYellow",e[e.Yellow=25]="Yellow",e[e.YellowOrange=26]="YellowOrange",e[e.Orange=27]="Orange",e[e.OrangeRed=28]="OrangeRed",e[e.RedOrange=29]="RedOrange",e[e.Red=30]="Red",e[e.RedViolet=31]="RedViolet",e[e.Violet=32]="Violet",e[e.Violet2=33]="Violet2",e[e.Median=34]="Median",e[e.Paper=35]="Paper",e[e.Marquee=36]="Marquee",e[e.Slipstream=37]="Slipstream",e[e.Aspect=38]="Aspect"}(dv||(dv={})),function(t){"use strict";var e;(e=t.PercentileType||(t.PercentileType={}))[e.Exclusive=0]="Exclusive",e[e.Inclusive=1]="Inclusive"}(dv||(dv={})),function(t){"use strict";var e;(e=t.PlotType||(t.PlotType={}))[e.Bar=0]="Bar",e[e.Line=1]="Line",e[e.Scatter=2]="Scatter",e[e.Area=3]="Area"}(dv||(dv={})),function(t){"use strict";var e;(e=t.Position||(t.Position={}))[e.Left=0]="Left",e[e.Top=1]="Top",e[e.Right=2]="Right",e[e.Bottom=3]="Bottom",e[e.None=4]="None"}(dv||(dv={})),function(t){"use strict";var e;(e=t.ReferenceLineAggregate||(t.ReferenceLineAggregate={}))[e.Sum=1]="Sum",e[e.Count=2]="Count",e[e.Average=3]="Average",e[e.Max=4]="Max",e[e.Min=5]="Min",e[e.Median=6]="Median",e[e.Percentile=7]="Percentile"}(dv||(dv={})),function(t){"use strict";var e;(e=t.RenderMethod||(t.RenderMethod={}))[e.SVG=0]="SVG",e[e.Canvas=1]="Canvas"}(dv||(dv={})),function(t){"use strict";var e;(e=t.SelectionMode||(t.SelectionMode={}))[e.None=0]="None",e[e.Point=1]="Point",e[e.Points=2]="Points",e[e.Group=3]="Group",e[e.Color=4]="Color",e[e.Shape=5]="Shape",e[e.Size=6]="Size",e[e.LegendSingle=7]="LegendSingle",e[e.LegendMultiple=8]="LegendMultiple",e[e.Category=9]="Category",e[e.Custom=10]="Custom",e[e.Trellis=11]="Trellis"}(dv||(dv={})),function(t){"use strict";var e;(e=t.ShapeType||(t.ShapeType={}))[e.Rectangle=0]="Rectangle",e[e.RotatedRectangle=1]="RotatedRectangle"}(dv||(dv={})),function(t){"use strict";var e;(e=t.ShowNulls||(t.ShowNulls={}))[e.Gaps=0]="Gaps",e[e.Zeros=1]="Zeros",e[e.Connected=2]="Connected"}(dv||(dv={})),function(t){"use strict";var e;(e=t.SortOrder||(t.SortOrder={}))[e.None=0]="None",e[e.Reversed=1]="Reversed",e[e.Ascending=2]="Ascending",e[e.Descending=3]="Descending"}(dv||(dv={})),function(t){"use strict";var e;(e=t.TextDecoration||(t.TextDecoration={}))[e.Normal=0]="Normal",e[e.Overline=1]="Overline",e[e.LineThrough=2]="LineThrough",e[e.Underline=4]="Underline"}(dv||(dv={})),function(t){"use strict";var e;(e=t.TextOverflow||(t.TextOverflow={}))[e.Clip=0]="Clip",e[e.Ellipsis=1]="Ellipsis",e[e.Wrap=2]="Wrap"}(dv||(dv={})),function(t){"use strict";var e;(e=t.TextPosition||(t.TextPosition={}))[e.Auto=0]="Auto",e[e.Outside=1]="Outside",e[e.Center=2]="Center",e[e.Inside=3]="Inside",e[e.Smart=4]="Smart"}(dv||(dv={})),function(t){"use strict";var e;(e=t.TickMark||(t.TickMark={}))[e.None=0]="None",e[e.Outside=1]="Outside",e[e.Inside=2]="Inside",e[e.Cross=3]="Cross"}(dv||(dv={})),function(t){"use strict";var e;(e=t.VAlign||(t.VAlign={}))[e.Top=0]="Top",e[e.Middle=1]="Middle",e[e.Bottom=2]="Bottom"}(dv||(dv={})),function(t){"use strict";var e;(e=t.ValueScaleType||(t.ValueScaleType={}))[e.Ordinal=0]="Ordinal",e[e.Linear=1]="Linear",e[e.Logarithmic=2]="Logarithmic",e[e.Percentage=3]="Percentage"}(dv||(dv={})),function(t){"use strict";var e=function(i){function t(){return null!==i&&i.apply(this,arguments)||this}return __extends(t,i),t.prototype.raise=function(t,e){i.prototype.raise.call(this,t,e)},t}(t.core.Event);t.HitTestEvent=e}(dv||(dv={})),function(t){"use strict";var e=function(o){function t(t,e,i){var n=o.call(this)||this;return n.point=t,n.model=e,n.addition=i,n}return __extends(t,o),t}(t.core.EventArgs);t.HitTestEventArgs=e}(dv||(dv={})),function(t){"use strict";var e=function(t,e,i,n,o){void 0===o&&(o=null),this.point=t,this.model=e,this.addition=o,this.__element=i,this.__type=n};(dv||(dv={})).HitTestResult=e}(),function(t){"use strict";var e=function(i){function t(){return null!==i&&i.apply(this,arguments)||this}return __extends(t,i),t.prototype.raise=function(t,e){i.prototype.raise.call(this,t,e)},t}(t.core.Event);t.RenderedEvent=e}(dv||(dv={})),function(t){"use strict";var e=function(t){function e(){return t.call(this)||this}return __extends(e,t),e}(t.core.EventArgs);t.RenderedEventArgs=e}(dv||(dv={})),function(t){"use strict";(dv||(dv={}))._assertDebug=function(t){if(!t())throw"Debug: Assert Fail."}}(),function(t){"use strict";var e;(e=t.Exception||(t.Exception={}))[e.Unknown=0]="Unknown",e[e.InvalidOperation=1]="InvalidOperation",e[e.EmptyName=2]="EmptyName",e[e.PlotTypeIsRegistered=3]="PlotTypeIsRegistered",e[e.UnknownPlotType=4]="UnknownPlotType",e[e.CoordinateSystemTypeIsRegistered=5]="CoordinateSystemTypeIsRegistered",e[e.UnknownCoordinateSystemType=6]="UnknownCoordinateSystemType",e[e.LegendSymbolTypeIsRegistered=7]="LegendSymbolTypeIsRegistered",e[e.UnknownLegendSymbolType=8]="UnknownLegendSymbolType",e[e.PlotTypeCannotSupportCoordinateSystem=9]="PlotTypeCannotSupportCoordinateSystem",e[e.Option_PlotArea_InvalidRow=4097]="Option_PlotArea_InvalidRow",e[e.Option_PlotArea_InvalidColumn=4098]="Option_PlotArea_InvalidColumn",e[e.Option_Config_DuplicatedRowAndColumnOfPlotArea=4353]="Option_Config_DuplicatedRowAndColumnOfPlotArea",e[e.Plugin_InvalidTypeName=8193]="Plugin_InvalidTypeName",e[e.Plugin_InvalidPlugin=8194]="Plugin_InvalidPlugin",e[e.Plugin_IsRegistered=8211]="Plugin_IsRegistered"}(dv||(dv={})),function(t){"use strict";var i=[{exception:t.Exception.Unknown,message:"Unknown exception."},{exception:t.Exception.InvalidOperation,message:"Invalid operation exception."},{exception:t.Exception.EmptyName,message:"The name is empty."},{exception:t.Exception.Option_PlotArea_InvalidRow,message:"The row is invalid in the plot area option."},{exception:t.Exception.Option_PlotArea_InvalidColumn,message:"The column is invalid in the plot area option."}];t._throwException=function(e){throw i.forEach(function(t){if(t.exception==e)throw new Error(t.message)}),new Error("Unknown exception.")}}(dv||(dv={})),function(a){"use strict";a.__PointS_WITHOUT_CTRL=1001;var t=function(n){function t(t,e){var i=n.call(this,t,null,!0)||this;return i.__interactionProcessor=new a._InteractionProcessor(i),i.__enabled=!0,i.__hitTestEvent=new a.HitTestEvent,i.__renderedEvent=new a.RenderedEvent,i.__hasRunLoadAnimation=!1,i.__listenertable={},i.__updateAnimationManager=new a.UpdateAnimationManager,i.applyTemplate(a.__Constant_Core_Control_ClassName,null,null),i._initializeNotificationHandlers(),i.__layer=new a.models._Layer(i.hostElement,a.RenderMethod.SVG),i.initialize(e),i.refreshDelay(),i}return __extends(t,n),Object.defineProperty(t.prototype,"option",{get:function(){return this.__option},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"devicePixelRatio",{get:function(){return this._layer()._devicePixelRatio()},set:function(t){this._layer()._devicePixelRatio(t),this.refreshDelay()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"enabled",{get:function(){return this.__enabled},set:function(t){null!=t&&(this.__enabled=t)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"renderMethod",{get:function(){return this._layer()._renderMethod()},set:function(t){this._layer()._renderMethod()!==t&&(this._layer()._renderMethod(t),this.refreshDelay())},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"model",{get:function(){return this.__dvView},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"hitTested",{get:function(){return this.__hitTestEvent},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"rendered",{get:function(){return this.__renderedEvent},enumerable:!0,configurable:!0}),t.prototype._layer=function(){return this.__layer},t.prototype.dispose=function(){for(var t in this.__listenertable)this.hostElement.removeEventListener(t,this.__listenertable[t],!1);this.__listenertable=null,this.__hitTestEvent.removeAllHandlers(),this.__renderedEvent.removeAllHandlers(),this.__dvView&&this.__dvView.dispose(),this.__dvView=null,this.__updateAnimationManager=null,n.prototype.dispose.call(this)},t.prototype.initialize=function(t){if(this.__dvView&&this.__dvView.dispose(),null!=t){this.__option=t,this.renderMethod=t.renderMethod;var e=new a.options._DataOption(t.data),i=this._createPlotOptions(t.plots),n=this._createTransformOptions(t.transform);this.__dvView=new a._DvView(this,new a.options._ConfigOption(t.config),e,i,n)}else this.__option=null,this.__dvView=new a._DvView(this,new a.options._ConfigOption(null),new a.options._DataOption(null),[],[])},t.prototype.load=function(t){null!=this.__dvView&&(this.initialize(t),this.refreshDelay())},t.prototype.refresh=function(t){if(void 0===t&&(t=!0),null!=this.__dvView&&(n.prototype.refresh.call(this,t),!this.isUpdating)){var e=this._getHostSize(),i=new a.core.Rect(0,0,e.width,e.height);this._layout(this._layer()._render(),i),this._render(this._layer()._render(),i,{})}},t.prototype.invalidate=function(){this._invalidateWithContext({})},t.prototype.hitTest=function(t){return null!=this.__dvView&&this.__dvView._rectangle().contains(t)?this.__dvView._hitTest(t):null},t.prototype.query=function(t){return null!=this.__dvView?this.__dvView._query(t):[]},t.prototype.select=function(t,e,i){var n;(void 0===e&&(e=null),void 0===i&&(i=null),null!=this.__dvView)&&(null!=e&&(n=new a.options._SelectionStyleOption(e)),Array.isArray(t)?(this.__dvView._select(t,i),this._invalidateWithContext({apiSelectedStyle:n})):null!=t&&(this.__dvView._select([t],i),this._invalidateWithContext({apiSelectedStyle:n})))},t.prototype._layout=function(t,e){t.beginRender(),t.setViewportSize(e.width,e.height),null!=this.__dvView&&this.__dvView._layout(t,e,{}),t.endRender(),this.__hasRunLoadAnimation||(this.__hasRunLoadAnimation=!0,this.__dvView._startLoadAnimation())},t.prototype._render=function(t,e,i){t.beginRender(),t.setViewportSize(e.width,e.height),null!=this.__dvView&&(i.scrollableViewZIndex=0,this.__dvView._render(t,i),delete i.scrollableViewZIndex),t.endRender();var n=new a.RenderedEventArgs;this.__renderedEvent.raise(this,n)},t.prototype._invalidateWithContext=function(t){if(null!=this.__dvView){var e=this._getHostSize();this._render(this._layer()._render(),new a.core.Rect(0,0,e.width,e.height),t)}},t.prototype._getHostSize=function(){var t=new a.core.Size(0,0),e=this._getHostComputedStyle();if(null!=e){var i=this.hostElement;t=new a.core.Size(i.clientWidth,i.clientHeight);var n=parseFloat(e.paddingLeft.replace("px","")),o=parseFloat(e.paddingRight.replace("px","")),r=parseFloat(e.paddingTop.replace("px","")),s=parseFloat(e.paddingBottom.replace("px",""));isNaN(n)||(t.width-=n),isNaN(o)||(t.width-=o),isNaN(r)||(t.height-=r),isNaN(s)||(t.height-=s)}return t},t.prototype._getHostComputedStyle=function(){var t=this.hostElement;return null!=t&&null!=t.ownerDocument&&null!=t.ownerDocument.defaultView?t.ownerDocument.defaultView.getComputedStyle(this.hostElement):null},t.prototype._createPlotOptions=function(t){var e=[];if(null!=t){Array.isArray(t)||(t=[t]);for(var i=0,n=t;i<n.length;i++){var o=n[i];e.push(new a.options._PlotOption(o))}}return e},t.prototype._createTransformOptions=function(t){var e=[];if(null!=t){Array.isArray(t)||(t=[t]);for(var i=0,n=t;i<n.length;i++){var o=n[i];e.push(new a.options._BinTransformOption(o))}}return e},t.prototype._initializeNotificationHandlers=function(){for(var t in this.__listenertable.mousemove=this._ontouch.bind(this),this.__listenertable.mousewheel=this._ontouch.bind(this),this.__listenertable.mouseleave=this._ontouch.bind(this),this.__listenertable.click=this._ontouch.bind(this),this.__listenertable.wheel=this._ontouch.bind(this),this.__listenertable)this.hostElement.addEventListener(t,this.__listenertable[t],!1)},t.prototype._ontouch=function(t){if(this.enabled){var e=a.MotionEvent._fromEvent(this.hostElement,t),i=new a.core.Point(e.x,e.y),n=this.__dvView._hitTest(i);if(null!=n){var o=new a.HitTestEventArgs(i,n.model,n.addition);o.event=e,this.__hitTestEvent.raise(this,o),this.__interactionProcessor._process(o)}else this.__interactionProcessor._process(null)}},t}(a.Control);a.FlexDV=t}(dv||(dv={})),function(p){!function(c){"use strict";var t=function(){function t(t,e,i){this.__fields={},this.__items=t,this.__option=e,this.__transformOptions=i,this.__fields=this._analyseItems(this._items());for(var n=0,o=i;n<o.length;n++){var r=o[n],s=this._analyseTransform(r,this.__fields);null!=s&&null==this.__fields[s._name()]&&(this.__fields[s._name()]=s)}}return t.prototype._fields=function(){return this.__fields},t.prototype._items=function(){return this.__items},t.prototype._option=function(){return this.__option},t.prototype._transformOptions=function(){return this.__transformOptions},t.prototype._dateParser=function(){if(null==this.__dateParser){var t=[],e=this.__option.dateFormats;t="boolean"==typeof e?e?p.__Constant_Core_Default_Date_Formats:[]:e,this.__dateParser=new c._DateStringParser(t)}return this.__dateParser},t.prototype._analyseItems=function(t){for(var e={},i=0,n=t;i<n.length;i++){var o=n[i];for(var r in o){var s=e[r];void 0===s&&(e[r]=s=new c._NullFieldInfo(r));var a=o[r];if(void 0===s._type()&&(p.core.isNumber(a)?e[r]=s=new c._NumberFieldInfo(r):p.core.isString(a)?null==this._dateParser()._parseDate(a)?e[r]=s=new c._StringFieldInfo(r):e[r]=s=new c._DateFieldInfo(r,[],this._dateParser()):p.core.isDate(a)?e[r]=s=new c._DateFieldInfo(r,[],this._dateParser()):p.core.isBoolean(a)&&(e[r]=s=new c._BooleanFieldInfo(r))),s instanceof c._NumberFieldInfo){var l=p.core.asNumber(a,!0);null!==l&&isFinite(l)&&((void 0===s._minimum()||s._minimum()>l)&&s._minimum(l),(void 0===s._maximum()||s._maximum()<l)&&s._maximum(l),-1==s._values().indexOf(l)&&s._values().push(l))}else if(s instanceof c._DateFieldInfo){var _=null;null!=a&&null!==(_=a instanceof Date?a:this._dateParser()._parseDate(a.toString()))&&((void 0===s._minimum()||s._minimum()>_.valueOf())&&s._minimum(_.valueOf()),(void 0===s._maximum()||s._maximum()<_.valueOf())&&s._maximum(_.valueOf()),-1==s._values().indexOf(_)&&s._values().push(_))}else if(s instanceof c._StringFieldInfo){var u=p.core.asString(a,!0);null!==u&&-1==s._values().indexOf(u)&&s._values().push(u)}else if(s instanceof c._BooleanFieldInfo){var h=p.core.asBoolean(a,!0);null!==h&&-1==s._values().indexOf(h)&&s._values().push(h)}}}return e},t.prototype._analyseTransform=function(t,e){return c._BinNumberFieldInfo._parse(t,e)},t}();c._DataSource=t}(p.models||(p.models={}))}(dv||(dv={})),function(t){!function(t){"use strict";var p=function(t,e){this.children=null,this.values=[],this.order=t,this.key=e},e=function(){function t(){this.units=[],this.datas=[]}return t.prototype.addData=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];for(var i=0,n=t;i<n.length;i++){var o=n[i];this.datas.push(o)}},t.prototype.addUnit=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];for(var i=0,n=t;i<n.length;i++){var o=n[i];this.units.push(o)}},t.prototype.getTree=function(t,e){if(t>=this.units.length)return null;for(var i={},n=this.units[t],o=[],r=0,s=e;r<s.length;r++){var a=s[r],l=n(a),_=i[l];null==_&&(_=new p(this.order++,l),i[l]=_,o.push(_)),_.values.push(a)}for(var u=0,h=o;u<h.length;u++){var c=h[u];t===this.units.length-1?(this.groups.push(c.values),c.children=null):c.children=this.getTree(t+1,c.values)}return o},t.prototype.classify=function(){this.groups=[],this.order=0;this.getTree(0,this.datas);return this.groups},t}();t.Classifier=e}(t.models||(t.models={}))}(dv||(dv={})),function(h){!function(u){"use strict";var t=function(){function t(t){this.__tiny=[0,-.5,.5,-.25,.25],h._assertDebug(function(){return null!=t&&Array.isArray(t)}),this.__colors=t}return t.prototype.getColor=function(t){if(!this.__colors)return"grey";var e=this.__colors[t%this.__colors.length];if(e instanceof h.options._GradientOption){for(var i=[],n=0,o=e.colorStops;n<o.length;n++){var r=o[n],s=h.core._Color.fromCss(r.color),a=this.__tiny[Math.floor(t/this.__colors.length)%this.__tiny.length];i.push(new h.options._ColorStopOption({color:h.core._Color.tint(s,a).toCss(),stop:r.stop}))}if(e instanceof h.options._LinearGradientOption)return new u.LinearGradientColor(e.angle,i);if(e instanceof h.options._RadialGradientOption){var l=new h.core.Point(e.x0,e.y0),_=new h.core.Point(e.x1,e.y1);return new u.RadialGradientColor(l,e.r0,_,e.r1,i)}}else if("string"==typeof e){s=h.core._Color.fromCss(e),a=this.__tiny[Math.floor(t/this.__colors.length)%this.__tiny.length];return h.core._Color.tint(s,a).toCss()}},t}();u._PaletteColorProvider=t}(h.models||(h.models={}))}(dv||(dv={})),function(t){!function(t){"use strict";var e=function(){function t(){}return t.Standard=["#88bde6","#fbb258","#90cd97","#f6aac9","#bfa554","#bc99c7","#eddd46","#f07e6e","#8c8c8c"],t.Cocoa=["#466bb0","#c8b422","#14886e","#b54836","#6e5944","#8b3872","#73b22b","#b87320","#141414"],t.Coral=["#84d0e0","#f48256","#95c78c","#efa5d6","#ba8452","#ab95c2","#ede9d0","#e96b7d","#888888"],t.Dark=["#005fad","#f06400","#009330","#e400b1","#b65800","#6a279c","#d5a211","#dc0127","#000000"],t.HighContrast=["#ff82b0","#0dda2c","#0021ab","#bcf28c","#19c23b","#890d3a","#607efd","#1b7700","#000000"],t.Light=["#ddca9a","#778deb","#cb9fbb","#b5eae2","#7270be","#a6c7a7","#9e95c7","#95b0c7","#9b9b9b"],t.Midnight=["#83aaca","#e37849","#14a46a","#e097da","#a26d54","#a584b7","#d89c54","#e86996","#2c343b"],t.Modern=["#2d9fc7","#ec993c","#89c235","#e377a4","#a68931","#a672a6","#d0c041","#e35855","#68706a"],t.Organic=["#9c88d9","#a3d767","#8ec3c0","#e9c3a9","#91ab36","#d4ccc0","#61bbd8","#e2d76f","#80715a"],t.Slate=["#7493cd","#f99820","#71b486","#e4a491","#cb883b","#ae83a4","#bacc5c","#e5746a","#505d65"],t.Zen=["#7bb5ae","#e2d287","#92b8da","#eac4cb","#7b8bbd","#c7d189","#b9a0c8","#dfb397","#a9a9a9"],t.Cyborg=["#2a9fd6","#77b300","#9933cc","#ff8800","#cc0000","#00cca3","#3d6dcc","#525252","#000000"],t.Superhero=["#5cb85c","#f0ad4e","#5bc0de","#d9534f","#9f5bde","#46db8c","#b6b86e","#4e5d6c","#2b3e4b"],t.Flatly=["#18bc9c","#3498db","#f39c12","#6cc1be","#99a549","#8f54b5","#e74c3c","#8a9899","#2c3e50"],t.Darkly=["#375a7f","#00bc8c","#3498db","#f39c12","#e74c3c","#8f61b3","#b08725","#4a4949","#000000"],t.Cerulan=["#033e76","#87c048","#59822c","#53b3eb","#fc6506","#d42323","#e3bb00","#cccccc","#222222"],t.Office=["#5b9bd5","#ed7d31","#a5a5a5","#ffc000","#4472c4","#70ad47"],t.Office2010=["#4f81bd","#c0504d","#9bbb59","#8064a2","#4bacc6","#f79646"],t.Grayscale=["#dddddd","#b2b2b2","#969696","#808080","#5f5f5f","#4d4d4d"],t.BlueWarm=["#4a66ac","#629dd1","#297fd5","#7f8fa9","#5aa2ae","#9d90a0"],t.Blue=["#0f6fc6","#009dd9","#0bd0d9","#10cf9b","#7cca62","#a5c249"],t.Blue2=["#1cade4","#2683c6","#27ced7","#42ba97","#3e8853","#62a39f"],t.BlueGreen=["#3494ba","#58b6c0","#75bda7","#7a8c8e","#84acb6","#2683c6"],t.Green=["#549e39","#8ab833","#c0cf3a","#029676","#4ab5c4","#0989b1"],t.GreenYellow=["#99cb38","#63a537","#37a76f","#44c1a3","#4eb3cf","#51c3f9"],t.Yellow=["#ffca08","#f8931d","#ce8d3e","#ec7016","#e64823","#9c6a6a"],t.YellowOrange=["#f0a22e","#a5644e","#b58b80","#c3986d","#a19574","#c17529"],t.Orange=["#e48312","#bd582c","#865640","#9b8357","#c2bc80","#94a088"],t.OrangeRed=["#d34817","#9b2d1f","#a28e6a","#956251","#918485","#855d5d"],t.RedOrange=["#e84c22","#ffbd47","#b64926","#ff8427","#cc9900","#b22600"],t.Red=["#a5300f","#d55816","#e19825","#b19c7d","#7f5f52","#b27d49"],t.RedViolet=["#e32d91","#c830cc","#4ea6dc","#4775e7","#8971e1","#d54773"],t.Violet=["#ad84c6","#8784c7","#5d739a","#6997af","#84acb6","#6f8183"],t.Violet2=["#92278f","#9b57d3","#755dd9","#665eb8","#45a5ed","#5982db"],t.Median=["#94b6d2","#dd8047","#a5ab81","#d8b25c","#7ba79d","#968c8c"],t.Paper=["#a5b592","#f3a447","#e7bc29","#d092a7","#9c85c0","#809ec2"],t.Marquee=["#418ab3","#a6b727","#f69200","#838383","#fec306","#df5327"],t.Slipstream=["#4e67c8","#5eccf3","#a7ea52","#5dceaf","#ff8021","#f14124"],t.Aspect=["#f07f09","#9f2936","#1b587c","#4e8542","#604878","#c19859"],t}();t._Palettes=e}(t.models||(t.models={}))}(dv||(dv={})),function(t){t.models||(t.models={})}(dv||(dv={})),function(s){!function(r){"use strict";var t=function(){function o(t,e){this.__fieldDefinition=t,this.__aggregate=e}return o._parse=function(t,e){if("string"==typeof t.field){var i=t.field.split(",");if(0<i.length){var n=r._FieldDefinition._parse(i[0],e);if(null!=n)return new o(n,null==t.aggregate?s.Aggregate.List:t.aggregate)}}return null},o.prototype._fieldDefinition=function(){return this.__fieldDefinition},o.prototype._aggregate=function(){return this.__aggregate},Object.defineProperty(o.prototype,"name",{get:function(){return this._fieldDefinition()._field()._name()},enumerable:!0,configurable:!0}),o.prototype._toItem=function(t){var e=this._aggregate();return e!=s.Aggregate.List?this._fieldDefinition()._field()._aggregate(t,e):this._fieldDefinition()._field()._toItem(t)},o.prototype._equals=function(t){if(this==t)return!0;if(null==t)return!1;if(t instanceof o){if(null==this._fieldDefinition()){if(null!=t._fieldDefinition())return!1}else if(!this._fieldDefinition()._equals(t._fieldDefinition()))return!1;return this._aggregate()==t._aggregate()}return!1},o}();r._ContentDefinition=t}(s.models||(s.models={}))}(dv||(dv={})),function(t){!function(t){"use strict";var e=function(){function t(t,e,i){this.__excludeNulls=e,this.__group=t,this.__sortDefinition=i}return t.prototype._group=function(){return this.__group},t.prototype._excludeNulls=function(){return this.__excludeNulls},t.prototype._sortDefinition=function(){return this.__sortDefinition},t.prototype._equals=function(t){if(this==t)return!0;if(null==t)return!1;if(null==this._sortDefinition()){if(null!=t._sortDefinition())return!1}else if(!this._sortDefinition()._equals(t._sortDefinition()))return!1;return this._excludeNulls()==t._excludeNulls()&&this._group()==t._group()},t}();t._DetailDefinition=e}(t.models||(t.models={}))}(dv||(dv={})),function(l){!function(a){"use strict";var t=function(r){function s(t,e,i,n){var o=r.call(this,e,i,n)||this;return o.__fieldDefinition=t,o}return __extends(s,r),s._parse=function(t,e){if(null==t.field)return null;var i,n=t.sort;n instanceof l.options._SortEncodingOption?i=a._FieldSortDefinition._parse(n,e):"number"==typeof n&&(i=a._SimpleSortDefinition._parse(n));var o=t.field.split(">");if(0<o.length){var r=a._FieldDefinition._parse(o[0],e);if(null!=r)return new s(r,null==t.group?l.Group.Cluster:t.group,null!=t.excludeNulls&&t.excludeNulls,i)}return null},s.prototype._fieldDefinition=function(){return this.__fieldDefinition},s.prototype._sort=function(t){var i=this,e=this._sortDefinition();if(null==e)return t;var n=t.slice();if(e instanceof a._FieldSortDefinition){var o=e;n.sort(function(t,e){return o._field()._compare(t,e)})}else e instanceof a._SimpleSortDefinition&&n.sort(function(t,e){return i._fieldDefinition()._field()._compare(t,e)});return e._order()==l.OrderType.Descending&&n.reverse(),n},s.prototype._equals=function(t){if(this==t)return!0;if(null==t)return!1;if(t instanceof s){if(null==this._fieldDefinition()){if(null!=t._fieldDefinition())return!1}else if(!this._fieldDefinition()._equals(t._fieldDefinition()))return!1;return r.prototype._equals.call(this,t)}return!1},s}(a._DetailDefinition);a._FieldDetailDefinition=t}(l.models||(l.models={}))}(dv||(dv={})),function(h){!function(u){"use strict";var t=function(r){function _(t,e,i,n){var o=r.call(this,e,i,n)||this;return o.__fieldDefinitions=null==t?[]:t,o}return __extends(_,r),_._parse=function(t,e){if(null==t.field)return null;var i,n=t.sort;n instanceof h.options._SortEncodingOption?i=u._FieldSortDefinition._parse(n,e):"number"==typeof n&&(i=u._SimpleSortDefinition._parse(n));for(var o=[],r=0,s=t.field.split(">");r<s.length;r++){var a=s[r],l=u._FieldDefinition._parse(a,e);null!=l&&o.push(l)}return 0<o.length?new _(o,null==t.group?h.Group.Cluster:t.group,null!=t.excludeNulls&&t.excludeNulls,i):null},_.prototype._fieldDefinitions=function(){return this.__fieldDefinitions},_.prototype._sort=function(t){var i=this,e=this._sortDefinition();if(null==e)return t;var n=t.slice();if(e instanceof u._FieldSortDefinition){var o=e;n.sort(function(t,e){return o._field()._compare(t,e)})}else e instanceof u._SimpleSortDefinition&&n.sort(function(t,e){return i._fieldDefinitions()[0]._field()._compare(t,e)});return e._order()==h.OrderType.Descending&&n.reverse(),n},_.prototype._equals=function(t){if(this==t)return!0;if(null==t)return!1;if(t instanceof _){if(this._fieldDefinitions().length!=t._fieldDefinitions().length)return!1;for(var e=0;e<this._fieldDefinitions().length;e++){var i=this._fieldDefinitions()[e],n=t._fieldDefinitions()[e];if(null==i){if(null!=n)return!1}else if(!i._equals(n))return!1}return r.prototype._equals.call(this,t)}return!1},_}(u._DetailDefinition);u._HierarchicalFieldsDetailDefinition=t}(h.models||(h.models={}))}(dv||(dv={})),function(i){!function(t){"use strict";var e=function(){};(i.models||(i.models={}))._DimensionDefinition=e}()}(dv||(dv={})),function(g){!function(d){"use strict";var t=function(){function _(t,e,i){this.__filter=null,this.__categoryFieldDefinitions=t,this.__sortDefinition=e,this.__excludeNulls=i,this._excludeNulls()&&(this.__filter=g.plugins._Plugins._filter("CategoryEncodingExcludeNulls"))}return _._parse=function(t,e){if(null==t.field)return null;var i,n=t.sort;n instanceof g.options._SortEncodingOption?i=d._FieldSortDefinition._parse(n,e):"number"==typeof n&&(i=d._SimpleSortDefinition._parse(n));for(var o=[],r=0,s=t.field.split(">").reverse();r<s.length;r++){var a=s[r],l=d._FieldDefinition._parse(a,e);null!=l&&o.push(l)}return 0<o.length?new _(o,i,null!=t.excludeNulls&&t.excludeNulls):null},_.prototype._categoryFieldDefinitions=function(){return this.__categoryFieldDefinitions},_.prototype._sortDefinition=function(){return this.__sortDefinition},_.prototype._excludeNulls=function(){return this.__excludeNulls},_.prototype._filter=function(){return this.__filter},_.prototype._name=function(){return this._categoryFieldDefinitions()[0]._field()._name()},_.prototype._analyse=function(t){for(var e=this._categoryFieldDefinitions(),i=this._sort(t),n=new g.core.collections.CollectionView(i),o=e.length-1;0<=o;o--){var r=e[o],s=new d._FieldDefinitionGroupDescription(r);n.groupDescriptions.push(s)}var a=[],l=[],_=0;if(null!=n.groups&&0<n.groups.length)for(var u=0,h=n.groups;u<h.length;u++){var c=h[u],p=this._filter();if(null==p||p.filter(c,"name")){var f=this._createNode(_,c,l);f instanceof d._CategoriedDimensionGroup?(a.push(f),_=f._end+1):_+=1}}return{groups:a,dimensionValues:l}},_.prototype._sort=function(t){var i=this,e=this._sortDefinition();if(null==e)return t;var n=t.slice();if(e instanceof d._FieldSortDefinition){var o=e;n.sort(function(t,e){return o._field()._compare(t,e)})}else e instanceof d._SimpleSortDefinition&&n.sort(function(t,e){return i._categoryFieldDefinitions()[0]._field()._compare(t,e)});return e._order()==g.OrderType.Descending&&n.reverse(),n},_.prototype._equals=function(t){if(this==t)return!0;if(t instanceof _){if(null==this._sortDefinition()&&null!=t._sortDefinition())return!1;if(null!=this._sortDefinition()&&null==t._sortDefinition())return!1;if(null!=this._sortDefinition()&&null!=t._sortDefinition()&&!this._sortDefinition()._equals(t._sortDefinition()))return!1;if(this._categoryFieldDefinitions()==t._categoryFieldDefinitions())return!0;if(null!=this._categoryFieldDefinitions()&&null!=t._categoryFieldDefinitions()&&this._categoryFieldDefinitions().length==t._categoryFieldDefinitions().length){for(var e=0;e<this._categoryFieldDefinitions().length;e++)if(!this._categoryFieldDefinitions()[e]._equals(t._categoryFieldDefinitions()[e]))return!1;return!0}}return!1},_.prototype._createNode=function(t,e,i){if(null!=e.groups&&0<e.groups.length){for(var n=[],o=t,r=0,s=e.groups;r<s.length;r++){var a=s[r],l=this._createNode(o,a,i);l instanceof d._CategoriedDimensionGroup?(n.push(l),o=l._end+1):o+=1}var _=null,u=g.plugins._Plugins._stringFormatting("Default");if(null!=u&&e._gd instanceof d._FieldDefinitionGroupDescription){var h=e._gd._definition._format();_=u.format(h,e.name)}else _=e.name.toString();return new d._CategoriedDimensionGroup(_,e.items,n,t,o-1)}var c=new d._CategoriedDimensionValue(e.items,e.name,t);return i.push(c),c},_}();d._CategoriedDimensionDefinition=t}(g.models||(g.models={}))}(dv||(dv={})),function(t){!function(t){"use strict";var e=function(){function e(t){this.__fieldDefinition=t}return e.prototype._fieldDefinition=function(){return this.__fieldDefinition},e.prototype._name=function(){return this._fieldDefinition()._field()._name()},e.prototype._equals=function(t){return this==t||t instanceof e&&this._fieldDefinition()._equals(t._fieldDefinition())},e}();t._FieldDimensionDefinition=e}(t.models||(t.models={}))}(dv||(dv={})),function(t){!function(n){"use strict";var t=function(){function t(t,e){this.__format=null,this.__field=t,this.__format=e}return t._parse=function(t,e){var i=null;return null!=(i=n._StringFieldDefinition._parse(t,e))?i:null!=(i=n._NumberFieldDefinition._parse(t,e))?i:null!=(i=n._DateFieldDefinition._parse(t,e))?i:null!=(i=n._BooleanFieldDefinition._parse(t,e))?i:null!=(i=n._BinNumberFieldDefinition._parse(t,e))?i:null!=(i=n._BinDateFieldDefinition._parse(t,e))?i:i=n._NullFieldDefinition._parse(t,e)},t.prototype._field=function(){return this.__field},t.prototype._format=function(){return this.__format},t.prototype._equals=function(t){if(this==t)return!0;if(null==t)return!1;if(null==this._field()){if(null!=t._field())return!1}else if(!this._field()._equals(t._field()))return!1;return this._format()==t._format()},t}();n._FieldDefinition=t}(t.models||(t.models={}))}(dv||(dv={})),function(t){!function(r){"use strict";var t=function(e){function o(){return null!==e&&e.apply(this,arguments)||this}return __extends(o,e),o._parse=function(t,e){if(null!=t){var i,n=t.indexOf(":");if(n<0){if(null!=(i=e[t.trim()])&&i instanceof r._BinDateFieldInfo)return new o(i,null)}else if(null!=(i=e[t.substring(0,n).trim()])&&i instanceof r._BinDateFieldInfo)return new o(i,t.substring(n+1).trim())}return null},o.prototype._field=function(){return e.prototype._field.call(this)},o.prototype._equals=function(t){return this==t||null!=t&&(t instanceof o&&e.prototype._equals.call(this,t))},o}(r._FieldDefinition);r._BinDateFieldDefinition=t}(t.models||(t.models={}))}(dv||(dv={})),function(t){!function(r){"use strict";var t=function(e){function o(){return null!==e&&e.apply(this,arguments)||this}return __extends(o,e),o._parse=function(t,e){if(null!=t){var i,n=t.indexOf(":");if(n<0){if(null!=(i=e[t.trim()])&&i instanceof r._BinNumberFieldInfo)return new o(i,null)}else if(null!=(i=e[t.substring(0,n).trim()])&&i instanceof r._BinNumberFieldInfo)return new o(i,t.substring(n+1).trim())}return null},o.prototype._field=function(){return e.prototype._field.call(this)},o.prototype._equals=function(t){return this==t||null!=t&&(t instanceof o&&e.prototype._equals.call(this,t))},o}(r._FieldDefinition);r._BinNumberFieldDefinition=t}(t.models||(t.models={}))}(dv||(dv={})),function(t){!function(r){"use strict";var t=function(e){function o(){return null!==e&&e.apply(this,arguments)||this}return __extends(o,e),o._parse=function(t,e){if(null!=t){var i,n=t.indexOf(":");if(n<0){if(null!=(i=e[t.trim()])&&i instanceof r._BooleanFieldInfo)return new o(i,null)}else if(null!=(i=e[t.substring(0,n).trim()])&&i instanceof r._BooleanFieldInfo)return new o(i,t.substring(n+1).trim())}return null},o.prototype._field=function(){return e.prototype._field.call(this)},o.prototype._equals=function(t){return this==t||null!=t&&(t instanceof o&&e.prototype._equals.call(this,t))},o}(r._FieldDefinition);r._BooleanFieldDefinition=t}(t.models||(t.models={}))}(dv||(dv={})),function(t){!function(r){"use strict";var t=function(e){function o(){return null!==e&&e.apply(this,arguments)||this}return __extends(o,e),o._parse=function(t,e){if(null!=t){var i,n=t.indexOf(":");if(n<0){if(null!=(i=e[t.trim()])&&i instanceof r._DateFieldInfo)return new o(i,null)}else if(null!=(i=e[t.substring(0,n).trim()])&&i instanceof r._DateFieldInfo)return new o(i,t.substring(n+1).trim())}return null},o.prototype._field=function(){return e.prototype._field.call(this)},o.prototype._equals=function(t){return this==t||null!=t&&(t instanceof o&&e.prototype._equals.call(this,t))},o}(r._FieldDefinition);r._DateFieldDefinition=t}(t.models||(t.models={}))}(dv||(dv={})),function(t){!function(r){"use strict";var t=function(e){function o(){return null!==e&&e.apply(this,arguments)||this}return __extends(o,e),o._parse=function(t,e){if(null!=t){var i,n=t.indexOf(":");if(n<0){if(null!=(i=e[t.trim()])&&i instanceof r._NullFieldInfo)return new o(i,null)}else if(null!=(i=e[t.substring(0,n).trim()])&&i instanceof r._NullFieldInfo)return new o(i,t.substring(n+1).trim())}return null},o.prototype._field=function(){return e.prototype._field.call(this)},o.prototype._equals=function(t){return this==t||null!=t&&(t instanceof o&&e.prototype._equals.call(this,t))},o}(r._FieldDefinition);r._NullFieldDefinition=t}(t.models||(t.models={}))}(dv||(dv={})),function(t){!function(r){"use strict";var t=function(e){function o(){return null!==e&&e.apply(this,arguments)||this}return __extends(o,e),o._parse=function(t,e){if(null!=t){var i,n=t.indexOf(":");if(n<0){if(null!=(i=e[t.trim()])&&i instanceof r._NumberFieldInfo)return new o(i,null)}else if(null!=(i=e[t.substring(0,n).trim()])&&i instanceof r._NumberFieldInfo)return new o(i,t.substring(n+1).trim())}return null},o.prototype._field=function(){return e.prototype._field.call(this)},o.prototype._equals=function(t){return this==t||null!=t&&(t instanceof o&&e.prototype._equals.call(this,t))},o}(r._FieldDefinition);r._NumberFieldDefinition=t}(t.models||(t.models={}))}(dv||(dv={})),function(t){!function(r){"use strict";var t=function(e){function o(){return null!==e&&e.apply(this,arguments)||this}return __extends(o,e),o._parse=function(t,e){if(null!=t){var i,n=t.indexOf(":");if(n<0){if(null!=(i=e[t.trim()])&&i instanceof r._StringFieldInfo)return new o(i,null)}else if(null!=(i=e[t.substring(0,n).trim()])&&i instanceof r._StringFieldInfo)return new o(i,t.substring(n+1).trim())}return null},o.prototype._field=function(){return e.prototype._field.call(this)},o.prototype._equals=function(t){return this==t||null!=t&&(t instanceof o&&e.prototype._equals.call(this,t))},o}(r._FieldDefinition);r._StringFieldDefinition=t}(t.models||(t.models={}))}(dv||(dv={})),function(i){!function(t){"use strict";var e=function(){};(i.models||(i.models={}))._LayoutDefinition=e}()}(dv||(dv={})),function(t){!function(t){"use strict";var e=function(){function t(){}return t.prototype._getFormat=function(){return null},t}();t._LegendDefinition=e}(t.models||(t.models={}))}(dv||(dv={})),function(a){!function(s){"use strict";var t=function(o){function r(t,e,i){var n=o.call(this)||this;return n.__fieldDefinition=t,n.__aggregate=e,n.__sortDefinition=i,n}return __extends(r,o),r._parse=function(t,e){if("string"==typeof t.field){var i=void 0,n=t.sort;"number"==typeof n&&(i=s._SimpleSortDefinition._parse(n));var o=s._NumberFieldDefinition._parse(t.field,e);if(null!=o)return new r(o,null==t.aggregate?a.Aggregate.List:t.aggregate,i)}return null},r.prototype._getFormat=function(){if(null!=this.__fieldDefinition._format())return this.__fieldDefinition._format();switch(this.__fieldDefinition._field()._type()){case a.core.DataType.Number:return"d";case a.core.DataType.Date:case a.core.DataType.String:default:return null}},r.prototype._fieldDefinition=function(){return this.__fieldDefinition},r.prototype._sortDefinition=function(){return this.__sortDefinition},r.prototype._aggregate=function(){return this.__aggregate},r.prototype._name=function(){return this._fieldDefinition()._field()._name()},r.prototype._toItem=function(t){var e=this._aggregate();return e!=a.Aggregate.List?this._fieldDefinition()._field()._aggregate(t,e):this._fieldDefinition()._field()._toItem(t)},r.prototype._equals=function(t){return this==t||t instanceof r&&((null!=this._sortDefinition()||null==t._sortDefinition())&&((null==this._sortDefinition()||null!=t._sortDefinition())&&(!(null!=this._sortDefinition()&&null!=t._sortDefinition()&&!this._sortDefinition()._equals(t._sortDefinition()))&&(this._fieldDefinition()._equals(t._fieldDefinition())&&this._aggregate()==t._aggregate()))))},r}(s._LegendDefinition);s._ItemizedRangeLegendDefinition=t}(a.models||(a.models={}))}(dv||(dv={})),function(l){!function(a){"use strict";var t=function(o){function s(t,e,i){var n=o.call(this)||this;return n.__fieldDefinition=t,n.__aggregate=e,n.__sortDefinition=i,n}return __extends(s,o),s._parse=function(t,e){if("string"==typeof t.field){var i=void 0,n=t.sort;"number"==typeof n&&(i=a._SimpleSortDefinition._parse(n));var o=a._BinNumberFieldDefinition._parse(t.field,e);if(null!=o){var r=o._field()._option().bin;if("boolean"==typeof r&&r)return new s(o,null==t.aggregate?l.Aggregate.List:t.aggregate,i);if("object"==typeof r)return new s(o,null==t.aggregate?l.Aggregate.List:t.aggregate,i)}}return null},s.prototype._getFormat=function(){if(null!=this.__fieldDefinition._format())return this.__fieldDefinition._format();switch(this.__fieldDefinition._field()._type()){case l.core.DataType.Number:return"d";case l.core.DataType.Date:case l.core.DataType.String:default:return null}},s.prototype._fieldDefinition=function(){return this.__fieldDefinition},s.prototype._sortDefinition=function(){return this.__sortDefinition},s.prototype._aggregate=function(){return this.__aggregate},s.prototype._name=function(){return this._fieldDefinition()._field()._originalField()._name()},s.prototype._toItem=function(t){var e=this._aggregate();return e!=l.Aggregate.List?this._fieldDefinition()._field()._aggregate(t,e):this._fieldDefinition()._field()._toItem(t)},s.prototype._equals=function(t){return this==t||t instanceof s&&((null!=this._sortDefinition()||null==t._sortDefinition())&&((null==this._sortDefinition()||null!=t._sortDefinition())&&(!(null!=this._sortDefinition()&&null!=t._sortDefinition()&&!this._sortDefinition()._equals(t._sortDefinition()))&&(this._fieldDefinition()._equals(t._fieldDefinition())&&this._aggregate()==t._aggregate()))))},s}(a._LegendDefinition);a._BinItemizedRangeLegendDefinition=t}(l.models||(l.models={}))}(dv||(dv={})),function(t){!function(l){"use strict";var t=function(i){function a(t){var e=i.call(this)||this;return e.__fieldDefinitions=t,e}return __extends(a,i),a._parse=function(t,e){if(null==t.field)return null;for(var i=[],n=0,o=t.field.split(">");n<o.length;n++){var r=o[n],s=l._FieldDefinition._parse(r,e);null!=s&&i.push(s)}return 0<i.length?new a(i):null},a.prototype._fieldDefinitions=function(){return this.__fieldDefinitions},a.prototype._name=function(){return""},a.prototype._equals=function(t){if(this==t)return!0;if(t instanceof a){if(this._fieldDefinitions()==t._fieldDefinitions())return!0;if(null!=this._fieldDefinitions()&&null!=t._fieldDefinitions()&&this._fieldDefinitions().length==t._fieldDefinitions().length){for(var e=0;e<this._fieldDefinitions().length;e++)if(!this._fieldDefinitions()[e]._equals(t._fieldDefinitions()[e]))return!1;return!0}}return!1},a}(l._LegendDefinition);l._HierarchicalLegendDefinition=t}(t.models||(t.models={}))}(dv||(dv={})),function(c){!function(h){"use strict";var t=function(o){function u(t,e,i){var n=o.call(this)||this;return n.__fieldDefinition=t,n.__sortDefinition=i,n.__aggregate=e,n}return __extends(u,o),u._parse=function(t,e){if("string"==typeof t.field){var i=void 0,n=t.sort;"number"==typeof n&&(i=h._SimpleSortDefinition._parse(n));var o=h._StringFieldDefinition._parse(t.field,e);if(null!=o)return new u(o,null==t.aggregate?c.Aggregate.List:t.aggregate,i);var r=h._BooleanFieldDefinition._parse(t.field,e);if(null!=r)return new u(r,null==t.aggregate?c.Aggregate.List:t.aggregate,i);var s=h._NumberFieldDefinition._parse(t.field,e);if(null!=s)return new u(s,null==t.aggregate?c.Aggregate.Sum:t.aggregate,i);var a=h._DateFieldDefinition._parse(t.field,e);if(null!=a)return new u(a,null==t.aggregate?c.Aggregate.Sum:t.aggregate,i);var l=h._BinNumberFieldDefinition._parse(t.field,e);if(null!=l){var _=l._field()._option().bin;if("boolean"==typeof _&&!_)return new u(l,null==t.aggregate?c.Aggregate.Sum:t.aggregate,i)}}return null},u.prototype._fieldDefinition=function(){return this.__fieldDefinition},u.prototype._sortDefinition=function(){return this.__sortDefinition},u.prototype._aggregate=function(){return this.__aggregate},u.prototype._name=function(){var t=this._fieldDefinition();return t instanceof h._BinNumberFieldDefinition?t._field()._originalField()._name():this._fieldDefinition()._field()._name()},u.prototype._getFormat=function(){if(null!=this.__fieldDefinition._format())return this.__fieldDefinition._format();switch(this.__fieldDefinition._field()._type()){case c.core.DataType.Number:case c.core.DataType.Date:case c.core.DataType.String:default:return null}},u.prototype._toItem=function(t){var e=this._aggregate();return e!=c.Aggregate.List?this._fieldDefinition()._field()._aggregate(t,e):this._fieldDefinition()._field()._toItem(t)},u.prototype._equals=function(t){return this==t||t instanceof u&&((null!=this._sortDefinition()||null==t._sortDefinition())&&((null==this._sortDefinition()||null!=t._sortDefinition())&&(!(null!=this._sortDefinition()&&null!=t._sortDefinition()&&!this._sortDefinition()._equals(t._sortDefinition()))&&(this._fieldDefinition()._equals(t._fieldDefinition())&&this._aggregate()==t._aggregate()))))},u}(h._LegendDefinition);h._ItemizedValueLegendDefinition=t}(c.models||(c.models={}))}(dv||(dv={})),function(s){!function(r){"use strict";var t=function(n){function o(t,e){var i=n.call(this)||this;return i.__fieldDefinition=t,i.__aggregate=e,i}return __extends(o,n),o._parse=function(t,e){if("string"==typeof t.field){var i=r._NumberFieldDefinition._parse(t.field,e);if(null!=i)return new o(i,null==t.aggregate?s.Aggregate.List:t.aggregate)}return null},o.prototype._fieldDefinition=function(){return this.__fieldDefinition},o.prototype._aggregate=function(){return this.__aggregate},o.prototype._name=function(){return this._fieldDefinition()._field()._name()},o.prototype._toItem=function(t){var e=this._aggregate();return e!=s.Aggregate.List?this._fieldDefinition()._field()._aggregate(t,e):this._fieldDefinition()._field()._toItem(t)},o.prototype._equals=function(t){return t instanceof o&&(this._fieldDefinition()._equals(t._fieldDefinition())&&this._aggregate()==t._aggregate())},o}(r._LegendDefinition);r._LinearLegendDefinition=t}(s.models||(s.models={}))}(dv||(dv={})),function(r){!function(t){"use strict";var e=function(i){function o(t){var e=i.call(this)||this;return e._optionFieldInfo=t,e}return __extends(o,i),o._parse=function(t,e){if(null==t.field)return null;var i=t.field.split(/\s*[>]\s*/);if(i[0]!=r.__Constant_Core_Color_Field_VALUESNAME)return null;var n=i[1];return null!=n&&null!=e[n]?new o(e[n]):new o},o.prototype._name=function(){return""},o.prototype._equals=function(t){return this==t||t instanceof o},o}(t._LegendDefinition);t._ValuesNameLegendDefinition=e}(r.models||(r.models={}))}(dv||(dv={})),function(t){!function(t){"use strict";var e=function(){function t(t){this.__order=t}return t.prototype._order=function(){return this.__order},t.prototype._equals=function(t){return this==t||null!=t&&this._order()==t._order()},t}();t._SortDefinition=e}(t.models||(t.models={}))}(dv||(dv={})),function(t){!function(t){"use strict";var e=function(n){function o(t,e){var i=n.call(this,e)||this;return i.__field=t,i}return __extends(o,n),o._parse=function(t,e){if(null==t||null==t.field||null==t.order)return null;var i=e[t.field];return null==i?null:new o(i,t.order)},o.prototype._field=function(){return this.__field},o.prototype._equals=function(t){if(this==t)return!0;if(null==t)return!1;if(t instanceof o){if(null==this._field()){if(null!=t._field())return!1}else if(!this._field()._equals(t._field()))return!1;return n.prototype._equals.call(this,t)}return!1},o}(t._SortDefinition);t._FieldSortDefinition=e}(t.models||(t.models={}))}(dv||(dv={})),function(t){!function(t){"use strict";var e=function(e){function i(t){return e.call(this,t)||this}return __extends(i,e),i._parse=function(t){return null==t?null:new i(t)},i}(t._SortDefinition);t._SimpleSortDefinition=e}(t.models||(t.models={}))}(dv||(dv={})),function(i){!function(t){"use strict";var e=function(){function t(t){this.__filter=null,this.__excludeNulls=t,this._excludeNulls()&&(this.__filter=i.plugins._Plugins._filter("ValueEncodingExcludeNulls"))}return t.prototype._excludeNulls=function(){return this.__excludeNulls},t.prototype._filter=function(){return this.__filter},t}();t._ValueDefinition=e}(i.models||(i.models={}))}(dv||(dv={})),function(t){!function(t){"use strict";var e=function(n){function o(t,e){var i=n.call(this,e)||this;return i.__dimensionDefinition=t,i}return __extends(o,n),Object.defineProperty(o.prototype,"name",{get:function(){return null},enumerable:!0,configurable:!0}),o.prototype._dimensionDefinition=function(){return this.__dimensionDefinition},o.prototype._toItem=function(t){return null},o.prototype._toValue=function(t){return 0},o.prototype._equals=function(t){if(this==t)return!0;if(t instanceof o){if(this.name!=t.name)return!1;var e=this._dimensionDefinition(),i=t._dimensionDefinition();if(e&&i){if(!e._equals(i))return!1}else if(e||i)return!1;return!0}return!1},o}(t._ValueDefinition);t._CartesianValueDefinition=e}(t.models||(t.models={}))}(dv||(dv={})),function(a){!function(s){"use strict";var t=function(o){function r(t,e,i){var n=o.call(this,i)||this;return n.__fieldDefinition=t,n._aggregate=e,n}return __extends(r,o),r._parse=function(t,e){if(null==t.field)return null;if("string"==typeof t.field){var i=t.field.split(",");if(0<i.length){var n=s._FieldDefinition._parse(i[0],e);if(null!=n)return new r(n,null==t.aggregate?a.Aggregate.Sum:t.aggregate,null!=t.excludeNulls&&t.excludeNulls)}}return null},r.prototype._fieldDefinition=function(){return this.__fieldDefinition},Object.defineProperty(r.prototype,"name",{get:function(){return this._fieldDefinition()._field()._name()},enumerable:!0,configurable:!0}),r.prototype._toItem=function(t){return this._aggregate!=a.Aggregate.List?this._fieldDefinition()._field()._aggregate(t,this._aggregate):this._fieldDefinition()._field()._toItem(t)},r.prototype._toValue=function(t){return this._aggregate!=a.Aggregate.List?this._fieldDefinition()._field()._aggregate(t,this._aggregate):this._fieldDefinition()._field()._toValue(t)},r.prototype._equals=function(t){return this==t||t instanceof r&&(this._fieldDefinition()._equals(t._fieldDefinition())&&this._aggregate==t._aggregate)},r}(s._ValueDefinition);s._FieldValueDefinition=t}(a.models||(a.models={}))}(dv||(dv={})),function(l){!function(a){"use strict";var t=function(r){function s(t,e,i,n){var o=r.call(this,t,n)||this;return o.__fieldDefinition=e,o._aggregate=i,o}return __extends(s,r),s._parse=function(t,e,i){if("string"==typeof t.field){var n=t.field.split(",");if(null==i)if(1<n.length){var o=null;if(null!=(r=a._FieldDefinition._parse(n[0],e))&&(o=new a._FieldDimensionDefinition(r)),null!=(r=a._FieldDefinition._parse(n[1],e)))return new s(o,r,l.Aggregate.List,null!=t.excludeNulls&&t.excludeNulls)}else{var r;if(null!=(r=a._FieldDefinition._parse(n[0],e)))return new s(null,r,null==t.aggregate?l.Aggregate.Sum:t.aggregate,null!=t.excludeNulls&&t.excludeNulls)}else if(0<n.length)if(null!=(r=a._FieldDefinition._parse(n[0],e)))return new s(i,r,null==t.aggregate?l.Aggregate.Sum:t.aggregate,null!=t.excludeNulls&&t.excludeNulls)}return null},s.prototype._fieldDefinition=function(){return this.__fieldDefinition},Object.defineProperty(s.prototype,"name",{get:function(){return this._fieldDefinition()._field()._name()},enumerable:!0,configurable:!0}),s.prototype._toItem=function(t){return this._aggregate!=l.Aggregate.List?this._fieldDefinition()._field()._aggregate(t,this._aggregate):this._fieldDefinition()._field()._toItem(t)},s.prototype._toValue=function(t){return this._aggregate!=l.Aggregate.List?this._fieldDefinition()._field()._aggregate(t,this._aggregate):this._fieldDefinition()._field()._toValue(t)},s.prototype._equals=function(t){return t instanceof s&&(this._fieldDefinition()._equals(t._fieldDefinition())&&this._aggregate==t._aggregate)},s}(a._CartesianValueDefinition);a._AggregateCartesianValueDefinition=t}(l.models||(l.models={}))}(dv||(dv={})),function(t){!function(a){"use strict";var t=function(r){function s(t,e,i,n){var o=r.call(this,t,n)||this;return o._lowerFieldDefinition=e,o._upperFieldDefinition=i,o.__name=e._field()._name()+"-"+i._field()._name(),o}return __extends(s,r),s._parse=function(t,e,i){if("object"==typeof t.field){var n=null;if(null!=t.field.lower&&"string"==typeof t.field.lower)null!=(o=a._DateFieldDefinition._parse(t.field.lower,e))&&(n=o);var o,r=null;if(null!=t.field.upper&&"string"==typeof t.field.upper)null!=(o=a._DateFieldDefinition._parse(t.field.upper,e))&&(r=o);if(null!=n&&null!=r)return new s(i,n,r,null!=t.excludeNulls&&t.excludeNulls)}return null},Object.defineProperty(s.prototype,"name",{get:function(){return this.__name},enumerable:!0,configurable:!0}),s.prototype._dimensionDefinition=function(){return r.prototype._dimensionDefinition.call(this)},s.prototype._toItem=function(t){for(var e=null,i=null,n=0,o=t;n<o.length;n++){var r=o[n],s=this._lowerFieldDefinition._field()._parse(r[this._lowerFieldDefinition._field()._name()]);null!=s&&(null==i||i.valueOf()>s.valueOf())&&(i=s);var a=this._upperFieldDefinition._field()._parse(r[this._upperFieldDefinition._field()._name()]);null!=a&&(null==e||e.valueOf()<a.valueOf())&&(e=a)}return{upper:e,lower:i}},s.prototype._toValue=function(t){var e=this._toItem(t);return e.upper.valueOf()-e.lower.valueOf()},s.prototype._equals=function(t){return t instanceof s&&(this._lowerFieldDefinition._equals(t._lowerFieldDefinition)&&this._upperFieldDefinition._equals(t._upperFieldDefinition))},s}(a._CartesianValueDefinition);a._AggregateDateRangeCartesianValueDefinition=t}(t.models||(t.models={}))}(dv||(dv={})),function(i){!function(a){"use strict";var t=function(r){function s(t,e,i,n){var o=r.call(this,t,n)||this;return o._lowerFieldDefinition=e,o._upperFieldDefinition=i,o.__name=e._field()._name()+"-"+i._field()._name(),o}return __extends(s,r),s._parse=function(t,e,i){if("object"==typeof t.field){var n=null;if(null!=t.field.lower&&"string"==typeof t.field.lower)null!=(o=a._NumberFieldDefinition._parse(t.field.lower,e))&&(n=o);var o,r=null;if(null!=t.field.upper&&"string"==typeof t.field.upper)null!=(o=a._NumberFieldDefinition._parse(t.field.upper,e))&&(r=o);if(null!=n&&null!=r)return new s(i,n,r,null!=t.excludeNulls&&t.excludeNulls)}return null},Object.defineProperty(s.prototype,"name",{get:function(){return this.__name},enumerable:!0,configurable:!0}),s.prototype._dimensionDefinition=function(){return r.prototype._dimensionDefinition.call(this)},s.prototype._toItem=function(t){var e=this._lowerFieldDefinition._field()._aggregate(t,i.Aggregate.Min);return{upper:this._upperFieldDefinition._field()._aggregate(t,i.Aggregate.Max),lower:e}},s.prototype._toValue=function(t){var e=this._lowerFieldDefinition._field()._aggregate(t,i.Aggregate.Min);return this._upperFieldDefinition._field()._aggregate(t,i.Aggregate.Max)-e},s.prototype._equals=function(t){return t instanceof s&&(this._lowerFieldDefinition._equals(t._lowerFieldDefinition)&&this._upperFieldDefinition._equals(t._upperFieldDefinition))},s}(a._CartesianValueDefinition);a._AggregateNumberRangeCartesianValueDefinition=t}(i.models||(i.models={}))}(dv||(dv={})),function(o){!function(t){"use strict";var e=function(){function n(){this.__proxy=this._createCalcSourceProxy()}return n.prototype.evaluate=function(t,e){o._isCalculationEngineExist()&&null!=this.__proxy&&this.__proxy.getCalcSourceModel().setFormulaByName(n.__FormulaName,e)},n.prototype._isIdentityExpression=function(t){return!1},n.prototype._getIdentityValue=function(t){},n.prototype._resultCallback=function(t){},n.prototype._createCalcSourceProxy=function(){return o._isCalculationEngineExist()?new(function(i){function t(t){var e=i.call(this,new GC.Spread.CalcEngine.CalcService)||this;return e.__evaluator=t,e.getCalcService().getSourceModel(e),e}return __extends(t,i),t.prototype.getParserContext=function(t,e,i){var a=this,n=new GC.Spread.CalcEngine.ParserContext(this,t,e||{},i),o=new GC.Spread.CalcEngine.TokenResolver(7e3);return o.resolveToken=function(t,e,i,n){var o=i[n],r=o.stringValue();if(0===o.type()&&0===o.subType()&&a.__evaluator._isIdentityExpression(r)){var s=new GC.Spread.CalcEngine.Expression(25);return s.value=r,s}},n.addResolver(o),n},t.prototype.getEvaluatorContext=function(t,e,i){var n=new GC.Spread.CalcEngine.EvaluateContext(this,t,e,i),o=this;return n.evaluate=function(t,e,i){return this._getIdentityValue(o,t.value)},n},t.prototype.getValueByName=function(t){return""},t.prototype.setValueByName=function(t,e){t==n.__FormulaName?this.__evaluator._resultCallback(e):o._assertDebug(function(){return!1})},t.prototype.getValue=function(t){return this.__evaluator._getIdentityValue(t)},t}(GC.Spread.CalcEngine.CalcSource))(this):null},n.__FormulaName="CONDITION",n}();t._ConditionExpressionEvaluator=e}(o.models||(o.models={}))}(dv||(dv={})),function(s){!function(t){"use strict";var e=function(){function t(t,e){this.__name=t,this.__type=e}return t.prototype._name=function(){return this.__name},t.prototype._type=function(){return this.__type},t.prototype._aggregate=function(t,e){var i=new s.core.collections.CollectionView(t);if(e==s.Aggregate.Sum||e==s.Aggregate.Average){for(var n=!0,o=0,r=t;o<r.length;o++){if(null!=r[o][this._name()]){n=!1;break}}if(n)return null}return i.getAggregate(e,this._name())},t.prototype._equals=function(t){return this==t||null!=t&&(t._type()==this._type()&&this._name()==t._name())},t}();t._FieldInfo=e}(s.models||(s.models={}))}(dv||(dv={})),function(t){!function(r){"use strict";var t=function(n){function o(t,e){var i=n.call(this,t.as,e._type())||this;return i.__option=t,i.__field=e,i}return __extends(o,n),o._parse=function(t,e){if(null==t.field)return null;if(t.bin&&null!=t.as&&0<t.as.length&&null!=t.field&&0<t.field.length){var i=e[t.field];if(null!=i&&i instanceof r._DateFieldInfo)return new o(t,i)}return null},o.prototype._minimum=function(t){return this.__field._minimum(t)},o.prototype._maximum=function(t){return this.__field._maximum(t)},o.prototype._values=function(){return this.__field._values()},o.prototype._option=function(){return this.__option},o.prototype._originalField=function(){return this.__field},o.prototype._toItem=function(t){return this.__field._toItem(t)},o.prototype._compare=function(t,e){return this.__field._compare(t,e)},o.prototype._toValue=function(t){return this.__field._toValue(t)},o.prototype._equals=function(t){if(this==t)return!0;if(null==t)return!1;if(!(t instanceof o))return!1;if(null==this._originalField()){if(null!=t._originalField())return!1}else if(!this._originalField()._equals(t._originalField()))return!1},o}(r._FieldInfo);r._BinDateFieldInfo=t}(t.models||(t.models={}))}(dv||(dv={})),function(s){!function(r){"use strict";var t=function(n){function o(t,e){var i=n.call(this,t.as,e._type())||this;return i.__option=t,i.__field=e,i}return __extends(o,n),o._parse=function(t,e){if(null==t.field)return null;if(null!=t.as&&0<t.as.length&&null!=t.field&&0<t.field.length){var i=e[t.field];if(null!=i&&i instanceof r._NumberFieldInfo)return new o(t,i)}return null},o.prototype._minimum=function(t){if(arguments.length<=0)return this._originalField()._minimum();this._originalField()._minimum(t)},o.prototype._maximum=function(t){if(arguments.length<=0)return this._originalField()._maximum();this._originalField()._maximum(t)},o.prototype._values=function(){return this.__field._values()},o.prototype._option=function(){return this.__option},o.prototype._originalField=function(){return this.__field},o.prototype._toItem=function(t){return this.__field._toItem(t)},o.prototype._compare=function(t,e){return this.__field._compare(t,e)},o.prototype._toValue=function(t){return this.__field._toValue(t)},o.prototype._toSteps=function(t,e){var i=this._option().bin;if("boolean"==typeof i&&i)return this._createStepsAutomatically(this._minimum(),this._maximum());if(i instanceof s.options._BinOption){var n=i.steps;return Array.isArray(n)&&0<n.length?this._createStepsByStepsOption(this._minimum(),this._maximum(),n):this._createStepsAutomatically(this._minimum(),this._maximum())}return[]},o.prototype._equals=function(t){if(this==t)return!0;if(null==t)return!1;if(!(t instanceof o))return!1;if(null==this._originalField()){if(null!=t._originalField())return!1}else if(!this._originalField()._equals(t._originalField()))return!1},o.prototype._createStepsByStepsOption=function(t,e,i){var n=[],o=[];o=o.concat(i).sort(function(t,e){return null==t?1:null==e?-1:e<t?1:t<e?-1:0});var r=t;n.push(r);for(var s=0,a=i;s<a.length;s++){var l=a[s];r<l&&(n.push(l),r=l)}return r<e&&n.push(e),n},o.prototype._createStepsAutomatically=function(t,e,i){return void 0===i&&(i=4),new r._NumberTicksGenerator(t,e,!0,i)._ticks()},o}(r._FieldInfo);r._BinNumberFieldInfo=t}(s.models||(s.models={}))}(dv||(dv={})),function(r){!function(t){"use strict";var e=function(n){function t(t,e){void 0===e&&(e=[]);var i=n.call(this,t,r.core.DataType.Boolean)||this;return i.__values=e,i}return __extends(t,n),t.prototype._minimum=function(t){if(arguments.length<=0)return 0;r._assertDebug(function(){return!1})},t.prototype._maximum=function(t){if(arguments.length<=0)return this._values()?this._values().length-1:0;r._assertDebug(function(){return!1})},t.prototype._values=function(){return this.__values},t.prototype._toItem=function(t){if(null==t)return null;if(Array.isArray(t))for(var e=0,i=t;e<i.length;e++){var n=i[e];if(null!=(o=r.core.asBoolean(n[this._name()],!0)))return o}else{if(void 0===t[this._name()])return;var o;if(null!=(o=r.core.asBoolean(t[this._name()],!0)))return o}return null},t.prototype._compare=function(t,e){var i=null;null!=t&&(i=r.core.asBoolean(t[this._name()],!0));var n=null;return null!=e&&(n=r.core.asBoolean(e[this._name()],!0)),i==n?0:1==i?1:-1},t.prototype._toValue=function(t){var e=this._toItem(t);return null==e?null:this._values().indexOf(e)},t}(t._FieldInfo);t._BooleanFieldInfo=e}(r.models||(r.models={}))}(dv||(dv={})),function(r){!function(t){"use strict";var e=function(o){function t(t,e,i){void 0===e&&(e=[]);var n=o.call(this,t,r.core.DataType.Date)||this;return n.__dateParser=i,n.__values=e,n}return __extends(t,o),t.prototype._minimum=function(t){if(arguments.length<=0)return this.__minimum;this.__minimum=t},t.prototype._maximum=function(t){if(arguments.length<=0)return this.__maximum;this.__maximum=t},t.prototype._values=function(){return this.__values},t.prototype._dateParser=function(){return this.__dateParser},t.prototype._parse=function(t){return"string"==typeof t?this._dateParser()._parseDate(t):t instanceof Date?t:null},t.prototype._toItem=function(t){if(null==t)return null;if(Array.isArray(t))for(var e=0,i=t;e<i.length;e++){var n=i[e];if(null!=(o=this._parse(n[this._name()])))return o}else{if(void 0===t[this._name()])return;var o;if(null!=(o=this._parse(t[this._name()])))return o}return null},t.prototype._compare=function(t,e){var i=null;null!=t&&(i=this._parse(t[this._name()]));var n=null;return null!=e&&(n=this._parse(e[this._name()])),i==n?0:null==i?-1:null==n?1:i.valueOf()-n.valueOf()},t.prototype._toValue=function(t){var e=this._toItem(t);return null==e?null:e.valueOf()},t}(t._FieldInfo);t._DateFieldInfo=e}(r.models||(r.models={}))}(dv||(dv={})),function(t){!function(t){"use strict";var e=function(e){function t(t){return e.call(this,t,void 0)||this}return __extends(t,e),t.prototype._minimum=function(t){return NaN},t.prototype._maximum=function(t){return NaN},t.prototype._values=function(){return this.__values},t.prototype._aggregate=function(t,e){return null},t.prototype._toItem=function(t){if(void 0!==t[this._name()])return null},t.prototype._compare=function(t,e){return 0},t.prototype._toValue=function(t){return null},t}(t._FieldInfo);t._NullFieldInfo=e}(t.models||(t.models={}))}(dv||(dv={})),function(r){!function(t){"use strict";var e=function(n){function t(t,e){void 0===e&&(e=[]);var i=n.call(this,t,r.core.DataType.Number)||this;return i.__values=e,i}return __extends(t,n),t.prototype._minimum=function(t){if(arguments.length<=0)return this.__minimum;this.__minimum=t},t.prototype._maximum=function(t){if(arguments.length<=0)return this.__maximum;this.__maximum=t},t.prototype._values=function(){return this.__values},t.prototype._toItem=function(t){if(null==t)return null;if(Array.isArray(t))for(var e=0,i=t;e<i.length;e++){var n=i[e];if(null!=(o=r.core.asNumber(n[this._name()],!0)))return o}else{if(void 0===t[this._name()])return;var o;if(null!=(o=r.core.asNumber(t[this._name()],!0)))return o}return null},t.prototype._compare=function(t,e){var i=null;null!=t&&(i=r.core.asNumber(t[this._name()],!0));var n=null;return null!=e&&(n=r.core.asNumber(e[this._name()],!0)),i==n?0:null==i?-1:null==n?1:i-n},t.prototype._toValue=function(t){return this._toItem(t)},t}(t._FieldInfo);t._NumberFieldInfo=e}(r.models||(r.models={}))}(dv||(dv={})),function(r){!function(t){"use strict";var e=function(n){function t(t,e){void 0===e&&(e=[]);var i=n.call(this,t,r.core.DataType.String)||this;return i.__values=e,i}return __extends(t,n),t.prototype._minimum=function(t){if(arguments.length<=0)return 0;r._assertDebug(function(){return!1})},t.prototype._maximum=function(t){if(arguments.length<=0)return this._values?this._values.length-1:0;r._assertDebug(function(){return!1})},t.prototype._values=function(){return this.__values},t.prototype._toItem=function(t){if(null==t)return null;if(Array.isArray(t))for(var e=0,i=t;e<i.length;e++){var n=i[e];if(null!=(o=r.core.asString(n[this._name()],!0)))return o}else{if(void 0===t[this._name()])return;var o;if(null!=(o=r.core.asString(t[this._name()],!0)))return o}return null},t.prototype._compare=function(t,e){var i=null;null!=t&&(i=r.core.asString(t[this._name()],!0));var n=null;return null!=e&&(n=r.core.asString(e[this._name()],!0)),i==n?0:null==i?-1:null==n?1:i.localeCompare(n)},t.prototype._toValue=function(t){var e=this._toItem(t);return null==e?null:this._values().indexOf(e)},t}(t._FieldInfo);t._StringFieldInfo=e}(r.models||(r.models={}))}(dv||(dv={})),function(r){!function(o){"use strict";o._toColorFromOption=function(t){if("string"==typeof t)return t;if(null!=t){if(t.type==r.GradientType.Linear){var e=t;return new o.LinearGradientColor(e.angle,e.colorStops)}if(t.type==r.GradientType.Radial){e=t;var i=new r.core.Point(e.x0,e.y0),n=new r.core.Point(e.x1,e.y1);return new o.RadialGradientColor(i,e.r0,n,e.r1,e.colorStops)}}r._assertDebug(function(){return!0})}}(r.models||(r.models={}))}(dv||(dv={})),function(t){t.models||(t.models={})}(dv||(dv={})),function(t){t.models||(t.models={})}(dv||(dv={})),function(t){!function(t){"use strict";var e=function(){function t(t,e){this.__colors=[],this.__degree=t,this.__colors=e}return Object.defineProperty(t.prototype,"degree",{get:function(){return this.__degree},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"colors",{get:function(){return this.__colors},enumerable:!0,configurable:!0}),t}();t.LinearGradientColor=e}(t.models||(t.models={}))}(dv||(dv={})),function(s){!function(t){"use strict";var e=function(){function t(t,e,i,n,o){if(this.__colors=[],this.__start=t,this.__startRadius=e,this.__end=i,this.__endRadius=n,this.__colors=o,0==e&&0==n&&"transparent"!=o[o.length-1].color){var r=new s.options._ColorStopOption({color:"transparent",stop:1});this.colors.push(r)}}return Object.defineProperty(t.prototype,"start",{get:function(){return this.__start},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"startRadius",{get:function(){return this.__startRadius},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"end",{get:function(){return this.__end},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"endRadius",{get:function(){return this.__endRadius},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"colors",{get:function(){return this.__colors},enumerable:!0,configurable:!0}),t}();t.RadialGradientColor=e}(s.models||(s.models={}))}(dv||(dv={})),function(t){t.models||(t.models={})}(dv||(dv={})),function(n){!function(t){"use strict";var e=function(){function _(t,e){this.__renderMethod=n.RenderMethod.SVG,this.__hostElement=t,this.__renderMethod=e,null!=t&&null!=e&&(this.__render=this._createRenderEngine(t,e))}return _._fromLayer=function(t){var e=new _(t._hostElement(),t._renderMethod());return this._copyStyle(t,e),e},_._copyStyle=function(t,e){var i=t._render(),n=e._render();n.fillOpacity=i.fillOpacity,n.strokeOpacity=i.strokeOpacity,n.fill=i.fill,n.stroke=i.stroke,n.strokeWidth=i.strokeWidth,n.strokeDasharray=i.strokeDasharray,n.textFill=i.textFill,n.fontSize=i.fontSize,n.fontFamily=i.fontFamily,n.fontWeight=i.fontWeight,n.fontStyle=i.fontStyle,n.textDecoration=i.textDecoration},_.prototype._render=function(){return this.__render},_.prototype._hostElement=function(){return this.__hostElement},_.prototype._renderMethod=function(t){if(0===arguments.length)return this.__renderMethod;var e=n.core.asEnum(t,n.RenderMethod,!0);null!=e&&e!=this.__renderMethod&&(this.__renderMethod=e,null!=this._render()&&this._hostElement().removeChild(this._render().element),this.__render=this._createRenderEngine(this._hostElement(),this._renderMethod()))},_.prototype._devicePixelRatio=function(t){if(0===arguments.length)return this._render().devicePixelRatio;isNaN(t)||null==t||this._render().devicePixelRatio==t||(this._renderMethod()==n.RenderMethod.Canvas&&(null!=this._render()&&this._hostElement().removeChild(this._render().element),this.__render=this._createRenderEngine(this._hostElement(),this._renderMethod())),this._render().devicePixelRatio=t)},_.prototype.copyTo=function(t,e,i,n,o,r,s,a,l){_.copy(this,t,e,i,n,o,r,s,a,l)},_.copy=function(t,e,i,n,o,r,s,a,l,_){var u=t._render().element,h=e._render().element;u instanceof HTMLCanvasElement&&h instanceof HTMLCanvasElement&&(0<o&&0<r&&0<l&&0<_&&h.getContext("2d").drawImage(u,i,n,o,r,s,a,l,_))},_.prototype._createRenderEngine=function(t,e){if(e!=n.RenderMethod.SVG)return e==n.RenderMethod.Canvas?n._Render._renderFromType(t,"Canvas"):(n._assertDebug(function(){return!1}),null);var i=n._Render._renderFromType(t,"SVG");return i.strokeWidth=null,i},_.prototype.clone=function(){var t=new _(null,null);return t.__renderMethod=this.__renderMethod,t.__hostElement=this.__hostElement,t.__render=this.__render,t},_}();t._Layer=e}(n.models||(n.models={}))}(dv||(dv={})),function(t){!function(t){"use strict";var e=function(r){function t(t,e,i,n){var o=r.call(this,t,e,i)||this;return o.__trellisFields=n,o}return __extends(t,r),t.prototype._fields=function(){return this.__trellisFields},t.prototype._analyseItems=function(t){return null},t}(t._DataSource);t._TrellisCellDataSource=e}(t.models||(t.models={}))}(dv||(dv={})),function(f){!function(p){"use strict";var t=function(){function t(t,e){this.__columnsData=t,this.__rowsData=e}return t._create=function(t,e){if(e){var i=e._columnFieldDefinitions(),n=e._rowFieldDefinitions(),o=this._sort(t,e._columnSortDefinition(),i),r=this._sort(t,e._rowSortDefinition(),n),s=this._createGroup(o,i),a=this._createGroup(r,n),l=new p._TrellisColumnsData(s.groups,s.nodes),_=new p._TrellisRowsData(a.groups,a.nodes);return new p._TrellisData(l,_)}},t._createGroup=function(t,e){for(var i=new f.core.collections.CollectionView(t),n=0;n<e.length;n++){var o=e[n],r=new p._FieldDefinitionGroupDescription(o);i.groupDescriptions.push(r)}var s=[],a=[],l=0;if(i.groups&&0<i.groups.length)for(var _=0,u=i.groups;_<u.length;_++){var h=u[_],c=this._createNode(l,h,a);s.push(c),l=c._end+1}else a.push(new p._TrellisNode(t,l));return{groups:s,nodes:a}},t._createNode=function(t,e,i){var n=null,o=f.plugins._Plugins._stringFormatting("Default");if(o&&e._gd instanceof p._FieldDefinitionGroupDescription){var r=e._gd._definition._format();n=o.format(r,e.name)}else n=""+e.name;if(null!=e.groups&&0<e.groups.length){for(var s=[],a=t,l=0,_=e.groups;l<_.length;l++){var u=_[l],h=this._createNode(a,u,i);s.push(h),a=h._end+1}return new p._TrellisGroup(n,e.items,s,t,a-1)}return i.push(new p._TrellisNode(e.items,t)),new p._TrellisGroup(n,e.items,[],t,t)},t._sort=function(t,e,i){if(!e)return t;var n=t.slice();if(e instanceof p._FieldSortDefinition){var o=e;n.sort(function(t,e){return o._field()._compare(t,e)})}else e instanceof p._SimpleSortDefinition&&i&&i[0]&&n.sort(function(t,e){return i[0]._field()._compare(t,e)});return e._order()==f.OrderType.Descending&&n.reverse(),n},t.prototype._columnsData=function(){return this.__columnsData},t.prototype._rowsData=function(){return this.__rowsData},t}();p._TrellisData=t;var e=function(){function t(t,e){this.__groups=t,this.__nodes=e}return t.prototype._groups=function(){return this.__groups},t.prototype._nodes=function(){return this.__nodes},t.prototype._columnCount=function(){return this.__nodes.length},t}();p._TrellisColumnsData=e;var i=function(){function t(t,e){this.__groups=t,this.__nodes=e}return t.prototype._groups=function(){return this.__groups},t.prototype._nodes=function(){return this.__nodes},t.prototype._rowCount=function(){return this.__nodes.length},t}();p._TrellisRowsData=i}(f.models||(f.models={}))}(dv||(dv={})),function(i){!function(t){"use strict";var e=function(t,e,i,n,o){this._value=t,this._items=e,this._children=i,this._start=n,this._end=o};(i.models||(i.models={}))._TrellisGroup=e}()}(dv||(dv={})),function(t){!function(t){"use strict";var e=function(){function t(t,e){this.__items=t,this.__index=e}return t.prototype._index=function(){return this.__index},t.prototype._items=function(){return this.__items},t.prototype._contains=function(t){return 0<=this.__items.indexOf(t)},t}();t._TrellisNode=e}(t.models||(t.models={}))}(dv||(dv={})),function(y){!function(g){"use strict";var t=function(r){function d(t,e,i,n){var o=r.call(this)||this;return o.__rowFieldDefinitions=t,o.__columnFieldDefinitions=e,o.__rowSortDefinition=i,o.__columnSortDefinition=n,o}return __extends(d,r),d._parse=function(t,e){var i=t.field.split(","),n=[];if(0<i.length)for(var o=0,r=i[0].split(">");o<r.length;o++){var s=r[o];null!=(u=g._FieldDefinition._parse(s,e))&&n.push(u)}var a=[];if(1<i.length)for(var l=0,_=i[1].split(">");l<_.length;l++){var u;s=_[l];null!=(u=g._FieldDefinition._parse(s,e))&&a.push(u)}if(0<n.length||0<a.length){var h=void 0,c=t.rowSort;c instanceof y.options._SortEncodingOption?h=g._FieldSortDefinition._parse(c,e):"number"==typeof c&&(h=g._SimpleSortDefinition._parse(c));var p=void 0,f=t.columnSort;return f instanceof y.options._SortEncodingOption?p=g._FieldSortDefinition._parse(f,e):"number"==typeof f&&(p=g._SimpleSortDefinition._parse(f)),new d(a,n,h,p)}return null},d.prototype._type=function(){return d.__name},d.prototype._rowFieldDefinitions=function(){return this.__rowFieldDefinitions},d.prototype._columnFieldDefinitions=function(){return this.__columnFieldDefinitions},d.prototype._rowSortDefinition=function(){return this.__rowSortDefinition},d.prototype._columnSortDefinition=function(){return this.__columnSortDefinition},d.__name="Trellis",d}(g._LayoutDefinition);g._TrellisLayoutDefinition=t}(y.models||(y.models={}))}(dv||(dv={})),function(t){t.models||(t.models={})}(dv||(dv={})),function(t){t.models||(t.models={})}(dv||(dv={})),function(t){t.models||(t.models={})}(dv||(dv={})),function(t){t.models||(t.models={})}(dv||(dv={})),function(t){t.models||(t.models={})}(dv||(dv={})),function(t){t.models||(t.models={})}(dv||(dv={})),function(t){t.models||(t.models={})}(dv||(dv={})),function(i){!function(e){"use strict";var t=function(){function t(t,e){this.__legendManager=t,this.__option=e||new i.options._LegendOption({})}return t.prototype._sortItem=function(){},t.prototype._title=function(){return""},t.prototype._visible=function(t){if(arguments.length<=0)return this.__visible;this.__visible=t},t.prototype._legendManager=function(){return this.__legendManager},t.prototype._option=function(){return this.__option},t.prototype._plotAreaView=function(){var t=this._legendManager();return t instanceof e._PlotLegendManager?t._plotView()._plotAreaView():t instanceof e._PlotAreaLegendManager?t._plotArea():null},t}();e._Legend=t}(i.models||(i.models={}))}(dv||(dv={})),function(t){"use strict";var e=function(){function t(t){if(this._options=[],this.index=0,Array.isArray(t))for(var e=0,i=t;e<i.length;e++){var n=i[e];this._options.push(n)}}return t.prototype.getOptionByType=function(t){for(var e=0;e<this._options.length;++e)if(this._options[e].type==t)return{option:this._options.splice(e,1)[0],index:this.index++};return{option:null,index:this.index++}},t}();t._LegendOPtionProvider=e}(dv||(dv={})),function(l){!function(n){"use strict";var t=function(){function t(t){l._assertDebug(function(){return null!=t}),this.__plotArea=t}return t.prototype._plotArea=function(){return this.__plotArea},t.prototype._valuesNameLegend=function(){return this.__valuesNameLegend},t.prototype._relatedSeriesListFromLegendItem=function(t){for(var e=[],i=0,n=this._plotArea()._plotViews();i<n.length;i++){var o=n[i];if(o instanceof l._CartesianPlotView)for(var r=0,s=o._relatedSeriesListFromLegendItem(t);r<s.length;r++){var a=s[r];e.push(a)}}return e},t.prototype._addPlot=function(t,e){if(null!=t){if(null==this.__valuesNameLegend){var i=this.__plotArea.legendOPtionProvider.getOptionByType(l.LegendType.Color);this.__valuesNameLegend=new n._ItemizedSeriesLegend(this,i.option),this.__valuesNameLegend._index=i.index}this.__valuesNameLegend._addPlot(t,e)}},t.prototype._applySeries=function(t){null!=t&&(null==this.__seriesLegend&&(this.__seriesLegend=new n._ItemizedSeriesLegend(this,new l.options._LegendOption({}))),this.__seriesLegend._applySeries(t))},t.prototype._findSeriesLegendItem=function(t){if(null!=t){var e=null;if(null!=this.__seriesLegend&&null!=(e=this.__seriesLegend._findLegendItem(t)))return e;if(null!=this.__valuesNameLegend&&null!=(e=this.__valuesNameLegend._findLegendItem(t)))return e}return null},t}();n._PlotAreaLegendManager=t}(l.models||(l.models={}))}(dv||(dv={})),function(s){!function(r){"use strict";var t=function(){function t(t){this.__legends=[],s._assertDebug(function(){return null!=t}),this.__plotView=t}return t.prototype._plotView=function(){return this.__plotView},t.prototype._legends=function(){return this.__legends},t.prototype._relatedPointsFromLegendItem=function(t){return this._plotView()._relatedPointsFromLegendItem(t)},t.prototype._apply=function(t,e,i){if(void 0===i&&(i=null),null==t)return null;var n=this._findLegend(t,e);if(null==n){if(t instanceof r._ItemizedValueLegendDefinition){var o=this._legendOption(e);(n=new r._ItemizedValuePointLegend(this,t,o.option,i))._index=o.index}else if(t instanceof r._ItemizedRangeLegendDefinition){o=this._legendOption(e);(n=new r._ItemizedRangePointLegend(this,t,o.option,i))._index=o.index}else if(t instanceof r._BinItemizedRangeLegendDefinition){o=this._legendOption(e);(n=new r._ItemizedRangePointLegend(this,t,o.option,i))._index=o.index}else if(t instanceof r._LinearLegendDefinition&&e==s.LegendType.Color){o=this._legendOption(e);(n=new r._LinearColorPointLegend(this,t,o.option))._index=o.index}n&&this._legends().push(n)}return null!=i&&n._visible(i),n},t.prototype._findLegend=function(t,e){if(null==t)return null;for(var i=0,n=this._legends();i<n.length;i++){var o=n[i];if(o instanceof r._ItemizedValuePointLegend&&o._definition()._equals(t))return o;if(o instanceof r._ItemizedRangePointLegend&&o._definition()._equals(t))return o;if(o instanceof r._LinearColorPointLegend&&e==s.LegendType.Color&&o._definition()._equals(t))return o}return null},t.prototype._legendOption=function(t){return this._plotView()._plotAreaView().legendOPtionProvider.getOptionByType(t)},t.prototype.applyOverlayLegend=function(t){if(t&&0<t.length&&!this.__overlayLegend){var e=this._legendOption(s.LegendType.Overlay);this.__overlayLegend=new r._OverlayLegend(this,e.option,t),this.__overlayLegend._index=e.index,this._legends().push(this.__overlayLegend)}},t.prototype.applyHierachicalPointLegend=function(t,e){if(t&&0<t.children.length&&null!=t._plot()._colorDefinition()){var i=this._legendOption(s.LegendType.Color),n=new r._HierachicalPointLegend(this,i.option,t,e);n._index=i.index,this._legends().push(n)}},t}();r._PlotLegendManager=t}(s.models||(s.models={}))}(dv||(dv={})),function(i){!function(t){"use strict";var e=function(n){function t(t,e){var i=n.call(this,t,e)||this;return i.__items=[],i}return __extends(t,n),t.prototype._defaultFormat=function(){return null},t.prototype._applyOptions=function(){for(var t=this._option().items,e=0;e<this.__items.length;++e){var i=void 0;t&&t[e]&&(i=t[e]),this.__items[e]._applyOption(i)}},t.prototype._items=function(){return this.__items},t.prototype._sortItem=function(){switch(this._option().sortOrder){case i.SortOrder.Reversed:this.__items.reverse();break;case i.SortOrder.Ascending:this.__items.sort(function(t,e){return t._title()>e._title()?1:-1});break;case i.SortOrder.Descending:this.__items.sort(function(t,e){return t._title()<e._title()?1:-1})}},t}(t._Legend);t._ItemizedLegend=e}(i.models||(i.models={}))}(dv||(dv={})),function(n){!function(e){"use strict";var t=function(){function t(t,e,i){this.__legend=t,this.__title=e,null!=i&&(this.__option=i)}return t.prototype._defaultFormat=function(){return this.__legend._defaultFormat()},t.prototype._contentSite=function(){return new e._LegendItemContentSite(this,this._defaultFormat())},t.prototype._applyOption=function(t){null==t||null==(this.__option=t).text?null!=this._contentSite()&&(this.__title=this._generateTitle(this._contentSite())):this.__title=t.text},t.prototype._option=function(t){if(arguments.length<=0)return this.__option;this.__option=t},t.prototype._generateTitle=function(t){var e=n.plugins._Plugins._dataContentProvider("Default");if(null!=e){var i=e.toLines(t);if(null!=i)return i.join("")}return this.__title},t.prototype._title=function(){return this.__title},t.prototype._size=function(t){if(arguments.length<=0)return this.__size;this.__size=t},t.prototype._color=function(t){if(arguments.length<=0)return this.__color;this.__color=t},t.prototype._shape=function(t){if(arguments.length<=0)return this.__shape;this.__shape=t},t.prototype._seriesColor=function(t){if(arguments.length<=0)return this.__seriesColor;this.__seriesColor=t},t.prototype._legend=function(){return this.__legend},t}();e._LegendItem=t}(n.models||(n.models={}))}(dv||(dv={})),function(t){!function(t){"use strict";var e=function(){function t(t,e){this.__item=t,this.__format=e,this.template=this._template()}return t.prototype._item=function(){return this.__item},t.prototype._defaultTemplate=function(){return"{value}"},t.prototype._template=function(){var t=this.__item._option();return t&&null!=t.template?t.template:this._defaultTemplate()},t.prototype.defaultProperty=function(t){return"value"},t.prototype.defaultFormat=function(t){return this.__format},t.prototype.fromToken=function(t,e){return"value"!=t?{value:null}:{value:this.__item._title()}},t}(),i=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return __extends(e,t),e.prototype._item=function(){return t.prototype._item.call(this)},e.prototype._defaultTemplate=function(){return"{from}-{to}"},e.prototype.fromToken=function(t,e){return"from"===t?{value:this._item()._range.start}:"to"===t?{value:this._item()._range.to}:{value:null}},e}(t._LegendItemContentSite=e);t._RangeLegendItemContentSite=i;var n=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return __extends(e,t),e.prototype._item=function(){return t.prototype._item.call(this)},e.prototype.fromToken=function(t,e){return"value"===t?{value:this._item().key}:{value:null}},e}(e);t._ValuePointLegendItemContentSite=n}(t.models||(t.models={}))}(dv||(dv={})),function(s){!function(t){"use strict";var e=function(){function t(){}return t.prototype._shape=function(t){if(arguments.length<=0)return this.__shape;this.__shape=t},t.prototype._seriesColor=function(t){if(arguments.length<=0)return this.__seriesColor;this.__seriesColor=t},t.prototype._style=function(t){if(arguments.length<=0)return this.__style;this.__style!=t&&(this.__style=t)},t.prototype._showSymbol=function(){return!0},t.prototype.render=function(t,e,i){var n=null;if(this.__style&&this.__style.symbolShape&&(n=this.__style.symbolShape),null==n&&(n=this._shape()),null!=n){var o=s.plugins._Plugins._symbol(n);if(null!=o)return o.color=this.color,void o.render(t,e,i)}var r=e.width<e.height?e.width/2:e.height/2;s._applyFillColor(t,this.color),s._applyStrokeColor(t,this.color),s._applyDataPointStyle(t,new s.options._DataPointStyleOption({strokeWidth:1})),s._applyDataPointSymbolStyle(t,this._style()),t.drawEllipse((e.right+e.left)/2,(e.top+e.bottom)/2,r,r)},t}();t._LegendSymbol=e}(s.models||(s.models={}))}(dv||(dv={})),function(t){!function(t){"use strict";var e=function(n){function t(t,e){var i=n.call(this,t,e._label())||this;return i.legend=t,i.overlayItemView=e,i}return __extends(t,n),t.prototype._style=function(){return this.legend._style()},t.prototype._title=function(){return n.prototype._title.call(this)},t.prototype._symbol=function(){return null==this.symbol&&(this.symbol=this.overlayItemView.getSymbol()),this.symbol},t}(t._LegendItem);t.__OverlayLegendItem=e}(t.models||(t.models={}))}(dv||(dv={})),function(a){!function(s){"use strict";var t=function(o){function t(t,e,i){var n=o.call(this,t,e)||this;return n.__overlayViews=i,n.createItems(),n}return __extends(t,o),t.prototype._title=function(){return null},t.prototype._legendManager=function(){return o.prototype._legendManager.call(this)},t.prototype._style=function(){return this._legendManager()._plotView()._option().config.style},t.prototype.createItems=function(){for(var t=0,e=this.__overlayViews;t<e.length;t++){var i=e[t];if(i instanceof a._CartesianOverlayView)for(var n=0,o=i._viewItems();n<o.length;n++){var r=o[n];null!=r._label()&&r._hasLegend()&&this._items().push(new s.__OverlayLegendItem(this,r))}}},t}(s._ItemizedLegend);s._OverlayLegend=t}(a.models||(a.models={}))}(dv||(dv={})),function(i){!function(t){"use strict";var e=function(r){function t(t,e,i,n){void 0===n&&(n=null);var o=r.call(this,t,i)||this;return o.__definition=e,null!=n&&o._visible(n),o}return __extends(t,r),t.prototype._defaultFormat=function(){return this.__definition._getFormat()},t.prototype._title=function(){var t=this._option()?i.core.asString(this._option().title,!0):null;return null==t&&(t=this._definition()._name()),t},t.prototype._legendManager=function(){return r.prototype._legendManager.call(this)},t.prototype._style=function(){return this._legendManager()._plotView()._option().config.style},t.prototype._definition=function(){return this.__definition},t}(t._ItemizedLegend);t._ItemizedPointLegend=e}(i.models||(i.models={}))}(dv||(dv={})),function(t){!function(e){"use strict";var t=function(i){function t(t,e){return i.call(this,t,e)||this}return __extends(t,i),t.prototype._style=function(){return this._legend()._style()},t.prototype._legend=function(){return i.prototype._legend.call(this)},t.prototype._symbol=function(){var t=this._legend()._legendManager()._plotView()._legendSymbol();return null==t&&(t=new e._LegendSymbol),t.color=this._color(),t._shape(this._shape()),t},t}(e._LegendItem);e._PointLegendItem=t}(t.models||(t.models={}))}(dv||(dv={})),function(i){!function(t){"use strict";var s=function(o){function t(t,e,i){var n=o.call(this,t,i)||this;return n._pointColor=e,n}return __extends(t,o),t.prototype._color=function(t){return this._pointColor},t.prototype._style=function(){return this._legend()._style()},t.prototype._legend=function(){return o.prototype._legend.call(this)},t.prototype._symbol=function(){var t=new i._BarLegendSymbol;return t.color=this._pointColor,t},t}(t._LegendItem);t._HierachicalPointLegendItem=s;var e=function(r){function t(t,e,i,n){void 0===n&&(n=0);var o=r.call(this,t,e)||this;return o.__root=i,o.createItems(i,n),o}return __extends(t,r),t.prototype._legendManager=function(){return r.prototype._legendManager.call(this)},t.prototype._style=function(){return this._legendManager()._plotView()._option().config.style},t.prototype._title=function(){var t=this._option()?i.core.asString(this._option().title,!0):null;return null!=t?t:r.prototype._title.call(this)},t.prototype.createItems=function(t,e){if(null!=t)for(var i=0,n=t.children;i<n.length;i++){var o=n[i];this._haslabel(o)||t.depth===e?this._items().push(new s(this,o._color(),o.name)):this.createItems(o,e)}},t.prototype._haslabel=function(t){var e=i.plugins._Plugins._dataContentProvider("Default");if(null!=e)return e.toLines(t._dataLabelContentSite()).join()},t}(t._ItemizedLegend);t._HierachicalPointLegend=e}(i.models||(i.models={}))}(dv||(dv={})),function(u){!function(_){"use strict";var t=function(r){function t(t,e,i,n){void 0===n&&(n=null);var o=r.call(this,t,e,i,n)||this;return o.__minimum=null,o.__maximum=null,o}return __extends(t,r),t.prototype._definition=function(){return r.prototype._definition.call(this)},t.prototype._items=function(){return r.prototype._items.call(this)},t.prototype._minimum=function(){return this.__minimum},t.prototype._maximum=function(){return this.__maximum},t.prototype._add=function(t){null==t||isNaN(t)||((null==this.__maximum||isNaN(this.__maximum)||this._maximum()<t)&&(this.__maximum=t),(null==this.__minimum||isNaN(this.__minimum)||this._minimum()>t)&&(this.__minimum=t))},t.prototype._applyColor=function(){for(var t=this._items(),e=0,i=this._createItems();e<i.length;e++){var n=i[e];t.push(n)}var o=this._definition()._sortDefinition();o instanceof _._SimpleSortDefinition&&o._order()==u.OrderType.Descending&&t.reverse();for(var r=this._legendManager()._plotView()._plotAreaView()._dvView()._colorProvider(),s=this._legendManager()._plotView()._plotAreaView()._paletteOffset(),a=0,l=t;a<l.length;a++){(n=l[a])._color(r.getColor(s)),s++}this._legendManager()._plotView()._plotAreaView()._paletteOffset(s)},t.prototype._applySize=function(){for(var t=this._items(),e=0,i=this._createItems();e<i.length;e++){var n=i[e];t.push(n)}t.forEach(function(t,e){t._size(e+1)});var o=this._definition()._sortDefinition();o instanceof _._SimpleSortDefinition&&o._order()==u.OrderType.Descending&&t.reverse()},t.prototype._findLegendItem=function(t){var e=this._items();if(e.length<=0)return null;for(var i=0,n=e;i<n.length;i++){var o=n[i];if(o._range.start<=t&&t<o._range.to)return o}var r=e[e.length-1];return r._range.start<=t&&t<=r._range.to?r:null},t.prototype._createItems=function(){var t=this._option();if(null!=t&&null!=t.ranges&&0<t.ranges.length)return this._createItemsByLegendRanges(this._minimum(),this._maximum(),t.ranges);var e=this._definition()._fieldDefinition()._field();if(e instanceof _._BinNumberFieldInfo){var i=e._toSteps(this._minimum(),this._maximum());return this._createItemsBySteps(this._minimum(),this._maximum(),i)}return this._createItemsAutomatically(this._minimum(),this._maximum())},t.prototype._createItem=function(t,e){return null==t&&(t=e.start+"-"+e.to),new _._RangePointLegendItem(this,t,e)},t.prototype._createItemsBySteps=function(t,e,i){for(var n=[],o=Math.min(t,i[0]),r=0,s=i;r<s.length;r++){var a=s[r];o<a&&(n.push(this._createItem(null,{start:o,to:a})),o=a)}return o<e&&n.push(this._createItem(null,{start:o,to:e})),n},t.prototype._createItemsAutomatically=function(t,e){var i=[],n=new _._NumberTicksGenerator(t,e,!0,4)._ticks();if(0<n.length){var o=n[0];if(1<n.length)for(var r=1;r<n.length;r++){var s=n[r];i.push(this._createItem(null,{start:o,to:s})),o=s}else i.push(this._createItem(null,{start:o,to:o}))}return i},t.prototype._createItemsByLegendRanges=function(t,e,i){var n=[],o=[];o=o.concat(i).sort(function(t,e){return null==t.to?1:null==e.to?-1:t.to>e.to?1:t.to<e.to?-1:0});for(var r=t,s=0,a=i;s<a.length;s++){var l=a[s];if(null!=l.to){if(l.to<=t)continue;if(e<r)continue;n.push(this._createItem(l.title,{start:r,to:l.to})),r=l.to}else{if(!(r<e))break;n.push(this._createItem(l.title,{start:r,to:e})),r=e}}return r<e&&n.push(this._createItem(null,{start:r,to:e})),n},t}(_._ItemizedPointLegend);_._ItemizedRangePointLegend=t}(u.models||(u.models={}))}(dv||(dv={})),function(r){!function(n){"use strict";var t=function(o){function t(t,e,i,n){return void 0===n&&(n=null),o.call(this,t,e,i,n)||this}return __extends(t,o),t.prototype._definition=function(){return o.prototype._definition.call(this)},t.prototype._items=function(){return o.prototype._items.call(this)},t.prototype._add=function(t){if(null==this._findLegendItem(t)){var e=r.plugins._Plugins._stringFormatting("Default"),i=null!=e?e.format(this._definition()._fieldDefinition()._format(),t):t.toString();this._items().push(new n._ValuePointLegendItem(this,i,t))}},t.prototype._applyColor=function(){this._sortItems();for(var t=this._plotAreaView(),e=t._dvView()._colorProvider(),i=t._paletteOffset(),n=0,o=this._items();n<o.length;n++){o[n]._color(e.getColor(i)),i++}t._paletteOffset(i)},t.prototype._applyShape=function(){this._sortItems();for(var t=0,e=this._plotAreaView()._dvView()._symbolProvider(),i=0,n=this._items();i<n.length;i++){n[i]._shape(e.getSymbol(t)),t++}},t.prototype._findLegendItem=function(t){var e=this._items();if(e.length<=0)return null;for(var i=0,n=e;i<n.length;i++){var o=n[i];if(o.key instanceof Date&&t instanceof Date){if(o.key.valueOf()==t.valueOf())return o}else if(o.key==t)return o}return null},t.prototype._sortItems=function(){var t=this._definition()._sortDefinition();if(t instanceof n._SimpleSortDefinition){var e=this._items();e.sort(function(t,e){return t.key==e.key?0:null==t.key?1:null==e.key?-1:t.key instanceof Date&&e.key instanceof Date?t.key.valueOf()-e.key.valueOf():"number"==typeof t.key&&"number"==typeof e.key?t.key-e.key:"string"==typeof t.key&&"string"==typeof e.key?t.key.toLowerCase().localeCompare(e.key.toLowerCase()):"boolean"==typeof t.key&&"boolean"==typeof e.key?t.key?-1:1:0}),t._order()==r.OrderType.Descending&&e.reverse()}},t}(n._ItemizedPointLegend);n._ItemizedValuePointLegend=t}(r.models||(r.models={}))}(dv||(dv={})),function(t){!function(e){"use strict";var t=function(o){function t(t,e,i){var n=o.call(this,t,e)||this;return n._range=i,n}return __extends(t,o),t.prototype._contentSite=function(){var t=this._legend()._option();return null!=t&&null!=t.ranges&&0<t.ranges.length?null:new e._RangeLegendItemContentSite(this,this._defaultFormat())},t}(e._PointLegendItem);e._RangePointLegendItem=t}(t.models||(t.models={}))}(dv||(dv={})),function(t){!function(e){"use strict";var t=function(o){function t(t,e,i){var n=o.call(this,t,e)||this;return n.key=i,n}return __extends(t,o),t.prototype._contentSite=function(){return new e._ValuePointLegendItemContentSite(this,this._defaultFormat())},t}(e._PointLegendItem);e._ValuePointLegendItem=t}(t.models||(t.models={}))}(dv||(dv={})),function(o){!function(f){"use strict";var t=function(n){function t(t,e){var i=n.call(this,t,e)||this;return i.__context=[],i.__contextOfSeries={},i}return __extends(t,n),t.prototype._addPlot=function(t,e){null!=e&&(null==e._optionFieldInfo?this._add(t):this._addForHierachical(t,e))},t.prototype._add=function(t){for(var e=this.__contextOfSeries,i=this._plotAreaView(),n=0,o=t._seriesList();n<o.length;n++){var r=o[n];if(null==e[r.valueDefinition]){var s=i._dvView()._colorProvider().getColor(i._paletteOffset());i._paletteOffset(i._paletteOffset()+1);var a=new f._SeriesLegendItem(this,r);a._color(s),this._items().push(a),e[r.valueDefinition]={baseColor:s,list:[]}}e[r.valueDefinition].list.push(r),r._color(e[r.valueDefinition].baseColor)}},t.prototype.findItem=function(t){for(var e=this.__context,i=0,n=e;i<n.length;i++){var o=n[i];if(o.valuesName===t)return o}var r={valuesName:t,baseColor:"",list:[]};return e.push(r),r},t.prototype._addForHierachical=function(t,e){if(null!=e&&null!=e._optionFieldInfo){for(var i=0,n=t._seriesList();i<n.length;i++){var o=n[i],r=this.findItem(o.valueDefinition),s=r.list;if(null!=e._optionFieldInfo)for(var a=0,l=o._points();a<l.length;a++){var _=l[a];if(0!==_._items().length){for(var u=""+e._optionFieldInfo._toItem(_._items()),h=!1,c=0,p=s;c<p.length;c++){var f=p[c];if(f.suffix===u){f.points.push(_),h=!0;break}}if(!h&&(s.push({suffix:u,points:[_],legendItem:null}),!r.baseColor)){var d=this._plotAreaView();r.baseColor=d._dvView()._colorProvider().getColor(d._paletteOffset()),d._paletteOffset(d._paletteOffset()+1)}}}}this.applyHierachicalColor()}},t.prototype.applyHierachicalColor=function(){if(this.__context&&0<this.__context.length)for(var t=0,e=this.__context;t<e.length;t++){var i=e[t],n=i.list;if(0!==n.length)for(var o=i.baseColor,r=n.length,s=0,a=0;a<n.length;++a){var l=n[a].points;if(0!==l.length){var _=n[a].legendItem;null==_&&(_=new f._SeriesLegendItem(this,l[0]._series(),n[a].suffix),this._items().push(_),n[a].legendItem=_);var u=this._tintColor(o,s,r);_._color(u);for(var h=0,c=l;h<c.length;h++){var p=c[h];p._color(u),p._series()._color(u)}s++}else r-=1}}},t.prototype._tintColor=function(t,e,i){if("string"==typeof t){var n=o.core._Color.fromCss(t);t=o.core._Color.tint(n,e/i).toCss()}return t},t.prototype._title=function(){return this._option()?o.core.asString(this._option().title,!0):null},t.prototype._items=function(){return n.prototype._items.call(this)},t.prototype._applySeries=function(t){for(var e=this._items(),i=0,n=e;i<n.length;i++){var o=n[i];if(this._areLegendSeriesEqual(o._series(),t))return!1}var r=new f._SeriesLegendItem(this,t);if(e.push(r),null==t._color()){var s=this._plotAreaView();t._color(s._dvView()._colorProvider().getColor(s._paletteOffset())),s._paletteOffset(s._paletteOffset()+1)}r._color(t._color()),null!=t.style.symbolShape&&r._shape(t.style.symbolShape)},t.prototype._findLegendItem=function(t){for(var e=0,i=this._items();e<i.length;e++){var n=i[e];if(this._areLegendSeriesEqual(n._series(),t))return n}return null},t.prototype._areLegendSeriesEqual=function(t,e){if(t==e)return!0;if(t._plot()._option().type!=e._plot()._option().type)return!1;var i=t._xDimension(),n=e._xDimension();if(i&&n){var o=i._definition(),r=n._definition();if(o&&r){if(!o._equals(r))return!1}else if(o||r)return!1}else if(i||n)return!1;var s=t._valueDefinition(),a=e._valueDefinition();if(s&&a){if(!s._equals(a))return!1}else if(s||a)return!1;var l=t._detailDimension(),_=e._detailDimension();if(l&&_){if(!l._equals(_))return!1}else if(l||_)return!1;return!0},t}(f._ItemizedLegend);f._ItemizedSeriesLegend=t}(o.models||(o.models={}))}(dv||(dv={})),function(t){!function(e){"use strict";var t=function(o){function t(t,e,i){var n=o.call(this,t,null==i?e._valueDefinition().name:e._valueDefinition().name+" - "+i)||this;return n.__suffix=i,n.__series=e,n}return __extends(t,o),t.prototype._suffix=function(){return this.__suffix},t.prototype._style=function(){return this._series()._plot()._plotView()._option().config.style},t.prototype._series=function(){return this.__series},t.prototype._symbol=function(){var t=this.__series._plot()._plotView()._legendSymbol();return null==t&&(t=new e._LegendSymbol),t.color=this._color(),t._shape(this._shape()),t},t}(e._LegendItem);e._SeriesLegendItem=t}(t.models||(t.models={}))}(dv||(dv={})),function(t){!function(t){"use strict";var e=function(i){function t(t,e){return i.call(this,t,e)||this}return __extends(t,i),t}(t._Legend);t._LinearLegend=e}(t.models||(t.models={}))}(dv||(dv={})),function(i){!function(t){"use strict";var e=function(o){function t(t,e,i){var n=o.call(this,t,i)||this;return n.__items=[],n.__definition=e,n}return __extends(t,o),Object.defineProperty(t.prototype,"title",{get:function(){var t=this._option()?i.core.asString(this._option().title,!0):null;return null==t&&(t=this._definition()._fieldDefinition()._field()._name()),t},enumerable:!0,configurable:!0}),t.prototype._legendManager=function(){return o.prototype._legendManager.call(this)},t.prototype._style=function(){return this._legendManager()._plotView()._option().config.style},t.prototype._definition=function(){return this.__definition},t}(t._LinearLegend);t._LinearPointLegend=e}(i.models||(i.models={}))}(dv||(dv={})),function(a){!function(s){"use strict";var t=function(o){function r(t,e,i){var n=o.call(this,t,e,i)||this;return n.__linearScale=new a._NumberGradientColorScale,n}return __extends(r,o),Object.defineProperty(r.prototype,"linearColor",{get:function(){return this.__linearColor},enumerable:!0,configurable:!0}),r.prototype._title=function(){return this._definition()._fieldDefinition()._field()._name()},r.prototype._minimum=function(){return this.__minimum},r.prototype._maximum=function(){return this.__maximum},r.prototype._add=function(t){(isNaN(this._maximum())||this._maximum()<t)&&(this.__maximum=t),(isNaN(this._minimum())||this._minimum()>t)&&(this.__minimum=t)},r.prototype._applyColor=function(){var t=this._option().gradient;if("boolean"!=typeof t||0!=t){var e=[];if(t instanceof a.options._LegendGradientOption&&null!=t.palette&&0<t.palette.length)t.palette.forEach(function(t){e.push(new a.options._ColorStopOption({color:t,stop:null}))});else{var i=this._legendManager()._plotView()._plotAreaView()._dvView()._colorProvider(),n=this._legendManager()._plotView()._plotAreaView()._paletteOffset();e=[new a.options._ColorStopOption({color:i.getColor(n++),stop:null}),new a.options._ColorStopOption({color:i.getColor(n++),stop:null})],this._legendManager()._plotView()._plotAreaView()._paletteOffset(n)}this._createGradientColor(e),this.__linearColor=new s.LinearGradientColor(180,e)}},r.prototype._linearScale=function(){return this.__linearScale},r.prototype._createGradientColor=function(t){this._linearScale()._domain(t);var e=new a._LinearAxisScale,i=this.__minimum;0<(i-=(this.__maximum-i)*r.__Constant_Minimum_Space)?e._domain([i,this.__maximum]):e._domain([0,this.__maximum]),e._range([0]);var n=e.ticks();this._linearScale()._range(n[0],n[n.length-1])},r.__Constant_Minimum_Space=.25,r}(s._LinearPointLegend);s._LinearColorPointLegend=t}(a.models||(a.models={}))}(dv||(dv={})),function(s){!function(t){"use strict";var e=function(){function t(t){this.__formats=t}return t.prototype._formats=function(){return this.__formats},t.prototype._parseDate=function(t){if(null!=t&&"string"==typeof t){var e=s.plugins._Plugins._dateParser("Default");if(null!=e)for(var i=0,n=this._formats();i<n.length;i++){var o=n[i],r=e.parse(t,o);if(null!=r)return r}}return null},t}();t._DateStringParser=e}(s.models||(s.models={}))}(dv||(dv={})),function(o){!function(r){"use strict";var t=function(){function t(t){this.__fields=t}return t.prototype._fields=function(){return this.__fields},t.prototype._analyse=function(t,e){var i=this._createDetailDefinitions(t.details),n=this._createCategoriedDimensionDefinition(t.category);return{categoriedDimensionDefinition:n,valueDefinitions:this._createValueDefinitions(t.values,n,i),detailDefinitions:i,colorDefinition:this._createColorDefinition(t.color,this._legendOption(e,o.LegendType.Color)),shapeDefinition:this._createShapeDefinition(t.shape),sizeDefinition:this._createSizeDefinition(t.size),textDefinitions:this._createTextDefinitions(t.text),tooltipDefinitions:this._createTooltipDefinitions(t.tooltip)}},t.prototype._createCategoriedDimensionDefinition=function(t){return r._CategoriedDimensionDefinition._parse(t,this._fields())},t.prototype._createValueDefinitions=function(t,e,i){for(var n=[],o=0,r=t;o<r.length;o++){var s=r[o],a=this._createValueDefinition(s,e,i);null!=a&&n.push(a)}return n},t.prototype._createValueDefinition=function(t,e,i){return r._FieldValueDefinition._parse(t,this._fields())},t.prototype._createDetailDefinitions=function(t){for(var e=[],i=0,n=t;i<n.length;i++){var o=n[i],r=this._createDetailDefinition(o);null!=r&&e.push(r)}return e},t.prototype._createDetailDefinition=function(t){return r._FieldDetailDefinition._parse(t,this._fields())},t.prototype._createColorDefinition=function(t,e){if(null!=e&&null!=e.ranges&&0<e.ranges.length){var i=r._ItemizedRangeLegendDefinition._parse(t,this._fields());if(null!=i)return i}var n=r._BinItemizedRangeLegendDefinition._parse(t,this._fields());if(null!=n)return n;var o=r._ItemizedValueLegendDefinition._parse(t,this._fields());return null!=o?o:null},t.prototype._createShapeDefinition=function(t){return r._ItemizedValueLegendDefinition._parse(t,this._fields())},t.prototype._createSizeDefinition=function(t){return r._ItemizedRangeLegendDefinition._parse(t,this._fields())},t.prototype._createTextDefinitions=function(t){var e=[];if(null!=t)for(var i=0,n=t;i<n.length;i++){var o=n[i],r=this._createTextDefinition(o);null!=r&&e.push(r)}return e},t.prototype._createTextDefinition=function(t){return r._ContentDefinition._parse(t,this._fields())},t.prototype._createTooltipDefinitions=function(t){var e=[];if(null!=t)for(var i=0,n=t;i<n.length;i++){var o=n[i],r=this._createTooltipDefinition(o);null!=r&&e.push(r)}return e},t.prototype._createTooltipDefinition=function(t){return r._ContentDefinition._parse(t,this._fields())},t.prototype._legendOption=function(t,e){if(null!=t&&0<t.length)for(var i=0,n=t;i<n.length;i++){var o=n[i];if(o.type==e)return o}return null},t}();r._EncodingsAnalyser=t}(o.models||(o.models={}))}(dv||(dv={})),function(t){!function(t){"use strict";var e=function(){function t(t){this.__items=t,this.__internalItems=t}return Object.defineProperty(t.prototype,"items",{get:function(){return this._items()},enumerable:!0,configurable:!0}),t.prototype._items=function(){return this.__items},t.prototype._internalItems=function(t){if(arguments.length<=0)return this.__internalItems;this.__internalItems!=t&&(this.__internalItems=t)},Object.defineProperty(t.prototype,"field",{get:function(){return this.__field},set:function(t){this.__field=t},enumerable:!0,configurable:!0}),t}();t._BaseData=e}(t.models||(t.models={}))}(dv||(dv={})),function(i){!function(t){"use strict";var e=function(i){function t(t){var e=i.call(this)||this;return e._definition=t,e}return __extends(t,i),t.prototype.groupNameFromItem=function(t,e){return this._definition._field()._toItem(t)},t.prototype.namesMatch=function(t,e){return t===e},t}(i.core.collections.GroupDescription);t._FieldDefinitionGroupDescription=e}(i.models||(i.models={}))}(dv||(dv={})),function(t){!function(t){"use strict";var e=function(){function t(t,e){this.__plotLegendManager=t,this.__plotAreaLegendManager=e}return t.prototype._plotLegendManager=function(){return this.__plotLegendManager},t.prototype._plotAreaLegendManager=function(){return this.__plotAreaLegendManager},t.prototype._generate=function(t,e){},t}();t._LegendGenerator=e}(t.models||(t.models={}))}(dv||(dv={})),function(i){!function(t){"use strict";var e=function(o){function t(t,e,i){var n=o.call(this,e._items())||this;return n.__dataSource=e,n.__plotView=t,n.__option=i,n}return __extends(t,o),Object.defineProperty(t.prototype,"type",{get:function(){return i.ElementType.Plot},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"parent",{get:function(){return this._plotView()._layoutView()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"name",{get:function(){return this._option().name},enumerable:!0,configurable:!0}),t.prototype._plotView=function(){return this.__plotView},t.prototype._option=function(){return this.__option},Object.defineProperty(t.prototype,"fields",{get:function(){return this.__dataSource._fields()},enumerable:!0,configurable:!0}),t.prototype._legendOption=function(t){var e=this._plotView()._plotAreaView()._option().legends;if(null!=e&&0<e.length)for(var i=0,n=e;i<n.length;i++){var o=n[i];if(o.type==t)return o}return null},t}(t._BaseData);t._PlotData=e}(i.models||(i.models={}))}(dv||(dv={})),function(i){!function(t){"use strict";var e=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.__item=new Object,t.__selected=!1,t.__filtered=!1,t}return __extends(t,e),Object.defineProperty(t.prototype,"type",{get:function(){return i.ElementType.DataPoint},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"parent",{get:function(){return null},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"item",{get:function(){return this.__item},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"style",{get:function(){return this._style()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"text",{get:function(){return this._text()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"tooltip",{get:function(){return this._tooltip()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"color",{get:function(){return this._color()},set:function(t){this._color(t)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"shape",{get:function(){return this._shape()},set:function(t){this._shape(t)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"size",{get:function(){return this._size()},set:function(t){this._size(t)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"additionalKind",{get:function(){return this.__additionalKind},set:function(t){this.__additionalKind=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"selected",{get:function(){return this._selected()},set:function(t){this._selected(t)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"filtered",{get:function(){return this._filtered()},set:function(t){this._filtered(t)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"hover",{get:function(){return this._hover()},set:function(t){this._hover(t)},enumerable:!0,configurable:!0}),t.prototype._color=function(t){if(arguments.length<=0)return this.__color;this.__color!=t&&(this.__color=t)},t.prototype._size=function(t){if(arguments.length<=0)return this.__size;this.__size!=t&&(this.__size=t)},t.prototype._shape=function(t){if(arguments.length<=0)return this.__shape;this.__shape!=t&&(this.__shape=t)},t.prototype._selected=function(t){if(arguments.length<=0)return this.__selected;this._selected()!=t&&(this.__selected=t)},t.prototype._filtered=function(t){if(arguments.length<=0)return this.__filtered;this._filtered()!=t&&(this.__filtered=t)},t.prototype._hover=function(t){if(arguments.length<=0)return null!=this._view()&&this._view()._hover();null!=this._view()&&this._view()._hover()!=t&&this._view()._hover(t)},t.prototype._dataLabelContentSite=function(){return null},t.prototype._tooltipContentSite=function(){return null},t.prototype._view=function(t){if(arguments.length<=0)return this.__view;this.__view!=t&&(this.__view=t)},t.prototype._assign=function(t){for(var e=0,i=Object.keys(t);e<i.length;e++){var n=i[e];this.item[n]=t[n]}},t}(t._BaseData);t._PointData=e}(i.models||(i.models={}))}(dv||(dv={})),function(i){!function(t){"use strict";var e=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.__selected=!1,t.__filtered=0,t}return __extends(t,e),Object.defineProperty(t.prototype,"parent",{get:function(){return null},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"type",{get:function(){return i.ElementType.Series},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"style",{get:function(){return this._style()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"color",{get:function(){return this.__color},set:function(t){this.__color!=t&&(this.__color=t)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"points",{get:function(){return this._points()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"selected",{get:function(){return this._selected()},set:function(t){this._selected(t)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"filtered",{get:function(){return this.__filtered},set:function(t){this.__filtered!=t&&(this.__filtered=t)},enumerable:!0,configurable:!0}),t.prototype._selected=function(t){if(arguments.length<=0)return this.__selected;this.__selected!=t&&(this.__selected=t)},t}(t._BaseData);t._SeriesData=e}(i.models||(i.models={}))}(dv||(dv={})),function(s){!function(t){"use strict";var e=function(){function t(){}return t.prototype._apply=function(t){this._applyPlotConditionFormattingRules(t,this._createGroupConditionalFormattingRules(t._option().config.rules),this._createPointConditionalFormattingRules(t._option().config.rules))},t.prototype._applyPlotConditionFormattingRules=function(t,e,i){for(var n=0,o=t._seriesList();n<o.length;n++){var r=o[n];this._applySeriesConditionFormattingRules(r,e,i)}},t.prototype._applySeriesConditionFormattingRules=function(t,e,i){for(var n=0,o=e;n<o.length;n++){o[n].evaluate(t)}for(var r=0,s=t._points();r<s.length;r++){var a=s[r];this._applyPointConditionFormattingRules(a,i)}},t.prototype._applyPointConditionFormattingRules=function(t,e){for(var i=0,n=e;i<n.length;i++){n[i].evaluate(t)}},t.prototype._createGroupConditionalFormattingRules=function(t){for(var e=[],i=0,n=t;i<n.length;i++){var o=n[i];if(o&&"Group"==o.type){var r=s.plugins._Plugins._conditionalFormattingRule("Cartesian",o);null!=r&&e.push(r)}}return e},t.prototype._createPointConditionalFormattingRules=function(t){var i=[];return t.forEach(function(t){if(null!=t&&"DataPoint"==t.type){var e=s.plugins._Plugins._conditionalFormattingRule("Cartesian",t);null!=e&&i.push(e)}}),i},t}();t._CartesianConditionalFormattingRuleRunner=e}(s.models||(s.models={}))}(dv||(dv={})),function(p){!function(c){"use strict";var t=function(){function t(t){p._assertDebug(function(){return null!=t}),this.__point=t}return Object.defineProperty(t.prototype,"template",{get:function(){var t=this._contentDefinitions();if(t&&0<t.length){var e=this._customTemplate();return null==e&&(e=this._defaultTemplate()),e}return null},enumerable:!0,configurable:!0}),t.prototype._point=function(){return this.__point},t.prototype.defaultProperty=function(t){return"value"},t.prototype.defaultFormat=function(t){return"PercentageCategory"!=t&&"PercentageDetail"!=t&&"PercentagePlot"!=t?null:p.plugins._Plugins._stringFormatting("Default").defaultFormat(p.core.DataType.Number,!0)},t.prototype.fromToken=function(t,e){if("PercentageCategory"==t)return{name:"PercentageCategory",value:this._point()._percentageCategory(),aggregate:null};if("PercentageDetail"==t)return{name:"PercentageDetail",value:this._point()._percentageDetail(),aggregate:null};if("PercentagePlot"==t)return{name:"PercentagePlot",value:this._point()._percentagePlot(),aggregate:null};if("valueField"==t){var i=this._point()._series()._valueDefinition();if(i instanceof c._AggregateCartesianValueDefinition)return{name:i.name,value:i._toItem(this._point()._items()),aggregate:p.Aggregate[i._aggregate]};if(i instanceof c._AggregateDateRangeCartesianValueDefinition)return{name:i.name,value:i._toItem(this._point()._items()),aggregate:null};if(i instanceof c._AggregateNumberRangeCartesianValueDefinition)return{name:i.name,value:i._toItem(this._point()._items()),aggregate:null}}else if("xField"==t){if(null!=(n=this._point()._series()._valueDefinition()._dimensionDefinition()))return{name:n._name(),value:this._point()._dimensionValue()._value(),aggregate:null}}else if("categoryField"==t){var n;if(null!=(n=this._point()._series()._valueDefinition()._dimensionDefinition())&&n instanceof c._CategoriedDimensionDefinition){var o=n._categoryFieldDefinitions();if(null==e&&(e=0),null!=o&&0<=e&&e<o.length)return{name:o[e]._field()._name(),value:o[e]._field()._toItem(this._point()._items()),aggregate:null}}}else if("detailFields"==t){var r=this._point()._series()._detailDimension();if(null!=r&&null!=r._definition())return{name:r._definition()._fieldDefinition()._field()._name(),value:r._key(),aggregate:null}}else if("colorField"==t){var s=this._point()._series()._plot()._colorDefinition();if(s instanceof c._ItemizedValueLegendDefinition)return{name:s._fieldDefinition()._field()._name(),value:s._toItem(this._point()._items()),aggregate:p.Aggregate[s._aggregate()]};if(s instanceof c._LinearLegendDefinition)return{name:s._fieldDefinition()._field()._name(),value:s._toItem(this._point()._items()),aggregate:p.Aggregate[s._aggregate()]};if(s instanceof c._ItemizedRangeLegendDefinition)return{name:s._fieldDefinition()._field()._name(),value:s._toItem(this._point()._items()),aggregate:p.Aggregate[s._aggregate()]};if(s instanceof c._BinItemizedRangeLegendDefinition)return{name:s._fieldDefinition()._field()._name(),value:s._toItem(this._point()._items()),aggregate:p.Aggregate[s._aggregate()]}}else if("shapeField"==t){var a=this._point()._series()._plot()._shapeDefinition();if(a instanceof c._ItemizedValueLegendDefinition)return{name:a._fieldDefinition()._field()._name(),value:a._toItem(this._point()._items()),aggregate:p.Aggregate[a._aggregate()]}}else if("sizeField"==t){var l=this._point()._series()._plot()._sizeDefinition();if(l instanceof c._ItemizedRangeLegendDefinition)return{name:l._fieldDefinition()._field()._name(),value:l._toItem(this._point()._items()),aggregate:p.Aggregate[l._aggregate()]}}else for(var _=0,u=this._contentDefinitions();_<u.length;_++){var h=u[_];if(h._fieldDefinition()._field()._name()==t)return this._fromContentDefinition(h)}return{name:null,value:null,aggregate:null}},t.prototype._fromContentDefinition=function(t){return{name:t._fieldDefinition()._field()._name(),value:t._toItem(this._point()._items()),aggregate:p.Aggregate[t._aggregate()]}},t}();c._CartesianContentSite=t}(p.models||(p.models={}))}(dv||(dv={})),function(t){!function(a){"use strict";var t=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return __extends(e,t),e.prototype._createValueDefinition=function(t,e,i){if(null==e)return a._AggregateCartesianValueDefinition._parse(t,this._fields(),null);var n=null;return null!=(n=a._AggregateCartesianValueDefinition._parse(t,this._fields(),e))?n:null!=(n=a._AggregateNumberRangeCartesianValueDefinition._parse(t,this._fields(),e))?n:null!=(n=a._AggregateDateRangeCartesianValueDefinition._parse(t,this._fields(),e))?n:null},e.prototype._createDetailDefinitions=function(t){var e=[];if(null!=t&&0<t.length){var i=this._createDetailDefinition(t[0]);null!=i&&i instanceof a._FieldDetailDefinition&&e.push(i)}return e},e.prototype._createColorDefinition=function(t,e){var i=a._ValuesNameLegendDefinition._parse(t,this._fields());if(null!=i)return i;if(null!=e&&null!=e.ranges&&0<e.ranges.length){var n=a._ItemizedRangeLegendDefinition._parse(t,this._fields());if(null!=n)return n}var o=a._BinItemizedRangeLegendDefinition._parse(t,this._fields());if(null!=o)return o;if(null==e||"boolean"!=typeof e.gradient||0!=e.gradient){var r=a._LinearLegendDefinition._parse(t,this._fields());if(null!=r)return r}var s=a._ItemizedValueLegendDefinition._parse(t,this._fields());return null!=s?s:null},e.prototype._createShapeDefinition=function(t){var e=a._ValuesNameLegendDefinition._parse(t,this._fields());return null!=e?e:a._ItemizedValueLegendDefinition._parse(t,this._fields())},e.prototype._createSizeDefinition=function(t){return a._ItemizedRangeLegendDefinition._parse(t,this._fields())},e}(a._EncodingsAnalyser);a._CartesianEncodingsAnalyser=t}(t.models||(t.models={}))}(dv||(dv={})),function(W){!function(G){"use strict";var t=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return __extends(e,t),e.prototype._generate=function(t,e){for(var i=this._plotLegendManager(),n=0,o=t;n<o.length;n++){var r=o[n];i._apply(r._colorDefinition(),W.LegendType.Color),i.applyOverlayLegend(e),i._apply(r._sizeDefinition(),W.LegendType.Size),i._apply(r._shapeDefinition(),W.LegendType.Shape)}for(var s=0,a=t;s<a.length;s++){r=a[s];for(var l=i._findLegend(r._colorDefinition(),W.LegendType.Color),_=i._findLegend(r._sizeDefinition(),W.LegendType.Size),u=i._findLegend(r._shapeDefinition(),W.LegendType.Shape),h=0,c=P=r._seriesList();h<c.length;h++)for(var p=0,f=(D=c[h])._points();p<f.length;p++){0!=(M=f[p])._items().length&&(null!=l&&(l instanceof G._LinearColorPointLegend?l._add(l._definition()._fieldDefinition()._field()._toItem(M._items())):l instanceof G._ItemizedRangePointLegend?l._add(l._definition()._fieldDefinition()._field()._toItem(M._items())):l instanceof G._ItemizedValuePointLegend&&l._add(l._definition()._fieldDefinition()._field()._toItem(M._items()))),null!=u&&u instanceof G._ItemizedValuePointLegend&&u._add(u._definition()._fieldDefinition()._field()._toItem(M._items())),null!=_&&_ instanceof G._ItemizedRangePointLegend&&_._add(_._definition()._fieldDefinition()._field()._toItem(M._items())))}}for(var d=[],g=[],y=[],m=0,v=t;m<v.length;m++){r=v[m];null!=(l=i._findLegend(r._colorDefinition(),W.LegendType.Color))&&-1==d.indexOf(l)&&(l instanceof G._LinearColorPointLegend?l._applyColor():l instanceof G._ItemizedRangePointLegend?l._applyColor():l instanceof G._ItemizedValuePointLegend&&l._applyColor(),d.push(l)),this.__applyColorToOverlay(i._plotView(),e),null!=(_=i._findLegend(r._sizeDefinition(),W.LegendType.Size))&&-1==g.indexOf(_)&&(_ instanceof G._ItemizedRangePointLegend&&_._applySize(),g.push(_)),null!=(u=i._findLegend(r._shapeDefinition(),W.LegendType.Shape))&&-1==y.indexOf(u)&&(u instanceof G._ItemizedValuePointLegend&&u._applyShape(),y.push(u))}for(var w=0,b=t;w<b.length;w++){r=b[w];var x=this._plotAreaLegendManager(),S=r._colorDefinition(),P=r._seriesList(),V=!1;null!=S&&S instanceof G._ValuesNameLegendDefinition&&(V=!0,S,this._plotAreaLegendManager()._addPlot(r,S));l=i._findLegend(r._colorDefinition(),W.LegendType.Color),_=i._findLegend(r._sizeDefinition(),W.LegendType.Size),u=i._findLegend(r._shapeDefinition(),W.LegendType.Shape);for(var C=0,A=P;C<A.length;C++){for(var D,T=void 0,L=0,O=(D=A[C])._points();L<O.length;L++){var M=O[L];if(null!=l){var k=void 0;l instanceof G._ItemizedRangePointLegend?k=l._findLegendItem(l._definition()._fieldDefinition()._field()._toItem(M._internalItems())):l instanceof G._ItemizedValuePointLegend?k=l._findLegendItem(l._definition()._fieldDefinition()._field()._toItem(M._internalItems())):l instanceof G._LinearColorPointLegend&&(D._gradientColorScale(l._linearScale()),M._color(l._linearScale()._scale(l._definition()._fieldDefinition()._field()._toItem(M._internalItems())).color)),null!=k&&(M._color(k._color()),void 0===T?T=k._color():T!=k._color()&&(T=null))}if(null!=u){k=null;u instanceof G._ItemizedValuePointLegend&&(k=u._findLegendItem(u._definition()._fieldDefinition()._field()._toItem(M._internalItems()))),null!=k&&M._shape(k._shape())}if(null!=_){k=null;_ instanceof G._ItemizedRangePointLegend&&(k=_._findLegendItem(_._definition()._fieldDefinition()._field()._toItem(M._internalItems()))),null!=k&&M._size(k._size())}}if(null!=T&&D._color(T),0!=D._points().length){if(!V){x._applySeries(D);var R=x._findSeriesLegendItem(D);null!=R&&D._color(R._color())}var N=D._detailDimension();if(null!=D._color()&&null!=N&&null!=u&&u instanceof G._ItemizedValuePointLegend&&N._definition()._fieldDefinition()._field()._equals(u._definition()._fieldDefinition()._field())){var E=N._key(),I=u._findLegendItem(E);null!=I&&I._color(D._color())}}}if(1===P.length){T=P[0]._color();for(var F=0,j=i._legends();F<j.length;F++){var z=j[F];if(z instanceof G._ItemizedLegend)for(var B=0,H=z._items();B<H.length;B++){(k=H[B])._seriesColor(T)}}}}},e.prototype.__applyColorToOverlay=function(t,e){for(var i=t._plotAreaView()._paletteOffset(),n=0,o=e;n<o.length;n++){var r=o[n],s=r._option();(s instanceof W.options._ReferenceLineOverlayOption&&s.detailLevel!=W.DetailLevel.Group&&(!s.style||!s.style.stroke)||s instanceof W.options._ReferenceBandOverlayOption&&(!s.style||!s.style.fill))&&r._paletteOffset(i++)}t._plotAreaView()._paletteOffset(i)},e}(G._LegendGenerator);G._CartesianLegendGenerator=t}(W.models||(W.models={}))}(dv||(dv={})),function(S){!function(x){"use strict";var t=function(o){function t(t,e,i){var n=o.call(this,t,e,i)||this;return n.__valueDefinitions=[],n.__textDefinitions=[],n.__tooltipDefinitions=[],n.__seriesList=[],n.__totalValue={},n.__totalValueByCategory={},n._analyseEncodings(n._option().encodings,e),n.__seriesList=n._createSeriesList(n._items()),n}return __extends(t,o),Object.defineProperty(t.prototype,"seriesList",{get:function(){return this._seriesList()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"points",{get:function(){for(var t=[],e=0,i=this._seriesList();e<i.length;e++)for(var n=0,o=i[e]._points();n<o.length;n++){var r=o[n];null!=r&&t.push(r)}return t},enumerable:!0,configurable:!0}),t.prototype._seriesList=function(){return this.__seriesList},t.prototype._categoriedDimensionDefinition=function(){return this.__categoriedDimensionDefinition},t.prototype._xFieldDefinition=function(){return this.__xFieldDefinition},t.prototype._valueDefinitions=function(){return this.__valueDefinitions},t.prototype._detailDefinitions=function(){return this.__detailDefinitions},t.prototype._colorDefinition=function(){return this.__colorDefinition},t.prototype._shapeDefinition=function(){return this.__shapeDefinition},t.prototype._sizeDefinition=function(){return this.__sizeDefinition},t.prototype._textDefinitions=function(){return this.__textDefinitions},t.prototype._tooltipDefinitions=function(){return this.__tooltipDefinitions},t.prototype._getSeriesColor=function(t){if(t){var e=this._plotView()._plotAreaView()._legendManager()._findSeriesLegendItem(t);if(null!=e)return e._color()}return null},t.prototype._totalValue=function(t){var e=this._valueDefinitions().indexOf(t);if(null==this.__totalValue[e])for(var i=this.__totalValue[e]=0,n=this._seriesList();i<n.length;i++){var o=n[i];o._valueDefinition()==t&&(this.__totalValue[e]+=o._totalValue())}return this.__totalValue[e]},t.prototype._totalValueByCategoryValue=function(t,e){var i=this._valueDefinitions().indexOf(t);null==this.__totalValueByCategory[i]&&(this.__totalValueByCategory[i]={});var n=this.__totalValueByCategory[i];if(null==n[e._index()])for(var o=n[e._index()]=0,r=this._seriesList();o<r.length;o++){var s=r[o];s._valueDefinition()==t&&(n[e._index()]+=s._totalValueByCategoryValue(e))}return n[e._index()]},t.prototype._analyseEncodings=function(t,e){if(null!=t){var i=this._createEncodingsAnalyser(e._fields())._analyse(t,this._plotView()._plotAreaView()._option().legends);this.__categoriedDimensionDefinition=i.categoriedDimensionDefinition,null!=this.__categoriedDimensionDefinition&&(this.__xFieldDefinition=this.__categoriedDimensionDefinition._categoryFieldDefinitions()[0]),this.__valueDefinitions=[];for(var n=0,o=i.valueDefinitions;n<o.length;n++){var r=o[n];if(r instanceof x._CartesianValueDefinition){if(null==this.__xFieldDefinition){var s=r._dimensionDefinition();null!=s&&s instanceof x._FieldDimensionDefinition&&(this.__xFieldDefinition=s._fieldDefinition())}this.__valueDefinitions.push(r)}}if(this.__detailDefinitions=[],null!=i.detailDefinitions&&0<i.detailDefinitions.length){var a=i.detailDefinitions[0];a instanceof x._FieldDetailDefinition&&this.__detailDefinitions.push(a)}this.__colorDefinition=i.colorDefinition,this.__sizeDefinition=i.sizeDefinition,this.__shapeDefinition=i.shapeDefinition,this.__textDefinitions=i.textDefinitions,this.__tooltipDefinitions=i.tooltipDefinitions}else this.__xFieldDefinition=null,this.__valueDefinitions=null,this.__detailDefinitions=null,this.__colorDefinition=null,this.__sizeDefinition=null,this.__shapeDefinition=null,this.__textDefinitions=null,this.__tooltipDefinitions=null},t.prototype._createEncodingsAnalyser=function(t){return new x._CartesianEncodingsAnalyser(t)},t.prototype._createXDimension=function(t,e){return null==t?null:t instanceof x._CategoriedDimensionDefinition?x._XCategoriedDimension._parse(t,e):t instanceof x._FieldDimensionDefinition?x._XFieldDimension._parse(t,e):void S._assertDebug(function(){return!1})},t.prototype._createSeriesList=function(t){for(var e=[],i=[],n=this._detailDefinitions(),o=0,r=this._valueDefinitions();o<r.length;o++){var s=r[o],a=null,l=s._dimensionDefinition();if(null!=l){for(var _=0,u=i.length;_<u;_++){var h=i[_];if(l._equals(h._definition())){a=h;break}}null==a&&(a=this._createXDimension(l,t),i.push(a))}if(null!=n&&0<n.length)for(var c=0,p=n;c<p.length;c++){var f=p[c],d=f._sort(t),g=new S.core.collections.CollectionView(d),y=new x._FieldDefinitionGroupDescription(f._fieldDefinition());g.groupDescriptions.push(y);for(var m=0,v=g.groups;m<v.length;m++){var w,b=v[m];null==(w=this._createSeries(b.items,s,new x._DetailDimension(f,b.name),a))||f._excludeNulls()&&w._isNulls()||e.push(w)}}else null!=(w=this._createSeries(t,s,null,a))&&e.push(w)}return e},t.prototype._createSeries=function(t,e,i,n){return null},t}(x._PlotData);x._CartesianPlotData=t}(S.models||(S.models={}))}(dv||(dv={})),function(u){!function(f){"use strict";var t=function(){function t(){}return t.prototype._layout=function(t,e,i){void 0===i&&(i=!1),this.__nullAsZero=i;for(var r=[],n=function(t){var e=t._valueDefinition(),i=t._detailDimension(),n=null==i?null:i._definition(),o=u.core.find(r,function(t){return t.valueDefinition==e&&t.detailDefinition==n});null==o&&(o={valueDefinition:e,detailDefinition:n,seriesList:[]},r.push(o)),o.seriesList.push(t)},o=0,s=t._seriesList();o<s.length;o++){n(s[o])}for(var a=0,l=r;a<l.length;a++){var _=l[a];null!=_.detailDefinition&&_.detailDefinition._group()==u.Group.Stack&&this._stack(_.seriesList)}e&&this._percentage(t._seriesList())},t.prototype._stack=function(t){for(var e={},i=0,n=t;i<n.length;i++)for(var o=0,r=n[i]._points();o<r.length;o++){var s=r[o];if(!s._filtered()){var a=s._dimensionValue()._index();if(s instanceof f._XyValuePointData){s._resetLayout();var l=s._yValue();if(null==l&&!this.__nullAsZero||isNaN(l));else null==l&&this.__nullAsZero&&(l=0),null!=(_=e[a])&&s._yPreviousValue(_),null==e[a]?e[a]=l:e[a]+=l,s._yValue(e[a])}else if(s instanceof f._XyRangeValuePointData){if(s._resetLayout(),null==s._yLowerValue()&&null==s._yUpperValue()&&!this.__nullAsZero)continue;var _,u=null;u=s._yLowerValue()<0&&s._yUpperValue()<0?s._yLowerValue()-s._yUpperValue():s._yUpperValue()-s._yLowerValue(),null!=(_=e[a])&&s._yLowerValue(_),null==e[a]?e[a]=s._yLowerValue()+u:e[a]+=u,s._yUpperValue(e[a])}}}},t.prototype._percentage=function(t){for(var e={},i={},n=0,o=t;n<o.length;n++)for(var r=0,s=o[n]._points();r<s.length;r++){var a=(c=s[r])._dimensionValue()._index();if(c instanceof f._XyValuePointData)(null==(p=c._yPreviousValue())||isNaN(p))&&(p=0),(null==e[a]||e[a]<p)&&(e[a]=p),(null==i[a]||i[a]>p)&&(i[a]=p),(null==(p=c._yValue())||isNaN(p))&&(p=0),(null==e[a]||e[a]<p)&&(e[a]=p),(null==i[a]||i[a]>p)&&(i[a]=p);else if(c instanceof f._XyRangeValuePointData){(null==(p=c._yLowerValue())||isNaN(p))&&(p=0),(null==e[a]||e[a]<p)&&(e[a]=p),(null==i[a]||i[a]>p)&&(i[a]=p),(null==(p=c._yUpperValue())||isNaN(p))&&(p=0),(null==e[a]||e[a]<p)&&(e[a]=p),(null==i[a]||i[a]>p)&&(i[a]=p)}}for(var l=0,_=t;l<_.length;l++)for(var u=0,h=_[l]._points();u<h.length;u++){var c;if(0!=e[a=(c=h[u])._dimensionValue()._index()]-i[a])if(c instanceof f._XyValuePointData)null==(p=c._yPreviousValue())||isNaN(p)||(0<=p?c._yPreviousValue(p/Math.abs(e[a])):c._yPreviousValue(p/Math.abs(i[a]))),null==(p=c._yValue())||isNaN(p)||(0<=p?c._yValue(p/Math.abs(e[a])):c._yValue(p/Math.abs(i[a])));else if(c instanceof f._XyRangeValuePointData){var p;null==(p=c._yLowerValue())||isNaN(p)||(0<=p?c._yLowerValue(p/Math.abs(e[a])):c._yLowerValue(p/Math.abs(i[a]))),null==(p=c._yUpperValue())||isNaN(p)||(0<=p?c._yUpperValue(p/Math.abs(e[a])):c._yUpperValue(p/Math.abs(i[a])))}}},t}();f._CartesianPlotLayout=t}(u.models||(u.models={}))}(dv||(dv={})),function(i){!function(e){"use strict";var t=function(o){function t(t,e,i){var n=o.call(this,e)||this;return n.__series=t,n.__value=t._valueDefinition()._toValue(n._items()),n.__dimensionValue=i,n}return __extends(t,o),Object.defineProperty(t.prototype,"parent",{get:function(){return this._series()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"valueDefinition",{get:function(){return this._series()._valueDefinition().name},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"detail",{get:function(){var t=this._series()._detailDimension();return null==t?null:t._key()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"dimension",{get:function(){return this._dimensionValue()._value()},enumerable:!0,configurable:!0}),t.prototype._index=function(){if(null==this.__index)for(var t=this._series()._points(),e=0;e<t.length;e++)if(t[e]==this){this.__index=e;break}return this.__index},t.prototype._series=function(){return this.__series},t.prototype._dimensionValue=function(){return this.__dimensionValue},t.prototype._percentageCategory=function(){return null!=this._dimensionValue()?this.value/this._series()._plot()._totalValueByCategoryValue(this._series()._valueDefinition(),this._dimensionValue()):null},t.prototype._percentageDetail=function(){return null!=this._series()._plot()._detailDefinitions()&&0<this._series()._plot()._detailDefinitions().length?this.value/this._series()._totalValue():null},t.prototype._percentagePlot=function(){return this.value/this._series()._plot()._totalValue(this._series()._valueDefinition())},t.prototype._dataLabelContentSite=function(){return new e._DataLabelCartesianContentSite(this)},t.prototype._tooltipContentSite=function(){return new e._TooltipCartesianContentSite(this)},t.prototype._style=function(){return null==this.__style&&(this.__style=new i.options._DataPointStyleOption(this._series()._plot()._option().config.style)),this.__style},t.prototype._text=function(){return null==this.__textOption&&(this.__textOption=new i.options._PlotConfigTextOption(this._series()._plot()._option().config.text)),this.__textOption},t.prototype._tooltip=function(){return null==this.__tooltipOption&&(this.__tooltipOption=new i.options._PlotConfigTooltipOption(this._series()._plot()._option().config.tooltip)),this.__tooltipOption},Object.defineProperty(t.prototype,"offset",{get:function(){return this.__offset},set:function(t){this.__offset!=t&&(this.__offset=t)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"value",{get:function(){return this.__value},enumerable:!0,configurable:!0}),t}(e._PointData);e._CartesianPointData=t}(i.models||(i.models={}))}(dv||(dv={})),function(P){!function(S){"use strict";var t=function(s){function t(t,e,i,n,o){var r=s.call(this,o)||this;return r.__points=null,r.__totalValueByCategoryValue={},r.__plot=t,r.__valueDefinition=e,r.__detailDimension=i,r.__xDimension=n,r}return __extends(t,s),Object.defineProperty(t.prototype,"type",{get:function(){return P.ElementType.Series},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"parent",{get:function(){return this._plot()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"points",{get:function(){return this._points()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"axisX",{get:function(){return this._plot()._plotView()._getAxisX()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"axisY",{get:function(){return this._plot()._plotView()._getAxisY()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"valueDefinition",{get:function(){return this._valueDefinition().name},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"style",{get:function(){return this._style()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"selected",{get:function(){return this._selected()},set:function(t){this._selected(t)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"filtered",{get:function(){return this._filtered()},set:function(t){this._filtered(t)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"hover",{get:function(){return this._hover()},set:function(t){this._hover(t)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"detail",{get:function(){var t=this._detailDimension();return null==t?null:t._key()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"color",{get:function(){return this._color()},set:function(t){this._color(t)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"ySite",{get:function(){return new S._EmptySiteModel},enumerable:!0,configurable:!0}),t.prototype._color=function(t){if(arguments.length<=0)return this.__color;this.__color!=t&&(this.__color=t)},t.prototype._view=function(t){if(arguments.length<=0)return this.__view;this.__view!=t&&(this.__view=t)},t.prototype._selected=function(t){if(arguments.length<=0){for(var e=0,i=this._points();e<i.length;e++){if(!i[e]._selected())return!1}return!0}for(var n=0,o=this._points();n<o.length;n++){o[n]._selected(t)}},t.prototype._filtered=function(t){if(arguments.length<=0){for(var e=0,i=this._points();e<i.length;e++){if(!i[e]._filtered())return!1}return!0}for(var n=0,o=this._points();n<o.length;n++){o[n]._filtered(t)}},t.prototype._hover=function(t){if(arguments.length<=0)return null!=this._view()&&this._view()._hover();this._view()._hover()!=t&&this._view()._hover(t)},t.prototype._plot=function(){return this.__plot},t.prototype._points=function(){return null==this.__points&&(this.__points=this._createPoints()),this.__points},t.prototype._valueDefinition=function(){return this.__valueDefinition},t.prototype._detailDimension=function(){return this.__detailDimension},t.prototype._xDimension=function(){return this.__xDimension},t.prototype._index=function(){if(null==this.__index)for(var t=this._plot()._seriesList(),e=0;e<t.length;e++)if(t[e]==this){this.__index=e;break}return this.__index},t.prototype._style=function(){return null==this.__style&&(this.__style=new P.options._DataPointStyleOption(this._plot()._option().config.style)),this.__style},t.prototype._totalValue=function(){if(null==this.__totalValue)for(var t=this.__totalValue=0,e=this._points();t<e.length;t++){var i=e[t];this.__totalValue+=i.value}return this.__totalValue},t.prototype._isNulls=function(){for(var t=0,e=this._points();t<e.length;t++){if(null!=e[t].value)return!1}return!0},t.prototype._containsNull=function(){for(var t=0,e=this._points();t<e.length;t++){if(null==e[t].value)return!0}return!1},t.prototype._totalValueByCategoryValue=function(t){if(null==this.__totalValueByCategoryValue[t._index()])for(var e=this.__totalValueByCategoryValue[t._index()]=0,i=this._points();e<i.length;e++){var n=i[e],o=n._dimensionValue();null!=o&&o._index()==t._index()&&(this.__totalValueByCategoryValue[t._index()]+=n.value)}return this.__totalValueByCategoryValue[t._index()]},t.prototype._createPoints=function(){var t=[],e=this._valueDefinition(),i=this._items(),n=e._filter();null!=n&&(i=i.filter(function(t){return n.filter(t,e.name)}));var o=this._xDimension();if(null==o){var r=this._valueDefinition();if(r instanceof S._AggregateCartesianValueDefinition)if(r._aggregate==P.Aggregate.List)for(var s=0,a=i;s<a.length;s++){var l=a[s];t.push(this._createPoint([l],new S._ZeroDimensionValue(null)))}else t.push(this._createPoint(i,new S._ZeroDimensionValue(null)))}else if(o instanceof S._XCategoriedDimension){for(var _={},u=o._dimensionValues(),h=0,c=i;h<c.length;h++){l=c[h];for(var p=0,f=u;p<f.length;p++){if((x=f[p])._contains(l)){var d=_[x._index()];null==d&&(d={dimensionValue:x,items:[]},_[x._index()]=d),d.items.push(l);break}}}for(var g=0,y=u;g<y.length;g++){null!=_[(x=y[g])._index()]&&t.push(this._createPoint(_[x._index()].items,x))}}else if(o instanceof S._XFieldDimension){u=o._dimensionValues();for(var m=0,v=i.length;m<v;m++){l=i[m];for(var w=0,b=u;w<b.length;w++){var x;if((x=b[w])._contains(l)){t.push(this._createPoint([l],x));break}}}}return t},t.prototype._createPoint=function(t,e){return null},t.prototype._gradientColorScale=function(t){if(arguments.length<=0)return this.__gradientColorScale;this.__gradientColorScale=t},t}(S._BaseData);S._CartesianSeriesData=t}(P.models||(P.models={}))}(dv||(dv={})),function(i){!function(t){"use strict";var e=function(t,e,i,n,o){this._value=t,this._items=e,this._children=i,this._start=n,this._end=o};(i.models||(i.models={}))._CategoriedDimensionGroup=e}()}(dv||(dv={})),function(t){!function(t){"use strict";var e=function(){function n(t,e){this.__definition=t,this.__key=e}return n.prototype._definition=function(){return this.__definition},n.prototype._key=function(){return this.__key},n.prototype._equals=function(t){if(this==t)return!0;if(t instanceof n){if(this._key()!==t._key())return!1;var e=this._definition(),i=t._definition();if(e&&i){if(!e._equals(i))return!1}else if(e||i)return!1;return!0}return!1},n}();t._DetailDimension=e}(t.models||(t.models={}))}(dv||(dv={})),function(t){!function(_){"use strict";var t=function(l){function t(t,e,i){var n=l.call(this,t,e,i)||this;n.__yLowerValue=NaN,n.__yUpperValue=NaN;var o=t._valueDefinition();if(o instanceof _._AggregateNumberRangeCartesianValueDefinition){var r=o._toItem(n._items()),s={};if(null!=i)null!=(a=o._dimensionDefinition())&&(s[a._name()]=i._value());s[o._lowerFieldDefinition._field()._name()]=r.lower,s[o._upperFieldDefinition._field()._name()]=r.upper,n._assign(s)}else if(o instanceof _._AggregateDateRangeCartesianValueDefinition){var a;r=o._toItem(n._items()),s={};if(null!=i)null!=(a=o._dimensionDefinition())&&(s[a._name()]=i._value());s[o._lowerFieldDefinition._field()._name()]=r.lower,s[o._upperFieldDefinition._field()._name()]=r.upper,n._assign(s)}return n._resetLayout(),n}return __extends(t,l),t.prototype._yLowerValue=function(t){if(arguments.length<=0)return this.__yLowerValue;this.__yLowerValue!=t&&(this.__yLowerValue=t)},t.prototype._yUpperValue=function(t){if(arguments.length<=0)return this.__yUpperValue;this.__yUpperValue!=t&&(this.__yUpperValue=t)},t.prototype._resetLayout=function(){var t=this._series()._valueDefinition();if(t instanceof _._AggregateNumberRangeCartesianValueDefinition)null!=(e=t._toItem(this._items())).lower&&null!=e.upper?(this.__yLowerValue=Math.min(e.lower,e.upper),this.__yUpperValue=Math.max(e.lower,e.upper)):(this.__yLowerValue=e.lower,this.__yUpperValue=e.upper);else if(t instanceof _._AggregateDateRangeCartesianValueDefinition){var e=t._toItem(this._items());this.__yLowerValue=Math.min(e.lower.valueOf(),e.upper.valueOf()),this.__yUpperValue=Math.max(e.lower.valueOf(),e.upper.valueOf())}},t}(_._CartesianPointData);_._XyRangeValuePointData=t}(t.models||(t.models={}))}(dv||(dv={})),function(o){!function(i){"use strict";var t=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return __extends(e,t),e.prototype._points=function(){return t.prototype._points.call(this)},Object.defineProperty(e.prototype,"ySite",{get:function(){return null==this.__ySite&&(this.__ySite=new n(this,this._valueDefinition())),this.__ySite},enumerable:!0,configurable:!0}),e.prototype._createPoint=function(t,e){return new i._XyRangeValuePointData(this,t,e)},e}(i._CartesianSeriesData);i._XyRangeValueSeriesData=t;var n=function(){function t(t,e){this.__isOrdinal=!1,this.valueCount=NaN,this.__parent=t,this.__valueDefinition=e}return Object.defineProperty(t.prototype,"name",{get:function(){return this.__valueDefinition.name},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"min",{get:function(){for(var t=null,e=0,i=this.__parent._points();e<i.length;e++){var n=i[e],o=n._yLowerValue(),r=n._yUpperValue();if(null!=o&&!isNaN(o)&&null!=r&&!isNaN(r)){var s=Math.min(o,r);(null==t||s<t)&&(t=s)}}return t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"max",{get:function(){for(var t=null,e=0,i=this.__parent._points();e<i.length;e++){var n=i[e],o=n._yLowerValue(),r=n._yUpperValue();if(null!=o&&!isNaN(o)&&null!=r&&!isNaN(r)){var s=Math.max(o,r);(null==t||t<s)&&(t=s)}}return t},enumerable:!0,configurable:!0}),t.prototype.padding=function(){return 0},Object.defineProperty(t.prototype,"dataType",{get:function(){return this.__valueDefinition instanceof i._AggregateNumberRangeCartesianValueDefinition?o.core.DataType.Number:this.__valueDefinition instanceof i._AggregateDateRangeCartesianValueDefinition?o.core.DataType.Date:null},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"isOrdinal",{get:function(){return!1},set:function(t){throw"Not support!"},enumerable:!0,configurable:!0}),t.prototype.labelFromValue=function(t,e){var i=o.plugins._Plugins._stringFormatting("Default");return null!=i?(null==e&&(o.core.isNumber(t)?e=i.defaultFormat(o.core.DataType.Number,!1):o.core.isDate(t)&&(e=i.defaultFormat(o.core.DataType.Date,!1))),i.format(e,t)):null},t.prototype.itemValue=function(t){return t},t}()}(o.models||(o.models={}))}(dv||(dv={})),function(t){!function(l){"use strict";var t=function(a){function t(t,e,i){var n=a.call(this,t,e,i)||this,o=t._valueDefinition(),r={};if(null!=i){var s=o._dimensionDefinition();null!=s&&(r[s._name()]=i._value())}return o instanceof l._AggregateCartesianValueDefinition&&(r[o._fieldDefinition()._field()._name()]=o._toItem(n._items())),n._assign(r),n._resetLayout(),n}return __extends(t,a),t.prototype._yValue=function(t){if(arguments.length<=0)return this.__yValue;this.__yValue!=t&&(this.__yValue=t)},t.prototype._yPreviousValue=function(t){if(arguments.length<=0)return this.__yPreviousValue;this.__yPreviousValue!=t&&(this.__yPreviousValue=t)},t.prototype._resetLayout=function(){var t=this._series()._valueDefinition();this.__yValue=t._toValue(this._items()),this.__yPreviousValue=null},t}(l._CartesianPointData);l._XyValuePointData=t}(t.models||(t.models={}))}(dv||(dv={})),function(r){!function(o){"use strict";var t=function(r){function t(t,e,i,n,o){return r.call(this,t,e,i,n,o)||this}return __extends(t,r),t.prototype._valueDefinition=function(){return r.prototype._valueDefinition.call(this)},t.prototype._points=function(){return r.prototype._points.call(this)},Object.defineProperty(t.prototype,"ySite",{get:function(){return null==this.__ySite&&(this.__ySite=new e(this,this._valueDefinition())),this.__ySite},enumerable:!0,configurable:!0}),t.prototype._createPoint=function(t,e){return new o._XyValuePointData(this,t,e)},t}(o._CartesianSeriesData);o._XyValueSeriesData=t;var e=function(){function t(t,e){this.__parent=t,this.__valueDefinotion=e}return Object.defineProperty(t.prototype,"name",{get:function(){return this.__valueDefinotion._fieldDefinition()._field()._name()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"min",{get:function(){for(var t=null,e=0,i=this.__parent._points();e<i.length;e++){var n=i[e]._yValue();null==n||isNaN(n)||(null==t||n<t)&&(t=n)}return t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"max",{get:function(){for(var t=null,e=0,i=this.__parent._points();e<i.length;e++){var n=i[e]._yValue();null==n||isNaN(n)||(null==t||t<n)&&(t=n)}return t},enumerable:!0,configurable:!0}),t.prototype.padding=function(){return 0},Object.defineProperty(t.prototype,"dataType",{get:function(){return this.__valueDefinotion instanceof o._AggregateCartesianValueDefinition&&this.__valueDefinotion._aggregate!=r.Aggregate.List?r.core.DataType.Number:this.__valueDefinotion._fieldDefinition()._field()._type()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"isOrdinal",{get:function(){if(!(this.__valueDefinotion instanceof o._AggregateCartesianValueDefinition))return!1;if(this.__valueDefinotion._aggregate==r.Aggregate.List){var t=this.__valueDefinotion._fieldDefinition();return t instanceof o._StringFieldDefinition||t instanceof o._BooleanFieldDefinition}},set:function(t){throw"Not support!"},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"valueCount",{get:function(){if(this.__valueDefinotion instanceof o._AggregateCartesianValueDefinition&&this.__valueDefinotion._aggregate==r.Aggregate.List){var t=this.__valueDefinotion._fieldDefinition();if(t instanceof o._StringFieldDefinition)return t._field()._values().length;if(t instanceof o._BooleanFieldDefinition)return t._field()._values().length}return NaN},enumerable:!0,configurable:!0}),t.prototype.labelFromValue=function(t,e){if(this.__valueDefinotion instanceof o._AggregateCartesianValueDefinition){var i=this.__valueDefinotion._fieldDefinition()._field();if(this.__valueDefinotion._aggregate==r.Aggregate.List){if(i instanceof o._StringFieldInfo)return i._values()[t];if(i instanceof o._BooleanFieldInfo)return i._values()[t].toString()}}var n=r.plugins._Plugins._stringFormatting("Default");return null!=n?(null==e&&(r.core.isNumber(t)?e=n.defaultFormat(r.core.DataType.Number,!1):r.core.isDate(t)&&(e=n.defaultFormat(r.core.DataType.Date,!1))),n.format(e,t)):null},t.prototype.itemValue=function(t){if(this.__valueDefinotion instanceof o._AggregateCartesianValueDefinition){var e=this.__valueDefinotion._fieldDefinition()._field();if(this.__valueDefinotion._aggregate==r.Aggregate.List&&(e instanceof o._StringFieldInfo||e instanceof o._BooleanFieldInfo))return e._values()[t]}return t},t}()}(r.models||(r.models={}))}(dv||(dv={})),function(t){!function(t){"use strict";var e=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return __extends(e,t),e.prototype._contentDefinitions=function(){return this._point()._series()._plot()._textDefinitions()},e.prototype._customTemplate=function(){var t=this._point()._text();return null!=t&&null!=t.template?t.template:null},e.prototype._defaultTemplate=function(){for(var n=[],o=[],t=function(t){var e=t._fieldDefinition()._field()._name();if(!o.some(function(t){return t==e})){var i=t._fieldDefinition()._format();i?n.push("{"+e+".value:"+i+"}"):n.push("{"+e+".value}"),o.push(e)}},e=0,i=this._contentDefinitions();e<i.length;e++){t(i[e])}return n.join("; ")},e}(t._CartesianContentSite);t._DataLabelCartesianContentSite=e}(t.models||(t.models={}))}(dv||(dv={})),function(t){!function(t){"use strict";var e=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return __extends(e,t),e.prototype._contentDefinitions=function(){return this._point()._series()._plot()._tooltipDefinitions()},e.prototype._customTemplate=function(){var t=this._point()._tooltip();return t&&t.template?t.template:null},e.prototype._defaultTemplate=function(){var n=[],o=[],t=this._point()._series(),e=t._valueDefinition()._dimensionDefinition();null!=e&&(n.push("{xField.name}: {xField.value}"),o.push(e._name()));var i=t._detailDimension();null!=i&&(n.push("{detailFields.name}: {detailFields.value}"),o.push(i._definition()._fieldDefinition()._field()._name()));for(var r=function(t){var e=t._fieldDefinition()._field()._name();if(!o.some(function(t){return t==e})){var i=t._fieldDefinition()._format();i?n.push("{"+e+".name}: {"+e+".value:"+i+"}"):n.push("{"+e+".name}: {"+e+".value}"),o.push(e)}},s=0,a=this._contentDefinitions();s<a.length;s++){r(a[s])}return n.join("\n")},e}(t._CartesianContentSite);t._TooltipCartesianContentSite=e}(t.models||(t.models={}))}(dv||(dv={})),function(t){!function(t){"use strict";var e=function(){function t(t,e){this.__value=t,this.__index=e}return t.prototype._index=function(){return this.__index},t.prototype._value=function(){return this.__value},t}();t._DimensionValue=e}(t.models||(t.models={}))}(dv||(dv={})),function(t){!function(t){"use strict";var e=function(){function t(t,e){this.__definition=t,this.__dimensionValues=e}return t.prototype._definition=function(){return this.__definition},t.prototype._dimensionValues=function(){return this.__dimensionValues},t}();t._XDimension=e}(t.models||(t.models={}))}(dv||(dv={})),function(t){!function(t){"use strict";var e=function(o){function t(t,e,i){var n=o.call(this,e,i)||this;return n.__items=t,n}return __extends(t,o),t.prototype._contains=function(t){for(var e=0,i=this.__items.length;e<i;e++)if(this.__items[e]==t)return!0;return!1},t}(t._DimensionValue);t._CategoriedDimensionValue=e}(t.models||(t.models={}))}(dv||(dv={})),function(m){!function(y){"use strict";var t=function(o){function g(t,e,i){var n=o.call(this,t,e)||this;return n.__groups=i,n}return __extends(g,o),g._parse=function(t,e){for(var i=t._categoryFieldDefinitions(),n=t._sort(e),o=new m.core.collections.CollectionView(n),r=i.length-1;0<=r;r--){var s=i[r],a=new y._FieldDefinitionGroupDescription(s);o.groupDescriptions.push(a)}var l=[],_=[],u=0;if(null!=o.groups&&0<o.groups.length)for(var h=0,c=o.groups;h<c.length;h++){var p=c[h],f=t._filter();if(null==f||f.filter(p,"name")){var d=g._createNode(u,p,_);d instanceof y._CategoriedDimensionGroup?(l.push(d),u=d._end+1):u+=1}}return new g(t,_,l)},g._createNode=function(t,e,i){if(null!=e.groups&&0<e.groups.length){for(var n=[],o=t,r=0,s=e.groups;r<s.length;r++){var a=s[r],l=this._createNode(o,a,i);l instanceof y._CategoriedDimensionGroup?(n.push(l),o=l._end+1):o+=1}var _=null,u=m.plugins._Plugins._stringFormatting("Default");if(null!=u&&e._gd instanceof y._FieldDefinitionGroupDescription){var h=e._gd._definition._format();_=u.format(h,e.name)}else _=e.name.toString();return new y._CategoriedDimensionGroup(_,e.items,n,t,o-1)}var c=new y._CategoriedDimensionValue(e.items,e.name,t);return i.push(c),c},g.prototype._definition=function(){return o.prototype._definition.call(this)},g.prototype._dimensionValues=function(){return o.prototype._dimensionValues.call(this)},g.prototype._groups=function(){return this.__groups},g}(y._XDimension);y._XCategoriedDimension=t}(m.models||(m.models={}))}(dv||(dv={})),function(t){!function(t){"use strict";var e=function(o){function t(t,e,i){var n=o.call(this,e,i)||this;return n.__fieldDefinition=t,n}return __extends(t,o),t.prototype._contains=function(t){var e=this.__fieldDefinition._field()._toItem(t);return e instanceof Date&&this._value()instanceof Date?e.valueOf()==this._value().valueOf():this._value()==e},t}(t._DimensionValue);t._FieldDimensionValue=e}(t.models||(t.models={}))}(dv||(dv={})),function(t){!function(o){"use strict";var t=function(i){function e(t,e){return i.call(this,t,e)||this}return __extends(e,i),e._parse=function(i,t){var n=[];return null!=i&&null!=i._fieldDefinition()&&null!=i._fieldDefinition()._field()._values()?i._fieldDefinition()._field()._values().forEach(function(t,e){n.push(new o._FieldDimensionValue(i._fieldDefinition(),t,e))}):n.push(new o._ZeroDimensionValue(null)),new e(i,n)},e.prototype._definition=function(){return i.prototype._definition.call(this)},e.prototype._dimensionValues=function(){return i.prototype._dimensionValues.call(this)},e}(o._XDimension);o._XFieldDimension=t}(t.models||(t.models={}))}(dv||(dv={})),function(t){!function(t){"use strict";var e=function(e){function t(t){return e.call(this,t,0,0)||this}return __extends(t,e),t.prototype._contains=function(t){return!0},t}(t._FieldDimensionValue);t._ZeroDimensionValue=e}(t.models||(t.models={}))}(dv||(dv={})),function(t){t.models||(t.models={})}(dv||(dv={})),function(t){t.models||(t.models={})}(dv||(dv={})),function(t){t.models||(t.models={})}(dv||(dv={})),function(r){!function(t){"use strict";var e=function(){function t(t,e,i){void 0===i&&(i=0),this._padding=0,r._assertDebug(function(){return null!=t&&0<t._categoryFieldDefinitions().length}),this.__categoriedDimensionDefinition=t,this._padding=i,this.groupLevels=t._categoryFieldDefinitions().length-1,this.name=t._name(),this.dataType=t._categoryFieldDefinitions()[0]._field()._type(),this.isOrdinal=!0;var n=t._analyse(e);this.groups=n.groups,this._values=n.dimensionValues.map(function(t){return{value:t._value(),index:t._index()}})}return Object.defineProperty(t.prototype,"min",{get:function(){return 0},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"max",{get:function(){return this._values.length-1},enumerable:!0,configurable:!0}),t.prototype.padding=function(){return this._padding},Object.defineProperty(t.prototype,"valueCount",{get:function(){return this._values?this._values.length:0},enumerable:!0,configurable:!0}),t.prototype.labelFromValue=function(t,e){var i=this._values&&this._values[t],n=i&&i.value,o=r.plugins._Plugins._stringFormatting("Default");return"number"==typeof n?(null==e&&(e=this.__categoriedDimensionDefinition._categoryFieldDefinitions()[0]._format()),null==e&&o&&(e=o.defaultFormat(r.core.DataType.Number,!1))):n instanceof Date&&(null==e&&(e=this.__categoriedDimensionDefinition._categoryFieldDefinitions()[0]._format()),null==e&&o&&(e=o.defaultFormat(r.core.DataType.Date,!1))),o?o.format(e,n):null==n?null:i.value.toString()},t.prototype.itemValue=function(t){var e=this._values&&this._values[t];return e&&e.value},t}();t._XCategorySiteModel=e}(r.models||(r.models={}))}(dv||(dv={})),function(s){!function(r){"use strict";var t=function(){function t(t,e){void 0===e&&(e=0),this.__padding=e,this.__fieldDefinition=t}return Object.defineProperty(t.prototype,"name",{get:function(){return this.__fieldDefinition._field()._name()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"min",{get:function(){return this.isOrdinal?null!=this.__fieldDefinition?0:-.5:null!=this.__fieldDefinition?this.__fieldDefinition._field()._minimum():-.5},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"max",{get:function(){return this.isOrdinal?null!=this.__fieldDefinition?this.__fieldDefinition._field()._values().length-1:.5:null!=this.__fieldDefinition?this.__fieldDefinition._field()._maximum():.5},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"dataType",{get:function(){return null!=this.__fieldDefinition?this.__fieldDefinition._field()._type():null},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"isOrdinal",{get:function(){return null==this.__isOrdinal&&(this.__isOrdinal=this.__fieldDefinition._field()instanceof r._StringFieldInfo||this.__fieldDefinition._field()instanceof r._BooleanFieldInfo),this.__isOrdinal},set:function(t){this.__isOrdinal!=t&&(this.__isOrdinal=t)},enumerable:!0,configurable:!0}),t.prototype.padding=function(){return this.isOrdinal?0:this.__padding},Object.defineProperty(t.prototype,"valueCount",{get:function(){return null!=this.__fieldDefinition?this.__fieldDefinition._field()._values().length:NaN},enumerable:!0,configurable:!0}),t.prototype._field=function(){return this.__fieldDefinition},t.prototype._fieldDefinition=function(){return this.__fieldDefinition},t.prototype.labelFromValue=function(t,e){var i=this.__fieldDefinition&&this.__fieldDefinition._field();if(i){var n=void 0,o=s.plugins._Plugins._stringFormatting("Default");return i instanceof r._StringFieldInfo?n=i._values()[t]:i instanceof r._BooleanFieldInfo?n=i._values()[t]:i instanceof r._NumberFieldInfo?(n=this.isOrdinal?i._values()[t]:t,!e&&o&&(e=o.defaultFormat(s.core.DataType.Number,!1))):i instanceof r._DateFieldInfo&&(n=this.isOrdinal?i._values()[t]:t,n=new Date(n),!e&&o&&(e=o.defaultFormat(s.core.DataType.Date,!1))),o?o.format(e,n):null==n?null:n.toString()}},t.prototype.itemValue=function(t){var e=this.__fieldDefinition&&this.__fieldDefinition._field();return e instanceof r._StringFieldInfo?e._values()[t]:e instanceof r._BooleanFieldInfo?e._values()[t]:e instanceof r._NumberFieldInfo?this.isOrdinal?e._values()[t]:t:e instanceof r._DateFieldInfo?new Date(this.isOrdinal?e._values()[t]:t):null},t}();r._XSiteModel=t}(s.models||(s.models={}))}(dv||(dv={})),function(t){!function(t){"use strict";var e=function(){function t(t){void 0===t&&(t=0),this._padding=0,this._padding=t}return Object.defineProperty(t.prototype,"name",{get:function(){return""},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"min",{get:function(){return null},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"max",{get:function(){return null},enumerable:!0,configurable:!0}),t.prototype.padding=function(){return null},Object.defineProperty(t.prototype,"dataType",{get:function(){return null},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"isOrdinal",{get:function(){return!1},set:function(t){throw"Not support!"},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"valueCount",{get:function(){return NaN},enumerable:!0,configurable:!0}),t.prototype.labelFromValue=function(t,e){return null},t.prototype.itemValue=function(t){return null},t}();t._EmptySiteModel=e}(t.models||(t.models={}))}(dv||(dv={})),function(t){!function(t){"use strict";var e=function(i){function t(t,e){return i.call(this,t,e)||this}return __extends(t,i),Object.defineProperty(t.prototype,"min",{get:function(){return 0},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"max",{get:function(){return this._values.length},enumerable:!0,configurable:!0}),t}(t._XCategorySiteModel);t._RadialXCategorySiteModel=e}(t.models||(t.models={}))}(dv||(dv={})),function(t){!function(t){"use strict";var e=function(i){function t(t,e){return void 0===e&&(e=0),i.call(this,t,e)||this}return __extends(t,i),Object.defineProperty(t.prototype,"max",{get:function(){return this.isOrdinal?null!=this._fieldDefinition()?this._fieldDefinition()._field()._values().length:.5:null!=this._fieldDefinition()?this._fieldDefinition()._field()._maximum():.5},enumerable:!0,configurable:!0}),t}(t._XSiteModel);t._RadialXSiteModel=e}(t.models||(t.models={}))}(dv||(dv={})),function(u){!function(t){"use strict";var e=function(){function t(t,e){this.__majorOrdinalSite=null,this.__seriesList=[],this.__name=null,this.__dataType=null,this.__valueCount=NaN;for(var i=[],n=!1,o=0,r=this.__seriesList=t;o<r.length;o++){var s=r[o];if(null!=s){null!=s.ySite.name&&0<s.ySite.name.length&&-1==i.indexOf(s.ySite.name)&&i.push(s.ySite.name),!n&&s.ySite.isOrdinal?(this.__majorOrdinalSite=s.ySite,this.__dataType=s.ySite.dataType,(isNaN(this.__valueCount)||this.__valueCount<s.ySite.valueCount)&&(this.__valueCount=s.ySite.valueCount)):s.ySite.isOrdinal?s.ySite.dataType==u.core.DataType.Number&&(this.__dataType=s.ySite.dataType):(n=!0,this.__majorOrdinalSite=null,this.__valueCount=NaN,this.__dataType=s.ySite.dataType);var a=s.ySite.min;null!=a&&(null==this.__min||this.__min>a)&&(this.__min=a,this.__minValue=this.__min);var l=s.ySite.max;null!=l&&(null==this.__max||this.__max<l)&&(this.__max=l),e==u.ShowNulls.Zeros&&s._containsNull()&&(null==this.__min||0<this.__min)&&(this.__min=0,this.__minValue=this.__min,null==this.__max&&(this.__max=this.__min))}}if(0<i.length&&(this.__name=i.join(",")),this.__dataType==u.core.DataType.Number||this.__dataType==u.core.DataType.Date){this.__min==this.__max&&(this.__min=Math.min(0,this.__min),this.__max=Math.max(0,this.__max));var _=(this.__max-this.__min)/1.5;0<this.__min?(this.__min=this.__min-_,this.__min<0&&(this.__min=0)):this.__max<0&&(this.__max=this.__max+_,0<this.__max&&(this.__max=0))}}return Object.defineProperty(t.prototype,"name",{get:function(){return this.__name},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"min",{get:function(){return this.__min},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"max",{get:function(){return this.__max},enumerable:!0,configurable:!0}),t.prototype.padding=function(){return 0},Object.defineProperty(t.prototype,"dataType",{get:function(){return this.__dataType},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"isOrdinal",{get:function(){return null!=this.__majorOrdinalSite},set:function(t){throw"Not support!"},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"valueCount",{get:function(){return this.__valueCount},enumerable:!0,configurable:!0}),t.prototype.labelFromValue=function(t,e){if(null!=this.__majorOrdinalSite)return this.__majorOrdinalSite.labelFromValue(t,e);var i=u.plugins._Plugins._stringFormatting("Default");return null!=i?(null==e&&(u.core.isNumber(t)?e=i.defaultFormat(u.core.DataType.Number,!1):u.core.isDate(t)&&(e=i.defaultFormat(u.core.DataType.Date,!1))),i.format(e,t)):null},t.prototype.itemValue=function(t){return null!=this.__majorOrdinalSite?this.__majorOrdinalSite.itemValue(t):t},t}();t._YSiteModel=e}(u.models||(u.models={}))}(dv||(dv={})),function(t){t.models||(t.models={})}(dv||(dv={})),function(t){!function(e){"use strict";var t=function(o){function t(t,e,i){var n=o.call(this,i)||this;return n.__children=[],n.__name=t,null!=e&&(n.__value=e._toValue(i)),n}return __extends(t,o),Object.defineProperty(t.prototype,"item",{get:function(){return this.__value},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"name",{get:function(){return this.__name},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"value",{get:function(){return this._value()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"children",{get:function(){return this.__children},enumerable:!0,configurable:!0}),t.prototype._value=function(){return this.__value},t.prototype._dataLabelContentSite=function(){return new e._DataLabelHierarchicalContentSite(this)},t.prototype._tooltipContentSite=function(){return new e._TooltipHierarchicalContentSite(this)},t.prototype._levelValue=function(t){var e=0;if(t>this.depth)for(var i=0,n=this.children;i<n.length;i++){e+=n[i]._levelValue(t)}else t==this.depth&&(e=this._value());return e},t}(e._PointData);e._HierarchicalBasePointData=t}(t.models||(t.models={}))}(dv||(dv={})),function(n){!function(t){"use strict";var e=function(){function t(){}return t.prototype._apply=function(t){this._applyPlotConditionFormattingRules(t,this._createPointConditionalFormattingRules(t._option().config.rules))},t.prototype._applyPlotConditionFormattingRules=function(t,e){this._applyPointConditionFormattingRules(t.root,e)},t.prototype._applyPointConditionFormattingRules=function(t,e){for(var i=0,n=e;i<n.length;i++){n[i].evaluate(t)}for(var o=0,r=t.children;o<r.length;o++){var s=r[o];this._applyPointConditionFormattingRules(s,e)}},t.prototype._createGroupConditionalFormattingRules=function(t){var i=[];return t.forEach(function(t){if(null!=t&&"Group"==t.type){var e=n.plugins._Plugins._conditionalFormattingRule("Hierarchical",t);null!=e&&i.push(e)}}),i},t.prototype._createPointConditionalFormattingRules=function(t){var i=[];return t.forEach(function(t){if(null!=t&&"DataPoint"==t.type){var e=n.plugins._Plugins._conditionalFormattingRule("Hierarchical",t);null!=e&&i.push(e)}}),i},t}();t._HierarchicalConditionalFormattingRuleRunner=e}(n.models||(n.models={}))}(dv||(dv={})),function(h){!function(u){"use strict";var t=function(){function t(t){h._assertDebug(function(){return null!=t}),this.__point=t}return Object.defineProperty(t.prototype,"template",{get:function(){var t=this._contentDefinitions();if(t&&0<t.length){var e=this._customTemplate();return null==e&&(e=this._defaultTemplate()),e}return null},enumerable:!0,configurable:!0}),t.prototype._point=function(){return this.__point},t.prototype._root=function(){var t=this._point();return t instanceof u._HierarchicalRootPointData?t:t instanceof u._HierarchicalPointData?t._root():null},t.prototype.defaultProperty=function(t){return"value"},t.prototype.defaultFormat=function(t){return"PercentageDetail"!=t&&"PercentageLevel"!=t&&"PercentagePlot"!=t?null:h.plugins._Plugins._stringFormatting("Default").defaultFormat(h.core.DataType.Number,!0)},t.prototype.fromToken=function(t,e){if("PercentageDetail"==t)return{name:"PercentageDetail",value:this._point()._percentageDetail(),aggregate:null};if("PercentageLevel"==t)return{name:"PercentageLevel",value:this._point()._percentageLevel(),aggregate:null};if("PercentagePlot"==t)return{name:"PercentagePlot",value:this._point()._percentagePlot(),aggregate:null};if("valueField"==t){var i=this._root()._plot()._valueDefinition();if(i instanceof u._FieldValueDefinition)return{name:i.name,value:i._toItem(this._point()._items()),aggregate:h.Aggregate[i._aggregate]}}else if("detailFields"==t){var n=this._root()._plot()._detailDefinition();if(n){var o=n._fieldDefinitions();if(o&&0<o.length){var r,s=this._point().depth;if(null==e)return{name:(r=o[s-1])._field()._name(),value:r._field()._toItem(this._point()._items()),aggregate:null};if(e<s)return{name:(r=o[e])._field()._name(),value:r._field()._toItem(this._point()._items()),aggregate:null}}}}else for(var a=0,l=this._contentDefinitions();a<l.length;a++){var _=l[a];if(_._fieldDefinition()._field()._name()==t)return this._fromContentDefinition(_)}return{name:null,value:null,aggregate:null}},t.prototype._fromContentDefinition=function(t){var e=this._root()._plot()._detailDefinition();if(e){var i=e._fieldDefinitions();if(i&&0<i.length)for(var n=this._point().depth,o=0;o<i.length;o++){if(i[o]._field()._equals(t._fieldDefinition()._field()))return o<n?{name:t._fieldDefinition()._field()._name(),value:t._toItem(this._point()._items()),aggregate:h.Aggregate[t._aggregate()]}:{name:null,value:null,aggregate:null}}}return{name:t._fieldDefinition()._field()._name(),value:t._toItem(this._point()._items()),aggregate:h.Aggregate[t._aggregate()]}},t}();u._HierarchicalContentSite=t}(h.models||(h.models={}))}(dv||(dv={})),function(t){!function(n){"use strict";var t=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return __extends(e,t),e.prototype._createCategoriedDimensionDefinition=function(t){return null},e.prototype._createValueDefinitions=function(t,e,i){var n=[];if(null!=t&&0<t.length){var o=this._createValueDefinition(t[0],e,i);null!=o&&n.push(o)}return n},e.prototype._createValueDefinition=function(t,e,i){return n._FieldValueDefinition._parse(t,this._fields())},e.prototype._createDetailDefinitions=function(t){var e=[];if(null!=t&&0<t.length){var i=this._createDetailDefinition(t[0]);null!=i&&i instanceof n._HierarchicalFieldsDetailDefinition&&e.push(i)}return e},e.prototype._createDetailDefinition=function(t){return n._HierarchicalFieldsDetailDefinition._parse(t,this._fields())},e.prototype._createColorDefinition=function(t,e){return null==t?null:n._HierarchicalLegendDefinition._parse(t,this._fields())},e.prototype._createShapeDefinition=function(t){return null},e.prototype._createSizeDefinition=function(t){return null},e}(n._EncodingsAnalyser);n._HierarchicalEncodingsAnalyser=t}(t.models||(t.models={}))}(dv||(dv={})),function(r){!function(t){"use strict";var e=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return __extends(e,t),e.prototype._getColor=function(t){var e=t._root().parent._plotView()._plotAreaView()._paletteOffset(),i=t._root().parent._plotView()._plotAreaView()._dvView()._colorProvider().getColor(e++);return t._root().parent._plotView()._plotAreaView()._paletteOffset(e),t._color(i),i},e.prototype._tintColor=function(t,e,i,n){if("string"==typeof t){var o=r.core._Color.fromCss(t);t=r.core._Color.tint(o,i/n).toCss()}return t},e.prototype.getColorContext=function(t){var e,i=t._detailDefinition()._fieldDefinitions().map(function(t){return t._field()._name()});if(1==(e=null==t._colorDefinition()?[i[0]]:t._colorDefinition()._fieldDefinitions().map(function(t){return t._field()._name()})).length){var n=i.indexOf(e[0]);return n<0&&(n=0),{layers:[n],isTree:!1}}if(1<e.length){for(var o=0,r=[],s=0;s<i.length&&(i[s]!==e[o]||(r.push(s),++o!==e.length));++s);return{layers:r,isTree:!0}}},e.prototype.applyColor=function(t,e,i,n){if(!(i<e))for(var o=0;o<t.children.length;++o){var r=t.children[o];t.depth<=e?this._getColor(r):t.depth<i+1&&0<=n.indexOf(t.depth)?r._color(this._tintColor(t._color(),r,o+1,t.children.length+1)):r._color(t._color()),this.applyColor(r,e,i,n)}},e.prototype._generate=function(t,e){for(var i=0,n=t;i<n.length;i++){var o=n[i];null!=o._valueDefinition()&&this._generateColor(o)}},e.prototype._generateColor=function(t){if(t._detailDefinition()){var e=t._plotView()._plotAreaView()._paletteOffset();t.root._color(t._plotView()._plotAreaView()._dvView()._colorProvider().getColor(e));var i=this.getColorContext(t);this.applyColor(t.root,i.layers[0],i.layers[i.layers.length-1],i.layers),this._plotLegendManager().applyHierachicalPointLegend(t.root,i.layers[0])}},e}(t._LegendGenerator);t._HierarchicalLegendGenerator=e}(r.models||(r.models={}))}(dv||(dv={})),function(t){!function(l){"use strict";var t=function(a){function t(t,e,i){var n=a.call(this,t,e,i)||this;n.__textDefinitions=[],n.__tooltipDefinitions=[],n.__hasSortDefinition=!1;var o=n._createEncodingsAnalyser(e._fields())._analyse(i.encodings,n._plotView()._plotAreaView()._option().legends);if(null!=o.valueDefinitions&&0<o.valueDefinitions.length){var r=o.valueDefinitions[0];r instanceof l._FieldValueDefinition&&(n.__valueDefinition=r)}if(null!=o.detailDefinitions&&0<o.detailDefinitions.length){var s=o.detailDefinitions[0];s instanceof l._HierarchicalFieldsDetailDefinition&&(n.__detailDefinition=s)}return o.colorDefinition instanceof l._HierarchicalLegendDefinition&&(n.__colorDefinition=o.colorDefinition),n.__textDefinitions=o.textDefinitions,n.__tooltipDefinitions=o.tooltipDefinitions,n.__root=n._createHierarchicalPoints(),n}return __extends(t,a),t.prototype._plotView=function(){return a.prototype._plotView.call(this)},Object.defineProperty(t.prototype,"points",{get:function(){return this._points(this.root)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"root",{get:function(){return this.__root},enumerable:!0,configurable:!0}),t.prototype._valueDefinition=function(){return this.__valueDefinition},t.prototype._detailDefinition=function(){return this.__detailDefinition},t.prototype._colorDefinition=function(){return this.__colorDefinition},t.prototype._textDefinitions=function(){return this.__textDefinitions},t.prototype._tooltipDefinitions=function(){return this.__tooltipDefinitions},t.prototype._createEncodingsAnalyser=function(t){return new l._HierarchicalEncodingsAnalyser(t)},t.prototype._createPoint=function(t,e,i,n){return new l._HierarchicalPointData(t,e,i,n)},t.prototype._createRootPoint=function(t,e,i,n){return new l._HierarchicalRootPointData(t,e,i,n)},t.prototype._points=function(t){for(var e=[t],i=0,n=t.children;i<n.length;i++){var o=n[i];null!=o&&e.push.apply(e,this._points(o))}return e},t}(l._PlotData);l._HierarchicalPlotData=t}(t.models||(t.models={}))}(dv||(dv={})),function(n){!function(i){"use strict";var t=function(r){function e(t,e,i,n){var o=r.call(this,e,i,n)||this;return o.__parent=t,o}return __extends(e,r),Object.defineProperty(e.prototype,"parent",{get:function(){return this.__parent},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"valueDefinition",{get:function(){return this._root()._plot()._valueDefinition().name},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"depth",{get:function(){return this._parent().depth+1},enumerable:!0,configurable:!0}),e.prototype._parent=function(){return this.__parent},e.prototype._root=function(){var t=this._parent();return t instanceof e?t._root():t instanceof i._HierarchicalRootPointData?t:null},e.prototype._percentageDetail=function(){return Math.abs(this._value()/this._parent()._value())},e.prototype._percentageLevel=function(){return Math.abs(this._value()/this._root()._levelValue(this.depth))},e.prototype._percentagePlot=function(){return Math.abs(this._value()/this._root()._value())},e.prototype._style=function(){return null==this.__style&&(this.__style=new n.options._DataPointStyleOption(this._root()._plot()._option().config.style)),this.__style},e.prototype._text=function(){return null==this.__textOption&&(this.__textOption=new n.options._PlotConfigTextOption(this._root()._plot()._option().config.text)),this.__textOption},e.prototype._tooltip=function(){return null==this.__tooltipOption&&(this.__tooltipOption=new n.options._PlotConfigTooltipOption(this._root()._plot()._option().config.tooltip)),this.__tooltipOption},e}(i._HierarchicalBasePointData);i._HierarchicalPointData=t}(n.models||(n.models={}))}(dv||(dv={})),function(i){!function(t){"use strict";var e=function(r){function t(t,e,i,n){var o=r.call(this,e,i,n)||this;return o.__plot=t,o}return __extends(t,r),Object.defineProperty(t.prototype,"parent",{get:function(){return this._plot()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"valueDefinition",{get:function(){return this._plot()._valueDefinition().name},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"depth",{get:function(){return 0},enumerable:!0,configurable:!0}),t.prototype._percentageDetail=function(){return 1},t.prototype._percentageLevel=function(){return 1},t.prototype._percentagePlot=function(){return 1},t.prototype._root=function(){return this},t.prototype._plot=function(){return this.__plot},t.prototype._style=function(){return null==this.__style&&(this.__style=new i.options._DataPointStyleOption(this._plot()._option().config.style)),this.__style},t.prototype._text=function(){return null==this.__textOption&&(this.__textOption=new i.options._PlotConfigTextOption(this._plot()._option().config.text)),this.__textOption},t.prototype._tooltip=function(){return null==this.__tooltipOption&&(this.__tooltipOption=new i.options._PlotConfigTooltipOption(this._plot()._option().config.tooltip)),this.__tooltipOption},t}(t._HierarchicalBasePointData);t._HierarchicalRootPointData=e}(i.models||(i.models={}))}(dv||(dv={})),function(m){!function(y){"use strict";var t=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return __extends(e,t),e.prototype._plotView=function(){return t.prototype._plotView.call(this)},e.prototype._createHierarchicalPoints=function(){var t=this._createRootPoint(this,"",this._valueDefinition(),this._items()),e=[],i=[],n=this._plotView()._createPointView(t);if(null!=this._detailDefinition()){var o=this._detailDefinition(),r=o._sortDefinition(),s=this._items();null!=r&&(s=o._sort(this._items()),this.__hasSortDefinition=!0);for(var a=new m.core.collections.CollectionView(s),l=0,_=o._fieldDefinitions();l<_.length;l++){var u=_[l],h=new y._FieldDefinitionGroupDescription(u);a.groupDescriptions.push(h)}for(var c=0;c<a.groups.length;c++){var p=this._createPointFromGroup(t,a.groups[c]);i.push(p)}this.__hasSortDefinition||i.sort(function(t,e){return e.point.item-t.point.item});for(var f=0,d=i;f<d.length;f++){var g=d[f];n.children.push(g.children[0]),t.children.push(g.point),e.push.apply(e,g.children)}}return this._plotView()._setChildren(e.reverse()),this._plotView().viewsTree=n,t},e.prototype._createPointFromGroup=function(t,e){var i=null,n=[],o=[],r=m.plugins._Plugins._stringFormatting("Default");if(null!=r&&e._gd instanceof y._FieldDefinitionGroupDescription){var s=e._gd._definition._format();i=r.format(s,e.name)}else i=e.name.toString();var a=this._createPoint(t,i,this._valueDefinition(),e._items),l=this._plotView()._createPointView(a);if(n.push(l),null!=e.groups&&0<e.groups.length)for(var _=0;_<e.groups.length;_++){if(null!=(p=e.groups[_]).name){var u=this._createPointFromGroup(a,p);o.push(u)}}this.__hasSortDefinition||o.sort(function(t,e){return e.point.item-t.point.item});for(var h=0,c=o;h<c.length;h++){var p=c[h];l.children.push(p.children[0]),a.children.push(p.point),n.push.apply(n,p.children)}return{point:a,children:n}},e}(y._HierarchicalPlotData);y._SunburstPlotData=t}(m.models||(m.models={}))}(dv||(dv={})),function(g){!function(d){"use strict";var t=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return __extends(e,t),e.prototype._createHierarchicalPoints=function(){var t=this._createRootPoint(this,"",this._valueDefinition(),this._items()),e=[];if(null!=this._detailDefinition()){var i=this._detailDefinition(),n=i._sortDefinition(),o=this._items();null!=n&&(o=i._sort(this._items()),this.__hasSortDefinition=!0);for(var r=new g.core.collections.CollectionView(o),s=0,a=i._fieldDefinitions();s<a.length;s++){var l=a[s],_=new d._FieldDefinitionGroupDescription(l);r.groupDescriptions.push(_)}for(var u=0;u<r.groups.length;u++){var h=this._createPointFromGroupForTreeMap(t,r.groups[u]);t.children.push(h.point),e.push(h.pointView)}var c=this._plotView()._createPointView(t,e);this.__hasSortDefinition||(t.children.sort(function(t,e){return e.item-t.item}),e.sort(function(t,e){return e._data().item-t._data().item}));for(var p=0,f=e;p<f.length;p++){f[p].parent=c}}return this._plotView().viewsTree=c,t},e.prototype._createPointFromGroupForTreeMap=function(t,e){var i=null,n=g.plugins._Plugins._stringFormatting("Default");if(null!=n&&e._gd instanceof d._FieldDefinitionGroupDescription){var o=e._gd._definition._format();i=n.format(o,e.name)}else i=e.name.toString();var r=this._createPoint(t,i,this._valueDefinition(),e._items),s=[];if(null!=e.groups&&0<e.groups.length)for(var a=0;a<e.groups.length;a++){var l=e.groups[a];if(null!=l.name){var _=this._createPointFromGroupForTreeMap(r,l);r.children.push(_.point),s.push(_.pointView)}}var u=this._plotView()._createPointView(r,s);this.__hasSortDefinition||(r.children.sort(function(t,e){return e.item-t.item}),s.sort(function(t,e){return e._data().item-t._data().item}));for(var h=0,c=s;h<c.length;h++){c[h].parent=u}return{point:r,pointView:u}},e}(d._HierarchicalPlotData);d._TreemapPlotData=t}(g.models||(g.models={}))}(dv||(dv={})),function(t){!function(t){"use strict";var e=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return __extends(e,t),e.prototype._contentDefinitions=function(){return this._root()._plot()._textDefinitions()},e.prototype._customTemplate=function(){var t=this._point()._text();return null!=t&&null!=t.template?t.template:null},e.prototype._defaultTemplate=function(){var n=[],o=[],t=this._root()._plot()._detailDefinition();if(t){var e=t._fieldDefinitions();if(e&&0<e.length)for(var i=this._point().depth,r=0;r<e.length;r++){var s=e[r];r<i&&(n=["{"+("detailFields["+r+"]")+".value}"]),o.push(s._field()._name())}}for(var a=function(t){var e=t._fieldDefinition()._field()._name();if(!o.some(function(t){return t==e})){var i=t._fieldDefinition()._format();i?n.push("{"+e+".value:"+i+"}"):n.push("{"+e+".value}"),o.push(e)}},l=0,_=this._contentDefinitions();l<_.length;l++){a(_[l])}return n.join("; ")},e}(t._HierarchicalContentSite);t._DataLabelHierarchicalContentSite=e}(t.models||(t.models={}))}(dv||(dv={})),function(t){!function(t){"use strict";var e=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return __extends(e,t),e.prototype._contentDefinitions=function(){return this._root()._plot()._tooltipDefinitions()},e.prototype._customTemplate=function(){var t=this._point()._tooltip();return t&&t.template?t.template:null},e.prototype._defaultTemplate=function(){var n=[],o=[],t=this._root()._plot()._detailDefinition();if(t){var e=t._fieldDefinitions();if(e&&0<e.length)for(var i=this._point().depth,r=0;r<e.length;r++){var s=e[r],a="detailFields["+r.toString()+"]";r<i&&n.push("{"+a+".name}: {"+a+".value}"),o.push(s._field()._name())}}for(var l=function(t){var e=t._fieldDefinition()._field()._name();if(!o.some(function(t){return t==e})){var i=t._fieldDefinition()._format();i?n.push("{"+e+".name}: {"+e+".value:"+i+"}"):n.push("{"+e+".name}: {"+e+".value}"),o.push(e)}},_=0,u=this._contentDefinitions();_<u.length;_++){l(u[_])}return n.join("\n")},e}(t._HierarchicalContentSite);t._TooltipHierarchicalContentSite=e}(t.models||(t.models={}))}(dv||(dv={})),function(t){t.models||(t.models={})}(dv||(dv={})),function(t){t.models||(t.models={})}(dv||(dv={})),function(t){t.models||(t.models={})}(dv||(dv={})),function(t){t.models||(t.models={})}(dv||(dv={})),function(t){t.models||(t.models={})}(dv||(dv={})),function(t){t.models||(t.models={})}(dv||(dv={})),function(t){t.models||(t.models={})}(dv||(dv={})),function(t){!function(t){"use strict";var e=function(){function t(t){this.__minimum=null,this.__maximum=null,this.__fieldDefinition=t}return t.prototype._fieldDefinition=function(){return this.__fieldDefinition},t.prototype._minimum=function(t){if(arguments.length<=0)return this.__minimum;this.__minimum!=t&&(this.__minimum=t)},t.prototype._maximum=function(t){if(arguments.length<=0)return this.__maximum;this.__maximum!=t&&(this.__maximum=t)},t}();t._ParallelDimension=e}(t.models||(t.models={}))}(dv||(dv={})),function(t){!function(n){"use strict";var t=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return __extends(e,t),e.prototype._createCategoriedDimensionDefinition=function(t){return null},e.prototype._createValueDefinitions=function(t,e,i){var n=[];if(0<t.length){var o=this._createValueDefinition(t[0],e,i);null!=o&&n.push(o)}return n},e.prototype._createValueDefinition=function(t,e,i){return null==t?null:0<i.length?n._AggregateParallelValueDefinition._parse(t,this._fields()):n._NumberParallelValueDefinition._parse(t,this._fields())},e.prototype._createDetailDefinition=function(t){return n._FieldDetailDefinition._parse(t,this._fields())},e}(n._EncodingsAnalyser);n._ParallelEncodingsAnalyser=t}(t.models||(t.models={}))}(dv||(dv={})),function(I){!function(E){"use strict";var t=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return __extends(e,t),e.prototype._generate=function(t,e){for(var i=this._plotLegendManager(),n=0,o=t;n<o.length;n++){var r=o[n];i._apply(r._colorDefinition(),I.LegendType.Color),i._apply(r._sizeDefinition(),I.LegendType.Size),i._apply(r._shapeDefinition(),I.LegendType.Shape)}for(var s=0,a=t;s<a.length;s++){r=a[s];for(var l=i._findLegend(r._colorDefinition(),I.LegendType.Color),_=i._findLegend(r._sizeDefinition(),I.LegendType.Size),u=i._findLegend(r._shapeDefinition(),I.LegendType.Shape),h=0,c=S=r._seriesList();h<c.length;h++)for(var p=0,f=(C=c[h])._points();p<f.length;p++){var d=f[p];null!=l&&(l instanceof E._ItemizedRangePointLegend?l._add(l._definition()._fieldDefinition()._field()._toItem(d._items())):l instanceof E._ItemizedValuePointLegend&&l._add(l._definition()._fieldDefinition()._field()._toItem(d._items()))),null!=u&&u instanceof E._ItemizedValuePointLegend&&u._add(u._definition()._fieldDefinition()._field()._toItem(d._items())),null!=_&&_ instanceof E._ItemizedRangePointLegend&&_._add(_._definition()._fieldDefinition()._field()._toItem(d._items()))}}for(var g=[],y=[],m=[],v=0,w=t;v<w.length;v++){r=w[v];null!=(l=i._findLegend(r._colorDefinition(),I.LegendType.Color))&&-1==g.indexOf(l)&&(l instanceof E._ItemizedRangePointLegend?l._applyColor():l instanceof E._ItemizedValuePointLegend&&l._applyColor(),g.push(l)),null!=(_=i._findLegend(r._sizeDefinition(),I.LegendType.Size))&&-1==y.indexOf(_)&&(_ instanceof E._ItemizedRangePointLegend&&_._applySize(),y.push(_)),null!=(u=i._findLegend(r._shapeDefinition(),I.LegendType.Shape))&&-1==m.indexOf(u)&&(u instanceof E._ItemizedValuePointLegend&&u._applyShape(),m.push(u))}for(var b=0,x=t;b<x.length;b++){for(var S=(r=x[b])._seriesList(),P=(l=i._findLegend(r._colorDefinition(),I.LegendType.Color),_=i._findLegend(r._sizeDefinition(),I.LegendType.Size),u=i._findLegend(r._shapeDefinition(),I.LegendType.Shape),0),V=S;P<V.length;P++){for(var C,A=void 0,D=0,T=(C=V[P])._points();D<T.length;D++){d=T[D];if(null!=l){var L=null;l instanceof E._ItemizedRangePointLegend?L=l._findLegendItem(l._definition()._fieldDefinition()._field()._toItem(d._items())):l instanceof E._ItemizedValuePointLegend&&(L=l._findLegendItem(l._definition()._fieldDefinition()._field()._toItem(d._items()))),null!=L&&(d._color(L._color()),void 0===A?A=L._color():A!=L._color()&&(A=null))}if(null!=u){L=null;u instanceof E._ItemizedValuePointLegend&&(L=u._findLegendItem(u._definition()._fieldDefinition()._field()._toItem(d._items()))),null!=L&&d._shape(L._shape())}if(null!=_){L=null;_ instanceof E._ItemizedRangePointLegend&&(L=_._findLegendItem(_._definition()._fieldDefinition()._field()._toItem(d._items()))),null!=L&&d._size(L._size())}}null!=A&&(C.color=A)}if(1===S.length){A=S[0].color;for(var O=0,M=i._legends();O<M.length;O++){var k=M[O];if(k instanceof E._ItemizedLegend)for(var R=0,N=k._items();R<N.length;R++){(L=N[R])._seriesColor(A)}}}}},e}(E._LegendGenerator);E._ParallelLegendGenerator=t}(I.models||(I.models={}))}(dv||(dv={})),function(p){!function(y){"use strict";var t=function(g){function t(t,e,i){var n=g.call(this,t,e,i)||this,o=n._createEncodingsAnalyser(e._fields())._analyse(i.encodings,n._plotView()._plotAreaView()._option().legends);if(n.__colorDefinition=o.colorDefinition,n.__shapeDefinition=o.shapeDefinition,n.__sizeDefinition=o.sizeDefinition,1==o.valueDefinitions.length){var r=o.valueDefinitions[0];if(n.__dimensions=n._createDimensions(r),1==o.detailDefinitions.length){var s=o.detailDefinitions[0];s instanceof y._FieldDetailDefinition&&(n.__seriesList=n._createSeriesList(e._items(),r,s))}else 0==o.detailDefinitions.length&&(n.__seriesList=n._createSeriesList(e._items(),r,null));for(var a=0,l=n._seriesList();a<l.length;a++)for(var _=0,u=l[a]._points();_<u.length;_++){var h=u[_],c=h._dimension(),p=h._value();if(null!=p&&!isNaN(p)){var f=c._maximum();(null==f||isNaN(f)||f<p)&&c._maximum(p);var d=c._minimum();(null==d||isNaN(d)||p<d)&&c._minimum(p)}}}return n}return __extends(t,g),Object.defineProperty(t.prototype,"points",{get:function(){for(var t=[],e=0,i=this._seriesList();e<i.length;e++)for(var n=0,o=i[e]._points();n<o.length;n++){var r=o[n];null!=r&&t.push(r)}return t},enumerable:!0,configurable:!0}),t.prototype._colorDefinition=function(){return this.__colorDefinition},t.prototype._shapeDefinition=function(){return this.__shapeDefinition},t.prototype._sizeDefinition=function(){return this.__sizeDefinition},t.prototype._dimensions=function(){return this.__dimensions},t.prototype._seriesList=function(){return this.__seriesList},t.prototype._createEncodingsAnalyser=function(t){return new y._ParallelEncodingsAnalyser(t)},t.prototype._createDimensions=function(t){if(null==t)return null;var e=[];if(t instanceof y._ParallelValueDefinition)for(var i=0,n=t._fieldDefinitions();i<n.length;i++){var o=n[i];e.push(new y._ParallelDimension(o))}return e},t.prototype._createSeriesList=function(t,e,i){var n=[];if(null!=i){var o=new p.core.collections.CollectionView(t),r=new y._FieldDefinitionGroupDescription(i._fieldDefinition());o.groupDescriptions.push(r);for(var s=0,a=o.groups;s<a.length;s++){var l=a[s];null==(h=this._createSeries(l.items,e,new y._DetailDimension(i,l.name)))||i._excludeNulls()&&h._isNulls()||n.push(h)}}else for(var _=0,u=t;_<u.length;_++){var h,c=u[_];null!=(h=this._createSeries([c],e,null))&&n.push(h)}return n},t.prototype._createSeries=function(t,e,i){return null!=i&&e instanceof y._AggregateParallelValueDefinition?new y._AggregateValueParallelSeries(this,t,e,i):null==i&&e instanceof y._NumberParallelValueDefinition?new y._NumberValueParallelSeries(this,t,e):null},t}(y._PlotData);y._ParallelPlot=t}(p.models||(p.models={}))}(dv||(dv={})),function(t){!function(t){"use strict";var e=function(n){function i(t,e){var i=n.call(this,e)||this;return i.__fieldDefinitions=[],i.__fieldDefinitions=t,i}return __extends(i,n),Object.defineProperty(i.prototype,"name",{get:function(){return this._fieldDefinitions().map(function(t){return t._field()._name()}).join("-")},enumerable:!0,configurable:!0}),i.prototype._fieldDefinitions=function(){return this.__fieldDefinitions},i.prototype._equals=function(t){if(t instanceof i){if(this._fieldDefinitions()==t._fieldDefinitions())return!0;if(null!=this._fieldDefinitions()&&null!=t._fieldDefinitions()&&this._fieldDefinitions().length==t._fieldDefinitions().length){for(var e=0;e<this._fieldDefinitions().length;e++)if(!this._fieldDefinitions()[e]._equals(t._fieldDefinitions()[e]))return!1;return!0}}return!1},i}(t._ValueDefinition);t._ParallelValueDefinition=e}(t.models||(t.models={}))}(dv||(dv={})),function(_){!function(l){"use strict";var t=function(o){function a(t,e,i){var n=o.call(this,t,i)||this;return n.__aggregate=e,n}return __extends(a,o),a._parse=function(t,e){if(null==t.field)return null;if(t.aggregate==_.Aggregate.List)return null;if("string"!=typeof t.field)return null;for(var i=[],n=0,o=t.field.split("|");n<o.length;n++){var r=o[n],s=l._FieldDefinition._parse(r,e);null!=s&&i.push(s)}return 1<i.length?new a(i,null==t.aggregate?_.Aggregate.Sum:t.aggregate,null!=t.excludeNulls&&t.excludeNulls):null},a.prototype._aggregate=function(){return this.__aggregate},a.prototype._equals=function(t){return t instanceof a&&this._aggregate()==t._aggregate()&&o.prototype._equals.call(this,t)},a}(l._ParallelValueDefinition);l._AggregateParallelValueDefinition=t}(_.models||(_.models={}))}(dv||(dv={})),function(t){!function(l){"use strict";var t=function(i){function a(t,e){return i.call(this,t,e)||this}return __extends(a,i),a._parse=function(t,e){if(null==t.field)return null;if("string"!=typeof t.field)return null;for(var i=[],n=0,o=t.field.split("|");n<o.length;n++){var r=o[n],s=l._NumberFieldDefinition._parse(r,e);null!=s&&i.push(s)}return 1<i.length?new a(i,null!=t.excludeNulls&&t.excludeNulls):null},a.prototype._fieldDefinitions=function(){return i.prototype._fieldDefinitions.call(this)},a.prototype._equals=function(t){return t instanceof a&&i.prototype._equals.call(this,t)},a}(l._ParallelValueDefinition);l._NumberParallelValueDefinition=t}(t.models||(t.models={}))}(dv||(dv={})),function(t){t.models||(t.models={})}(dv||(dv={})),function(t){t.models||(t.models={})}(dv||(dv={})),function(t){t.models||(t.models={})}(dv||(dv={})),function(i){!function(t){"use strict";var e=function(o){function t(t,e,i){var n=o.call(this,e)||this;return n.__series=t,n.__dimension=i,n}return __extends(t,o),Object.defineProperty(t.prototype,"item",{get:function(){return this._item()},enumerable:!0,configurable:!0}),t.prototype._series=function(){return this.__series},t.prototype._item=function(){return this.__dimension._fieldDefinition()._field()._toItem(this.items)},t.prototype._value=function(){return NaN},t.prototype._style=function(){return null==this.__style&&(this.__style=new i.options._DataPointStyleOption(this._series()._plot()._option().config.style)),this.__style},t.prototype._text=function(){return null==this.__textOption&&(this.__textOption=new i.options._PlotConfigTextOption(this._series()._plot()._option().config.text)),this.__textOption},t.prototype._tooltip=function(){return null==this.__tooltipOption&&(this.__tooltipOption=new i.options._PlotConfigTooltipOption(this._series()._plot()._option().config.tooltip)),this.__tooltipOption},t.prototype._dimension=function(){return this.__dimension},t}(t._PointData);t._ParallelPoint=e}(i.models||(i.models={}))}(dv||(dv={})),function(o){!function(t){"use strict";var e=function(n){function t(t,e,i){return n.call(this,t,e,i)||this}return __extends(t,n),t.prototype._series=function(){return n.prototype._series.call(this)},t.prototype._value=function(){var t=this._series()._valueDefinition(),e=this._dimension()._fieldDefinition(),i=o.core.find(t._fieldDefinitions(),function(t){return t._equals(e)});return null!=i?i._field()._aggregate(this._items(),t._aggregate()):null},t}(t._ParallelPoint);t._AggregateValueParallelPoint=e}(o.models||(o.models={}))}(dv||(dv={})),function(o){!function(t){"use strict";var e=function(n){function t(t,e,i){return n.call(this,t,e,i)||this}return __extends(t,n),t.prototype._item=function(){return n.prototype._item.call(this)},t.prototype._series=function(){return n.prototype._series.call(this)},t.prototype._value=function(){var t=this._series()._valueDefinition(),e=this._dimension()._fieldDefinition(),i=o.core.find(t._fieldDefinitions(),function(t){return t._equals(e)});return null!=i?i._field()._toValue(this._items()):null},t}(t._ParallelPoint);t._NumberValueParallelPoint=e}(o.models||(o.models={}))}(dv||(dv={})),function(t){!function(i){"use strict";var t=function(o){function t(t,e,i){var n=o.call(this,e)||this;return n.__plot=t,n.__valueDefinition=i,n.__points=n._createPoints(e),n}return __extends(t,o),Object.defineProperty(t.prototype,"color",{get:function(){return this.__color},set:function(t){this.__color!=t&&(this.__color=t)},enumerable:!0,configurable:!0}),t.prototype._selected=function(t){if(arguments.length<=0){for(var e=0,i=this._points();e<i.length;e++){if(!i[e]._selected())return!1}return!0}for(var n=0,o=this._points();n<o.length;n++){o[n]._selected(t)}},t.prototype._plot=function(){return this.__plot},t.prototype._points=function(){return this.__points},t.prototype._isNulls=function(){for(var t=0,e=this._points();t<e.length;t++){if(null!=e[t]._value())return!1}return!0},t.prototype._valueDefinition=function(){return this.__valueDefinition},t.prototype._createPoints=function(t){for(var e=[],i=0,n=this._plot()._dimensions();i<n.length;i++){var o=n[i],r=this._createPoint(t,o);null!=r&&e.push(r)}return e},t.prototype._createPoint=function(t,e){return new i._ParallelPoint(this,t,e)},t}(i._BaseData);i._ParallelSeries=t}(t.models||(t.models={}))}(dv||(dv={})),function(t){!function(i){"use strict";var t=function(r){function t(t,e,i,n){var o=r.call(this,t,e,i)||this;return o.__detailDimension=n,o}return __extends(t,r),t.prototype._valueDefinition=function(){return r.prototype._valueDefinition.call(this)},t.prototype._createPoint=function(t,e){return new i._AggregateValueParallelPoint(this,t,e)},t}(i._ParallelSeries);i._AggregateValueParallelSeries=t}(t.models||(t.models={}))}(dv||(dv={})),function(t){!function(i){"use strict";var t=function(n){function t(t,e,i){return n.call(this,t,e,i)||this}return __extends(t,n),t.prototype._valueDefinition=function(){return n.prototype._valueDefinition.call(this)},t.prototype._createPoint=function(t,e){return new i._NumberValueParallelPoint(this,t,e)},t}(i._ParallelSeries);i._NumberValueParallelSeries=t}(t.models||(t.models={}))}(dv||(dv={})),function(t){!function(a){"use strict";var t=function(i){function t(){return null!==i&&i.apply(this,arguments)||this}return __extends(t,i),t.prototype._createCategoriedDimensionDefinition=function(t){var e=i.prototype._createCategoriedDimensionDefinition.call(this,t);return null!=e&&1==e._categoryFieldDefinitions().length?e:null},t.prototype._createValueDefinitions=function(t,e,i){var n=[];if(0<t.length){var o=this._createValueDefinition(t[0],e,i);null!=o&&n.push(o)}return n},t.prototype._createValueDefinition=function(t,e,i){if(null!=e){var n=null;if(null!=(n=a._AggregateCartesianValueDefinition._parse(t,this._fields(),e))&&n._fieldDefinition()instanceof a._NumberFieldDefinition)return n}return null},t.prototype._createDetailDefinitions=function(t){var e=[];if(null!=t&&0<t.length){var i=this._createDetailDefinition(t[0]);null!=i&&i instanceof a._FieldDetailDefinition&&e.push(i)}return e},t.prototype._createColorDefinition=function(t,e){var i=a._ValuesNameLegendDefinition._parse(t,this._fields());if(null!=i)return i;if(null!=e&&null!=e.ranges&&0<e.ranges.length){var n=a._ItemizedRangeLegendDefinition._parse(t,this._fields());if(null!=n)return n}var o=a._BinItemizedRangeLegendDefinition._parse(t,this._fields());if(null!=o)return o;if(null==e||"boolean"!=typeof e.gradient||0!=e.gradient){var r=a._LinearLegendDefinition._parse(t,this._fields());if(null!=r)return r}var s=a._ItemizedValueLegendDefinition._parse(t,this._fields());return null!=s?s:null},t.prototype._createShapeDefinition=function(t){var e=a._ValuesNameLegendDefinition._parse(t,this._fields());return null!=e?e:a._ItemizedValueLegendDefinition._parse(t,this._fields())},t.prototype._createSizeDefinition=function(t){return a._ItemizedRangeLegendDefinition._parse(t,this._fields())},t.prototype._createTextDefinitions=function(t){return[]},t}(a._EncodingsAnalyser);a._TextEncodingsAnalyser=t}(t.models||(t.models={}))}(dv||(dv={})),function(t){!function(o){"use strict";var t=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return __extends(e,t),e.prototype._createEncodingsAnalyser=function(t){return new o._TextEncodingsAnalyser(t)},e.prototype._createSeries=function(t,e,i,n){return e instanceof o._AggregateCartesianValueDefinition?new o._XyValueSeriesData(this,e,i,n,t):null},e}(o._CartesianPlotData);o._TextPlotData=t}(t.models||(t.models={}))}(dv||(dv={})),function(l){!function(t){"use strict";var e=function(){function t(){}return t.prototype.toHtml=function(t){var e=this._translateTemplate(t);return e?e.replace(/\n/g,"<br />"):""},t.prototype.toLines=function(t){var e=this._translateTemplate(t);return e?e.split("\n"):[]},t.prototype._translateTemplate=function(t){if(null==t)return null;var e=t.template;if(null==e)return null;var i=/\{\s*(([^\.\\\":\[\]\{\}]+\s+)*[^\.\\\":\[\]\{\}]+)(\[(\d+)\])?(\.[^\.\\\":\[\]\{\}]*)*\s*(\:\s*.+?)*\s*\}/g,n=e.match(i);if(null!=n&&0<n.length)for(var o=0,r=n;o<r.length;o++){var s=r[o],a=(i=/\{\s*(([^\.\\\":\[\]\{\}]+\s+)*[^\.\\\":\[\]\{\}]+)(\[(\d+)\])?((\.[^\.\\\":\[\]\{\}]*)*)\s*(\:\s*(.+))*\s*\}/g).exec(s);if(null!=a){var l=a[1],_=a[4]?parseInt(a[4]):null,u=a[5],h=a[8],c=this._translateToken(t,l,_,u,h);e=e.replace(s,c||"")}}return e},t.prototype._translateToken=function(t,e,i,n,o){n=n?n.substring(1):t.defaultProperty(e);var r=t.fromToken(e,i);if(null==r)return"";var s=new l.core._Binding(n).getValue(r);o=o||t.defaultFormat(e);var a=l.plugins._Plugins._stringFormatting("Default");return null!=a?(null==o&&(l.core.isNumber(s)?o=a.defaultFormat(l.core.DataType.Number,!1):l.core.isDate(s)&&(o=a.defaultFormat(l.core.DataType.Date,!1))),a.format(o,s)):null!=s?s.toString():""},t}();t._DataContentProvider=e}(l.models||(l.models={}))}(dv||(dv={})),function(t){t.models||(t.models={})}(dv||(dv={})),function(t){!function(t){"use strict";var e=function(){function t(){this.svgNS="http://www.w3.org/2000/svg"}return t.prototype.addSvgStopByColors=function(i,t){var n=this;this.ensureGradientOffset(t),t.forEach(function(t){var e=document.createElementNS(n.svgNS,"stop");e.setAttribute("offset",t.stop.toString()),e.setAttribute("stop-color",t.color),i.appendChild(e)})},t.prototype.addCanvasStopByColors=function(e,t){this.ensureGradientOffset(t),t.forEach(function(t){e.addColorStop(t.stop,t.color)})},t.prototype.ensureGradientOffset=function(i){var n=this,o=0,r=0;i.forEach(function(t,e){null==t.stop?(0==e&&(t.stop=0,o=e),e==i.length-1&&(t.stop=1,r=e,n.initGradientOffset(i,o,r),o=e)):o!=r&&(r=e,n.initGradientOffset(i,o,r),o=e),r++}),i.sort(function(t,e){return t.stop-e.stop})},t.prototype.initGradientOffset=function(t,e,i){var n=i-e;if(1<n)for(var o=t[i].stop-t[e].stop,r=1;r<n;r++)t[e+r].stop=t[e].stop+o/n*r},t}();t.__GradientProvider=e}(t.models||(t.models={}))}(dv||(dv={})),function(t){!function(t){"use strict";var e=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.__precision=3,t}return __extends(t,e),t.prototype.applySvgGradient=function(t,e){this.__gradient=this.createSvgGradient();var i="gradient"+(1e5*Math.random()).toFixed();return this.__gradient.setAttribute("id",i),this.addSvgDirection(e.degree),this.addSvgStopByColors(this.__gradient,e.colors),t.appendChild(this.__gradient),i},t.prototype.applyCanvasGradient=function(t,e,i){var n,o=this.convertDegToPoint(e.degree);return n=null==i?t.createLinearGradient(o.x1*t.canvas.width,o.y1*t.canvas.height,o.x2*t.canvas.width,o.y2*t.canvas.height):t.createLinearGradient(o.x1*i.width+i.left,o.y1*i.height+i.top,o.x2*i.width+i.left,o.y2*i.height+i.top),this.addCanvasStopByColors(n,e.colors),n},t.prototype.createSvgGradient=function(){return document.createElementNS(this.svgNS,"linearGradient")},t.prototype.addSvgDirection=function(t){var e=this.convertDegToPoint(t);this.__gradient.setAttribute("x1",e.x1.toFixed(this.__precision)),this.__gradient.setAttribute("y1",e.y1.toFixed(this.__precision)),this.__gradient.setAttribute("x2",e.x2.toFixed(this.__precision)),this.__gradient.setAttribute("y2",e.y2.toFixed(this.__precision))},t.prototype.convertDegToPoint=function(t){var e,i,n,o,r;t<0&&(t=360+t%360);var s=Math.floor(t/180);switch(Math.floor(t%180/45)){case 0:i=(e=this.getTriangleEdgeValue(t)).cosEdge,o=1+e.sinEdge,n=1-e.cosEdge,r=-e.sinEdge;break;case 1:i=-(e=this.getTriangleEdgeValue(90-t)).sinEdge,o=1-e.cosEdge,n=1+e.sinEdge,r=e.cosEdge;break;case 2:i=-(e=this.getTriangleEdgeValue(t-90)).sinEdge,o=e.cosEdge,n=1+e.sinEdge,r=1-e.cosEdge;break;case 3:i=(e=this.getTriangleEdgeValue(180-t)).cosEdge,o=-e.sinEdge,n=1-e.cosEdge,r=1+e.sinEdge}return s%2==0?{x1:i,y1:o,x2:n,y2:r}:{x1:n,y1:r,x2:i,y2:o}},t.prototype.getTriangleEdgeValue=function(t){var e=.5*Math.sqrt(2)*Math.cos((t+45)/180*Math.PI);return{sinEdge:Math.abs(e*Math.sin(t/180*Math.PI)),cosEdge:Math.abs(e*Math.cos(t/180*Math.PI))}},t}(t.__GradientProvider);t.__LinearGradientProvider=e}(t.models||(t.models={}))}(dv||(dv={})),function(t){!function(t){"use strict";var e=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.__precision=3,t}return __extends(t,e),t.prototype.createSvgGradient=function(){return document.createElementNS(this.svgNS,"radialGradient")},t.prototype.applySvgGradient=function(t,e){this.__gradient=this.createSvgGradient();var i="gradient"+(1e5*Math.random()).toFixed();return this.__gradient.setAttribute("id",i),this.addSvgDirection(e),this.addSvgStopByColors(this.__gradient,e.colors),t.appendChild(this.__gradient),i},t.prototype.applyCanvasGradient=function(t,e,i){var n;if(null==i)n=e.startRadius==e.endRadius?t.createRadialGradient(e.end.x*t.canvas.width,e.end.y*t.canvas.height,0,e.start.x*t.canvas.width,e.start.y*t.canvas.height,e.startRadius*t.canvas.width):t.createRadialGradient(e.end.x*t.canvas.width,e.end.y*t.canvas.height,e.endRadius,e.start.x*t.canvas.width,e.start.y*t.canvas.height,e.startRadius*t.canvas.width);else{var o=i.width>i.height?i.height:i.width;n=e.startRadius==e.endRadius?t.createRadialGradient(e.end.x*i.width+i.left,e.end.y*i.height+i.top,0,e.start.x*i.width+i.left,e.start.y*i.height+i.top,e.startRadius*o):t.createRadialGradient(e.end.x*i.width+i.left,e.end.y*i.height+i.top,e.endRadius*o,e.start.x*i.width+i.left,e.start.y*i.height+i.top,e.startRadius*o)}return this.addCanvasStopByColors(n,e.colors),n},t.prototype.addSvgDirection=function(t){this.__gradient.setAttribute("cx",t.start.x.toFixed(this.__precision)),this.__gradient.setAttribute("cy",t.start.y.toFixed(this.__precision)),this.__gradient.setAttribute("fx",t.end.x.toFixed(this.__precision)),this.__gradient.setAttribute("fy",t.end.y.toFixed(this.__precision)),t.endRadius==t.startRadius?this.__gradient.setAttribute("r",t.startRadius.toFixed(this.__precision)):(this.__gradient.setAttribute("cr",t.startRadius.toFixed(this.__precision)),this.__gradient.setAttribute("fr",t.endRadius.toFixed(this.__precision)))},t}(t.__GradientProvider);t.__RadialGradientProvider=e}(t.models||(t.models={}))}(dv||(dv={})),function(t){t.models||(t.models={})}(dv||(dv={})),function(t){t.models||(t.models={})}(dv||(dv={})),function(t){t.models||(t.models={})}(dv||(dv={})),function(i){!function(t){"use strict";var e=function(){function t(){}return Object.defineProperty(t.prototype,"name",{get:function(){return"AxisLabelHover"},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"model",{get:function(){return this.__model},enumerable:!0,configurable:!0}),t.prototype.hover=function(t,e){return e.type==i.ElementType.AxisLabel&&(this.__model=e,!0)},t.prototype.onEnter=function(t){return this.model.hover=!0,1},t.prototype.onLeave=function(t){return this.model.hover=!1,1},t.prototype.onMove=function(t){return 0},t}();t._AxisLabelHoverInteraction=e}(i.models||(i.models={}))}(dv||(dv={})),function(r){!function(t){"use strict";var e=function(){function t(){}return t.prototype.onClick=function(t,e){if(null==e||e.type!=r.ElementType.AxisLabel)return 0;var i=e,n=this._plotArea(i);if(null==n)return 0;var o=n.parent.option;return null!=o&&o.selectionMode==r.SelectionMode.Category?(this._clear(n),this._select(i),1):0},t.prototype._plotArea=function(t){var e=t.parent;return null==e?null:e.type==r.ElementType.PlotArea?e:this._plotArea(e)},t.prototype._clear=function(t){for(var e=0,i=t.plotsPanes;e<i.length;e++)for(var n=0,o=i[e].plots;n<o.length;n++)for(var r=0,s=o[n].points;r<s.length;r++){s[r].selected=!1}},t.prototype._select=function(t){for(var e=0,i=t.relatedModels();e<i.length;e++){i[e].selected=!0}},t}();t._AxisLabelSelectionInteraction=e}(r.models||(r.models={}))}(dv||(dv={})),function(u){!function(t){"use strict";var e=function(){function t(){}return t.prototype.onClick=function(t,e){if(null==e||e.type!=u.ElementType.PlotArea)return 0;for(var i=!1,n=0,o=e.plotsPanes;n<o.length;n++)for(var r=0,s=o[n].plots;r<s.length;r++)for(var a=0,l=s[r].points;a<l.length;a++){var _=l[a];_.selected&&(i=!(_.selected=!1))}return i?1:0},t.prototype._plotArea=function(t){var e=t.parent;return null==e?null:e.type==u.ElementType.PlotArea?e:this._plotArea(e)},t}();t._CancelSelectionInteraction=e}(u.models||(u.models={}))}(dv||(dv={})),function(i){!function(t){"use strict";var e=function(){function t(){}return t.prototype.onClick=function(t,e){if(null==e||e.type!=i.ElementType.AxisLabel)return 0;if(null==e.category)return 0;return 0},t.prototype._plotArea=function(t){var e=t.parent;return null==e?null:e.type==i.ElementType.PlotArea?e:this._plotArea(e)},t.prototype._select=function(t){},t}();t._CategorySelectionInteraction=e}(i.models||(i.models={}))}(dv||(dv={})),function(a){!function(t){"use strict";var e=function(){function t(){}return t.prototype.onClick=function(t,e){if(null==e||e.type!=a.ElementType.LegendItem)return 0;var i=e;i.filtered=!i.filtered;for(var n=i.filtered,o=0,r=i.relatedModels();o<r.length;o++){var s=r[o];if(s.type==a.ElementType.DataPoint)s.filtered=n;if(s.type==a.ElementType.Series)s.filtered=n}return 2},t}();t._LegendFilterInteraction=e}(a.models||(a.models={}))}(dv||(dv={})),function(i){!function(t){"use strict";var e=function(){function t(){}return Object.defineProperty(t.prototype,"name",{get:function(){return"LegendHover"},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"model",{get:function(){return this.__model},enumerable:!0,configurable:!0}),t.prototype.hover=function(t,e){return e.type==i.ElementType.LegendItem&&(this.__model=e,!0)},t.prototype.onEnter=function(t){return this.model.hover=!0,1},t.prototype.onLeave=function(t){return this.model.hover=!1,1},t.prototype.onMove=function(t){return 0},t}();t._LegendHoverInteraction=e}(i.models||(i.models={}))}(dv||(dv={})),function(v){!function(t){"use strict";var e=function(){function t(){}return t.prototype.onClick=function(t,e){if(null==e||e.type!=v.ElementType.LegendItem)return 0;var i=e,n=this._plotArea(i);if(null==n)return 0;var o=n.parent.option;if(null!=o){if(o.selectionMode==v.SelectionMode.LegendMultiple)return i.selected=!i.selected,this._select(n),1;if(o.selectionMode==v.SelectionMode.LegendSingle){for(var r=0,s=n.legends;r<s.length;r++){var a=s[r].items;if(Array.isArray(a))for(var l=0,_=a;l<_.length;l++){var u=_[l];if(u.type==v.ElementType.LegendItem){u!=i&&(u.selected=!1)}}}return i.selected=!i.selected,this._select(n),1}}return 0},t.prototype._plotArea=function(t){var e=t.parent;return null==e?null:e.type==v.ElementType.PlotArea?e:this._plotArea(e)},t.prototype._select=function(t){for(var e=0,i=t.legends;e<i.length;e++){var n=i[e].items;if(Array.isArray(n))for(var o=0,r=n;o<r.length;o++){if((f=r[o]).type==v.ElementType.LegendItem)if(!(d=f).selected)for(var s=0,a=d.relatedModels();s<a.length;s++){var l=a[s];if(l.type==v.ElementType.DataPoint)l.selected=!1;else if(l.type==v.ElementType.Series){l.selected=!1}}}for(var _=0,u=t.legends;_<u.length;_++){var h=u[_].items;if(Array.isArray(h))for(var c=0,p=h;c<p.length;c++){var f,d;if((f=p[c]).type==v.ElementType.LegendItem)if((d=f).selected)for(var g=0,y=d.relatedModels();g<y.length;g++){var m=y[g];if(m.type==v.ElementType.DataPoint)m.selected=!0;else if(m.type==v.ElementType.Series){m.selected=!0}}}}}},t}();t._LegendSelectionInteraction=e}(v.models||(v.models={}))}(dv||(dv={})),function(i){!function(t){"use strict";var e=function(){function t(){}return Object.defineProperty(t.prototype,"name",{get:function(){return"PointHover"},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"model",{get:function(){return this.__model},enumerable:!0,configurable:!0}),t.prototype.hover=function(t,e){return e.type==i.ElementType.DataPoint&&(this.__model=e,!0)},t.prototype.onEnter=function(t){return this.model.hover=!0,1},t.prototype.onLeave=function(t){return this.model.hover=!1,1},t.prototype.onMove=function(t){return 0},t}();t._PointHoverInteraction=e}(i.models||(i.models={}))}(dv||(dv={})),function(W){!function(G){"use strict";var t=function(){function t(){}return t.prototype.onClick=function(t,e){if(null==e||e.type!=W.ElementType.DataPoint)return 0;var i=e,n=this._plotArea(i);if(null==n)return 0;var o=n.parent.option;if(null!=o){if(o.selectionMode==W.SelectionMode.Points&&t.originalEvent instanceof MouseEvent&&(t.originalEvent.metaKey||t.originalEvent.ctrlKey))return i.selected?0:(i.selected=!0,1);if(o.selectionMode==W.SelectionMode.Points||o.selectionMode==W.SelectionMode.Point){for(var r=!1,s=0,a=n.plotsPanes;s<a.length;s++)for(var l=0,_=a[s].plots;l<_.length;l++)for(var u=0,h=_[l].points;u<h.length;u++){(H=h[u])!=i&&H.selected?r=!(H.selected=!1):H!=i||H.selected||(r=H.selected=!0)}return r?1:0}if(o.selectionMode==W.SelectionMode.Group){r=!1;for(var c=0,p=n.plotsPanes;c<p.length;c++)for(var f=0,d=p[c].plots;f<d.length;f++)for(var g=0,y=d[f].points;g<y.length;g++){(H=y[g]).parent!=i.parent&&H.selected?r=!(H.selected=!1):H.parent!=i.parent||H.selected||(r=H.selected=!0)}return r?1:0}if(o.selectionMode==W.SelectionMode.Color){r=!1;for(var m=0,v=n.plotsPanes;m<v.length;m++)for(var w=0,b=v[m].plots;w<b.length;w++)for(var x=0,S=b[w].points;x<S.length;x++){(H=S[x]).color!=i.color&&H.selected?r=!(H.selected=!1):H.color!=i.color||H.selected||(r=H.selected=!0)}return r?1:0}if(o.selectionMode==W.SelectionMode.Shape){r=!1;for(var P=0,V=n.plotsPanes;P<V.length;P++)for(var C=0,A=V[P].plots;C<A.length;C++)for(var D=0,T=A[C].points;D<T.length;D++){(H=T[D]).shape!=i.shape&&H.selected?r=!(H.selected=!1):H.shape!=i.shape||H.selected||(r=H.selected=!0)}return r?1:0}if(o.selectionMode==W.SelectionMode.Size){r=!1;for(var L=0,O=n.plotsPanes;L<O.length;L++)for(var M=0,k=O[L].plots;M<k.length;M++)for(var R=0,N=k[M].points;R<N.length;R++){(H=N[R]).size!=i.size&&H.selected?r=!(H.selected=!1):H.size!=i.size||H.selected||(r=H.selected=!0)}return r?1:0}if(o.selectionMode==W.SelectionMode.Category){r=!1;for(var E=0,I=n.plotsPanes;E<I.length;E++)for(var F=0,j=I[E].plots;F<j.length;F++)for(var z=0,B=j[F].points;z<B.length;z++){var H;(H=B[z])instanceof G._CartesianPointData&&i instanceof G._CartesianPointData&&(r=H.dimension==i.dimension?H.selected=!0:!(H.selected=!1))}return r?1:0}}return 0},t.prototype._plotArea=function(t){var e=t.parent;return null==e?null:e.type==W.ElementType.PlotArea?e:this._plotArea(e)},t}();G._PointSelectionInteraction=t}(W.models||(W.models={}))}(dv||(dv={})),function(i){!function(t){"use strict";var e=function(){function t(){}return Object.defineProperty(t.prototype,"name",{get:function(){return"SeriesHover"},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"model",{get:function(){return this.__model},enumerable:!0,configurable:!0}),t.prototype.hover=function(t,e){return e.type==i.ElementType.Series&&(this.__model=e,!0)},t.prototype.onEnter=function(t){return this.model.hover=!0,1},t.prototype.onLeave=function(t){return this.model.hover=!1,1},t.prototype.onMove=function(t){return 0},t}();t._SeriesHoverInteraction=e}(i.models||(i.models={}))}(dv||(dv={})),function(G){!function(t){"use strict";var e=function(){function t(){}return t.prototype.onClick=function(t,e){if(null==e||e.type!=G.ElementType.Series)return 0;var i=e,n=this._plotArea(i);if(null==n)return 0;var o=n.parent.option;if(null!=o){if(o.selectionMode==G.SelectionMode.Points&&t.originalEvent instanceof MouseEvent&&(t.originalEvent.metaKey||t.originalEvent.ctrlKey)){for(var r=!1,s=0,a=i.points;s<a.length;s++){var l=a[s];l.selected||(r=!0,l.selected=!0)}return r?1:0}if(o.selectionMode==G.SelectionMode.Points){r=!1;for(var _=0,u=n.plotsPanes;_<u.length;_++)for(var h=0,c=u[_].plots;h<c.length;h++)for(var p=0,f=c[h].points;p<f.length;p++){(H=f[p]).parent!=i&&H.selected?r=!(H.selected=!1):H.parent!=i||H.selected||(r=H.selected=!0)}return r?1:0}if(o.selectionMode==G.SelectionMode.Group){r=!1;for(var d=0,g=n.plotsPanes;d<g.length;d++)for(var y=0,m=g[d].plots;y<m.length;y++)for(var v=0,w=m[y].points;v<w.length;v++){(H=w[v]).parent!=i&&H.selected?r=!(H.selected=!1):H.parent!=i||H.selected||(r=H.selected=!0)}return r?1:0}if(o.selectionMode==G.SelectionMode.Color){r=!1;for(var b=this._hasSameColor(i),x=0,S=n.plotsPanes;x<S.length;x++)for(var P=0,V=S[x].plots;P<V.length;P++)for(var C=0,A=V[P].points;C<A.length;C++){(H=A[C]).parent==i&&b||!H.selected?H.parent==i&&b&&!H.selected&&(r=H.selected=!0):r=!(H.selected=!1)}return r?1:0}if(o.selectionMode==G.SelectionMode.Shape){r=!1;for(var D=this._hasSameShape(i),T=0,L=n.plotsPanes;T<L.length;T++)for(var O=0,M=L[T].plots;O<M.length;O++)for(var k=0,R=M[O].points;k<R.length;k++){(H=R[k]).parent==i&&D||!H.selected?H.parent==i&&D&&!H.selected&&(r=H.selected=!0):r=!(H.selected=!1)}return r?1:0}if(o.selectionMode==G.SelectionMode.Size){r=!1;for(var N=this._hasSameSize(i),E=0,I=n.plotsPanes;E<I.length;E++)for(var F=0,j=I[E].plots;F<j.length;F++)for(var z=0,B=j[F].points;z<B.length;z++){var H;(H=B[z]).parent==i&&N||!H.selected?H.parent==i&&N&&!H.selected&&(r=H.selected=!0):r=!(H.selected=!1)}return r?1:0}}return 0},t.prototype._hasSameColor=function(t){for(var e=null,i=0,n=t.points;i<n.length;i++){var o=n[i];if(null==e)e=o.color;else if(e!=o.color)return!1}return!0},t.prototype._hasSameShape=function(t){for(var e=null,i=0,n=t.points;i<n.length;i++){var o=n[i];if(null==e)e=o.shape;else if(e!=o.shape)return!1}return!0},t.prototype._hasSameSize=function(t){for(var e=null,i=0,n=t.points;i<n.length;i++){var o=n[i];if(null==e)e=o.size;else if(e!=o.size)return!1}return!0},t.prototype._plotArea=function(t){var e=t.parent;return null==e?null:e.type==G.ElementType.PlotArea?e:this._plotArea(e)},t}();t._SeriesSelectionInteraction=e}(G.models||(G.models={}))}(dv||(dv={})),function(n){!function(t){"use strict";var e=function(){function t(){}return Object.defineProperty(t.prototype,"name",{get:function(){return"ToolTipHover"},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"model",{get:function(){return this.__model},enumerable:!0,configurable:!0}),t.prototype.hover=function(t,e){return e.type==n.ElementType.DataPoint&&(this.__model=e,!0)},t.prototype.onEnter=function(t){if(null!=this.model._tooltipContentSite()){var e=n.plugins._Plugins._dataContentProvider("Default");if(null!=e){var i=e.toHtml(this.model._tooltipContentSite());i&&0<i.length&&this._showTooltip(i,new n.core.Rect(t.originalEvent.clientX,t.originalEvent.clientY,5,5),this.model._view()._plotView()._tooltipStyle())}}return 0},t.prototype.onLeave=function(t){return this._hideTooltip(),0},t.prototype.onMove=function(t){return 0},t.prototype._plotArea=function(t){var e=t.parent;return null==e?null:e.type==n.ElementType.PlotArea?e:this._plotArea(e)},t.prototype._tooltip=function(){return null==this.__tooltip&&(this.__tooltip=new n.core.Tooltip,this.__tooltip.showDelay=200),this.__tooltip},t.prototype._showTooltip=function(t,e,i){var n=this;null!=this.__tooltipTimer&&(clearTimeout(this.__tooltipTimer),this.__tooltipTimer=null),0<this._tooltip().showDelay?this.__tooltipTimer=window.setTimeout(function(){n.__tooltipTimer=null,n._tooltip().show(n._plotArea(n.model).parent.control.hostElement,t,e),n._applyTooltipStyle(i),0<n._tooltip().hideDelay&&(n.__tooltipTimer=window.setTimeout(function(){n.__tooltipTimer=null,n._tooltip().hide()},n._tooltip().hideDelay))},this._tooltip().showDelay):(this._tooltip().show(this._plotArea(this.model).parent.control.hostElement,t,e),this._applyTooltipStyle(i),0<this._tooltip().hideDelay&&(this.__tooltipTimer=window.setTimeout(function(){n.__tooltipTimer=null,n._tooltip().hide()},this._tooltip().hideDelay)))},t.prototype._hideTooltip=function(){null!=this.__tooltipTimer&&(clearTimeout(this.__tooltipTimer),this.__tooltipTimer=null),this._tooltip().hide()},t.prototype._applyTooltipStyle=function(t){var e=document.querySelector(".gcdv-tooltip");"string"==typeof t.backgroundColor&&(e.style.backgroundColor=t.backgroundColor||null),e.style.borderColor=n._cssColorFromOption(t.borderStyle.stroke)||null,e.style.borderWidth=null==t.borderStyle.strokeWidth?null:t.borderStyle.strokeWidth+"px",e.style.color=t.textStyle.color||null,e.style.fontFamily=t.textStyle.fontFamily||null,e.style.fontSize=null==t.textStyle.fontSize?null:t.textStyle.fontSize+"px",e.style.fontStyle=n.FontStyle[t.textStyle.fontStyle],e.style.fontWeight=n.FontWeight[t.textStyle.fontStyle];var i=[];t.textStyle.textDecoration.lineThrough&&i.push("line-through"),t.textStyle.textDecoration.overline&&i.push("overline"),t.textStyle.textDecoration.underline&&i.push("underline"),e.style.textDecoration=i.join(" ")},t}();t._ToolTipHoverInteraction=e}(n.models||(n.models={}))}(dv||(dv={})),function(i){!function(t){"use strict";var e=function(){function t(){}return Object.defineProperty(t.prototype,"name",{get:function(){return"TrellisColumnHeaderHover"},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"model",{get:function(){return this.__model},enumerable:!0,configurable:!0}),t.prototype.hover=function(t,e){return e.type==i.ElementType.TrellisColumnHeader&&(this.__model=e,!0)},t.prototype.onEnter=function(t){return this.model.hover=!0,1},t.prototype.onLeave=function(t){return this.model.hover=!1,1},t.prototype.onMove=function(t){return 0},t}();t._TrellisColumnHeaderHoverInteraction=e}(i.models||(i.models={}))}(dv||(dv={})),function(r){!function(t){"use strict";var e=function(){function t(){}return t.prototype.onClick=function(t,e){if(null==e||e.type!=r.ElementType.TrellisColumnHeader)return 0;var i=e,n=this._plotArea(i);if(null==n)return 0;var o=n.parent.option;if(null!=o&&(o.selectionMode==r.SelectionMode.Trellis&&null!=this._trellis(i)))return i.selected=!i.selected,1;return 0},t.prototype._plotArea=function(t){var e=t.parent;return null==e?null:e.type==r.ElementType.PlotArea?e:this._plotArea(e)},t.prototype._trellis=function(t){var e=t.parent;return null==e?null:e.type==r.ElementType.TrellisColumnHeader?this._trellis(e):e.type==r.ElementType.Trellis?e:void 0},t}();t._TrellisColumnHeaderSelectionInteraction=e}(r.models||(r.models={}))}(dv||(dv={})),function(i){!function(t){"use strict";var e=function(){function t(){}return Object.defineProperty(t.prototype,"name",{get:function(){return"TrellisRowHeaderHover"},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"model",{get:function(){return this.__model},enumerable:!0,configurable:!0}),t.prototype.hover=function(t,e){return e.type==i.ElementType.TrellisRowHeader&&(this.__model=e,!0)},t.prototype.onEnter=function(t){return this.model.hover=!0,1},t.prototype.onLeave=function(t){return this.model.hover=!1,1},t.prototype.onMove=function(t){return 0},t}();t._TrellisRowHeaderHoverInteraction=e}(i.models||(i.models={}))}(dv||(dv={})),function(r){!function(t){"use strict";var e=function(){function t(){}return t.prototype.onClick=function(t,e){if(null==e||e.type!=r.ElementType.TrellisRowHeader)return 0;var i=e,n=this._plotArea(i);if(null==n)return 0;var o=n.parent.option;if(null!=o&&(o.selectionMode==r.SelectionMode.Trellis&&null!=this._trellis(i)))return i.selected=!i.selected,1;return 0},t.prototype._plotArea=function(t){var e=t.parent;return null==e?null:e.type==r.ElementType.PlotArea?e:this._plotArea(e)},t.prototype._trellis=function(t){var e=t.parent;return null==e?null:e.type==r.ElementType.TrellisRowHeader?this._trellis(e):e.type==r.ElementType.Trellis?e:void 0},t}();t._TrellisRowHeaderSelectionInteraction=e}(r.models||(r.models={}))}(dv||(dv={})),function(t){t.models||(t.models={})}(dv||(dv={})),function(t){t.models||(t.models={})}(dv||(dv={})),function(t){t.models||(t.models={})}(dv||(dv={})),function(t){t.models||(t.models={})}(dv||(dv={})),function(i){!function(t){"use strict";var e=function(){function t(){}return t.prototype.parse=function(t,e){return i.core.Globalize.parseDate(t,e)},t}();t._DateParser=e}(i.models||(i.models={}))}(dv||(dv={})),function(t){t.models||(t.models={})}(dv||(dv={})),function(y){!function(n){"use strict";var t=function(){function t(t,e){void 0===e&&(e=!0),this.__opacity=1,this.__strokeWidth=1,this.__fontSize=null,this.__fontFamily=null,this.__devicePixelRatio=NaN,this.__fontSizeWithPixel=null,this.__fontWeight=null,this.__fontStyle=null,this._canvasRect={},this._applyCanvasClip=function(t,e){var i=this._canvasRect[e];i&&(t.beginPath(),t.rect(i.left,i.top,i.width,i.height),t.clip(),t.closePath())},this._applyCanvasStyles=function(t,e,i,n,o,r){var s,a,l=this,_=l.__canvasElement.getContext("2d"),u=l.stroke,h=l.fill,c=l.opacity,p=l.strokeWidth,f=l.strokeDasharray;if(e&&void 0!==e.opacity&&(c=e.opacity),e&&void 0!==e.stroke&&(u=e.stroke),e&&void 0!==e.strokeDasharray&&(f=e.strokeDasharray),e&&void 0!==e.fill&&"string"==typeof e.fill&&(h=l._getOpacityColor(e.fill,e["fill-opacity"])),t&&((a=y.core.cloneDeep(window.getComputedStyle(t))).fontFamily=this._convertAttribute(a.fontFamily),a.fontWeight=this._convertAttribute(a.fontWeight)),o)a?(_.globalAlpha=c,_.fillStyle=a.fill,s=a.fontStyle+" "+a.fontWeight+" "+a.fontSize+" "+a.fontFamily,_.font=s,_.font.replace(/\"/g,"'")!==s.replace(/\"/g,"'")&&(s=a.fontStyle+" "+a.fontWeight+" "+a.fontSize+" "+(_.font.split(" ").splice(1).join(" ")||"sans-serif"),_.font=s)):l.__fontSizeWithPixel?(_.globalAlpha=c,_.fillStyle=l.textFill,_.font=l.__fontSizeWithPixel+" "+(l.fontFamily||"sans-serif")):l._canvasDefaultFont&&(_.globalAlpha=c,_.fillStyle=l._canvasDefaultFont.textFill,s=l._canvasDefaultFont.fontSize+" "+l._canvasDefaultFont.fontFamily,_.font=s,_.font.replace(/\"/g,"'")!==s.replace(/\"/g,"'")&&(s=l._canvasDefaultFont.fontSize+" "+(_.font.split(" ")[1]||"sans-serif"),_.font=s));else{if(a){var d=a;if("string"==typeof u&&(u=a.stroke&&"none"!==a.stroke?a.stroke:u),"string"==typeof h&&(h=a.fill&&"none"!==a.fill?l._getOpacityColor(a.fill,d["fill-opacity"]):h),p=a.strokeWidth?a.strokeWidth:p,f=a.strokeDasharray?a.strokeDasharray:f,y.core.isString(p)){var g=y.core.asString(p,!0);g=g.replace("px",""),p=parseFloat(g)}}null!=c&&"none"!==c&&(_.globalAlpha=c),n&&null!=h&&"transparent"!==h&&"none"!==h&&(_.fillStyle=this.applyColor(h,r),_.fill()),"none"!==u&&null!=u&&0!==p&&(_.strokeStyle=this.applyColor(u,r),_.lineWidth=p,null!=f&&"none"!==f&&(f=f.match(/\d+(\.\d+)?/g),_.setLineDash(f)),_.stroke())}},this.__htmlElement=t;this.__canvasElement=document.createElement("canvas"),this.__svgEngine=new n._SvgRenderEngine(t),this.__htmlElement.appendChild(this.__canvasElement),this._applyCSSStyles=e}return Object.defineProperty(t.prototype,"element",{get:function(){return this.__canvasElement},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"opacity",{get:function(){return this.__opacity},set:function(t){this.__svgEngine.opacity=t,this.__opacity=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"fill",{get:function(){return this.__fill},set:function(t){this.__svgEngine.fill=t,this.__fill=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"stroke",{get:function(){return this.__stroke},set:function(t){this.__svgEngine.stroke=t,this.__stroke=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"strokeWidth",{get:function(){return this.__strokeWidth},set:function(t){this.__svgEngine.strokeWidth=t,this.__strokeWidth=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"strokeDasharray",{get:function(){return this.__strokeDasharray},set:function(t){this.__svgEngine.strokeDasharray=t,this.__strokeDasharray=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"textFill",{get:function(){return this.__textFill},set:function(t){this.__svgEngine.textFill=t,this.__textFill=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"fontSize",{get:function(){return this.__fontSize},set:function(t){this.__svgEngine.fontSize=t,this.__fontSize=t,this.__fontSizeWithPixel=null==t||isNaN(t)?t:t+"px"},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"fontFamily",{get:function(){return this.__fontFamily},set:function(t){this.__svgEngine.fontFamily=t,this.__fontFamily=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"fontWeight",{get:function(){return this.__fontWeight},set:function(t){this.__svgEngine.fontWeight=t,this.__fontWeight=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"fontStyle",{get:function(){return this.__fontStyle},set:function(t){this.__svgEngine.fontStyle=t,this.__fontStyle=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"textDecoration",{get:function(){return this.__textDecoration},set:function(t){this.__svgEngine.textDecoration=t,this.__textDecoration=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"devicePixelRatio",{get:function(){var t=window.devicePixelRatio||1;return t=t<1?1:t,null==this.__devicePixelRatio||isNaN(this.__devicePixelRatio)||(t=this.__devicePixelRatio),t},set:function(t){isNaN(t)||null==t||(this.__devicePixelRatio=t)},enumerable:!0,configurable:!0}),t.prototype.beginRender=function(){var t,e=this.__svgEngine.element,i=this.__htmlElement;this._applyCSSStyles&&(this.__svgEngine.beginRender(),i=e),this.__htmlElement.appendChild(e),this._canvasRect={},t=window.getComputedStyle(i),this._canvasDefaultFont={fontSize:t.fontSize,fontFamily:t.fontFamily,textFill:t.color}},t.prototype.endRender=function(){this._applyCSSStyles&&this.__svgEngine.endRender(),this.__svgEngine.element.parentNode&&this.__svgEngine.element.parentNode.removeChild(this.__svgEngine.element)},t.prototype.setViewportSize=function(t,e){var i=this.__canvasElement,n=this.devicePixelRatio;this._applyCSSStyles&&this.__svgEngine.setViewportSize(t,e),i.width=t*n,i.height=e*n,i.style.width=t+"px",i.style.height=e+"px",i.getContext("2d").scale(n,n)},t.prototype.addClipRect=function(t,e){t&&e&&(this._applyCSSStyles&&this.__svgEngine.addClipRect(t,e),this._canvasRect[e]=t)},t.prototype.drawEllipse=function(t,e,i,n,o,r){var s,a=this.__canvasElement.getContext("2d");this._applyCSSStyles&&(s=this.__svgEngine.drawEllipse(t,e,i,n,o,r)),a.save(),a.beginPath(),a.ellipse?a.ellipse(t,e,i,n,0,0,2*Math.PI):(a.translate(t,e),a.scale(1,n/i),a.translate(-t,-e),a.arc(t,e,i,0,2*Math.PI),a.scale(1,1));var l=new y.core.Rect(t-i,e-n,2*i,2*n);return this._applyCanvasStyles(s,r,o,!0,null,l),a.restore(),s},t.prototype.drawRect=function(t,e,i,n,o,r,s){var a,l=this.__canvasElement.getContext("2d");this._applyCSSStyles&&(a=this.__svgEngine.drawRect(t,e,i,n,o,r,s)),l.save(),this._applyCanvasClip(l,s),l.beginPath(),l.rect(t,e,i,n);var _=new y.core.Rect(t,e,i,n);return this._applyCanvasStyles(a,r,o,!0,null,_),l.restore(),a},t.prototype.drawLine=function(t,e,i,n,o,r){var s,a=this.__canvasElement.getContext("2d");this._applyCSSStyles&&(s=this.__svgEngine.drawLine(t,e,i,n,o,r)),a.save(),a.beginPath(),a.moveTo(t,e),a.lineTo(i,n);var l=Math.min(t,i),_=Math.min(e,n),u=Math.max(t,i)-l,h=Math.max(e,n)-_,c=new y.core.Rect(l,_,u,h);return this._applyCanvasStyles(s,r,o,!0,null,c),a.restore(),s},t.prototype.drawLines=function(t,e,i,n,o){if(t&&e&&0!==t.length&&0!==e.length){var r,s,a=this.__canvasElement.getContext("2d"),l=Math.min(t.length,e.length);this._applyCSSStyles&&(r=this.__svgEngine.drawLines([0,1],[1,0],i,n,o)),a.save();var _=this.fill;for(this.fill="none",this._applyCanvasClip(a,o),a.beginPath(),a.moveTo(t[0],e[0]),s=1;s<l;s++)a.lineTo(t[s],e[s]);var u=Math.min.apply(Math,t),h=Math.min.apply(Math,e),c=Math.max.apply(Math,t)-u,p=Math.max.apply(Math,e)-h,f=new y.core.Rect(u,h,c,p);return this._applyCanvasStyles(r,n,i,!0,null,f),a.restore(),this.fill=_,r}},t.prototype.drawSplines=function(t,e,i,n,o){if(t&&e&&0!==t.length&&0!==e.length){var r,s,a=this.__canvasElement.getContext("2d"),l=new y._Spline(t,e).calculate(),_=l.xs,u=l.ys,h=Math.min(_.length,u.length);for(this._applyCSSStyles&&(r=this.__svgEngine.drawSplines([0,1],[1,0],i,n,o)),a.save(),this._applyCanvasClip(a,o),a.beginPath(),a.moveTo(_[0],u[0]),s=1;s<h;s++)a.lineTo(_[s],u[s]);var c=Math.min.apply(Math,t),p=Math.min.apply(Math,e),f=Math.max.apply(Math,t)-c,d=Math.max.apply(Math,e)-p,g=new y.core.Rect(c,p,f,d);return this._applyCanvasStyles(r,n,i,!0,null,g),a.restore(),r}},t.prototype.drawPolygon=function(t,e,i,n,o){if(t&&e&&0!==t.length&&0!==e.length){var r,s,a=this.__canvasElement.getContext("2d"),l=Math.min(t.length,e.length);for(this._applyCSSStyles&&(r=this.__svgEngine.drawPolygon([0,1,1],[1,0,1],i,n,o)),a.save(),this._applyCanvasClip(a,o),a.beginPath(),a.moveTo(t[0],e[0]),s=1;s<l;s++)a.lineTo(t[s],e[s]);a.closePath();var _=Math.min.apply(Math,t),u=Math.min.apply(Math,e),h=Math.max.apply(Math,t)-_,c=Math.max.apply(Math,e)-u,p=new y.core.Rect(_,u,h,c);return this._applyCanvasStyles(r,n,i,!0,null,p),a.restore(),r}},t.prototype.getPieBoundRect=function(t,e,i,n,o){for(var r,s,a,l,_=n;_<=o;_+=.01){new y.core.Point(t,e);var u=t+i*Math.cos(_),h=e+i*Math.sin(_);(null==r||u<r)&&(r=u),(null==a||h<a)&&(a=h),(null==s||s<u)&&(s=u),(null==l||l<h)&&(l=h)}return new y.core.Rect(r,a,s-r,l-a)},t.prototype.drawPieSegment=function(t,e,i,n,o,r,s,a){var l,_,u=this.__canvasElement.getContext("2d"),h=n,c=n+o;return this._applyCSSStyles&&(l=this.__svgEngine.drawPieSegment(t,e,i,n,o,r,s,a)),u.save(),this._applyCanvasClip(u,a),u.beginPath(),u.arc(t,e,i,h,c,!1),_=o<0?y._Util.mergeRect(this.getPieBoundRect(t,e,i,h,2*Math.PI),this.getPieBoundRect(t,e,i,0,c)):this.getPieBoundRect(t,e,i,h,c),this._applyCanvasStyles(l,s,r,!0,null,_),u.restore(),l},t.prototype.drawDonutSegment=function(t,e,i,n,o,r,s,a,l){var _,u,h,c=this.__canvasElement.getContext("2d"),p=o,f=o+r;this._applyCSSStyles&&(_=this.__svgEngine.drawDonutSegment(t,e,i,n,o,r,s,a,l));var d,g=r>=2*Math.PI;return(u=new y.core.Point(t,e)).x+=n*Math.cos(p),u.y+=n*Math.sin(p),(h=new y.core.Point(t,e)).x+=n*Math.cos(f),h.y+=n*Math.sin(f),c.save(),this._applyCanvasClip(c,l),c.beginPath(),g?(c.arc(t,e,i,p,f,!1),c.moveTo(u.x,u.y)):(c.moveTo(u.x,u.y),c.arc(t,e,i,p,f,!1),c.lineTo(h.x,h.y)),c.arc(t,e,n,f,p,!0),d=r<0?y._Util.mergeRect(this.getPieBoundRect(t,e,n,p,2*Math.PI),this.getPieBoundRect(t,e,i,p,2*Math.PI),this.getPieBoundRect(t,e,n,0,f),this.getPieBoundRect(t,e,i,0,f)):y._Util.mergeRect(this.getPieBoundRect(t,e,n,p,f),this.getPieBoundRect(t,e,i,p,f)),this._applyCanvasStyles(_,a,s,!0,null,d),c.restore(),_},t.prototype.drawString=function(t,e,i,n){if(null!=t){var o,r=this.__canvasElement.getContext("2d");return this._applyCSSStyles&&(o=this.__svgEngine.drawString(t,e,i,n)),r.save(),r.textBaseline="bottom",this._applyCanvasStyles(o,n,i,!0,!0),r.fillText(t.trim(),e.x,e.y),this.drawTextDecoration(t.trim(),e),r.restore(),o}},t.prototype.drawStringRotated=function(t,e,i,n,o,r){if(null!=t){var s,a=this.__canvasElement.getContext("2d");a.measureText(t);return this._applyCSSStyles&&(s=this.__svgEngine.drawStringRotated(t,e,i,n,o,r)),a.save(),a.textBaseline="bottom",a.translate(i.x,i.y),a.rotate(Math.PI/180*n),a.translate(-i.x,-i.y),this._applyCanvasStyles(s,r,o,!0,!0),a.fillText(t,e.x,e.y),this.drawTextDecoration(t.trim(),e),a.restore(),s}},t.prototype.measureString=function(t,e,i,n){var o,r=this.__canvasElement.getContext("2d");return this._applyCSSStyles?this.__svgEngine.measureString(t,e,i,n):(this._applyCanvasStyles(null,null,e,!0,!0),o=r.measureText(t).width,new y.core.Size(o,1.5*parseInt(r.font)))},t.prototype.startGroup=function(t,e,i){void 0===i&&(i=!1);var n,o=this.__canvasElement.getContext("2d");return this._applyCSSStyles&&(n=this.__svgEngine.startGroup(t,e,i)),o.save(),this._applyCanvasClip(o,e),n},t.prototype.endGroup=function(){this._applyCSSStyles&&this.__svgEngine.endGroup(),this.__canvasElement.getContext("2d").restore()},t.prototype.drawImage=function(t,e,i,n,o){var r,s=this.__canvasElement.getContext("2d"),a=new Image;return this._applyCSSStyles&&(r=this.__svgEngine.drawImage(t,e,i,n,o)),a.onload=function(){s.drawImage(a,e,i,n,o)},a.src=t,r},t.prototype._getOpacityColor=function(t,e){"none"==t&&(t="transparent");var i=y.core._RgbaColor.fromCss(t);if(null!=i){if(null!=e&&1===i.alpha){var n=isNaN(e)?1:Number(e);i=new y.core._RgbaColor(i.red,i.green,i.blue,n)}return i.toCss()}var o=y.core._HslaColor.fromCss(t);if(null==o)return t;if(null!=e&&1===o.alpha){n=isNaN(e)?1:Number(e);o=new y.core._HslaColor(o.hue,o.saturation,o.lightness,n)}return o.toCss()},t.prototype._convertAttribute=function(t){var e=t;return e&&'"'===e[0]&&(e=e.substring(1)),e&&'"'===e[e.length-1]&&(e=e.slice(0,-1)),e},t.prototype.applyColor=function(t,e){var i=this.__canvasElement.getContext("2d");if(null!=t)return"string"==typeof t?t:t instanceof n.LinearGradientColor?(new n.__LinearGradientProvider).applyCanvasGradient(i,t,e):t instanceof n.RadialGradientColor?(new n.__RadialGradientProvider).applyCanvasGradient(i,t,e):void 0},t.prototype.drawTextDecoration=function(t,e){var i=this.__canvasElement.getContext("2d");if(this.textDecoration.underline||this.textDecoration.lineThrough||this.textDecoration.overline){var n=i.measureText(t).width,o=0;i.font.split(" ").some(function(t){if(-1<t.indexOf("px"))return o=parseInt(t.slice(0,-2)),!0}),this.textDecoration.underline&&this.drawLine(e.x,e.y,e.x+n,e.y,null,{stroke:i.fillStyle.toString(),strokeWidth:1,strokeDasharray:""}),this.textDecoration.lineThrough&&this.drawLine(e.x,e.y-o/2,e.x+n,e.y-o/2,null,{stroke:i.fillStyle.toString(),strokeWidth:1,strokeDasharray:""}),this.textDecoration.overline&&this.drawLine(e.x,e.y-o,e.x+n,e.y-o,null,{stroke:i.fillStyle.toString(),strokeWidth:1,strokeDasharray:""})}},t}();n._CanvasRenderEngine=t}(y.models||(y.models={}))}(dv||(dv={})),function(g){!function(n){"use strict";var t=function(){function t(t,e){void 0===e&&(e=!1),this.__opacity=1,this.__strokeWidth=1,this.__fontSize=null,this.__fontFamily=null,this.__devicePixelRatio=NaN,this.__fontSizeWithPixel=null,this.__fontWeight=null,this.__fontStyle=null,this._canvasRect={},this._applyCanvasClip=function(t,e){var i=this._canvasRect[e];i&&(t.beginPath(),t.rect(i.left,i.top,i.width,i.height),t.clip(),t.closePath())},this._applyCanvasStyles=function(t,e,i,n,o,r){var s,a,l=this,_=l.__canvasElement.getContext("2d"),u=g.FontStyle[l.fontStyle],h=l.stroke,c=l.fill,p=l.opacity,f=l.strokeWidth,d=l.strokeDasharray;null!=l.fontWeight&&(a=g.FontWeight[l.fontWeight]?g.FontWeight[l.fontWeight]:l.fontWeight.toString()),e&&void 0!==e.opacity&&(p=e.opacity),e&&void 0!==e.stroke&&(h=e.stroke),e&&void 0!==e.strokeDasharray&&(d=e.strokeDasharray),e&&void 0!==e.fill&&"string"==typeof e.fill&&(c=l._getOpacityColor(e.fill,e["fill-opacity"])),e&&void 0!==e.strokeWidth&&(f=e.strokeWidth),o?l.__fontSizeWithPixel?(_.globalAlpha=p,_.fillStyle=l.textFill,_.font=u+" "+a+" "+l.__fontSizeWithPixel+" "+(l.fontFamily||"sans-serif")):l._canvasDefaultFont&&(_.globalAlpha=p,_.fillStyle=l._canvasDefaultFont.textFill,s=u+" "+a+" "+l._canvasDefaultFont.fontSize+" "+l._canvasDefaultFont.fontFamily,_.font=s,_.font.replace(/\"/g,"'")!==s.replace(/\"/g,"'")&&(s=l._canvasDefaultFont.fontSize+" "+(_.font.split(" ")[1]||"sans-serif"),_.font=s)):(null!=p&&"none"!==p&&(_.globalAlpha=p),n&&null!=c&&"transparent"!==c&&"none"!==c&&(_.fillStyle=this.applyColor(c,r),_.fill()),"none"!==h&&null!=h&&0!==f&&(_.strokeStyle=this.applyColor(h,r),_.lineWidth=f,null!=d&&"none"!==d&&(d=d.match(/\d+(\.\d+)?/g),_.setLineDash(d)),_.stroke()))},this.__htmlElement=t;this.__canvasElement=document.createElement("canvas"),this.__htmlElement.appendChild(this.__canvasElement)}return Object.defineProperty(t.prototype,"element",{get:function(){return this.__canvasElement},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"opacity",{get:function(){return this.__opacity},set:function(t){this.__opacity=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"fill",{get:function(){return this.__fill},set:function(t){this.__fill=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"stroke",{get:function(){return this.__stroke},set:function(t){this.__stroke=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"strokeWidth",{get:function(){return this.__strokeWidth},set:function(t){this.__strokeWidth=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"strokeDasharray",{get:function(){return this.__strokeDasharray},set:function(t){this.__strokeDasharray=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"textFill",{get:function(){return this.__textFill},set:function(t){this.__textFill=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"fontSize",{get:function(){return this.__fontSize},set:function(t){this.__fontSize=t,this.__fontSizeWithPixel=null==t||isNaN(t)?t:t+"px"},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"fontFamily",{get:function(){return this.__fontFamily},set:function(t){this.__fontFamily=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"fontWeight",{get:function(){return this.__fontWeight},set:function(t){this.__fontWeight=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"fontStyle",{get:function(){return this.__fontStyle},set:function(t){this.__fontStyle=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"textDecoration",{get:function(){return this.__textDecoration},set:function(t){this.__textDecoration=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"devicePixelRatio",{get:function(){var t=window.devicePixelRatio||1;return t=t<1?1:t,null==this.__devicePixelRatio||isNaN(this.__devicePixelRatio)||(t=this.__devicePixelRatio),t},set:function(t){isNaN(t)||null==t||(this.__devicePixelRatio=t)},enumerable:!0,configurable:!0}),t.prototype.beginRender=function(){var t,e=this.__htmlElement;this._canvasRect={},t=window.getComputedStyle(e),this._canvasDefaultFont={fontSize:t.fontSize,fontFamily:t.fontFamily,textFill:t.color}},t.prototype.endRender=function(){},t.prototype.setViewportSize=function(t,e){var i=this.__canvasElement,n=this.devicePixelRatio;i.width=t*n,i.height=e*n,i.style.width=t+"px",i.style.height=e+"px",i.getContext("2d").scale(n,n)},t.prototype.addClipRect=function(t,e){t&&e&&(this._canvasRect[e]=t)},t.prototype.drawEllipse=function(t,e,i,n,o,r){var s=this.__canvasElement.getContext("2d");s.save(),s.beginPath(),s.ellipse?s.ellipse(t,e,i,n,0,0,2*Math.PI):(s.translate(t,e),s.scale(1,n/i),s.translate(-t,-e),s.arc(t,e,i,0,2*Math.PI),s.scale(1,1));var a=new g.core.Rect(t-i,e-n,2*i,2*n);this._applyCanvasStyles(void 0,r,o,!0,null,a),s.restore()},t.prototype.drawRect=function(t,e,i,n,o,r,s){var a=this.__canvasElement.getContext("2d");a.save(),this._applyCanvasClip(a,s),a.beginPath(),a.rect(t,e,i,n);var l=new g.core.Rect(t,e,i,n);this._applyCanvasStyles(void 0,r,o,!0,null,l),a.restore()},t.prototype.drawLine=function(t,e,i,n,o,r){var s=this.__canvasElement.getContext("2d");s.save(),s.beginPath(),s.moveTo(t,e),s.lineTo(i,n);var a=Math.min(t,i),l=Math.min(e,n),_=Math.max(t,i)-a,u=Math.max(e,n)-l,h=new g.core.Rect(a,l,_,u);this._applyCanvasStyles(void 0,r,o,null,null,h),s.restore()},t.prototype.drawLines=function(t,e,i,n,o){if(t&&e&&0!==t.length&&0!==e.length){var r,s=this.__canvasElement.getContext("2d"),a=Math.min(t.length,e.length);s.save();var l=this.fill;for(this.fill="none",this._applyCanvasClip(s,o),s.beginPath(),s.moveTo(t[0],e[0]),r=1;r<a;r++)s.lineTo(t[r],e[r]);var _=Math.min.apply(Math,t),u=Math.min.apply(Math,e),h=Math.max.apply(Math,t)-_,c=Math.max.apply(Math,e)-u,p=new g.core.Rect(_,u,h,c);this._applyCanvasStyles(void 0,n,i,null,null,p),s.restore(),this.fill=l}},t.prototype.drawSplines=function(t,e,i,n,o){if(t&&e&&0!==t.length&&0!==e.length){var r,s=this.__canvasElement.getContext("2d"),a=new g._Spline(t,e).calculate(),l=a.xs,_=a.ys,u=Math.min(l.length,_.length);for(s.save(),this._applyCanvasClip(s,o),s.beginPath(),s.moveTo(l[0],_[0]),r=1;r<u;r++)s.lineTo(l[r],_[r]);var h=Math.min.apply(Math,t),c=Math.min.apply(Math,e),p=Math.max.apply(Math,t)-h,f=Math.max.apply(Math,e)-c,d=new g.core.Rect(h,c,p,f);this._applyCanvasStyles(void 0,n,i,null,null,d),s.restore()}},t.prototype.drawPolygon=function(t,e,i,n,o){if(t&&e&&0!==t.length&&0!==e.length){var r,s=this.__canvasElement.getContext("2d"),a=Math.min(t.length,e.length);for(s.save(),this._applyCanvasClip(s,o),s.beginPath(),s.moveTo(t[0],e[0]),r=1;r<a;r++)s.lineTo(t[r],e[r]);s.closePath();var l=Math.min.apply(Math,t),_=Math.min.apply(Math,e),u=Math.max.apply(Math,t)-l,h=Math.max.apply(Math,e)-_,c=new g.core.Rect(l,_,u,h);this._applyCanvasStyles(void 0,n,i,!0,null,c),s.restore()}},t.prototype.getPieBoundRect=function(t,e,i,n,o){for(var r,s,a,l,_=n;_<=o;_+=.01){new g.core.Point(t,e);var u=t+i*Math.cos(_),h=e+i*Math.sin(_);(null==r||u<r)&&(r=u),(null==a||h<a)&&(a=h),(null==s||s<u)&&(s=u),(null==l||l<h)&&(l=h)}return new g.core.Rect(r,a,s-r,l-a)},t.prototype.drawPieSegment=function(t,e,i,n,o,r,s,a){var l,_=this.__canvasElement.getContext("2d"),u=n,h=n+o;_.save(),this._applyCanvasClip(_,a),_.beginPath(),_.arc(t,e,i,u,h,!1),l=o<0?g._Util.mergeRect(this.getPieBoundRect(t,e,i,u,2*Math.PI),this.getPieBoundRect(t,e,i,0,h)):this.getPieBoundRect(t,e,i,u,h),this._applyCanvasStyles(void 0,s,r,!0,null,l),_.restore()},t.prototype.drawDonutSegment=function(t,e,i,n,o,r,s,a,l){var _,u,h,c=this.__canvasElement.getContext("2d"),p=o,f=o+r,d=r>=2*Math.PI;(_=new g.core.Point(t,e)).x+=n*Math.cos(p),_.y+=n*Math.sin(p),(u=new g.core.Point(t,e)).x+=n*Math.cos(f),u.y+=n*Math.sin(f),c.save(),this._applyCanvasClip(c,l),c.beginPath(),d?(c.arc(t,e,i,p,f,!1),c.moveTo(_.x,_.y)):(c.moveTo(_.x,_.y),c.arc(t,e,i,p,f,!1),c.lineTo(u.x,u.y)),c.arc(t,e,n,f,p,!0),h=r<0?g._Util.mergeRect(this.getPieBoundRect(t,e,n,p,2*Math.PI),this.getPieBoundRect(t,e,i,p,2*Math.PI),this.getPieBoundRect(t,e,n,0,f),this.getPieBoundRect(t,e,i,0,f)):g._Util.mergeRect(this.getPieBoundRect(t,e,n,p,f),this.getPieBoundRect(t,e,i,p,f)),this._applyCanvasStyles(void 0,a,s,!0,null,h),c.restore()},t.prototype.drawString=function(t,e,i,n){if(null!=t){var o=this.__canvasElement.getContext("2d");o.save(),o.textBaseline="bottom",this._applyCanvasStyles(void 0,n,i,!0,!0),o.fillText(t.trim(),e.x,e.y),this.drawTextDecoration(t.trim(),e),o.restore()}},t.prototype.drawStringRotated=function(t,e,i,n,o,r){if(null!=t){var s=this.__canvasElement.getContext("2d");s.measureText(t);s.save(),s.textBaseline="bottom",s.translate(i.x,i.y),s.rotate(Math.PI/180*n),s.translate(-i.x,-i.y),this._applyCanvasStyles(void 0,r,o,!0,!0),s.fillText(t,e.x,e.y),this.drawTextDecoration(t.trim(),e),s.restore()}},t.prototype.measureString=function(t,e,i,n){var o,r=this.__canvasElement.getContext("2d");this._applyCanvasStyles(null,null,e,!0,!0),o=r.measureText(t).width;var s=0;return r.font.split(" ").some(function(t){if(-1<t.indexOf("px"))return s=parseInt(t.slice(0,-2)),!0}),new g.core.Size(o,1.5*s)},t.prototype.startGroup=function(t,e,i){void 0===i&&(i=!1);var n=this.__canvasElement.getContext("2d");n.save(),this._applyCanvasClip(n,e)},t.prototype.endGroup=function(){this.__canvasElement.getContext("2d").restore()},t.prototype.drawImage=function(t,e,i,n,o){var r=this.__canvasElement.getContext("2d"),s=new Image;s.onload=function(){r.drawImage(s,e,i,n,o)},s.src=t},t.prototype._getOpacityColor=function(t,e){"none"==t&&(t="transparent");var i=g.core._RgbaColor.fromCss(t);if(null!=i){if(null!=e&&1===i.alpha){var n=isNaN(e)?1:Number(e);i=new g.core._RgbaColor(i.red,i.green,i.blue,n)}return i.toCss()}var o=g.core._HslaColor.fromCss(t);if(null==o)return t;if(null!=e&&1===o.alpha){n=isNaN(e)?1:Number(e);o=new g.core._HslaColor(o.hue,o.saturation,o.lightness,n)}return o.toCss()},t.prototype._convertFontFamily=function(t){var e=t;return e&&'"'===e[0]&&(e=e.substring(1)),e&&'"'===e[e.length-1]&&(e=e.slice(0,-1)),e},t.prototype.drawTextDecoration=function(t,e){var i=this.__canvasElement.getContext("2d");if(this.textDecoration.underline||this.textDecoration.lineThrough||this.textDecoration.overline){var n=i.measureText(t).width,o=0;i.font.split(" ").some(function(t){if(-1<t.indexOf("px"))return o=parseInt(t.slice(0,-2)),!0}),this.textDecoration.underline&&this.drawLine(e.x,e.y,e.x+n,e.y,null,{stroke:i.fillStyle.toString(),strokeWidth:1,strokeDasharray:""}),this.textDecoration.lineThrough&&this.drawLine(e.x,e.y-o/2,e.x+n,e.y-o/2,null,{stroke:i.fillStyle.toString(),strokeWidth:1,strokeDasharray:""}),this.textDecoration.overline&&this.drawLine(e.x,e.y-o,e.x+n,e.y-o,null,{stroke:i.fillStyle.toString(),strokeWidth:1,strokeDasharray:""})}},t.prototype.applyColor=function(t,e){var i=this.__canvasElement.getContext("2d");if(null!=t)return"string"==typeof t?t:t instanceof n.LinearGradientColor?(new n.__LinearGradientProvider).applyCanvasGradient(i,t,e):t instanceof n.RadialGradientColor?(new n.__RadialGradientProvider).applyCanvasGradient(i,t,e):void 0},t}();n._PureCanvasRenderEngine=t}(g.models||(g.models={}))}(dv||(dv={})),function(w){!function(o){"use strict";var t=function(){function v(t){this.__precision=3,this.__positivePrecisionNumber=.001,this.devicePixelRatio=NaN,this.opacity=1,this.fill=null,this.stroke=null,this.strokeWidth=1,this.strokeDasharray=null,this.textFill=null,this.fontSize=null,this.fontFamily=null,this.fontWeight=null,this.fontStyle=null,this._savedGradient={},this._cache={},this.__htmlElement=t,this.__svgElement=document.createElementNS(v.__svgNS,"svg"),this.__textElement=this._createTextElement(new w.core.Point(-1e3,-1e3),""),this.__textGroupElement=document.createElementNS(v.__svgNS,"g"),this.__textGroupElement.appendChild(this.__textElement),this.__htmlElement.appendChild(this.__svgElement),void 0===v._isff&&(v._isff=0<=navigator.userAgent.toLowerCase().indexOf("firefox"))}return Object.defineProperty(v.prototype,"element",{get:function(){return this.__svgElement},enumerable:!0,configurable:!0}),v.prototype.beginRender=function(){for(;this.__svgElement.firstChild;)this.__svgElement.removeChild(this.__svgElement.firstChild);this.__defsElement=document.createElementNS(v.__svgNS,"defs"),this.__svgElement.appendChild(this.__defsElement),this.__svgElement.appendChild(this.__textGroupElement),this._savedGradient={}},v.prototype.endRender=function(){null!=this.__textGroupElement.parentNode&&this.__svgElement.removeChild(this.__textGroupElement)},v.prototype.setViewportSize=function(t,e){w._assertDebug(function(){return null!=t&&0<t}),w._assertDebug(function(){return null!=e&&0<e}),this.__svgElement.setAttribute("width",t.toString()),this.__svgElement.setAttribute("height",e.toString())},v.prototype.addClipRect=function(t,e){if(t&&e){var i=document.createElementNS(v.__svgNS,"clipPath"),n=document.createElementNS(v.__svgNS,"rect");n.setAttribute("x",t.left.toFixed(this.__precision)),n.setAttribute("y",t.top.toFixed(this.__precision)),n.setAttribute("width",t.width.toFixed(this.__precision)),n.setAttribute("height",t.height.toFixed(this.__precision)),i.appendChild(n),i.setAttribute("id",e),this.__svgElement.appendChild(i)}},v.prototype.drawEllipse=function(t,e,i,n,o,r){var s=document.createElementNS(v.__svgNS,"ellipse");return null!=this.opacity&&s.setAttribute("opacity",this.opacity.toString()),null!==this.strokeWidth&&(s.setAttribute("stroke-width",this.strokeWidth.toFixed(this.__precision)),0<this.strokeWidth&&(this._applyColor(s,"stroke",this.stroke),null!==this.strokeDasharray&&s.setAttribute("stroke-dasharray",this.strokeDasharray))),this._applyColor(s,"fill",this.fill),s.setAttribute("cx",t.toFixed(this.__precision)),s.setAttribute("cy",e.toFixed(this.__precision)),s.setAttribute("rx",i.toFixed(this.__precision)),s.setAttribute("ry",n.toFixed(this.__precision)),o&&s.setAttribute("class",o),this._applyStyle(s,r),this._appendChild(s),s},v.prototype.drawRect=function(t,e,i,n,o,r,s){var a=document.createElementNS(v.__svgNS,"rect");return this._applyColor(a,"fill",this.fill),null!=this.opacity&&a.setAttribute("opacity",this.opacity.toString()),null!==this.strokeWidth&&(a.setAttribute("stroke-width",this.strokeWidth.toFixed(this.__precision)),0<this.strokeWidth&&(this._applyColor(a,"stroke",this.stroke),null!==this.strokeDasharray&&a.setAttribute("stroke-dasharray",this.strokeDasharray))),a.setAttribute("x",t.toFixed(this.__precision)),a.setAttribute("y",e.toFixed(this.__precision)),0<i&&i<this.__positivePrecisionNumber?a.setAttribute("width",this.__positivePrecisionNumber.toString()):a.setAttribute("width",i.toFixed(this.__precision)),0<n&&n<this.__positivePrecisionNumber?a.setAttribute("height",this.__positivePrecisionNumber.toString()):a.setAttribute("height",n.toFixed(this.__precision)),s&&a.setAttribute("clip-path","url(#"+s+")"),o&&a.setAttribute("class",o),this._applyStyle(a,r),this._appendChild(a),a},v.prototype.drawLine=function(t,e,i,n,o,r){var s=document.createElementNS(v.__svgNS,"line");return null!=this.opacity&&s.setAttribute("opacity",this.opacity.toString()),null!==this.strokeWidth&&(s.setAttribute("stroke-width",this.strokeWidth.toFixed(this.__precision)),0<this.strokeWidth&&(this._applyColor(s,"stroke",this.stroke),null!==this.strokeDasharray&&s.setAttribute("stroke-dasharray",this.strokeDasharray))),s.setAttribute("x1",t.toFixed(this.__precision)),s.setAttribute("x2",i.toFixed(this.__precision)),s.setAttribute("y1",e.toFixed(this.__precision)),s.setAttribute("y2",n.toFixed(this.__precision)),o&&s.setAttribute("class",o),this._applyStyle(s,r),this._appendChild(s),s},v.prototype.drawLines=function(t,e,i,n,o){if(t&&e){var r=Math.min(t.length,e.length);if(0<r){var s=document.createElementNS(v.__svgNS,"polyline");null!=this.opacity&&s.setAttribute("opacity",this.opacity.toString()),null!==this.strokeWidth&&(s.setAttribute("stroke-width",this.strokeWidth.toFixed(this.__precision)),0<this.strokeWidth&&(this._applyColor(s,"stroke",this.stroke),null!==this.strokeDasharray&&s.setAttribute("stroke-dasharray",this.strokeDasharray))),s.setAttribute("fill","none");for(var a="",l=0;l<r;l++)a+=t[l].toFixed(this.__precision)+","+e[l].toFixed(this.__precision)+" ";return s.setAttribute("points",a),i&&s.setAttribute("class",i),o&&s.setAttribute("clip-path","url(#"+o+")"),this._applyStyle(s,n),this._appendChild(s),s}}return null},v.prototype.drawSplines=function(t,e,i,n,o){if(t&&e){var r=new w._Spline(t,e).calculate(),s=r.xs,a=r.ys,l=Math.min(s.length,a.length);if(0<l){var _=document.createElementNS(v.__svgNS,"polyline");null!=this.opacity&&_.setAttribute("opacity",this.opacity.toString()),null!==this.strokeWidth&&(_.setAttribute("stroke-width",this.strokeWidth.toFixed(this.__precision)),0<this.strokeWidth&&(this._applyColor(_,"stroke",this.stroke),null!==this.strokeDasharray&&_.setAttribute("stroke-dasharray",this.strokeDasharray))),_.setAttribute("fill","none");for(var u="",h=0;h<l;h++)u+=s[h].toFixed(this.__precision)+","+a[h].toFixed(this.__precision)+" ";return _.setAttribute("points",u),i&&_.setAttribute("class",i),o&&_.setAttribute("clip-path","url(#"+o+")"),this._applyStyle(_,n),this._appendChild(_),_}}return null},v.prototype.drawPolygon=function(t,e,i,n,o){if(t&&e){var r=Math.min(t.length,e.length);if(0<r){var s=document.createElementNS(v.__svgNS,"polygon");null!=this.opacity&&s.setAttribute("opacity",this.opacity.toString()),null!==this.strokeWidth&&(s.setAttribute("stroke-width",this.strokeWidth.toFixed(this.__precision)),0<this.strokeWidth&&(this._applyColor(s,"stroke",this.stroke),null!==this.strokeDasharray&&s.setAttribute("stroke-dasharray",this.strokeDasharray))),this._applyColor(s,"fill",this.fill);for(var a="",l=0;l<r;l++)a+=t[l].toFixed(this.__precision)+","+e[l].toFixed(this.__precision)+" ";return s.setAttribute("points",a),i&&s.setAttribute("class",i),o&&s.setAttribute("clip-path","url(#"+o+")"),this._applyStyle(s,n),this._appendChild(s),s}}return null},v.prototype.drawPieSegment=function(t,e,i,n,o,r,s,a){if(o>=2*Math.PI)this.drawEllipse(t,e,i,i,r,s);else{var l=document.createElementNS(v.__svgNS,"path");this._applyColor(l,"fill",this.fill),null!=this.opacity&&l.setAttribute("opacity",this.opacity.toString()),null!==this.strokeWidth&&(l.setAttribute("stroke-width",this.strokeWidth.toFixed(this.__precision)),0<this.strokeWidth&&(this._applyColor(l,"stroke",this.stroke),null!==this.strokeDasharray&&l.setAttribute("stroke-dasharray",this.strokeDasharray)));var _=new w.core.Point(t,e);_.x+=i*Math.cos(n),_.y+=i*Math.sin(n);var u=n+o,h=new w.core.Point(t,e);h.x+=i*Math.cos(u),h.y+=i*Math.sin(u);var c=" 0 0,1 ";Math.abs(o)>Math.PI&&(c=" 0 1,1 ");var p="M "+_.x.toFixed(this.__precision)+","+_.y.toFixed(this.__precision);p+=" A "+i.toFixed(this.__precision)+","+i.toFixed(this.__precision)+c,p+=h.x.toFixed(this.__precision)+","+h.y.toFixed(this.__precision),p+=" L "+t.toFixed(this.__precision)+","+e.toFixed(this.__precision)+" z",l.setAttribute("d",p),a&&l.setAttribute("clip-path","url(#"+a+")"),r&&l.setAttribute("class",r),this._applyStyle(l,s),this._appendChild(l)}},v.prototype.drawDonutSegment=function(t,e,i,n,o,r,s,a,l){var _=!1;r>=2*Math.PI&&(_=!0,r=2*Math.PI-.001);var u=document.createElementNS(v.__svgNS,"path");this._applyColor(u,"fill",this.fill),null!=this.opacity&&u.setAttribute("opacity",this.opacity.toString()),null!==this.strokeWidth&&(u.setAttribute("stroke-width",this.strokeWidth.toFixed(this.__precision)),0<this.strokeWidth&&(this._applyColor(u,"stroke",this.stroke),null!==this.strokeDasharray&&u.setAttribute("stroke-dasharray",this.strokeDasharray)));var h=new w.core.Point(t,e);h.x+=i*Math.cos(o),h.y+=i*Math.sin(o);var c=o+r,p=new w.core.Point(t,e);p.x+=i*Math.cos(c),p.y+=i*Math.sin(c);var f=new w.core.Point(t,e);f.x+=n*Math.cos(c),f.y+=n*Math.sin(c);var d=new w.core.Point(t,e);d.x+=n*Math.cos(o),d.y+=n*Math.sin(o);var g=" 0 0,1 ",y=" 0 0,0 ";Math.abs(r)>Math.PI&&(g=" 0 1,1 ",y=" 0 1,0 ");var m="M "+h.x.toFixed(3)+","+h.y.toFixed(3);return m+=" A "+i.toFixed(3)+","+i.toFixed(3)+g,m+=p.x.toFixed(3)+","+p.y.toFixed(3),m+=_?" M "+f.x.toFixed(3)+","+f.y.toFixed(3):" L "+f.x.toFixed(3)+","+f.y.toFixed(3),m+=" A "+n.toFixed(3)+","+n.toFixed(3)+y,m+=d.x.toFixed(3)+","+d.y.toFixed(3),_||(m+=" z"),u.setAttribute("d",m),l&&u.setAttribute("clip-path","url(#"+l+")"),s&&u.setAttribute("class",s),this._applyStyle(u,a),this._appendChild(u),u},v.prototype.drawString=function(t,e,i,n){var o=this._createTextElement(e,t);i&&o.setAttribute("class",i),this._applyStyle(o,n),this._appendChild(o);var r=this._getBBox(o);return o.setAttribute("y",(e.y-(r.top+r.height-e.y)).toFixed(this.__precision)),o},v.prototype.drawStringRotated=function(t,e,i,n,o,r){var s=this._createTextElement(e,t);o&&s.setAttribute("class",o),this._applyStyle(s,r);var a=document.createElementNS(v.__svgNS,"g");a.setAttribute("transform","rotate("+n.toFixed(this.__precision)+","+i.x.toFixed(this.__precision)+","+i.y.toFixed(this.__precision)+")"),a.appendChild(s),this._appendChild(a);var l=this._getBBox(s);return s.setAttribute("y",(e.y-(l.top+l.height-e.y)).toFixed(this.__precision)),s},v.prototype.measureString=function(t,e,i,n){var o=new w.core.Size(0,0);this.fontSize&&this.__textElement.setAttribute("font-size",this.fontSize),this.fontFamily&&this.__textElement.setAttribute("font-family",this.fontFamily),e&&this.__textElement.setAttribute("class",e),i&&this.__textGroupElement.setAttribute("class",i),this._applyStyle(this.__textElement,n),this._setText(this.__textElement,t);var r=this._getBBox(this.__textElement);if(o.width=r.width,o.height=r.height,this.__textElement.removeAttribute("font-size"),this.__textElement.removeAttribute("font-family"),this.__textElement.removeAttribute("class"),n)for(var s in n)this.__textElement.removeAttribute(this._deCase(s));return this.__textGroupElement.removeAttribute("class"),this.__textElement.textContent=null,o},v.prototype.startGroup=function(t,e,i){void 0===i&&(i=!1);var n=document.createElementNS(v.__svgNS,"g");return t&&n.setAttribute("class",t),e&&n.setAttribute("clip-path","url(#"+e+")"),this._appendChild(n),i&&n.transform.baseVal.appendItem(this.__svgElement.createSVGTransform()),this._group=n},v.prototype.endGroup=function(){if(this._group){var t=this._group.parentNode;t==this.__svgElement?this._group=null:this._group=t}},v.prototype.drawImage=function(t,e,i,n,o){var r=document.createElementNS(v.__svgNS,"image");return r.setAttributeNS(v.__xlinkNS,"href",t),r.setAttribute("x",e.toFixed(this.__precision)),r.setAttribute("y",i.toFixed(this.__precision)),r.setAttribute("width",n.toFixed(this.__precision)),r.setAttribute("height",o.toFixed(this.__precision)),this._appendChild(r),r},v.prototype._appendChild=function(t){var e=this._group;e||(e=this.__svgElement),e.appendChild(t)},v.prototype._setText=function(t,e){var i=e?e.toString():null;if(i&&0<=i.indexOf("tspan"))try{t.textContent=null;for(var n=new DOMParser,o='<svg xmlns="http://www.w3.org/2000/svg">'+i+"</svg>",r=n.parseFromString(o,"text/xml").documentElement.firstChild;r;)t.appendChild(t.ownerDocument.importNode(r,!0)),r=r.nextSibling}catch(t){throw new Error("Error parsing XML string.")}else t.textContent=i},v.prototype._createTextElement=function(t,e){var i=document.createElementNS(v.__svgNS,"text");if(this._setText(i,e),null!=this.textFill&&i.setAttribute("fill",this.textFill),i.setAttribute("x",t.x.toFixed(this.__precision)),i.setAttribute("y",t.y.toFixed(this.__precision)),this.fontSize&&i.setAttribute("font-size",this.fontSize),this.fontFamily&&i.setAttribute("font-family",this.fontFamily),this.fontWeight&&(w.FontWeight[this.fontWeight]?i.setAttribute("font-weight",w.FontWeight[this.fontWeight]):i.setAttribute("font-weight",this.fontWeight.toString())),this.fontStyle&&i.setAttribute("font-style",w.FontStyle[this.fontStyle]),this.textDecoration){var n=[];this.textDecoration.lineThrough&&n.push("line-through"),this.textDecoration.overline&&n.push("overline"),this.textDecoration.underline&&n.push("underline"),0<n.length&&i.setAttribute("text-decoration",n.join(" "))}return i},v.prototype._applyStyle=function(t,e){if(e)for(var i in e){var n=e[i];if(null==n||"function"==typeof n);else if("fill"===i||"stroke"===i)this._applyColor(t,i,e[i]);else if("fontWeight"===i)w.FontWeight[n]?t.setAttribute("font-weight",w.FontWeight[n]):t.setAttribute("font-weight",n.toString());else if("fontStyle"===i)t.setAttribute("font-style",w.FontStyle[n]);else if("textDecoration"===i){var o=[];this.textDecoration.lineThrough&&o.push("line-through"),this.textDecoration.overline&&o.push("overline"),this.textDecoration.underline&&o.push("underline"),0<o.length&&t.setAttribute("text-decoration",o.join(" "))}else"strokeWidth"===i?t.setAttribute("stroke-width",n):"fontSize"===i?t.setAttribute("font-size",n):"fontFamily"===i?t.setAttribute("font-family",n):"strokeDasharray"===i?t.setAttribute("stroke-dasharray",n):"color"===i?t.setAttribute("color",n):"opacity"===i?t.setAttribute("opacity",n):"_"==i.substring(0,1)||"constructor"==i||t.setAttribute(this._deCase(i),e[i])}},v.prototype._deCase=function(t){return t.replace(/[A-Z]/g,function(t){return"-"+t.toLowerCase()})},v.prototype._getBBox=function(t){var e=t.getAttribute("font-size"),i=t.getAttribute("font-family"),n=e+","+(w.core.isIE()?t.textContent:t.innerHTML)+","+t.getAttribute("x")+","+t.getAttribute("y")+i;if(null!=this._cache[n])return this._cache[n];var o=null;if(v._isff)try{var r=t.getBBox();o=new w.core.Rect(r.x,r.y,r.width,r.height)}catch(t){o=new w.core.Rect(0,0,0,0)}else{r=t.getBBox();o=new w.core.Rect(r.x,r.y,r.width,r.height)}return o.height=Math.round(1e4*o.height)/1e4,o.width=Math.round(1e4*o.width)/1e4,this._cache[n]=o},v.prototype._applyColor=function(t,e,i){var n;null!=i&&("string"==typeof i&&t.setAttribute(e,i),i instanceof o.RadialGradientColor&&(n=new o.__RadialGradientProvider,t.setAttribute(e,"url(#"+n.applySvgGradient(this.__defsElement,i)+")")),i instanceof o.LinearGradientColor&&(n=new o.__LinearGradientProvider,t.setAttribute(e,"url(#"+n.applySvgGradient(this.__defsElement,i)+")")))},v.__svgNS="http://www.w3.org/2000/svg",v.__xlinkNS="http://www.w3.org/1999/xlink",v}();o._SvgRenderEngine=t}(w.models||(w.models={}))}(dv||(dv={})),function(t){t.models||(t.models={})}(dv||(dv={})),function(t){!function(t){"use strict";var e=function(){function t(){this.__reversed=!1}return t.prototype._reversed=function(t){if(arguments.length<=0)return this.__reversed;this.__reversed!=t&&(this.__reversed=t)},t}();t._Scale=e}(t.models||(t.models={}))}(dv||(dv={})),function(i){!function(t){"use strict";var e=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.__range={start:0,end:0},t.__dateMode=i.DateMode.Day,t}return __extends(t,e),t.prototype._dateMode=function(t){if(arguments.length<=0)return this.__dateMode;this.__dateMode!=t&&(this.__dateMode=t)},t.prototype._minimum=function(){return this.__minimum},t.prototype._maximum=function(){return this.__maximum},t.prototype._domain=function(t){return this.__minimum=t.reduce(function(t,e){return t.valueOf()<e.valueOf()?t:e},this._minimum()),this.__maximum=t.reduce(function(t,e){return t.valueOf()>e.valueOf()?t:e},this._maximum()),this},t.prototype._range=function(t,e){return this.__range.start=t,this.__range.end=e,this},t.prototype._value=function(t){if(null==this._minimum()||null==this._maximum())return NaN;if(t.valueOf()<this._minimum().valueOf()||t.valueOf()>this._maximum().valueOf())return NaN;switch(this._dateMode()){case i.DateMode.Year:this._minimum().getFullYear(),this._maximum().getFullYear();return this._linearValue(t);case i.DateMode.Month:this._minimum().getFullYear(),this._maximum().getFullYear(),this._minimum().getMonth(),this._maximum().getMonth();return this._linearValue(t);case i.DateMode.DayOfWeek:case i.DateMode.Day:case i.DateMode.Hour:case i.DateMode.Minute:case i.DateMode.Second:case i.DateMode.MilliSecond:return this._linearValue(t);default:return NaN}},t.prototype._linearValue=function(t){var e;return e=this._minimum().valueOf()==this._maximum().valueOf()?.5:(t.valueOf()-this._minimum().valueOf())/(this._maximum().valueOf()-this._minimum().valueOf()),this._reversed()?(this.__range.start-this.__range.end)*e+this.__range.end:(this.__range.end-this.__range.start)*e+this.__range.start},t}(t._Scale);t._DateScale=e}(i.models||(i.models={}))}(dv||(dv={})),function(t){!function(t){"use strict";var e=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.__range={start:0,end:0},t}return __extends(t,e),t.prototype._minimum=function(){return this.__minimum},t.prototype._maximum=function(){return this.__maximum},t.prototype._domain=function(t){return this.__minimum=t.reduce(function(t,e){return t<e?t:e},this._minimum()),this.__maximum=t.reduce(function(t,e){return e<t?t:e},this._maximum()),this},t.prototype._range=function(t,e){return this.__range.start=t,this.__range.end=e,this},t.prototype._value=function(t){return null==this._minimum()||null==this._maximum()?NaN:t<this._minimum()||t>this._maximum()?NaN:(e=this._minimum()==this._maximum()?.5:(t-this._minimum())/(this._maximum()-this._minimum()),this._reversed()?(this.__range.start-this.__range.end)*e+this.__range.end:(this.__range.end-this.__range.start)*e+this.__range.start);var e},t}(t._Scale);t._LinearScale=e}(t.models||(t.models={}))}(dv||(dv={})),function(t){!function(t){"use strict";var e=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.__domains=[],t.__range={start:0,end:0},t}return __extends(t,e),t.prototype._domains=function(){return this.__domains},t.prototype._domain=function(t){for(var e=[],i=0,n=t;i<n.length;i++){var o=n[i];-1==this._indexOfDomains(o)&&e.push(o)}return this.__domains=e.concat(this._domains()),this},t.prototype._range=function(t,e){return this.__range.start=t,this.__range.end=e,this},t.prototype._value=function(t){var e,i=this._indexOfDomains(t);return null==t||-1==i||this.__range.start==this.__range.end?null:(e=1==this._domains().length?.5:i/(this._domains().length-1),this._reversed()?(this.__range.start-this.__range.end)*e+this.__range.end:(this.__range.end-this.__range.start)*e+this.__range.start)},t.prototype._indexOfDomains=function(i){var n=-1;return this._domains().some(function(t,e){return i===t?(n=e,!0):t instanceof Date&&i instanceof Date&&t.valueOf()==i.valueOf()?(n=e,!0):void 0}),n},t}(t._Scale);t._OrdinalScale=e}(t.models||(t.models={}))}(dv||(dv={})),function(e){"use strict";var t=function(){function t(t){if(null!=t)switch(t){case e.DateMode.Year:this.__plugin=new i;break;case e.DateMode.Month:this.__plugin=new n;break;case e.DateMode.DayOfWeek:this.__plugin=new o;break;case e.DateMode.Day:this.__plugin=new r;break;case e.DateMode.Hour:this.__plugin=new s;break;case e.DateMode.Minute:this.__plugin=new a;break;case e.DateMode.Second:this.__plugin=new l;break;case e.DateMode.MilliSecond:this.__plugin=new _}}return t.prototype.getDiff=function(t,e){return null==this.__plugin?(new r).getDifference(t,e):this.__plugin.getDifference(t,e)},t}();e._TimeScaleFactory=t;var i=function(){function t(){}return t.prototype.getDifference=function(t,e){return t.getFullYear()-e.getFullYear()},t}(),n=function(){function t(){}return t.prototype.getDifference=function(t,e){var i=t.getFullYear()-e.getFullYear();return t.getMonth()-e.getMonth()+12*i},t}(),o=function(){function t(){}return t.prototype.getDifference=function(t,e){return Math.ceil((t.getTime()-e.getTime())/1e3/60/60/24/7)},t}(),r=function(){function t(){}return t.prototype.getDifference=function(t,e){return Math.ceil((t.getTime()-e.getTime())/1e3/60/60/24)},t}(),s=function(){function t(){}return t.prototype.getDifference=function(t,e){return Math.ceil((t.getTime()-e.getTime())/1e3/60/60)},t}(),a=function(){function t(){}return t.prototype.getDifference=function(t,e){return Math.ceil((t.getTime()-e.getTime())/1e3/60)},t}(),l=function(){function t(){}return t.prototype.getDifference=function(t,e){return Math.ceil((t.getTime()-e.getTime())/1e3)},t}(),_=function(){function t(){}return t.prototype.getDifference=function(t,e){return Math.ceil(t.getTime()-e.getTime())},t}()}(dv||(dv={})),function(e){"use strict";var t=function(){function t(){this.__padding=0,this.__domain=[],this.__range=[],this.__reversed=!1,this.__dirty=!0,this._unit=NaN,this.__minorUnit=NaN,this._actual_unit=NaN}return t.prototype._domain=function(t){if(arguments.length<=0)return this.__domain.slice();1==t.length?(this.__domain=[t[0],t[0]],this._dirty()):1<t.length&&(null==t[0]?this.__domain=[t[1],t[1]]:null==t[1]?this.__domain=[t[0],t[0]]:this.__domain=t.slice(),this._dirty())},t.prototype._range=function(t){if(arguments.length<=0)return this.__range.slice();this.__range=t,this._dirty()},t.prototype._reversed=function(t){if(arguments.length<=0)return this.__reversed;this.__reversed!=t&&(this.__reversed=t,this._dirty())},t.prototype._padding=function(t){if(arguments.length<=0)return this.__padding;this.__padding!=t&&(this.__padding=t,this._dirty())},t.prototype._majorUnit=function(t){if(arguments.length<=0)return this._actual_unit;this._unit!=t&&(null==t?(this._unit=NaN,this._dirty()):"number"==typeof t&&(e._assertDebug(function(){return isNaN(t)||0<t}),this._unit=t,this._dirty()))},t.prototype._minorUnit=function(t){if(arguments.length<=0)return this.__minorUnit;this.__minorUnit!=t&&(this.__minorUnit=t)},t.prototype.format=function(t){if(arguments.length<=0)return this.__format;this.__format!=t&&(this.__format=t,this._dirty())},t.prototype._dirty=function(){this.__dirty=!0},t.prototype._refresh=function(){this.__dirty&&(this._calculate(),this.__dirty=!1)},Object.defineProperty(t.prototype,"startPosition",{get:function(){return this._refresh(),this.start},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"endPosition",{get:function(){return this._refresh(),this.end},enumerable:!0,configurable:!0}),t}();e._AxisScale=t}(dv||(dv={})),function(s){"use strict";var t=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.__tickNumber=10,t}return __extends(t,e),t.prototype._domain=function(t){if(arguments.length<=0)return e.prototype._domain.call(this);e.prototype._domain.call(this,t)},t.prototype.tickNumber=function(t){if(arguments.length<=0)return this.__tickNumber;this.__tickNumber!=t&&(s._assertDebug(function(){return 0<t}),this.__tickNumber=t,null==this.__tickNumber&&(this.__tickNumber=10),this._dirty())},t.prototype.min=function(){this._refresh();var t=this._domain()[0];return null!=t?Math.min(t-this._padding(),this.__niceMin):this.__niceMin},t.prototype.max=function(){this._refresh();var t=this._domain()[1];return null!=t?Math.max(t+this._padding(),this.__niceMax):this.__niceMax},t.prototype.ticks=function(){return this._refresh(),this.__ticks},t.prototype.value=function(t){if(null==t||isNaN(t))return null;this._refresh();var e=this.max(),i=this.min();return null==i&&null==e?i=e=0:null==i?i=e:null==e&&(e=i),e==i?(this.end-this.start)/2+this.start:(this.end-this.start)/(e-i)*(t-i)+this.start},t.prototype._calculate=function(){var t=this._range();this._reversed()?(this.start=t[1],this.end=t[0]):(this.start=t[0],this.end=t[1]);var e=this._domain(),i=e[0],n=e[1];null==i&&null==n?i=n=0:null==i?i=n:null==n&&(n=i),i==n&&(i<0?n=0:0<n?i=0:(i-=.5,n+=.5));var o=n-i;isNaN(this._unit)?this._actual_unit=this._calculateUnit(n-i):(this.tickNumber(Math.round(o/this._unit+.5)+1),this._actual_unit=this._unit),0==this._majorUnit()&&(this._unit=void 0,this._actual_unit=void 0),this.__niceMax=this._createNiceMaxValue(n,this._majorUnit()),this.__niceMin=this._createNiceMinValue(i,this._majorUnit()),this.__ticks=this._createTicks()},t.prototype._calculateUnit=function(t){var e=this._nicePrecision(t),i=t/this.tickNumber(),n=this._niceNumber(2*i,-e,!0);return n<i&&(n=this._niceNumber(i,1-e,!1)),n<i&&(n=this._niceTickNumber(i)),n},t.prototype._createNiceMinValue=function(t,e){return 0==e&&(e=1),Math.floor(t/e)*e},t.prototype._createNiceMaxValue=function(t,e){return 0==e&&(e=1),Math.floor(t/e)*e==t?t:(Math.floor(t/e)+1)*e},t.prototype._createTicks=function(){var t=[],e=this._domain();if(null!=e[0]&&null!=e[1]){var i=this.__niceMin,n=this.__niceMax;if(null==i||isNaN(i)||null==n||isNaN(n))return t;if(i!=n)for(var o=i,r=this._majorUnit();o-n<=s.__Constant_Precision;)t.push(o),o+=r}return t},t.prototype._nicePrecision=function(t){if(t<=0||isNaN(t))return 0;var e,i=Math.log(t)/Math.LN10;e=0<=i?Math.floor(i):Math.ceil(i);var n=t/Math.pow(10,e);return n<3&&(e=1-e,(n=t/Math.pow(10,e))<3&&(e+=1)),e},t.prototype._niceNumber=function(t,e,i){if(0==t)return t;t<0&&(t=-t);var n=t/Math.pow(10,e),o=10;return i?n<1.5?o=1:n<3?o=2:n<4.5?o=4:n<7&&(o=5):n<=1?o=1:n<=2?o=2:n<=5&&(o=5),o*Math.pow(10,e)},t.prototype._niceTickNumber=function(t){if(0==t)return t;t<0&&(t=-t);var e=Math.log(t)/Math.LN10,i=Math.floor(e),n=t/Math.pow(10,i),o=10;return n<=1?o=1:n<=2?o=2:n<=5&&(o=5),o*Math.pow(10,i)},t}(s._AxisScale);s._LinearAxisScale=t}(dv||(dv={})),function(t){"use strict";var e=function(n){function t(t,e){var i=n.call(this)||this;return i.__hasMin=t,i.__hasMax=e,i}return __extends(t,n),t.prototype._createNiceMinValue=function(t,e){return this.__hasMin?t:n.prototype._createNiceMinValue.call(this,t,e)},t.prototype._createNiceMaxValue=function(t,e){return this.__hasMax?t:n.prototype._createNiceMaxValue.call(this,t,e)},t}(t._LinearAxisScale);t._CustomLinearAxisScale=e}(dv||(dv={})),function(t){"use strict";var e=function(i){function t(t){var e=i.call(this)||this;return e.__tickNumber=10,e.__logBase=t,e}return __extends(t,i),t.prototype._domain=function(t){if(arguments.length<=0)return i.prototype._domain.call(this);i.prototype._domain.call(this,t)},t.prototype.tickNumber=function(t){if(arguments.length<=0)return this.__tickNumber;this.__tickNumber!=t&&(this.__tickNumber=t,null==this.__tickNumber&&(this.__tickNumber=10),this._dirty())},t.prototype.min=function(){this._refresh();var t=this._domain()[0];if(null==t)return this.__min;var e=t-this._padding();return 0<e&&e<this.__min?e:this.__min},t.prototype.max=function(){this._refresh();var t=this._domain()[1];return null!=t?Math.max(t+this._padding(),this.__max):this.__max},t.prototype.ticks=function(){return this._refresh(),this.__ticks},t.prototype._logBase=function(){return this.__logBase},t.prototype.value=function(t){if(null==t||isNaN(t))return null;this._refresh();var e=this.min(),i=this.max();t<e&&(t=e);var n=Math.log(i/e);return Math.log(t/e)/n*(this.end-this.start)+this.start},t.prototype._calculate=function(){var t=this._range();this._reversed()?(this.start=t[1],this.end=t[0]):(this.start=t[0],this.end=t[1]);var e=this._domain();if(this.__min=e[0],this.__max=e[1],null==this.__min&&null==this.__max?this.__min=this.__max=0:null==this.__min?this.__min=this.__max:null==this.__max&&(this.__max=this.__min),0<this._logBase()){var i=this._logBase(),n=Math.log(i),o=Math.ceil(Math.log(this.__max)/n-1e-9);this.__max=Math.pow(i,o);var r=Math.floor(Math.log(this.__min)/n+1e-9);this.__min=Math.pow(i,r),(this.__min<=0||isNaN(this.__min))&&(this.__min=1),this.__max<this.__min&&(this.__max=this.__min+1)}this.__ticks=[],this._createLogarithmicLabels(this.__min,this.__max,this._majorUnit(),this.__ticks,!1),this.__ticks.sort(function(t,e){return e<t?1:-1})},t.prototype._createLogarithmicLabels=function(t,e,i,n,o){var r=this._logBase(),s=Math.log(r),a=Math.floor(Math.log(t)/s),l=Math.ceil(Math.log(e)/s),_=r,u=!0;0<i&&(u=!1,_=i),_<r&&(_=r);var h=(l-a+1)*r/_,c=1;if(o){var p=this.tickNumber();p<h?c=Math.floor(h/p+1):u&&(h<=.2*p?_=.2*r:h<=.1*p&&(_=.1*r))}for(var f=a;f<=l;f+=c){if(u)for(var d=Math.pow(r,f),g=0;g*_<r-1;g++){var y;t<=(y=d*(1+g*_))&&y<=e&&(0==g?n.unshift(y):n.push(y))}else t<=(y=Math.pow(_,f))&&y<=e&&n.push(y)}},t}(t._AxisScale);t._LogAxisScale=e}(dv||(dv={})),function(t){"use strict";var e=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return __extends(t,e),t.prototype._domain=function(t){if(arguments.length<=0)return e.prototype._domain.call(this);e.prototype._domain.call(this,t)},t.prototype.tickNumber=function(t){if(arguments.length<=0)return Math.floor(this.__max)+1},t.prototype.min=function(){return this._refresh(),this.__min-this._padding()},t.prototype.max=function(){return this._refresh(),this.__max+this._padding()},t.prototype.ticks=function(){return this._refresh(),this.__ticks},t.prototype.value=function(t){this._refresh();var e=this.min(),i=this.max();return e==i?(this.end-this.start)/2+this.start:(this.end-this.start)/(i-e)*(t-e)+this.start},t.prototype._calculate=function(){var t=this._domain();this.__min=t[0],this.__max=t[1];var e=this._range();this._reversed()?(this.start=e[1],this.end=e[0]):(this.start=e[0],this.end=e[1]),isNaN(this._unit)&&(this._unit=1),this.__ticks=[];for(var i=Math.round(this.__min);i<=Math.floor(this.__max);i+=this._unit)this.__ticks.push(parseFloat(i.toFixed(1/this._unit)))},t}(t._AxisScale);t._OrdinalAxisScale=e}(dv||(dv={})),function(f){"use strict";var t=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.__tickNumber=10,t.__dateMode=f.DateMode.Day,t}return __extends(t,e),t.prototype._domain=function(t){if(arguments.length<=0)return e.prototype._domain.call(this);e.prototype._domain.call(this,t)},t.prototype.min=function(){return this._refresh(),this.__niceMin-this._padding()},t.prototype.max=function(){return this._refresh(),this.__niceMax+this._padding()},t.prototype.tickNumber=function(t){if(arguments.length<=0)return this.__tickNumber;this.__tickNumber!=t&&(f._assertDebug(function(){return 0<t}),this.__tickNumber=t,null==this.__tickNumber&&(this.__tickNumber=10),this._dirty())},t.prototype._dateMode=function(t){if(arguments.length<=0)return this.__dateMode;this.__dateMode!=t&&(this.__dateMode=t)},t.prototype.ticks=function(){return this._refresh(),this.__ticks},t.prototype.value=function(t){if(null==t||isNaN(t))return null;this._refresh();var e=this.max(),i=this.min();return e==i?(this.end-this.start)/2+this.start:(this.end-this.start)/(e-i)*(t-i)+this.start},t.prototype._calculate=function(){var t=this._range();this._reversed()?(this.start=t[1],this.end=t[0]):(this.start=t[0],this.end=t[1]);var e=this._domain(),i=e[0],n=e[1],o=n-i;isNaN(this._unit)?this._actual_unit=this._calculateUnit(i,n):(this._actual_unit=this._getUnit(this._unit),this.tickNumber(Math.round(o/this._actual_unit+.5)+1)),0==this._majorUnit()&&(this._unit=void 0,this._actual_unit=void 0),this.__niceMin=this._createNiceMinValue(i),this.__niceMax=this._createNiceMaxValue(this.__niceMin,n,this._majorUnit()),this.__ticks=this._createTimeLabels(this.__niceMin,this.__niceMax,this._majorUnit())},t.prototype._calculateUnit=function(t,e){new Date(t),new Date(e);var i=this.tickNumber();12<i&&(i=12);var n=new f._timeSpan(.001*(e-t)/i*f._timeSpan.TicksPerSecond);return 1e3*f._timeHelper.NiceTimeSpan(n,this.format()).TotalSeconds},t.prototype._getUnit=function(t){switch(this._dateMode()){case f.DateMode.Year:return 365*t*24*3600*1e3;case f.DateMode.Month:return 30*t*24*3600*1e3;case f.DateMode.Day:case f.DateMode.DayOfWeek:return 24*t*3600*1e3;case f.DateMode.Hour:return 3600*t*1e3;case f.DateMode.Minute:return 60*t*1e3;case f.DateMode.Second:return 1e3*t}return t},t.prototype._createNiceMinValue=function(t){var e=new Date(t);switch(this._dateMode()){case f.DateMode.Year:return new Date(e.getFullYear(),0,1).valueOf();case f.DateMode.Month:return new Date(e.getFullYear(),e.getMonth(),1).valueOf();case f.DateMode.Day:case f.DateMode.DayOfWeek:case f.DateMode.Hour:case f.DateMode.Minute:case f.DateMode.Second:}return t},t.prototype._createNiceMaxValue=function(t,e,i){var n=new Date(e);switch(this._dateMode()){case f.DateMode.Year:return new Date(n.getFullYear(),0,1).valueOf();case f.DateMode.Month:return new Date(n.getFullYear(),n.getMonth(),1).valueOf();case f.DateMode.Day:case f.DateMode.DayOfWeek:case f.DateMode.Hour:case f.DateMode.Minute:case f.DateMode.Second:}return t+(e-t)/i*i},t.prototype._createTimeLabels=function(t,e,i){var n=[],o=new Date(t),r=new Date(e),s=new f._timeSpan(.001*i*f._timeSpan.TicksPerSecond),a=!isNaN(this._unit),l=365<=s.TotalDays,_=30<=s.TotalDays||28<=s.TotalDays&&f.core.DateTime.isMonthLastDay(o),u=Math.round(s.TotalDays/365),h=Math.round(s.TotalDays/30),c=Math.round(s.TotalDays),p=function(t){for(var e=o;e<=r;t(e)){var i=e.valueOf();n.push(i)}};switch(this._dateMode()){case f.DateMode.Year:u=u<=0?1:u,p(function(t){t.setFullYear(t.getFullYear()+u)});break;case f.DateMode.Month:l&&!a?p(function(t){t.setFullYear(t.getFullYear()+u)}):(h=h<=0?1:h,p(function(t){t.setMonth(t.getMonth()+h)}));break;case f.DateMode.Day:case f.DateMode.DayOfWeek:case f.DateMode.Hour:case f.DateMode.Minute:case f.DateMode.Second:l&&!a?p(function(t){t.setFullYear(t.getFullYear()+u)}):_&&!a?p(function(t){var e=new Date(t.valueOf());e.setMonth(t.getMonth()+h),e.getMonth()!=(t.getMonth()+h)%12||f.core.DateTime.isMonthLastDay(t)?(t.setDate(1),t.setMonth(t.getMonth()+h+1),t.setDate(0)):t.setMonth(t.getMonth()+h)}):(c=c<=0?1:c,p(function(t){t.setDate(t.getDate()+c)}))}return n},t}(f._AxisScale);f._TimeAxisScale=t}(dv||(dv={})),function(p){"use strict";var t=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.__range={start:0,end:0},t.__colorStops=[],t}return __extends(t,e),t.prototype._rangeStart=function(){return this.__range.start},t.prototype._rangeEnd=function(){return this.__range.end},t.prototype._domain=function(t){return this.__colorStops=t.slice(),this.ensureGradientOffset(),this},t.prototype._range=function(t,e){return this.__range.start=t,this.__range.end=e,this},t.prototype._getGradientArray=function(t,e){this.ensureGradientOffset();var i,n,o=[];i=1-this.convertToOffset(e),n=1-this.convertToOffset(t);var r=this._scale(t),s=this._scale(e);return o.push(new p.options._ColorStopOption({color:r.color,stop:1})),o.push(new p.options._ColorStopOption({color:s.color,stop:0})),this.__colorStops.forEach(function(t){t.stop<n&&t.stop>i&&o.push(new p.options._ColorStopOption({color:t.color,stop:(t.stop-i)/(n-i)}))}),o},t.prototype._getAreaGradientArray=function(t,e){this.ensureGradientOffset();var i,n,o=[];i=1-this.convertToOffset(e),n=1-(this.__range.start-t)/(e-t);var r=this._scale(this.__range.start),s=this._scale(e);return o.push(new p.options._ColorStopOption({color:r.color,stop:1-(this.__range.start-t)/(e-t)})),o.push(new p.options._ColorStopOption({color:s.color,stop:0})),this.__colorStops.forEach(function(t){t.stop>i&&1!=t.stop&&o.push(new p.options._ColorStopOption({color:t.color,stop:t.stop*n}))}),o},t.prototype.convertToOffset=function(t){if(null==t)return 0;var e=(t-this.__range.start)/(this.__range.end-this.__range.start);if(e<=1&&0<=e)return e;p.core.assert(!1,"The value is invalid.")},t.prototype._scale=function(t){if(this.__range.start==this.__range.end)return null;var i=new p.options._ColorStopOption({});i.stop=this.convertToOffset(t);var n=0;this.__colorStops.some(function(t,e){return i.stop<t.stop?(n=e-1,!0):i.stop==t.stop?(n=e,!0):void 0});var e,o,r=0;if(n==this.__colorStops.length-1)return i.color=this.__colorStops[0].color,i;if(this.__colorStops[n+1].stop!=this.__colorStops[n].stop&&(r=(i.stop-this.__colorStops[n].stop)/(this.__colorStops[n+1].stop-this.__colorStops[n].stop)),this._reversed())e=p.core._RgbaColor.fromCss(this.__colorStops[n+1].color),o=p.core._RgbaColor.fromCss(this.__colorStops[n].color);else{var s=this.__colorStops.slice().reverse();e=p.core._RgbaColor.fromCss(s[n].color),o=p.core._RgbaColor.fromCss(s[n+1].color)}var a=e.red,l=e.green,_=e.blue,u=(o.red-a)*r,h=(o.green-l)*r,c=(o.blue-_)*r;return i.color=this.colorHex("rgb("+Math.floor(u+a)+","+Math.floor(h+l)+","+Math.floor(c+_)+")"),i},t.prototype.colorHex=function(t){if(/^(rgb|RGB)/.test(t)){for(var e=t.replace(/(?:(|)|rgb|RGB)*/g,"").split(","),i="#",n=0;n<e.length;n++){var o=Number(e[n]).toString(16);"0"===(o=Number(o)<10?"0"+o:o)&&(o+=o),i+=o}return 7!==i.length&&(i=t),i}if(!/^#([0-9a-fA-f]{3}|[0-9a-fA-f]{6})$/.test(t))return t;var r=t.replace(/#/,"").split("");if(6===r.length)return t;if(3===r.length){var s="#";for(n=0;n<r.length;n+=1)s+=r[n]+r[n];return s}},t.prototype._value=function(t){return 0},t.prototype.ensureGradientOffset=function(){var i=this,n=0,o=0;this.__colorStops.forEach(function(t,e){null==t.stop?(0==e&&(t.stop=0,n=e),e==i.__colorStops.length-1&&(t.stop=1,o=e,i.initGradientOffset(i.__colorStops,n,o),n=e)):n!=o&&(o=e,i.initGradientOffset(i.__colorStops,n,o),n=e),o++})},t.prototype.initGradientOffset=function(t,e,i){var n=i-e;if(1<n)for(var o=t[i].stop-t[e].stop,r=1;r<n;r++)t[e+r].stop=o/n*r},t}(p.models._Scale);p._NumberGradientColorScale=t}(dv||(dv={})),function(t){"use strict";var e=function(){};(dv||(dv={}))._BaseShape=e}(),function(t){"use strict";var e=function(){function o(t){this.__points=t}return Object.defineProperty(o.prototype,"points",{get:function(){return this.__points},enumerable:!0,configurable:!0}),o.prototype.clone=function(){for(var t=[],e=0,i=this.points;e<i.length;e++){var n=i[e];t.push(n.clone())}return new o(t)},o.prototype.contains=function(t){for(var e=this.points,i=NaN,n=NaN,o=NaN,r=NaN,s=0,a=this.points;s<a.length;s++){var l=a[s];i=l.x<i?l.x:i,n=l.x>n?l.x:n,o=l.y<o?l.y:o,r=l.y>r?l.y:r}if(t.x<i||t.x>n||t.y<o||t.y>r)return!1;for(var _=!1,u=0,h=e.length-1;u<e.length;h=u++)e[u].y>t.y!=e[h].y>t.y&&t.x<(e[h].x-e[u].x)*(t.y-e[u].y)/(e[h].y-e[u].y)+e[u].x&&(_=!_);return _},o.prototype.intersectsWith=function(t){for(var e=0,i=[this,t];e<i.length;e++)for(var n=i[e].points,o=0;o<n.length;o++){for(var r=n[o],s=n[(o+1)%n.length],a=s.y-r.y,l=r.x-s.x,_=void 0,u=void 0,h=0;h<this.points.length;h++){var c=a*this.points[h].x+l*this.points[h].y;(void 0===_||c<_)&&(_=c),(void 0===u||u<c)&&(u=c)}var p=void 0,f=void 0;for(h=0;h<t.points.length;h++){c=a*t.points[h].x+l*t.points[h].y;(void 0===p||c<p)&&(p=c),(void 0===f||f<c)&&(f=c)}if(u<p||f<_)return!1}return!0},o.prototype.equals=function(t){if(this==t)return!0;if(t instanceof o&&this.points.length==t.points.length){for(var e=0;e<this.points.length;e++)if(!this.points[e].equals(t.points[e]))return!1;return!0}return!1},o}();t._Polygon=e}(dv||(dv={})),function(i){!function(t){"use strict";var e=function(){function t(t){this.__rectangle=t}return Object.defineProperty(t.prototype,"type",{get:function(){return i.ShapeType.Rectangle},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"left",{get:function(){return this.__rectangle.left},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"top",{get:function(){return this.__rectangle.top},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"width",{get:function(){return this.__rectangle.width},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"height",{get:function(){return this.__rectangle.height},enumerable:!0,configurable:!0}),t}();t._RectangleShape=e}(i.models||(i.models={}))}(dv||(dv={})),function(r){"use strict";var t=function(){function t(t,e,i,n,o){this._cx=t,this._cy=e,this._leftwidth=i,this._rightwidth=n,this.angle=o,this.endPoint=new r.core.Point,this.endPoint.x=t+Math.sin(this.angle)*n,this.endPoint.y=e-Math.cos(this.angle)*n,this.startPoint=new r.core.Point,this.startPoint.x=t-Math.sin(this.angle)*i,this.startPoint.y=e+Math.cos(this.angle)*i}return Object.defineProperty(t.prototype,"cx",{get:function(){return this._cx},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"cy",{get:function(){return this._cy},enumerable:!0,configurable:!0}),t}();r._RotatedLine=t}(dv||(dv={})),function(_){!function(t){"use strict";var e=function(){function a(t,e,i,n,o){this.__center=new _.core.Point(0,0),this.__size=new _.core.Size(0,0),this.__angle=0,this.__dirty=!0,this.center=new _.core.Point(t,e),this.size=new _.core.Size(i,n),this.angle=o}return a._fromLeftConnectingPoint=function(t,e,i){var n=Math.sin(i);if(Math.abs(n)<_.__Constant_Precision)return new a(t.x+e.width/2,t.y,e.width,e.height,0);var o=Math.cos(i);if(Math.abs(o)<_.__Constant_Precision)return new a(t.x+e.height/2,t.y,e.width,e.height,0<n?.5*Math.PI:1.5*Math.PI);if(0<n){var r=new _.core.Point(t.x+.5*e.width*o,t.y+.5*e.width*n);return new a((s=new _.core.Point(r.x+.5*e.height*n,r.y-.5*e.height*o)).x,s.y,e.width,e.height,i)}var s;r=new _.core.Point(t.x+.5*e.width*o,t.y+.5*e.width*n);return new a((s=new _.core.Point(r.x-.5*e.height*n,r.y+.5*e.height*o)).x,s.y,e.width,e.height,i)},a._fromRightConnectingPoint=function(t,e,i){var n=Math.sin(i);if(Math.abs(n)<_.__Constant_Precision)return new a(t.x-e.width/2,t.y,e.width,e.height,0);var o=Math.cos(i);if(Math.abs(o)<_.__Constant_Precision)return new a(t.x-e.height/2,t.y,e.width,e.height,0<n?.5*Math.PI:1.5*Math.PI);if(0<n){var r=new _.core.Point(t.x-.5*e.width*o,t.y-.5*e.width*n);return new a((s=new _.core.Point(r.x-.5*e.height*n,r.y+.5*e.height*o)).x,s.y,e.width,e.height,i)}var s;r=new _.core.Point(t.x-.5*e.width*o,t.y-.5*e.width*n);return new a((s=new _.core.Point(r.x+.5*e.height*n,r.y-.5*e.height*o)).x,s.y,e.width,e.height,i)},a._fromTopConnectingPoint=function(t,e,i){var n=Math.sin(i);if(Math.abs(n)<_.__Constant_Precision)return new a(t.x,t.y+e.height/2,e.width,e.height,0);var o=Math.cos(i);if(Math.abs(o)<_.__Constant_Precision)return new a(t.x,t.y+e.width/2,e.width,e.height,0<n?.5*Math.PI:1.5*Math.PI);if(0<n){var r=new _.core.Point(t.x+.5*e.width*o,t.y+.5*e.width*n);return new a((s=new _.core.Point(r.x-.5*e.height*n,r.y+.5*e.height*o)).x,s.y,e.width,e.height,i)}var s;r=new _.core.Point(t.x-.5*e.width*o,t.y-.5*e.width*n);return new a((s=new _.core.Point(r.x-.5*e.height*n,r.y+.5*e.height*o)).x,s.y,e.width,e.height,i)},a._fromBottomConnectingPoint=function(t,e,i){var n=Math.sin(i);if(Math.abs(n)<_.__Constant_Precision)return new a(t.x,t.y-e.height/2,e.width,e.height,0);var o=Math.cos(i);if(Math.abs(o)<_.__Constant_Precision)return new a(t.x,t.y-e.width/2,e.width,e.height,0<n?.5*Math.PI:1.5*Math.PI);if(0<n){var r=new _.core.Point(t.x-.5*e.width*o,t.y-.5*e.width*n);return new a((s=new _.core.Point(r.x+.5*e.height*n,r.y-.5*e.height*o)).x,s.y,e.width,e.height,i)}var s;r=new _.core.Point(t.x+.5*e.width*o,t.y+.5*e.width*n);return new a((s=new _.core.Point(r.x+.5*e.height*n,r.y-.5*e.height*o)).x,s.y,e.width,e.height,i)},Object.defineProperty(a.prototype,"type",{get:function(){return _.ShapeType.RotatedRectangle},enumerable:!0,configurable:!0}),Object.defineProperty(a.prototype,"center",{get:function(){return this.__center.clone()},set:function(t){this.__center.equals(t)||(this.__center=t.clone(),this.__dirty=!0)},enumerable:!0,configurable:!0}),Object.defineProperty(a.prototype,"size",{get:function(){return this.__size.clone()},set:function(t){this.__size.equals(t)||(this.__size=t.clone(),this.__dirty=!0)},enumerable:!0,configurable:!0}),Object.defineProperty(a.prototype,"angle",{get:function(){return this.__angle},set:function(t){_._assertDebug(function(){return null!=t&&!isNaN(t)}),this.__angle!=t&&(this.__angle=t,this.__dirty=!0)},enumerable:!0,configurable:!0}),Object.defineProperty(a.prototype,"leftTop",{get:function(){return this.__dirty&&this._calculatePoints(),this.__leftTop.clone()},enumerable:!0,configurable:!0}),Object.defineProperty(a.prototype,"rightTop",{get:function(){return this.__dirty&&this._calculatePoints(),this.__rightTop.clone()},enumerable:!0,configurable:!0}),Object.defineProperty(a.prototype,"leftBottom",{get:function(){return this.__dirty&&this._calculatePoints(),this.__leftBottom.clone()},enumerable:!0,configurable:!0}),Object.defineProperty(a.prototype,"rightBottom",{get:function(){return this.__dirty&&this._calculatePoints(),this.__rightBottom.clone()},enumerable:!0,configurable:!0}),a.prototype.clone=function(){return new a(this.center.x,this.center.y,this.size.width,this.size.height,this.angle)},a.prototype.equals=function(t){return t instanceof a&&t.center.equals(this.center)&&t.size.equals(this.size)&&t.angle!=this.angle},a.prototype.contains=function(t){return new _._Polygon([this.leftTop,this.rightTop,this.rightBottom,this.leftBottom]).contains(t)},a.prototype.intersectsWith=function(t){if(Math.abs(this.angle)<_.__Constant_Precision&&Math.abs(t.angle)<_.__Constant_Precision){var e=new _.core.Rect(this.center.x-this.size.width/2,this.center.y-this.size.height/2,this.size.width,this.size.height),i=new _.core.Rect(t.center.x-t.size.width/2,t.center.y-t.size.height/2,t.size.width,t.size.height);return e.intersectsWith(i)}var n=new _._Polygon([this.leftTop,this.rightTop,this.rightBottom,this.leftBottom]),o=new _._Polygon([t.leftTop,t.rightTop,t.rightBottom,t.leftBottom]);return n.intersectsWith(o)},a.prototype._calculatePoints=function(){if(this.__dirty){this.__dirty=!1;var t=this.size,e=t.width,i=t.height,n=this.center,o=n.x,r=n.y,s=this.angle,a=new _.core.Point;a.x=o+Math.cos(s)*e/2,a.y=r+Math.sin(s)*e/2;var l=new _.core.Point;l.x=2*o-a.x,l.y=2*r-a.y,this.__rightTop=new _.core.Point,this.__rightTop.x=a.x+Math.sin(s)*i/2,this.__rightTop.y=a.y-Math.cos(s)*i/2,this.__rightBottom=new _.core.Point,this.__rightBottom.x=2*a.x-this.__rightTop.x,this.__rightBottom.y=2*a.y-this.__rightTop.y,this.__leftBottom=new _.core.Point,this.__leftBottom.x=l.x-Math.sin(s)*i/2,this.__leftBottom.y=l.y+Math.cos(s)*i/2,this.__leftTop=new _.core.Point,this.__leftTop.x=2*l.x-this.__leftBottom.x,this.__leftTop.y=2*l.y-this.__leftBottom.y}},a}();t._RotatedRectangle=e}(_.models||(_.models={}))}(dv||(dv={})),function(t){t.models||(t.models={})}(dv||(dv={})),function(t){t.models||(t.models={})}(dv||(dv={})),function(i){!function(t){"use strict";var e=function(){function t(){}return t.prototype.getSymbol=function(t){var e=i.plugins._Plugins._symbolNames();return null!=e&&0<e.length?e[t%e.length]:null},t}();t._SymbolProvider=e}(i.models||(i.models={}))}(dv||(dv={})),function(r){!function(t){"use strict";var e=function(){function t(t,e,i,n,o){r._assertDebug(function(){return e<=i}),r._assertDebug(function(){return 0<o}),this.__logBase=t,this.__minimum=e,this.__maximum=i,this.__round=n,this.__count=o}return t.prototype._unit=function(t){if(arguments.length<=0)return this.__unit;this.__unit!=t&&(this.__unit=t,this.__ticks=null)},t.prototype._ticks=function(){return null==this.__ticks&&(this.__ticks=this._calculateTicks(this._minimum(),this._maximum())),this.__ticks},t.prototype._logBase=function(){return this.__logBase},t.prototype._minimum=function(){return this.__minimum},t.prototype._maximum=function(){return this.__maximum},t.prototype._round=function(){return this.__round},t.prototype._count=function(){return this.__count},t.prototype._calculateTicks=function(t,e){var i=[],n=this._logBase(),o=Math.log(n),r=Math.floor(Math.log(this._minimum())/o),s=Math.ceil(Math.log(this._maximum())/o),a=n,l=!0;0<this._unit()&&(l=!1,(a=this._unit())<n&&(a=n));for(var _=r;_<=s;_+=1){if(l)for(var u=Math.pow(n,_),h=0;h*a<n-1;h++){var c;(c=u*(1+h*a))>=this._minimum()&&c<=this._maximum()&&(0==h?i.unshift(c):i.push(c))}else(c=Math.pow(a,_))>=this._minimum()&&c<=this._maximum()&&i.push(c)}return i},t}();t._LogNumberTicksGenerator=e}(r.models||(r.models={}))}(dv||(dv={})),function(a){!function(t){"use strict";var e=function(){function s(t,e,i,n){a._assertDebug(function(){return t<=e}),a._assertDebug(function(){return 0<n}),this.__minimum=t,this.__maximum=e,this.__round=i,this.__count=n}return s.prototype._unit=function(t){if(arguments.length<=0)return this.__unit;this.__unit!=t&&(this.__unit=t)},s.prototype._ticks=function(){return null==this.__ticks&&(this.__ticks=this._calculateTicks(this._minimum(),this._maximum())),this.__ticks},s.prototype._minimum=function(){return this.__minimum},s.prototype._maximum=function(){return this.__maximum},s.prototype._round=function(){return this.__round},s.prototype._count=function(){return this.__count},s.prototype._calculateTicks=function(t,e){var i=[];if(t==e)i.push(t);else{var n=this._unit();null==n&&(n=this._calculateUnit(t,e,this._count()));var o=Math.ceil(t/n)*n;for(this._round()&&t<o&&i.push(o-n);o<=e;)i.push(o),o+=n;this._round()&&o-n<e&&i.push(o)}return i},s.prototype._calculateUnit=function(t,e,i){a._assertDebug(function(){return t<e}),a._assertDebug(function(){return 0<i});var n=(e-t)/i,o=Math.pow(10,Math.floor(Math.log(n)/Math.LN10)),r=n/o;return s.__e10<=r?o*=10:s.__e5<=r?o*=5:s.__e2<=r&&(o*=2),o},s.__e10=Math.sqrt(50),s.__e5=Math.sqrt(10),s.__e2=Math.sqrt(2),s}();t._NumberTicksGenerator=e}(a.models||(a.models={}))}(dv||(dv={})),function(o){!function(t){"use strict";var e=function(){function t(t){this.__success=!0,this.__proxy=this._generateCalcSourceProxy(),this.__vectorExpressions=this._parseExpress(t)}return t.prototype._current=function(){return this.__current},t.prototype.evaluate=function(t){if(this.__success=!0,o._isCalculationEngineExist()&&null!=this.__proxy){this.__current=t;for(var e=0,i=this.__vectorExpressions;e<i.length;e++){var n=i[e];if(!this.__success)break;null==this._getValue(n)&&this.__proxy.getCalcSourceModel().setFormulaByName("condition",n)}}return this.__success},t.prototype._isIdentityExpression=function(t){return!0},t.prototype._getValue=function(t){var e=this._current();try{var i=new o.core._Binding(t),n=i.getValue(e.item);return null==n&&(n=i.getValue(e)),n}catch(t){}return null},t.prototype._getResult=function(t){1!=t&&(this.__success=!1)},t.prototype._parseExpress=function(t){for(var e=[],i=0,n=("]."+t+".[").split("].[");i<n.length;i++){var o=n[i];o.trim()&&e.push(o)}return e},t.prototype._generateCalcSourceProxy=function(){return o._isCalculationEngineExist()?new(function(i){function t(t){var e=i.call(this,new GC.Spread.CalcEngine.CalcService)||this;return o._assertDebug(function(){return null!=t}),e.__rule=t,e.getCalcService().getSourceModel(e),e}return __extends(t,i),t.prototype.getParserContext=function(t,e,i){var a=this,n=new GC.Spread.CalcEngine.ParserContext(this,t,e||{},i),o=new GC.Spread.CalcEngine.TokenResolver(7e3);return o.resolveToken=function(t,e,i,n){var o=i[n],r=o.stringValue();if(0===o.type()&&0===o.subType()&&a.__rule._isIdentityExpression(r)){var s=new GC.Spread.CalcEngine.Expression(25);return s.value=r,s}},n.addResolver(o),n},t.prototype.getEvaluatorContext=function(t,e,i){var n=new GC.Spread.CalcEngine.EvaluateContext(this,t,e,i),o=this;return n.evaluate=function(t,e,i){return this.getValue(o,t.value)},n},t.prototype.getValueByName=function(t){return""},t.prototype.setValueByName=function(t,e){"CONDITION"==t?this.__rule._getResult(e):o._assertDebug(function(){return!1})},t.prototype.getValue=function(t){return this.__rule._getValue(t)},t}(GC.Spread.CalcEngine.CalcSource))(this):null},t}();t._VectorConditionalRule=e}(o.models||(o.models={}))}(dv||(dv={})),function(t){t.models||(t.models={})}(dv||(dv={})),function(t){t.models||(t.models={})}(dv||(dv={})),function(t){t.models||(t.models={})}(dv||(dv={})),function(t){t.models||(t.models={})}(dv||(dv={})),function(t){t.models||(t.models={})}(dv||(dv={})),function(t){t.models||(t.models={})}(dv||(dv={})),function(t){t.models||(t.models={})}(dv||(dv={})),function(t){t.models||(t.models={})}(dv||(dv={})),function(t){t.models||(t.models={})}(dv||(dv={})),function(t){t.models||(t.models={})}(dv||(dv={})),function(t){t.models||(t.models={})}(dv||(dv={})),function(t){t.models||(t.models={})}(dv||(dv={})),function(t){t.models||(t.models={})}(dv||(dv={})),function(t){t.models||(t.models={})}(dv||(dv={})),function(t){!function(t){"use strict";var e=function(){function t(t){this.__option=null==t?{}:t}return t.toAngles=function(t){var e=[];if("number"!=typeof t||isNaN(t)){if("string"==typeof t)for(var i=t.split(","),n=0,o=i.length;n<o;n++){var r=i[n];if(null!=r&&""!=r.trim()){var s=r.trim();if("Auto"==s)e.push(s);else{var a=parseInt(s);isNaN(a)&&e.push(a)}}}}else e.push(t);n=0;for(var l=e.length;n<l;n++){"number"==typeof(a=e[n])&&(a<-90?e[n]=-90:90<a&&(e[n]=90))}return e},t.prototype.option=function(){return this._option()},t.prototype.isEmpty=function(){return Object.getOwnPropertyNames(this.option()).length<=0},t.prototype._option=function(){return this.__option},t}();t._Option=e}(t.options||(t.options={}))}(dv||(dv={})),function(n){!function(e){"use strict";var t=function(i){function t(t){var e=i.call(this,t)||this;return e.backgroundColor=e._option().backgroundColor,e.stroke=e._option().stroke,e.strokeWidth=e._option().strokeWidth,e.strokeDasharray=e._option().strokeDasharray,e.innerStroke=e._option().innerStroke,e.innerStrokeWidth=e._option().innerStrokeWidth,e.innerStrokeDasharray=e._option().innerStrokeDasharray,e.fill=e._option().fill,e}return __extends(t,i),Object.defineProperty(t.prototype,"backgroundColor",{get:function(){return this.__backgroundColor},set:function(t){null!=this.__backgroundColor&&this.__backgroundColor==t||(this.__backgroundColor=e._GradientOption.parse(t))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"stroke",{get:function(){return this.__stroke},set:function(t){this.__stroke!=t&&(this.__stroke=e._GradientOption.parse(t))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"strokeWidth",{get:function(){return this.__strokeWidth},set:function(t){this.__strokeWidth!=t&&(this.__strokeWidth=n.core.asNumber(t,!0))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"strokeDasharray",{get:function(){return this.__strokeDasharray},set:function(t){this.__strokeDasharray!=t&&(this.__strokeDasharray=n.core.asString(t,!0))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"innerStroke",{get:function(){return this.__innerStroke},set:function(t){this.__innerStroke!=t&&(this.__innerStroke=e._GradientOption.parse(t))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"innerStrokeWidth",{get:function(){return this.__innerStrokeWidth},set:function(t){this.__innerStrokeWidth!=t&&(this.__innerStrokeWidth=n.core.asNumber(t,!0))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"innerStrokeDasharray",{get:function(){return this.__innerStrokeDasharray},set:function(t){this.__innerStrokeDasharray!=t&&(this.__innerStrokeDasharray=n.core.asString(t,!0))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"fill",{get:function(){return this.__fill},set:function(t){this.__fill==t&&null!=this.__fill||(this.__fill=e._GradientOption.parse(t))},enumerable:!0,configurable:!0}),t}(e._Option);e._StyleOption=t}(n.options||(n.options={}))}(dv||(dv={})),function(n){!function(t){"use strict";var e=function(i){function t(t){var e=i.call(this,t)||this;return e.mode=e._option().mode,e.duration=e._option().duration,e.easing=e._option().easing,e.startDelay=e._option().startDelay,e.staggering=e._option().staggering,e}return __extends(t,i),Object.defineProperty(t.prototype,"mode",{get:function(){return this.__mode},set:function(t){null!=t&&this.__mode==t||(this.__mode=n.core.asEnum(t,n.AnimationMode,!0),null==this.__mode&&(this.__mode=n.AnimationMode.All))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"duration",{get:function(){return this.__duration},set:function(t){null!=t&&this.__duration==t||(this.__duration=n.core.asNumber(t,!0),null==this.__duration&&(this.__duration=200))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"easing",{get:function(){return this.__easing},set:function(t){null!=t&&this.__easing==t||(this.__easing=n.core.asEnum(t,n.AnimationEasing,!0),null==this.__easing&&(this.__easing=n.AnimationEasing.Linear))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"startDelay",{get:function(){return this.__startDelay},set:function(t){null!=t&&this.__startDelay==t||(this.__startDelay=n.core.asNumber(t,!0),null==this.__startDelay&&(this.__startDelay=0))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"staggering",{get:function(){return this.__staggering},set:function(t){null!=t&&this.__staggering==t||(this.__staggering=t,null==this.__staggering&&(this.__staggering=!1))},enumerable:!0,configurable:!0}),t}(t._Option);t._AnimationOption=e}(n.options||(n.options={}))}(dv||(dv={})),function(_){!function(n){"use strict";var t=function(i){function t(t){var e=i.call(this,t)||this;return e.type=e._option().type,e.plots=e._option().plots,e.title=e._option().title,e.position=e._option().position,e.overlappingLabels=e._option().overlappingLabels,e.labels=e._option().labels,e.max=e._option().max,e.min=e._option().min,e.format=e._option().format,e.scale=e._option().scale,e.style=e._option().style,e.textStyle=e._option().textStyle,e.hoverStyle=e._option().hoverStyle,e.labelStyle=e._option().labelStyle,e.titleStyle=e._option().titleStyle,e.majorUnit=e._option().majorUnit,e.minorUnit=e._option().minorUnit,e.majorTicks=e._option().majorTicks,e.minorTicks=e._option().minorTicks,e.majorTickSize=e._option().majorTickSize,e.minorTickSize=e._option().minorTickSize,e.majorTickStyle=e._option().majorTickStyle,e.minorTickStyle=e._option().minorTickStyle,e.majorGrid=e._option().majorGrid,e.minorGrid=e._option().minorGrid,e.majorGridStyle=e._option().majorGridStyle,e.minorGridStyle=e._option().minorGridStyle,e.lineStyle=e._option().lineStyle,e.origin=e._option().origin,e.reversed=e._option().reversed,e.labelAngle=e._option().labelAngle,e.logBase=e._option().logBase,e.axisLine=e._option().axisLine,e.height=e._option().height,e.width=e._option().width,e.maxHeight=e._option().maxHeight,e.maxWidth=e._option().maxWidth,e.viewSize=e._option().viewSize,e.scrollbarVisible=e._option().scrollbarVisible,e.axisPadding=e._option().axisPadding,null==e.majorTicks&&(e.majorTicks=_.TickMark.None),null==e.minorTicks&&(e.minorTicks=_.TickMark.None),null==e.overlappingLabels&&(e.overlappingLabels=_.OverlappingLabels.Auto),null==e.position&&(e.position=_.AxisPosition.Near),null==e.minorGrid&&(e.minorGrid=!1),null==e.labels&&(e.labels=!0),null==e.axisLine&&(e.axisLine=!0),e}return __extends(t,i),Object.defineProperty(t.prototype,"type",{get:function(){return this.__type},set:function(t){null!=this.__type&&this.__type==t||(this.__type=_.core.asEnum(t,_.AxisType,!0),null==this.__type&&(this.__type=_.AxisType.X))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"plots",{get:function(){return this.__plots},set:function(t){if((null==this.__plots||this.__plots!=t)&&(this.__plots=[],null!=t))if("string"==typeof t)this.__plots=t.split(",");else if(Array.isArray(t))for(var e=0,i=t;e<i.length;e++){var n=i[e],o=_.core.asString(n,!0);null!=o&&this.__plots.push(o)}},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"title",{get:function(){return this.__title},set:function(t){null!=this.__title&&this.__title==t||(this.__title=_.core.asString(t,!0))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"position",{get:function(){return this.__position},set:function(t){null!=this.__position&&this.__position==t||(this.__position=_.core.asEnum(t,_.AxisPosition,!0),null==this.__position&&(this.__position=_.AxisPosition.Near))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"overlappingLabels",{get:function(){return this.__overlappingLabels},set:function(t){null!=this.__overlappingLabels&&this.__overlappingLabels==t||(this.__overlappingLabels=_.core.asEnum(t,_.OverlappingLabels,!0),null==this.__overlappingLabels&&(this.__overlappingLabels=_.OverlappingLabels.Auto))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"labels",{get:function(){return this.__labels},set:function(t){null!=this.__labels&&this.__labels==t||(this.__labels=_.core.asBoolean(t,!0),null==this.__labels&&(this.__labels=!0))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"max",{get:function(){return this.__max},set:function(t){this.__max!=t&&(t instanceof Date?this.__max=_.core.asDate(t,!0):this.__max=_.core.asNumber(t,!0))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"min",{get:function(){return this.__min},set:function(t){this.__min!=t&&(t instanceof Date?this.__min=_.core.asDate(t,!0):this.__min=_.core.asNumber(t,!0))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"format",{get:function(){return this.__format},set:function(t){this.__format!=t&&(this.__format=_.core.asString(t,!0))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"scale",{get:function(){return this.__scale},set:function(t){if(null==this.__scale||this.__scale!=t){var e=new n._ValueScaleOption(t);if(this.type==_.AxisType.Y&&null!=e&&e.type==_.ValueScaleType.Ordinal)throw"Ordinal Scale is not supported in y axis!";this.__scale=e}},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"axisLine",{get:function(){return this.__axisLine},set:function(t){t!=this.__axisLine&&(this.__axisLine=_.core.asBoolean(t,!0))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"style",{get:function(){return this.__style},set:function(t){null!=this.__style&&this.__style==t||(this.__style=new n._StyleOption(t))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"textStyle",{get:function(){return this.__textStyle},set:function(t){null!=this.__textStyle&&this.__textStyle==t||(this.__textStyle=new n._TextStyleOption(t))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"hoverStyle",{get:function(){return this.__hoverStyle},set:function(t){null!=this.__hoverStyle&&this.__hoverStyle==t||(this.__hoverStyle=new n._TextStyleOption(t))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"labelStyle",{get:function(){return this.__labelStyle},set:function(t){null!=this.__labelStyle&&this.__labelStyle==t||(this.__labelStyle=new n._LabelStyleOption(t))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"titleStyle",{get:function(){return this.__titleStyle},set:function(t){null!=this.__titleStyle&&this.__titleStyle==t||(this.__titleStyle=new n._LabelStyleOption(t))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"majorUnit",{get:function(){return this.__majorUnit},set:function(t){this.__majorUnit!=t&&(this.__majorUnit=_.core.asNumber(t,!0,!0))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"minorUnit",{get:function(){return this.__minorUnit},set:function(t){this.__minorUnit!=t&&(this.__minorUnit=_.core.asNumber(t,!0,!0))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"majorTicks",{get:function(){return this.__majorTicks},set:function(t){null!=this.__majorTicks&&this.__majorTicks==t||(this.__majorTicks=_.core.asEnum(t,_.TickMark,!0),null==this.__majorTicks&&(this.__majorTicks=_.TickMark.Outside))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"minorTicks",{get:function(){return this.__minorTicks},set:function(t){null!=this.__minorTicks&&this.__minorTicks==t||(this.__minorTicks=_.core.asEnum(t,_.TickMark,!0),null==this.__minorTicks&&(this.__minorTicks=_.TickMark.None))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"majorTickSize",{get:function(){return this.__majorTickSize},set:function(t){null!=this.__majorTickSize&&this.__majorTickSize==t||(this.__majorTickSize=_.core.asNumber(t,!0),null==this.__majorTickSize&&(this.__majorTickSize=4))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"minorTickSize",{get:function(){return this.__minorTickSize},set:function(t){null!=this.__minorTickSize&&this.__minorTickSize==t||(this.__minorTickSize=_.core.asNumber(t,!0),null==this.__minorTickSize&&(this.__minorTickSize=2))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"majorTickStyle",{get:function(){return this.__majorTickStyle},set:function(t){null!=this.__majorTickStyle&&this.__majorTickStyle==t||(this.__majorTickStyle=new n._LineStyleOption(t))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"minorTickStyle",{get:function(){return this.__minorTickStyle},set:function(t){null!=this.__minorTickStyle&&this.__minorTickStyle==t||(this.__minorTickStyle=new n._LineStyleOption(t))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"majorGrid",{get:function(){return this.__majorGrid},set:function(t){null!=this.__majorGrid&&this.__majorGrid==t||(this.__majorGrid=_.core.asBoolean(t,!0),null==this.__majorGrid&&(this.__majorGrid=!1))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"minorGrid",{get:function(){return this.__minorGrid},set:function(t){null!=this.__minorGrid&&this.__minorGrid==t||(this.__minorGrid=_.core.asBoolean(t,!0),null==this.__minorGrid&&(this.__minorGrid=!1))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"majorGridStyle",{get:function(){return this.__majorGridStyle},set:function(t){null!=this.__majorGridStyle&&this.__majorGridStyle==t||(this.__majorGridStyle=new n._LineStyleOption(t))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"minorGridStyle",{get:function(){return this.__minorGridStyle},set:function(t){null!=this.__minorGridStyle&&this.__minorGridStyle==t||(this.__minorGridStyle=new n._LineStyleOption(t))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"lineStyle",{get:function(){return this.__lineStyle},set:function(t){null!=this.__lineStyle&&this.__lineStyle==t||(this.__lineStyle=new n._LineStyleOption(t))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"origin",{get:function(){return this.__origin},set:function(t){this.__origin!=t&&(this.__origin=_.core.asNumber(t,!0))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"reversed",{get:function(){return this.__reversed},set:function(t){null!=this.__reversed&&this.__reversed==t||(this.__reversed=_.core.asBoolean(t,!0),null==this.__reversed&&(this.__reversed=!1))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"labelAngle",{get:function(){return this.__labelAngle},set:function(t){if(null==this.__labelAngle||this.__labelAngle!=t){var e=[];if("number"==typeof t)e.push(_.core.asNumber(t,!0));else if("string"==typeof t)for(var i=0,n=t.split(",");i<n.length;i++){null!=(s=n[i])&&""!=s.trim()?e.push(parseInt(s.trim())):e.push(null)}else if(t instanceof Array)for(var o=0,r=t;o<r.length;o++){var s=r[o];e.push(_.core.asNumber(s,!0))}for(var a=0;a<e.length;a++){var l=e[a];null!=l&&(l<-90?e[a]=-90:90<l&&(e[a]=90))}this.__labelAngle=e}},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"logBase",{get:function(){return this.__logBase},set:function(t){null!=this.__logBase&&this.__logBase==t||(this.__logBase=_.core.asNumber(t,!0))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"height",{get:function(){return this.__height},set:function(t){this.__height!==t&&("number"==typeof t?0<(t=_.core.asNumber(t,!0))&&t<1&&(this.__height=t):"string"==typeof t?(t=_.core.asString(t,!0))&&!isNaN(_.core._Parser._parseCssPixel(t))&&(this.__height=t):t||(this.__height=t))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"width",{get:function(){return this.__width},set:function(t){this.__width!==t&&("number"==typeof t?0<(t=_.core.asNumber(t,!0))&&t<1&&(this.__width=t):"string"==typeof t?(t=_.core.asString(t,!0))&&!isNaN(_.core._Parser._parseCssPixel(t))&&(this.__width=t):t||(this.__width=t))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"maxHeight",{get:function(){return this.__maxHeight},set:function(t){this.__maxHeight!==t&&("number"==typeof t?0<(t=_.core.asNumber(t,!0))&&t<1&&(this.__maxHeight=t):"string"==typeof t?(t=_.core.asString(t,!0))&&!isNaN(_.core._Parser._parseCssPixel(t))&&(this.__maxHeight=t):t||(this.__maxHeight=t)),null==this.__maxHeight&&(this.__maxHeight=.75)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"maxWidth",{get:function(){return this.__maxWidth},set:function(t){this.__maxWidth!==t&&("number"==typeof t?0<(t=_.core.asNumber(t,!0))&&t<1&&(this.__maxWidth=t):"string"==typeof t?(t=_.core.asString(t,!0))&&!isNaN(_.core._Parser._parseCssPixel(t))&&(this.__maxWidth=t):t||(this.__maxWidth=t)),null==this.__maxWidth&&(this.__maxWidth=.75)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"viewSize",{get:function(){return this.__viewSize},set:function(t){this.__viewSize!=t&&0<t&&t<=1&&(this.__viewSize=_.core.asNumber(t,!0))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"scrollbarVisible",{get:function(){return this.__scrollbarVisible},set:function(t){this.__scrollbarVisible!=t&&(this.__scrollbarVisible=_.core.asBoolean(t,!0))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"axisPadding",{get:function(){return this.__axisPadding},set:function(t){null!=this.__axisPadding&&this.__axisPadding==t||(this.__axisPadding=t,null==this.__axisPadding&&(this.__axisPadding=0))},enumerable:!0,configurable:!0}),t}(n._Option);n._AxisOption=t}(_.options||(_.options={}))}(dv||(dv={})),function(a){!function(s){"use strict";var t=function(i){function t(t){var e=i.call(this,t)||this;return e.header=e._option().header,e.footer=e._option().footer,e.palette=e._option().palette,e.plotAreas=e._option().plotAreas,e.plotAreaLayout=e._option().plotAreaLayout,e.backgroundColor=e._option().backgroundColor,e.legend=e._option().legend,e.selectionMode=e._option().selectionMode,e.selectedStyle=e._option().selectedStyle,e.unselectedStyle=e._option().unselectedStyle,e.style=e._option().style,e.textStyle=e._option().textStyle,e.borderStyle=e._option().borderStyle,e.bar=e._option().bar,e.padding=e._option().padding,e}return __extends(t,i),Object.defineProperty(t.prototype,"bar",{get:function(){return this.__bar},set:function(t){null!=this.__bar&&this.__bar==t||(this.__bar=new s._BarOption(t))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"header",{get:function(){return this.__header},set:function(t){null!=this.__header&&this.__header===t||(this.__header=new s._HeaderOption(t))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"footer",{get:function(){return this.__footer},set:function(t){null!=this.__footer&&this.__footer===t||(this.__footer=new s._FooterOption(t))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"palette",{get:function(){return this.__palette},set:function(t){if(null==this.__palette||this.__palette!=t)if(Array.isArray(t)){this.__palette=[];for(var e=0,i=t;e<i.length;e++){var n=i[e],o=s._GradientOption.parse(n);null!=o&&this.__palette.push(o)}this.__palette.length<=0&&(this.__palette=a.Palette.Office)}else this.__palette=a.core.asEnum(t,a.Palette,!0),null==this.__palette&&(this.__palette=a.Palette.Office)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"plotAreas",{get:function(){return this.__plotAreas},set:function(t){if((null==this.__plotAreas||this.__plotAreas!=t)&&(this.__plotAreas=[],null!=t)){Array.isArray(t)||(t=[t]);for(var e=0;e<t.length;e++){var i=new s._PlotAreaOption(t[e]);null==i.row&&(i.row=e),null==i.column&&(i.column=0);for(var n=0,o=this.__plotAreas;n<o.length;n++){var r=o[n];r.row==i.row&&r.column==i.column&&a._throwException(a.Exception.Option_Config_DuplicatedRowAndColumnOfPlotArea)}this.__plotAreas.push(i)}}},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"plotAreaLayout",{get:function(){return this.__plotAreaLayout},set:function(t){null!=this.__plotAreaLayout&&this.__plotAreaLayout==t||(this.__plotAreaLayout=new s._PlotAreaLayoutOption(t))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"backgroundColor",{get:function(){return this.__backgroundColor},set:function(t){null!=this.__backgroundColor&&this.__backgroundColor==t||(this.__backgroundColor=s._GradientOption.parse(t))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"legend",{get:function(){return this.__legend},set:function(t){null!=this.__legend&&this.__legend==t||(this.__legend=new s._GlobalLegendOption(t))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"selectionMode",{get:function(){return this.__selectionMode},set:function(t){null!=this.__selectionMode&&this.__selectionMode==t||(this.__selectionMode=a.core.asEnum(t,a.SelectionMode,!0),null==this.__selectionMode&&(this.__selectionMode=a.SelectionMode.None))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"selectedStyle",{get:function(){return this.__selectedStyle},set:function(t){null!=this.__selectedStyle&&this.__selectedStyle==t||(this.__selectedStyle=new s._SelectionStyleOption(t))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"unselectedStyle",{get:function(){return this.__unSelectedStyle},set:function(t){null!=this.__unSelectedStyle&&this.__unSelectedStyle==t||(this.__unSelectedStyle=new s._SelectionStyleOption(t))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"style",{get:function(){return this.__style},set:function(t){null!=this.__style&&this.__style==t||(this.__style=new s._StyleOption(t))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"textStyle",{get:function(){return this.__textStyle},set:function(t){null!=this.__textStyle&&this.__textStyle==t||(this.__textStyle=new s._TextStyleOption(t))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"borderStyle",{get:function(){return this.__borderStyle},set:function(t){null!=this.__borderStyle&&this.__borderStyle==t||(this.__borderStyle=new s._LineStyleOption(t))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"padding",{get:function(){return this.__padding},set:function(t){null!=this.__padding&&this.__padding==t||(this.__padding=new s._PaddingOption(t))},enumerable:!0,configurable:!0}),t}(s._Option);s._ConfigOption=t}(a.options||(a.options={}))}(dv||(dv={})),function(s){!function(t){"use strict";var e=function(i){function t(t){var e=i.call(this,t)||this;return e.name=e._option().name,e.values=e._option().values,e.dateFormats=e._option().dateFormats,e}return __extends(t,i),Object.defineProperty(t.prototype,"name",{get:function(){return this.__name},set:function(t){this.__name!=t&&(this.__name=s.core.asString(t,!0))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"values",{get:function(){return this.__values},set:function(t){if((null==this.__values||this.__values!=t)&&(this.__values=[],null!=t)){Array.isArray(t)||(t=[t]);for(var e=0,i=t;e<i.length;e++){var n=i[e];this.__values.push(n)}}},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"dateFormats",{get:function(){return this.__dateFormats},set:function(t){if(null==this.__dateFormats||this.__dateFormats!=t)if(null==t)this.__dateFormats=!0;else if("boolean"==typeof t)this.__dateFormats=t;else if("string"==typeof t)this.__dateFormats=[t];else if(Array.isArray(t)){for(var e=[],i=0,n=t;i<n.length;i++){var o=n[i],r=s.core.asString(o,!0);null!=r&&e.push(r)}this.__dateFormats=e}else s.core.assert(!1,"A date format is wrong.")},enumerable:!0,configurable:!0}),t}(t._Option);t._DataOption=e}(s.options||(s.options={}))}(dv||(dv={})),function(n){!function(e){"use strict";var t=function(i){function t(t){var e=i.call(this,t)||this;return e.opacity=e._option().opacity,e.strokeOpacity=e._option().strokeOpacity,e.fill=e._option().fill,e.stroke=e._option().stroke,e.strokeWidth=e._option().strokeWidth,e.strokeDasharray=e._option().strokeDasharray,e.symbolShape=e._option().symbolShape,e.symbolOpacity=e._option().symbolOpacity,e.symbolStrokeOpacity=e._option().symbolStrokeOpacity,e.symbolFill=e._option().symbolFill,e.symbolStroke=e._option().symbolStroke,e.symbolStrokeWidth=e._option().symbolStrokeWidth,e.symbolStrokeDasharray=e._option().symbolStrokeDasharray,e.symbolSize=e._option().symbolSize,e}return __extends(t,i),Object.defineProperty(t.prototype,"opacity",{get:function(){return this.__opacity},set:function(t){this.__opacity!=t&&(this.__opacity=n.core.asNumber(t,!0))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"strokeOpacity",{get:function(){return this.__strokeOpacity},set:function(t){this.__strokeOpacity!=t&&(this.__strokeOpacity=n.core.asNumber(t,!0))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"fill",{get:function(){return this.__fill},set:function(t){this.__fill!=t&&(this.__fill=e._GradientOption.parse(t))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"stroke",{get:function(){return this.__stroke},set:function(t){this.__stroke!=t&&(this.__stroke=e._GradientOption.parse(t))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"strokeWidth",{get:function(){return this.__strokeWidth},set:function(t){this.__strokeWidth!=t&&(this.__strokeWidth=n.core.asNumber(t,!0))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"strokeDasharray",{get:function(){return this.__strokeDasharray},set:function(t){this.__strokeDasharray!=t&&(this.__strokeDasharray=n.core.asString(t,!0))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"symbolShape",{get:function(){return this.__symbolShape},set:function(t){this.__symbolShape!=t&&(this.__symbolShape=n.core.asString(t,!0))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"symbolOpacity",{get:function(){return this.__symbolOpacity},set:function(t){this.__symbolOpacity!=t&&(this.__symbolOpacity=n.core.asNumber(t,!0))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"symbolStrokeOpacity",{get:function(){return this.__symbolStrokeOpacity},set:function(t){this.__symbolStrokeOpacity!=t&&(this.__symbolStrokeOpacity=n.core.asNumber(t,!0))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"symbolFill",{get:function(){return this.__symbolFill},set:function(t){this.__symbolFill!=t&&(this.__symbolFill=e._GradientOption.parse(t))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"symbolStroke",{get:function(){return this.__symbolStroke},set:function(t){this.__symbolStroke!=t&&(this.__symbolStroke=e._GradientOption.parse(t))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"symbolStrokeWidth",{get:function(){return this.__symbolStrokeWidth},set:function(t){this.__symbolStrokeWidth!=t&&(this.__symbolStrokeWidth=n.core.asNumber(t,!0))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"symbolStrokeDasharray",{get:function(){return this.__symbolStrokeDasharray},set:function(t){this.__symbolStrokeDasharray!=t&&(this.__symbolStrokeDasharray=n.core.asString(t,!0))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"symbolSize",{get:function(){return this.__symbolSize},set:function(t){null!=this.__symbolSize&&this.__symbolSize==t||(this.__symbolSize=null==t?10:n.core.asNumber(t,!0))},enumerable:!0,configurable:!0}),t}(e._Option);e._DataPointStyleOption=t}(n.options||(n.options={}))}(dv||(dv={})),function(n){!function(t){"use strict";var e=function(i){function t(t){var e=i.call(this,t)||this;return e.field=e._option().field,e}return __extends(t,i),Object.defineProperty(t.prototype,"field",{get:function(){return this.__field},set:function(t){this.__field!=t&&(this.__field=n.core.asString(t,!0))},enumerable:!0,configurable:!0}),t}(t._Option);t._EncodingOption=e}(n.options||(n.options={}))}(dv||(dv={})),function(n){!function(e){"use strict";var t=function(i){function t(t){var e=i.call(this,t)||this;return e.title=e._option().title,e.height=e._option().height,e.maxHeight=e._option().maxHeight,e.padding=e._option().padding,e.hAlign=e._option().hAlign,e.vAlign=e._option().vAlign,e.style=e._option().style,e.textStyle=e._option().textStyle,e.borderStyle=e._option().borderStyle,e.width=e._option().width,e}return __extends(t,i),Object.defineProperty(t.prototype,"width",{get:function(){return this.__width},set:function(t){null!=t&&(n.core.assert("string"==typeof t||"number"==typeof t,"Wrong format of width!"),this.__width=t)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"title",{get:function(){return this.__title},set:function(t){this.__title!==t&&(this.__title=n.core.asString(t,!0))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"height",{get:function(){return this.__height},set:function(t){this.__height!==t&&(null==t?this.__height=t:"number"==typeof t?0<(t=n.core.asNumber(t,!0))&&t<1&&(this.__height=t):"string"==typeof t&&(t=n.core.asString(t,!0))&&!isNaN(n.core._Parser._parseCssPixel(t))&&(this.__height=t))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"maxHeight",{get:function(){return this.__maxHeight},set:function(t){this.__maxHeight!==t&&(null==t?this.__maxHeight=t:"number"==typeof t?0<(t=n.core.asNumber(t,!0))&&t<1&&(this.__maxHeight=t):"string"==typeof t&&(t=n.core.asString(t,!0))&&!isNaN(n.core._Parser._parseCssPixel(t))&&(this.__maxHeight=t))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"padding",{get:function(){return this.__padding},set:function(t){null!=this.__padding&&this.__padding===t||(this.__padding=new e._PaddingOption(t))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"hAlign",{get:function(){return this.__hAlign},set:function(t){null!=this.__hAlign&&this.__hAlign==t||(this.__hAlign=n.core.asEnum(t,n.HAlign,!0),null==this.__hAlign&&(this.__hAlign=n.HAlign.Center))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"vAlign",{get:function(){return this.__vAlign},set:function(t){null!=this.__vAlign&&this.__vAlign==t||(this.__vAlign=n.core.asEnum(t,n.VAlign,!0),null==this.__vAlign&&(this.__vAlign=n.VAlign.Middle))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"style",{get:function(){return this.__style},set:function(t){null!=this.__style&&this.__style===t||(this.__style=new e._StyleOption(t))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"textStyle",{get:function(){return this.__textStyle},set:function(t){null!=this.__textStyle&&this.__textStyle===t||(this.__textStyle=new e._TextStyleOption(t))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"borderStyle",{get:function(){return this.__borderStyle},set:function(t){null!=this.__borderStyle&&this.__borderStyle==t||(this.__borderStyle=new e._LineStyleOption(t))},enumerable:!0,configurable:!0}),t}(e._Option);e._FooterOption=t}(n.options||(n.options={}))}(dv||(dv={})),function(n){!function(e){"use strict";var t=function(i){function t(t){var e=i.call(this,t)||this;return e.orientation=e._option().orientation,e.position=e._option().position,e.titlePosition=e._option().titlePosition,e.wrapping=e._option().wrapping,e.style=e._option().style,e.textStyle=e._option().textStyle,e.borderStyle=e._option().borderStyle,e.titleStyle=e._option().titleStyle,e.hoverStyle=e._option().hoverStyle,e.filteredOutStyle=e._option().filteredOutStyle,e.padding=e._option().padding,e.itemPadding=e._option().itemPadding,e}return __extends(t,i),Object.defineProperty(t.prototype,"orientation",{get:function(){return this.__orientation},set:function(t){this.__orientation!=t&&(this.__orientation=n.core.asEnum(t,n.Orientation,!0))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"position",{get:function(){return this.__position},set:function(t){null!=this.__position&&this.__position==t||(this.__position=n.core.asEnum(t,n.Position,!0))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"titlePosition",{get:function(){return this.__titlePosition},set:function(t){null!=this.__titlePosition&&this.__titlePosition==t||(this.__titlePosition=n.core.asEnum(t,n.Position,!0))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"wrapping",{get:function(){return this.__wrapping},set:function(t){null!=this.__position&&this.__wrapping==t||(this.__wrapping=n.core.asBoolean(t,!0))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"style",{get:function(){return this.__style},set:function(t){null!=this.__style&&this.__style==t||(this.__style=new e._LegendStyleOption(t))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"textStyle",{get:function(){return this.__textStyle},set:function(t){null!=this.__textStyle&&this.__textStyle==t||(this.__textStyle=new e._TextStyleOption(t))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"borderStyle",{get:function(){return this.__borderStyle},set:function(t){null!=this.__borderStyle&&this.__borderStyle==t||(this.__borderStyle=new e._LineStyleOption(t))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"titleStyle",{get:function(){return this.__titleStyle},set:function(t){null!=this.__titleStyle&&this.__titleStyle==t||(this.__titleStyle=new e._TextStyleOption(t))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"hoverStyle",{get:function(){return this.__hoverStyle},set:function(t){null!=this.__hoverStyle&&this.__hoverStyle==t||(this.__hoverStyle=new e._TextStyleOption(t))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"filteredOutStyle",{get:function(){return this.__filteredOutStyle},set:function(t){null!=this.__filteredOutStyle&&this.__filteredOutStyle==t||(this.__filteredOutStyle=new e._TextStyleOption(t))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"padding",{get:function(){return this.__padding},set:function(t){this.__padding&&this.__padding===t||(this.__padding=new e._PaddingOption(t))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"itemPadding",{get:function(){return this.__itemPadding},set:function(t){this.__itemPadding&&this.__itemPadding===t||(this.__itemPadding=new e._PaddingOption(t))},enumerable:!0,configurable:!0}),t}(e._Option);e._GlobalLegendOption=t}(n.options||(n.options={}))}(dv||(dv={})),function(n){!function(e){"use strict";var t=function(i){function t(t){var e=i.call(this,t)||this;return e.title=e._option().title,e.height=e._option().height,e.maxHeight=e._option().maxHeight,e.padding=e._option().padding,e.hAlign=e._option().hAlign,e.vAlign=e._option().vAlign,e.style=e._option().style,e.textStyle=e._option().textStyle,e.borderStyle=e._option().borderStyle,e.width=e._option().width,e}return __extends(t,i),Object.defineProperty(t.prototype,"width",{get:function(){return this.__width},set:function(t){null!=t&&(n.core.assert("string"==typeof t||"number"==typeof t,"Wrong format of width!"),this.__width=t)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"title",{get:function(){return this.__title},set:function(t){this.__title!==t&&(this.__title=n.core.asString(t,!0))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"height",{get:function(){return this.__height},set:function(t){this.__height!==t&&(null==t?this.__height=t:"number"==typeof t?0<(t=n.core.asNumber(t,!0))&&t<1&&(this.__height=t):"string"==typeof t&&(t=n.core.asString(t,!0))&&!isNaN(n.core._Parser._parseCssPixel(t))&&(this.__height=t))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"maxHeight",{get:function(){return this.__maxHeight},set:function(t){this.__maxHeight!==t&&(null==t?this.__maxHeight=t:"number"==typeof t?0<(t=n.core.asNumber(t,!0))&&t<1&&(this.__maxHeight=t):"string"==typeof t&&(t=n.core.asString(t,!0))&&!isNaN(n.core._Parser._parseCssPixel(t))&&(this.__maxHeight=t))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"padding",{get:function(){return this.__padding},set:function(t){null!=this.__padding&&this.__padding===t||(this.__padding=new e._PaddingOption(t))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"hAlign",{get:function(){return this.__hAlign},set:function(t){null!=this.__hAlign&&this.__hAlign==t||(this.__hAlign=n.core.asEnum(t,n.HAlign,!0),null==this.__hAlign&&(this.__hAlign=n.HAlign.Center))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"vAlign",{get:function(){return this.__vAlign},set:function(t){null!=this.__vAlign&&this.__vAlign==t||(this.__vAlign=n.core.asEnum(t,n.VAlign,!0),null==this.__vAlign&&(this.__vAlign=n.VAlign.Middle))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"style",{get:function(){return this.__style},set:function(t){null!=this.__style&&this.__style===t||(this.__style=new e._StyleOption(t))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"textStyle",{get:function(){return this.__textStyle},set:function(t){null!=this.__textStyle&&this.__textStyle===t||(this.__textStyle=new e._TextStyleOption(t))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"borderStyle",{get:function(){return this.__borderStyle},set:function(t){null!=this.__borderStyle&&this.__borderStyle==t||(this.__borderStyle=new e._LineStyleOption(t))},enumerable:!0,configurable:!0}),t}(e._Option);e._HeaderOption=t}(n.options||(n.options={}))}(dv||(dv={})),function(n){!function(t){"use strict";var e=function(i){function t(t){var e=i.call(this,t)||this;return e.scale=e._option().scale,e}return __extends(t,i),Object.defineProperty(t.prototype,"scale",{get:function(){return this.__scale},set:function(t){null!=this.__scale&&this.__scale==t||(null==t?this.__scale=t:"number"==typeof t?(t=n.core.asNumber(t,!0),this.__scale=t):"string"==typeof t&&(t=n.core.asString(t,!0))&&!isNaN(n.core._Parser._parseCssPixel(t))&&(this.__scale=t))},enumerable:!0,configurable:!0}),t}(t._AnimationOption);t._HoverAnimationOption=e}(n.options||(n.options={}))}(dv||(dv={})),function(n){!function(t){"use strict";var e=function(i){function t(t){var e=i.call(this,t)||this;return e.__palette=[],e.min=e._option().min,e.max=e._option().max,e.majorUnit=e._option().majorUnit,e.palette=e._option().palette,e}return __extends(t,i),Object.defineProperty(t.prototype,"min",{get:function(){return this.__min},set:function(t){null!=this.__min&&this.__min==t||(this.__min=n.core.asNumber(t,!0))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"max",{get:function(){return this.__max},set:function(t){null!=this.__max&&this.__max==t||(this.__max=n.core.asNumber(t,!0))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"majorUnit",{get:function(){return this.__majorUnit},set:function(t){null!=this.__majorUnit&&this.__majorUnit==t||(this.__majorUnit=n.core.asNumber(t,!0))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"palette",{get:function(){return this.__palette},set:function(t){var e=this;null!=this.__palette&&this.__palette==t||("string"==typeof t?(this.__palette=[],t.split(",").forEach(function(t){e.__palette.push(t.trim())})):Array.isArray(t)?(this.__palette=[],t.forEach(function(t){e.__palette.push(t.trim())})):null==t&&(this.__palette=[]))},enumerable:!0,configurable:!0}),t}(t._Option);t._LegendGradientOption=e}(n.options||(n.options={}))}(dv||(dv={})),function(r){!function(o){"use strict";var t=function(i){function t(t){var e=i.call(this,t)||this;return e.__items=[],e.type=e._option().type,e.orientation=e._option().orientation,e.position=e._option().position,e.title=e._option().title,e.titlePosition=e._option().titlePosition,e.style=e._option().style,e.textStyle=e._option().textStyle,e.borderStyle=e._option().borderStyle,e.titleStyle=e._option().titleStyle,e.hoverStyle=e._option().hoverStyle,e.filteredOutStyle=e._option().filteredOutStyle,e.ranges=e._option().ranges,e.gradient=e._option().gradient,e.padding=e._option().padding,e.itemPadding=e._option().itemPadding,e.width=e._option().width,e.height=e._option().height,e.maxWidth=e._option().maxWidth,e.maxHeight=e._option().maxHeight,e.sortOrder=e._option().sortOrder,e.items=e._option().items,e}return __extends(t,i),Object.defineProperty(t.prototype,"items",{get:function(){return this.__items},set:function(t){if(null!=t){r.core.asArray(t);for(var e=this.__items.length=0,i=t;e<i.length;e++){var n=i[e];this.__items.push(new o._LegendItemOption(n))}}},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"sortOrder",{get:function(){return null==this.__sortOrder&&(this.__sortOrder=r.SortOrder.None),this.__sortOrder},set:function(t){this.__sortOrder!=t&&(this.__sortOrder=r.core.asEnum(t,r.SortOrder,!0))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"type",{get:function(){return this.__type},set:function(t){this.__type!=t&&(this.__type=r.core.asEnum(t,r.LegendType,!0))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"orientation",{get:function(){return this.__orientation},set:function(t){this.__orientation!=t&&(this.__orientation=r.core.asEnum(t,r.Orientation,!0))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"position",{get:function(){return this.__position},set:function(t){null!=this.__position&&this.__position==t||(this.__position=r.core.asEnum(t,r.Position,!0))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"title",{get:function(){return this.__title},set:function(t){this.__title!=t&&(this.__title=r.core.asString(t,!0))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"titlePosition",{get:function(){return this.__titlePosition},set:function(t){null!=this.__titlePosition&&this.__titlePosition==t||(this.__titlePosition=r.core.asEnum(t,r.Position,!0))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"style",{get:function(){return this.__style},set:function(t){null!=this.__style&&this.__style==t||(this.__style=new o._LegendStyleOption(t))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"textStyle",{get:function(){return this.__textStyle},set:function(t){null!=this.__textStyle&&this.__textStyle==t||(this.__textStyle=new o._TextStyleOption(t))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"borderStyle",{get:function(){return this.__borderStyle},set:function(t){null!=this.__borderStyle&&this.__borderStyle==t||(this.__borderStyle=new o._LineStyleOption(t))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"titleStyle",{get:function(){return this.__titleStyle},set:function(t){null!=this.__titleStyle&&this.__titleStyle==t||(this.__titleStyle=new o._TextStyleOption(t))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"hoverStyle",{get:function(){return this.__hoverStyle},set:function(t){null!=this.__hoverStyle&&this.__hoverStyle==t||(this.__hoverStyle=new o._TextStyleOption(t))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"filteredOutStyle",{get:function(){return this.__filteredOutStyle},set:function(t){null!=this.__filteredOutStyle&&this.__filteredOutStyle==t||(this.__filteredOutStyle=new o._TextStyleOption(t))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"ranges",{get:function(){return this.__ranges},set:function(t){null!=this.__ranges&&this.__ranges==t||(this.__ranges=t)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"gradient",{get:function(){return this.__gradient},set:function(t){null!=this.__gradient&&this.__gradient==t||(this.__gradient="boolean"==typeof t?t:new o._LegendGradientOption(t))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"padding",{get:function(){return this.__padding},set:function(t){this.__padding&&this.__padding===t||(this.__padding=new o._PaddingOption(t))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"itemPadding",{get:function(){return this.__itemPadding},set:function(t){this.__itemPadding&&this.__itemPadding===t||(this.__itemPadding=new o._PaddingOption(t))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"width",{get:function(){return this.__width},set:function(t){this.__width!==t&&(null==t?this.__width=t:"number"==typeof t?0<(t=r.core.asNumber(t,!0))&&t<1&&(this.__width=t):"string"==typeof t&&(t=r.core.asString(t,!0))&&!isNaN(r.core._Parser._parseCssPixel(t))&&(this.__width=t))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"height",{get:function(){return this.__height},set:function(t){this.__height!==t&&(null==t?this.__height=t:"number"==typeof t?0<(t=r.core.asNumber(t,!0))&&t<1&&(this.__height=t):"string"==typeof t&&(t=r.core.asString(t,!0))&&!isNaN(r.core._Parser._parseCssPixel(t))&&(this.__height=t))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"maxWidth",{get:function(){return this.__maxWidth},set:function(t){this.__maxWidth!==t&&(null==t?this.__maxWidth=t:"number"==typeof t?0<(t=r.core.asNumber(t,!0))&&t<1&&(this.__maxWidth=t):"string"==typeof t&&(t=r.core.asString(t,!0))&&!isNaN(r.core._Parser._parseCssPixel(t))&&(this.__maxWidth=t))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"maxHeight",{get:function(){return this.__maxHeight},set:function(t){this.__maxHeight!==t&&(null==t?this.__maxHeight=t:"number"==typeof t?0<(t=r.core.asNumber(t,!0))&&t<1&&(this.__maxHeight=t):"string"==typeof t&&(t=r.core.asString(t,!0))&&!isNaN(r.core._Parser._parseCssPixel(t))&&(this.__maxHeight=t))},enumerable:!0,configurable:!0}),t}(o._Option);o._LegendOption=t}(r.options||(r.options={}))}(dv||(dv={})),function(t){!function(e){"use strict";var t=function(i){function t(t){var e=i.call(this,t)||this;return e.iconColor=e._option().iconColor,e}return __extends(t,i),Object.defineProperty(t.prototype,"iconColor",{get:function(){return this.__iconColor},set:function(t){this.__iconColor!=t&&(this.__iconColor=e._GradientOption.parse(t))},enumerable:!0,configurable:!0}),t}(e._StyleOption);e._LegendStyleOption=t}(t.options||(t.options={}))}(dv||(dv={})),function(n){!function(e){"use strict";var t=function(i){function t(t){var e=i.call(this,t)||this;return e.opacity=e._option().opacity,e.stroke=e._option().stroke,e.strokeWidth=e._option().strokeWidth,e.strokeDasharray=e._option().strokeDasharray,e}return __extends(t,i),Object.defineProperty(t.prototype,"opacity",{get:function(){return this.__opacity},set:function(t){null!=this.__opacity&&this.__opacity==t||(this.__opacity=n.core.asNumber(t,!0))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"stroke",{get:function(){return this.__stroke},set:function(t){this.__stroke!=t&&(this.__stroke=e._GradientOption.parse(t))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"strokeWidth",{get:function(){return this.__strokeWidth},set:function(t){null!=this.__strokeWidth&&this.__strokeWidth==t||(this.__strokeWidth=n.core.asNumber(t,!0))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"strokeDasharray",{get:function(){return this.__strokeDasharray},set:function(t){this.__strokeDasharray!=t&&(this.__strokeDasharray=n.core.asString(t,!0))},enumerable:!0,configurable:!0}),t}(e._Option);e._LineStyleOption=t}(n.options||(n.options={}))}(dv||(dv={})),function(n){!function(e){"use strict";var t=function(i){function t(t){var e=i.call(this,t)||this;return e.text=e._option().text,e.position=e._option().position,e.display=e._option().display,e.textStyle=e._option().textStyle,e}return __extends(t,i),Object.defineProperty(t.prototype,"text",{get:function(){return this.__text},set:function(t){null!=t&&t!=this.__text&&(this.__text=t)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"display",{get:function(){return null==this.__display&&(this.__display=n.OverlayLabelDisplay.Legend),this.__display},set:function(t){null!=t&&t!=this.__display&&(this.__display=n.core.asEnum(t,n.OverlayLabelDisplay))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"position",{get:function(){return null==this.__position&&(this.__position=n.OverlayLabelPosition.TopLeft),this.__position},set:function(t){null!=t&&t!=this.__position&&(this.__position=n.core.asEnum(t,n.OverlayLabelPosition))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"textStyle",{get:function(){return this.__textStyle},set:function(t){null!=t&&this.__textStyle!=t&&(n.core.assert("object"==typeof t,"Invalid textStyle value in Overlay."),this.__textStyle=new e._TextStyleOption(t))},enumerable:!0,configurable:!0}),t}(e._Option);e._OverlayLabelOption=t}(n.options||(n.options={}))}(dv||(dv={})),function(n){!function(t){"use strict";var e=function(i){function t(t){var e=i.call(this,t)||this;return e.position=e._option().position,e.type=e._option().type,e}return __extends(t,i),Object.defineProperty(t.prototype,"type",{get:function(){return this.__type},set:function(t){null==t&&t==this.__type||(this.__type=n.core.asString(t,!0))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"position",{get:function(){return this.__position},set:function(t){null==t&&t==this.__position||(this.__position=n.core.asEnum(t,n.OverlayPosition,!0),null==this.__position&&(this.__position=n.OverlayPosition.Back))},enumerable:!0,configurable:!0}),t}(t._Option);t._OverlayOption=e}(n.options||(n.options={}))}(dv||(dv={})),function(a){!function(t){"use strict";var e=function(n){function t(t){var e=n.call(this,t)||this;if("string"==typeof t){var i=e._parse(t);e.left=i.left,e.top=i.top,e.right=i.right,e.bottom=i.bottom}else"number"==typeof t?e.top=e.bottom=e.left=e.right=t:(e.left=e._option().left,e.top=e._option().top,e.right=e._option().right,e.bottom=e._option().bottom);return e}return __extends(t,n),Object.defineProperty(t.prototype,"left",{get:function(){return this.__left},set:function(t){null!=this.__left&&this.__left==t||(this.__left=a.core.asNumber(t,!0),null==this.__left&&(this.__left=0))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"top",{get:function(){return this.__top},set:function(t){null!=this.__top&&this.__top==t||(this.__top=a.core.asNumber(t,!0),null==this.__top&&(this.__top=0))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"right",{get:function(){return this.__right},set:function(t){null!=this.__right&&this.__right==t||(this.__right=a.core.asNumber(t,!0),null==this.__right&&(this.__right=0))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"bottom",{get:function(){return this.__bottom},set:function(t){null!=this.__bottom&&this.__bottom==t||(this.__bottom=a.core.asNumber(t,!0),null==this.__bottom&&(this.__bottom=0))},enumerable:!0,configurable:!0}),t.prototype.isEmpty=function(){var t=this._option();return"string"!=typeof t&&"number"!=typeof t&&n.prototype.isEmpty.call(this)},t.prototype._parse=function(t){var e={left:0,top:0,right:0,bottom:0},i=a.core.asString(t,!0).split(",",4),n=NaN,o=NaN,r=NaN,s=NaN;return i&&(4==i.length?(n=parseFloat(i[0]),s=parseFloat(i[1]),o=parseFloat(i[2]),r=parseFloat(i[3])):3==i.length?(n=parseFloat(i[0]),r=s=parseFloat(i[1]),o=parseFloat(i[2])):2==i.length?(n=o=parseFloat(i[0]),r=s=parseFloat(i[1])):1==i.length&&(n=o=r=s=parseFloat(i[0])),isNaN(n)||(e.top=n),isNaN(o)||(e.bottom=o),isNaN(r)||(e.left=r),isNaN(s)||(e.right=s)),e},t}(t._Option);t._PaddingOption=e}(a.options||(a.options={}))}(dv||(dv={})),function(t){!function(t){"use strict";var e=function(i){function t(t){var e=i.call(this,t)||this;return e.columnWidths=e._option().columnWidths,e.rowHeights=e._option().rowHeights,e}return __extends(t,i),Object.defineProperty(t.prototype,"columnWidths",{get:function(){return this.__columnWidths},set:function(t){if((null==this.__columnWidths||this.__columnWidths!=t)&&(this.__columnWidths=[],null!=t)){Array.isArray(t)||(t=[t]);for(var e=0,i=t;e<i.length;e++){var n=i[e];"string"!=typeof n&&"number"!=typeof n||this.__columnWidths.push(n)}}},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"rowHeights",{get:function(){return this.__rowHeights},set:function(t){if((null==this.__rowHeights||this.__rowHeights!=t)&&(this.__rowHeights=[],null!=t)){Array.isArray(t)||(t=[t]);for(var e=0,i=t;e<i.length;e++){var n=i[e];"string"!=typeof n&&"number"!=typeof n||this.__rowHeights.push(n)}}},enumerable:!0,configurable:!0}),t}(t._Option);t._PlotAreaLayoutOption=e}(t.options||(t.options={}))}(dv||(dv={})),function(e){!function(o){"use strict";var t=function(i){function t(t){var e=i.call(this,t)||this;return e.row=e._option().row,e.column=e._option().column,e.axes=e._option().axes,e.legend=e._option().legend,e.legends=e._option().legends,e.borderStyle=e._option().borderStyle,e.backgroundColor=e._option().backgroundColor,e.padding=e._option().padding,e.style=e._option().style,e.textStyle=e._option().textStyle,e}return __extends(t,i),Object.defineProperty(t.prototype,"row",{get:function(){return this.__row},set:function(t){null!=this.__row&&this.__row==t||(this.__row=e.core.asNumber(t,!0))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"column",{get:function(){return this.__column},set:function(t){null!=this.__column&&this.__column==t||(this.__column=e.core.asNumber(t,!0))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"axes",{get:function(){return this.__axes},set:function(t){if((null==this.__axes||this.__axes!=t)&&(this.__axes=[],null!=t)){Array.isArray(t)||(t=[t]);for(var e=0,i=t;e<i.length;e++){var n=i[e];this.__axes.push(new o._AxisOption(n))}}},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"legend",{get:function(){return this.__legend},set:function(t){null!=this.__legend&&this.__legend==t||(this.__legend=new o._GlobalLegendOption(t))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"legends",{get:function(){return this.__legends},set:function(t){if((null==this.__legends||this.__legends!=t)&&(this.__legends=[],null!=t)){Array.isArray(t)||(t=[t]);for(var e=0,i=t;e<i.length;e++){var n=i[e];this.__legends.push(new o._LegendOption(n))}}},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"borderStyle",{get:function(){return this.__borderStyle},set:function(t){null!=this.__borderStyle&&this.__borderStyle==t||(this.__borderStyle=new o._LineStyleOption(t))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"backgroundColor",{get:function(){return this.__backgroundColor},set:function(t){null!=this.__backgroundColor&&this.__backgroundColor==t||(this.__backgroundColor=o._GradientOption.parse(t))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"padding",{get:function(){return this.__padding},set:function(t){null!=this.__padding&&this.__padding==t||(this.__padding=new o._PaddingOption(t))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"style",{get:function(){return this.__style},set:function(t){null!=this.__style&&this.__style==t||(this.__style=new o._StyleOption(t))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"textStyle",{get:function(){return this.__textStyle},set:function(t){null!=this.__textStyle&&this.__textStyle==t||(this.__textStyle=new o._TextStyleOption(t))},enumerable:!0,configurable:!0}),t}(o._Option);o._PlotAreaOption=t}(e.options||(e.options={}))}(dv||(dv={})),function(e){!function(o){"use strict";var t=function(i){function t(t){var e=i.call(this,t)||this;return e.axisMode=e._option().axisMode,e.symbols=e._option().symbols,e.swapAxes=e._option().swapAxes,e.clippingMode=e._option().clippingMode,e.showNulls=e._option().showNulls,e.lineAspect=e._option().lineAspect,e.offset=e._option().offset,e.innerRadius=e._option().innerRadius,e.sweep=e._option().sweep,e.startAngle=e._option().startAngle,e.rules=e._option().rules,e.barLines=e._option().barLines,e.style=e._option().style,e.textStyle=e._option().textStyle,e.hoverStyle=e._option().hoverStyle,e.text=e._option().text,e.tooltip=e._option().tooltip,e.trellis=e._option().trellis,e.loadAnimation=e._option().loadAnimation,e.hoverAnimation=e._option().hoverAnimation,e.updateAnimation=e._option().updateAnimation,e.overlays=e._option().overlays,e.textConfig=e._option().textConfig,e.selectedStyle=e._option().selectedStyle,e.unselectedStyle=e._option().unselectedStyle,e}return __extends(t,i),Object.defineProperty(t.prototype,"axisMode",{get:function(){return this.__axisMode},set:function(t){null!=this.__axisMode&&this.__axisMode==t||(this.__axisMode=e.core.asEnum(t,e.AxisMode,!0),null==this.__axisMode&&(this.__axisMode=e.AxisMode.Cartesian))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"symbols",{get:function(){return this.__symbols},set:function(t){null!=this.__symbols&&this.__symbols==t||(this.__symbols=e.core.asBoolean(t,!0),null==this.__symbols&&(this.__symbols=!1))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"swapAxes",{get:function(){return this.__swapAxes},set:function(t){null!=this.__swapAxes&&this.__swapAxes==t||(this.__swapAxes=e.core.asBoolean(t,!0),null==this.__swapAxes&&(this.__swapAxes=!1))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"clippingMode",{get:function(){return this.__clippingMode},set:function(t){null!=this.__clippingMode&&this.__clippingMode==t||(this.__clippingMode=e.core.asEnum(t,e.ClippingMode,!0),null==this.__clippingMode&&(this.__clippingMode=e.ClippingMode.None))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"showNulls",{get:function(){return this.__showNulls},set:function(t){null!=this.__showNulls&&this.__showNulls==t||(this.__showNulls=e.core.asEnum(t,e.ShowNulls,!0),null==this.__showNulls&&(this.__showNulls=e.ShowNulls.Connected))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"lineAspect",{get:function(){return this.__lineAspect},set:function(t){null!=this.__lineAspect&&this.__lineAspect==t||(this.__lineAspect=e.core.asEnum(t,e.LineAspect,!0),null==this.__lineAspect&&(this.__lineAspect=e.LineAspect.Default))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"offset",{get:function(){return this.__offset},set:function(t){null!=this.__offset&&this.__offset==t||("number"==typeof t?(this.__offset=t,1<this.__offset?this.__offset=1:this.__offset<-1&&(this.__offset=-1)):this.__offset=0)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"innerRadius",{get:function(){return this.__innerRadius},set:function(t){null!=this.__innerRadius&&this.__innerRadius==t||("number"==typeof t?(this.__innerRadius=t,1<this.__innerRadius?this.__innerRadius=1:this.__innerRadius<0&&(this.__innerRadius=0)):this.__innerRadius=0)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"sweep",{get:function(){return this.__sweep},set:function(t){null!=this.__sweep&&this.__sweep==t||("number"==typeof t?(this.__sweep=t,360<this.__sweep?this.__sweep=360:this.__sweep<0&&(this.__sweep=0)):this.__sweep=360)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"startAngle",{get:function(){return this.__startAngle},set:function(t){null!=this.__startAngle&&this.__startAngle==t||(this.__startAngle="number"==typeof t?t:0)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"rules",{get:function(){return this.__rules},set:function(t){if((null==this.__rules||this.__rules!=t)&&(this.__rules=[],null!=t)){Array.isArray(t)||(t=[t]);for(var e=0,i=t;e<i.length;e++){var n=i[e];this.__rules.push(new o._RuleOption(n))}}},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"barLines",{get:function(){return this.__barLines},set:function(t){null!=this.__barLines&&this.__barLines==t||(this.__barLines=e.core.asBoolean(t,!0),null==this.__barLines&&(this.__barLines=!1))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"style",{get:function(){return this.__style},set:function(t){null!=this.__style&&this.__style==t||(this.__style=new o._DataPointStyleOption(t))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"textStyle",{get:function(){return this.__textStyle},set:function(t){null!=this.__textStyle&&this.__textStyle==t||(this.__textStyle=new o._TextStyleOption(t))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"hoverStyle",{get:function(){return this.__hoverStyle},set:function(t){null!=this.__hoverStyle&&this.__hoverStyle==t||(this.__hoverStyle=new o._DataPointStyleOption(t))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"text",{get:function(){return this.__text},set:function(t){null!=this.__text&&this.__text==t||(this.__text=new o._PlotConfigTextOption(t))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"tooltip",{get:function(){return this.__tooltip},set:function(t){null!=this.__tooltip&&this.__tooltip==t||(this.__tooltip=new o._PlotConfigTooltipOption(t))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"trellis",{get:function(){return this.__trellis},set:function(t){null!=this.__trellis&&this.__trellis==t||(this.__trellis=new o._PlotConfigTrellisOption(t))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"loadAnimation",{get:function(){return this.__loadAnimation},set:function(t){null!=this.__loadAnimation&&this.__loadAnimation==t||(this.__loadAnimation=null!=t&&("boolean"==typeof t?!!t&&new o._AnimationOption(null):"object"==typeof t&&new o._AnimationOption(t)))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"updateAnimation",{get:function(){return this.__updateAnimation},set:function(t){null!=this.__updateAnimation&&this.__updateAnimation==t||(this.__updateAnimation=null!=t&&("boolean"==typeof t?!!t&&new o._AnimationOption(null):"object"==typeof t&&new o._AnimationOption(t)))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"hoverAnimation",{get:function(){return this.__hoverAnimation},set:function(t){null!=this.__hoverAnimation&&this.__hoverAnimation==t||(this.__hoverAnimation=null!=t&&("boolean"==typeof t?!!t&&new o._HoverAnimationOption(null):"object"==typeof t&&new o._HoverAnimationOption(t)))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"overlays",{get:function(){return this.__overlays},set:function(t){if((null==this.__overlays||this.__overlays!=t)&&(this.__overlays=[],null!=t)){Array.isArray(t)||(t=[t]);for(var e=0,i=t;e<i.length;e++){var n=i[e];this.__overlays.push(new o._OverlayOption(n))}}},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"textConfig",{get:function(){return this.__textConfig},set:function(t){null!=this.__textConfig&&this.__textConfig==t||(this.__textConfig=new o._TextPlotConfigOption(t))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"selectedStyle",{get:function(){return this.__selectedStyle},set:function(t){null!=this.__selectedStyle&&this.__selectedStyle==t||(this.__selectedStyle=new o._SelectionStyleOption(t))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"unselectedStyle",{get:function(){return this.__unSelectedStyle},set:function(t){null!=this.__unSelectedStyle&&this.__unSelectedStyle==t||(this.__unSelectedStyle=new o._SelectionStyleOption(t))},enumerable:!0,configurable:!0}),t}(o._Option);o._PlotConfigOption=t}(e.options||(e.options={}))}(dv||(dv={})),function(n){!function(e){"use strict";var t=function(i){function t(t){var e=i.call(this,t)||this;return e.scope=e._option().scope,e.template=e._option().template,e.position=e._option().position,e.offset=e._option().offset,e.overlappingLabels=e._option().overlappingLabels,e.connectingLine=e._option().connectingLine,e.linePosition=e._option().linePosition,e.angle=e._option().angle,e.style=e._option().style,e.textStyle=e._option().textStyle,e.borderStyle=e._option().borderStyle,e}return __extends(t,i),Object.defineProperty(t.prototype,"scope",{get:function(){return this.__scope},set:function(t){this.__scope!=t&&(this.__scope=n.core.asString(t,!0))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"template",{get:function(){return this.__template},set:function(t){this.__template!=t&&(this.__template=n.core.asString(t,!0))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"position",{get:function(){return this.__position},set:function(t){null!=this.__position&&this.__position==t||(this.__position=n.core.asEnum(t,n.TextPosition,!0),null==this.__position&&(this.__position=n.TextPosition.Auto))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"offset",{get:function(){return this.__offset},set:function(t){null!=this.__offset&&this.__offset==t||(this.__offset=n.core.asNumber(t,!0),null==this.__offset&&(this.__offset=0))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"overlappingLabels",{get:function(){return this.__overlappingLabels},set:function(t){null!=this.__overlappingLabels&&this.__overlappingLabels==t||(this.__overlappingLabels=n.core.asEnum(t,n.OverlappingLabels,!0),null==this.__overlappingLabels&&(this.__overlappingLabels=n.OverlappingLabels.Auto))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"connectingLine",{get:function(){return this.__connectingLine},set:function(t){null!=this.__connectingLine&&this.__connectingLine==t||(null==t?this.__connectingLine=!1:"boolean"==typeof t?this.__connectingLine=t:"object"==typeof t&&(this.__connectingLine=new e._LineStyleOption(t)))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"linePosition",{get:function(){return this.__linePosition},set:function(t){null!=this.__linePosition&&this.__linePosition==t||(this.__linePosition=n.core.asEnum(t,n.LinePosition,!0),null==this.__linePosition&&(this.__linePosition=n.LinePosition.Auto))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"angle",{get:function(){return this.__angle},set:function(t){null!=this.__angle&&this.__angle==t||(this.__angle=e._Option.toAngles(t))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"style",{get:function(){return this.__style},set:function(t){null!=this.__style&&this.__style==t||(this.__style=new e._StyleOption(t))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"textStyle",{get:function(){return this.__textStyle},set:function(t){null!=this.__textStyle&&this.__textStyle==t||(this.__textStyle=new e._TextStyleOption(t))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"borderStyle",{get:function(){return this.__borderStyle},set:function(t){null!=this.__borderStyle&&this.__borderStyle==t||(this.__borderStyle=new e._LineStyleOption(t))},enumerable:!0,configurable:!0}),t}(e._Option);e._PlotConfigTextOption=t}(n.options||(n.options={}))}(dv||(dv={})),function(n){!function(e){"use strict";var t=function(i){function t(t){var e=i.call(this,t)||this;return e.scope=e._option().scope,e.template=e._option().template,e.style=e._option().style,e.textStyle=e._option().textStyle,e}return __extends(t,i),Object.defineProperty(t.prototype,"scope",{get:function(){return this.__scope},set:function(t){this.__scope!=t&&(this.__scope=n.core.asString(t,!0))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"template",{get:function(){return this.__template},set:function(t){this.__template!=t&&(this.__template=n.core.asString(t,!0))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"style",{get:function(){return this.__style},set:function(t){null!=this.__style&&this.__style==t||(this.__style=new e._StyleOption(t))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"textStyle",{get:function(){return this.__textStyle},set:function(t){null!=this.__textStyle&&this.__textStyle==t||(this.__textStyle=new e._TextStyleOption(t))},enumerable:!0,configurable:!0}),t}(e._Option);e._PlotConfigTooltipOption=t}(n.options||(n.options={}))}(dv||(dv={})),function(t){!function(e){"use strict";var t=function(i){function t(t){var e=i.call(this,t)||this;return e.style=e._option().style,e.textStyle=e._option().textStyle,e.hoverStyle=e._option().hoverStyle,e.padding=e._option().padding,e}return __extends(t,i),Object.defineProperty(t.prototype,"style",{get:function(){return this.__style},set:function(t){null!=this.__style&&this.__style==t||(this.__style=new e._LineStyleOption(t))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"textStyle",{get:function(){return this.__textStyle},set:function(t){null!=this.__textStyle&&this.__textStyle==t||(this.__textStyle=new e._TextStyleOption(t))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"hoverStyle",{get:function(){return this.__hoverStyle},set:function(t){null!=this.__hoverStyle&&this.__hoverStyle==t||(this.__hoverStyle=new e._TextStyleOption(t))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"padding",{get:function(){return this.__padding},set:function(t){null!=this.__padding&&this.__padding==t||(this.__padding=new e._PaddingOption(t))},enumerable:!0,configurable:!0}),t}(e._Option);e._PlotConfigTrellisOption=t}(t.options||(t.options={}))}(dv||(dv={})),function(t){!function(r){"use strict";var t=function(i){function t(t){var e=i.call(this,t)||this;return e.__details=[],e.__text=[],e.__tooltip=[],e.values=e._option().values,e.category=e._option().category,e.details=e._option().details,e.color=e._option().color,e.size=e._option().size,e.shape=e._option().shape,e.text=e._option().text,e.tooltip=e._option().tooltip,e.layout=e._option().layout,e}return __extends(t,i),Object.defineProperty(t.prototype,"values",{get:function(){return this.__values},set:function(t){if((null==this.__values||this.__values!=t)&&(this.__values=[],null!=t)){Array.isArray(t)||(t=[t]);for(var e=0,i=t;e<i.length;e++){var n=i[e],o=new r._ValueEncodingOption(n);null!=o.field&&this.__values.push(o)}}},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"category",{get:function(){return this.__category},set:function(t){null!=this.__category&&this.__category==t||(this.__category=new r._CategoryEncodingOption(t))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"details",{get:function(){return this.__details},set:function(t){if((null==this.__details||this.__details!=t)&&(this.__details=[],null!=t)){Array.isArray(t)||(t=[t]);for(var e=0,i=t;e<i.length;e++){var n=i[e],o=new r._DetailEncodingOption(n);null!=o.field&&this.__details.push(o)}}},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"color",{get:function(){return this.__color},set:function(t){null!=this.__color&&this.__color==t||(this.__color=new r._ColorEncodingOption(t))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"size",{get:function(){return this.__size},set:function(t){null!=this.__size&&this.__size==t||(this.__size=new r._SizeEncodingOption(t))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"shape",{get:function(){return this.__shape},set:function(t){null!=this.__shape&&this.__shape==t||(this.__shape=new r._ShapeEncodingOption(t))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"text",{get:function(){return this.__text},set:function(t){if((null==this.__text||this.__text!=t)&&(this.__text=[],null!=t)){Array.isArray(t)||(t=[t]);for(var e=0,i=t;e<i.length;e++){var n=i[e],o=new r._ContentEncodingOption(n);null!=o.field&&this.__text.push(o)}}},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"tooltip",{get:function(){return this.__tooltip},set:function(t){if((null==this.__tooltip||this.__tooltip!=t)&&(this.__tooltip=[],null!=t)){Array.isArray(t)||(t=[t]);for(var e=0,i=t;e<i.length;e++){var n=i[e],o=new r._ContentEncodingOption(n);null!=o.field&&this.__tooltip.push(o)}}},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"layout",{get:function(){return this.__layout},set:function(t){null!=this.__layout&&this.__layout==t||(t&&"Trellis"===t.type?this.__layout=new r._TrellisLayoutEncodingOption(t):this.__layout=new r._LayoutEncodingOption(t))},enumerable:!0,configurable:!0}),t}(r._Option);r._PlotEncodingsOption=t}(t.options||(t.options={}))}(dv||(dv={})),function(n){!function(e){"use strict";var t=function(i){function t(t){var e=i.call(this,t)||this;return e.name=e._option().name,e.type=e._option().type,e.encodings=e._option().encodings,e.config=e._option().config,e}return __extends(t,i),Object.defineProperty(t.prototype,"name",{get:function(){return this.__name},set:function(t){this.__name!=t&&(this.__name=n.core.asString(t,!0))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"type",{get:function(){return this.__type},set:function(t){this.__type!=t&&(this.__type=n.core.asString(t,!0))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"encodings",{get:function(){return this.__encodings},set:function(t){null!=this.__encodings&&this.__encodings==t||(this.__encodings=new e._PlotEncodingsOption(t))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"config",{get:function(){return this.__config},set:function(t){null!=this.__config&&this.__config==t||(this.__config=new e._PlotConfigOption(t))},enumerable:!0,configurable:!0}),t}(e._Option);e._PlotOption=t}(n.options||(n.options={}))}(dv||(dv={})),function(n){!function(e){"use strict";var t=function(i){function t(t){var e=i.call(this,t)||this;return e.axis=e._option().axis,e.style=e._option().style,e.start=e._option().start,e.end=e._option().end,e}return __extends(t,i),Object.defineProperty(t.prototype,"axis",{get:function(){return this.__axis},set:function(t){null!=t&&this.__axis==t||(this.__axis=n.core.asEnum(t,n.AxisType,null),null==this.__axis&&(this.__axis=n.AxisType.Y))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"style",{get:function(){return this.__style},set:function(t){null!=t&&this.__style==t||(this.__style=new e._DataPointStyleOption(t))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"start",{get:function(){return this.__start},set:function(t){null!=t&&this.__start==t||(this.__start=t)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"end",{get:function(){return this.__end},set:function(t){null!=t&&this.__end==t||(this.__end=t)},enumerable:!0,configurable:!0}),t}(e._OverlayOption);e._ReferenceBandOverlayOption=t}(n.options||(n.options={}))}(dv||(dv={})),function(n){!function(t){"use strict";var e=function(i){function t(t){var e=i.call(this,t)||this;return e.k=e._option().k,e.percentileType=e._option().percentileType,e}return __extends(t,i),Object.defineProperty(t.prototype,"k",{get:function(){return this.__k},set:function(t){null==t&&t==this.__k||(this.__k=t)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"percentileType",{get:function(){return this.__percentileType},set:function(t){null==t&&t==this.__percentileType||(this.__percentileType=n.core.asEnum(t,n.PercentileType,!0),null==this.__percentileType&&(this.__percentileType=n.PercentileType.Exclusive))},enumerable:!0,configurable:!0}),t}(t._Option);t._ReferenceLineOverlayArgumentsOption=e}(n.options||(n.options={}))}(dv||(dv={})),function(n){!function(e){"use strict";var t=function(i){function t(t){var e=i.call(this,t)||this;return e.axis=e._option().axis,e.style=e._option().style,e.aggregate=e._option().aggregate,e.value=e._option().value,e.label=e._option().label,e.detailLevel=e._option().detailLevel,e.field=e._option().field,e.arguments=e._option().arguments,e}return __extends(t,i),Object.defineProperty(t.prototype,"field",{get:function(){return this.__field},set:function(t){null!=t&&this.__field==t||(this.__field=n.core.asString(t,!0))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"axis",{get:function(){return this.__axis},set:function(t){null!=t&&this.__axis==t||(this.__axis=n.core.asEnum(t,n.AxisType,null),null==this.__axis&&(this.__axis=n.AxisType.Y))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"style",{get:function(){return this.__style},set:function(t){null!=t&&this.__style==t||(this.__style=new e._DataPointStyleOption(t))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"aggregate",{get:function(){return this.__aggregate},set:function(t){null!=t&&t==this.__aggregate||(this.__aggregate=n.core.asEnum(t,n.ReferenceLineAggregate,!0))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"value",{get:function(){return this.__value},set:function(t){null!=t&&t==this.__value||(this.__value=t)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"label",{get:function(){return this.__label},set:function(t){null!=t&&t==this.__label||(this.__label="object"==typeof t?new e._OverlayLabelOption(t):n.core.asString(t,!0))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"detailLevel",{get:function(){return this.__detailLevel},set:function(t){null!=t&&this.__detailLevel==t||(this.__detailLevel=n.core.asEnum(t,n.DetailLevel,!0),null==this.__detailLevel&&(this.__detailLevel=n.DetailLevel.Total))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"arguments",{get:function(){return this.__arguments},set:function(t){null!=t&&t==this.__arguments||(this.__arguments=new e._ReferenceLineOverlayArgumentsOption(t))},enumerable:!0,configurable:!0}),t}(e._OverlayOption);e._ReferenceLineOverlayOption=t}(n.options||(n.options={}))}(dv||(dv={})),function(e){!function(o){"use strict";var t=function(i){function t(t){var e=i.call(this,t)||this;return e.__properties=[],e.targetElement=e._option().targetElement,e.properties=e._option().properties,e}return __extends(t,i),Object.defineProperty(t.prototype,"targetElement",{get:function(){return this.__targetElement},set:function(t){this.__targetElement!=t&&(this.__targetElement=e.core.asString(t,!0))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"properties",{get:function(){return this.__properties},set:function(t){if((null==this.properties||this.__properties!=t)&&(this.__properties=[],null!=t)){Array.isArray(t)||(t=[t]);for(var e=0,i=t;e<i.length;e++){var n=i[e];this.__properties.push(new o._RuleActionPropertyOption(n))}}},enumerable:!0,configurable:!0}),t}(o._Option);o._RuleActionOption=t}(e.options||(e.options={}))}(dv||(dv={})),function(n){!function(t){"use strict";var e=function(i){function t(t){var e=i.call(this,t)||this;return e.name=e._option().name,e.value=e._option().value,e}return __extends(t,i),Object.defineProperty(t.prototype,"name",{get:function(){return this.__name},set:function(t){this.__name!=t&&(this.__name=n.core.asString(t,!0))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"value",{get:function(){return this.__value},set:function(t){this.__value!=t&&(this.__value=t)},enumerable:!0,configurable:!0}),t}(t._Option);t._RuleActionPropertyOption=e}(n.options||(n.options={}))}(dv||(dv={})),function(e){!function(o){"use strict";var t=function(i){function t(t){var e=i.call(this,t)||this;return e.__actions=[],e.condition=e._option().condition,e.type=e._option().type,e.actions=e._option().actions,e}return __extends(t,i),Object.defineProperty(t.prototype,"condition",{get:function(){return this.__condition},set:function(t){this.__condition!=t&&(this.__condition=e.core.asString(t,!0))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"type",{get:function(){return this.__type},set:function(t){this.__type!=t&&(this.__type=e.core.asString(t,!0))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"actions",{get:function(){return this.__actions},set:function(t){if(this.__actions!=t&&(this.__actions=[],null!=t)){Array.isArray(t)||(t=[t]);for(var e=0,i=t;e<i.length;e++){var n=i[e];this.__actions.push(new o._RuleActionOption(n))}}},enumerable:!0,configurable:!0}),t}(o._Option);o._RuleOption=t}(e.options||(e.options={}))}(dv||(dv={})),function(o){!function(t){"use strict";var e=function(n){function t(t){var e=n.call(this,t)||this;if("string"==typeof t){var i=e._parse(t);e.overline=i.overline,e.lineThrough=i.lineThrough,e.underline=i.underline}else e.underline="number"==typeof t?(e.overline=0!=(t&o.TextDecoration.Overline)||null,e.lineThrough=0!=(t&o.TextDecoration.LineThrough)||null,0!=(t&o.TextDecoration.Underline)||null):(e.overline=1==e._option().overline||null,e.lineThrough=1==e._option().lineThrough||null,1==e._option().underline||null);return e}return __extends(t,n),Object.defineProperty(t.prototype,"overline",{get:function(){return this.__overline},set:function(t){this.__overline!=t&&(this.__overline=o.core.asBoolean(t,!0))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"lineThrough",{get:function(){return this.__lineThrough},set:function(t){this.__lineThrough!=t&&(this.__lineThrough=o.core.asBoolean(t,!0))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"underline",{get:function(){return this.__underline},set:function(t){this.__underline!=t&&(this.__underline=o.core.asBoolean(t,!0))},enumerable:!0,configurable:!0}),t.prototype._parse=function(t){for(var e=null,i=null,n=null,o=0,r=t.split(",",3);o<r.length;o++){var s=r[o].trim();"Overline"==s?e=!0:"LineThrough"==s?i=!0:"Underline"==s&&(n=!0)}return{overline:e,lineThrough:i,underline:n}},t}(t._Option);t._TextDecorationOption=e}(o.options||(o.options={}))}(dv||(dv={})),function(n){!function(e){"use strict";var t=function(i){function t(t){var e=i.call(this,t)||this;return e.__fontWeight=n.FontWeight.Normal,e.__fontStyle=n.FontStyle.Normal,e.color=e._option().color,e.fontSize=e._option().fontSize,e.fontFamily=e._option().fontFamily,e.fontWeight=e._option().fontWeight,e.fontStyle=e._option().fontStyle,e.textDecoration=e._option().textDecoration,e.overflow=e._option().overflow,e}return __extends(t,i),Object.defineProperty(t.prototype,"color",{get:function(){return this.__color},set:function(t){this.__color!=t&&(this.__color=n.core.asString(t,!0))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"fontSize",{get:function(){return this.__fontSize},set:function(t){this.__fontSize!=t&&(this.__fontSize="number"==typeof t?t.toString():n.core.asString(t,!0))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"fontFamily",{get:function(){return this.__fontFamily},set:function(t){this.__fontFamily!=t&&(this.__fontFamily=n.core.asString(t,!0))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"fontWeight",{get:function(){return this.__fontWeight},set:function(t){t&&this.__fontWeight!=t&&(n.core.isNumber(t)?this.__fontWeight=n.core.asNumber(t,!0):this.__fontWeight=n.core.asEnum(t,n.FontWeight))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"fontStyle",{get:function(){return this.__fontStyle},set:function(t){t&&this.__fontStyle!=t&&(this.__fontStyle=n.core.asEnum(t,n.FontStyle))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"textDecoration",{get:function(){return this.__textDecoration},set:function(t){null!=t&&this.__textDecoration==t||(this.__textDecoration=new e._TextDecorationOption(t))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"overflow",{get:function(){return this.__overflow},set:function(t){null!=this.__overflow&&this.__overflow==t||(this.__overflow=n.core.asEnum(t,n.TextOverflow,!0))},enumerable:!0,configurable:!0}),t}(e._Option);e._TextStyleOption=t}(n.options||(n.options={}))}(dv||(dv={})),function(n){!function(t){"use strict";var e=function(i){function t(t){var e=i.call(this,t)||this;return e.type=e._option().type,e}return __extends(t,i),Object.defineProperty(t.prototype,"type",{get:function(){return this.__type},set:function(t){this.__type!=t&&(this.__type=n.core.asEnum(t,n.ValueScaleType,!0))},enumerable:!0,configurable:!0}),t}(t._Option);t._ValueScaleOption=e}(n.options||(n.options={}))}(dv||(dv={})),function(n){!function(e){"use strict";var t=function(i){function t(t){var e=i.call(this,t)||this;return e.sort=e._option().sort,e.excludeNulls=e._option().excludeNulls,e}return __extends(t,i),Object.defineProperty(t.prototype,"sort",{get:function(){return this.__sort},set:function(t){null!=this.__sort&&this.__sort==t||(this.__sort=null==t?null:"object"==typeof t?new e._SortEncodingOption(t):n.core.asEnum(t,n.OrderType,!0))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"excludeNulls",{get:function(){return this.__excludeNulls},set:function(t){null!=this.__excludeNulls&&this.__excludeNulls==t||(this.__excludeNulls=n.core.asBoolean(t,!0),null==this.__excludeNulls&&(this.__excludeNulls=!1))},enumerable:!0,configurable:!0}),t}(e._EncodingOption);e._CategoryEncodingOption=t}(n.options||(n.options={}))}(dv||(dv={})),function(n){!function(t){"use strict";var e=function(i){function t(t){var e=i.call(this,t)||this;return e.aggregate=e._option().aggregate,e.sort=e._option().sort,e}return __extends(t,i),Object.defineProperty(t.prototype,"aggregate",{get:function(){return this.__aggregate},set:function(t){this.__aggregate!=t&&(this.__aggregate=n.core.asEnum(t,n.Aggregate,!0))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"sort",{get:function(){return this.__sort},set:function(t){null!=this.__sort&&this.__sort==t||(this.__sort=null==t?null:n.core.asEnum(t,n.OrderType,!0))},enumerable:!0,configurable:!0}),t}(t._EncodingOption);t._ColorEncodingOption=e}(n.options||(n.options={}))}(dv||(dv={})),function(n){!function(t){"use strict";var e=function(i){function t(t){var e=i.call(this,t)||this;return e.aggregate=e._option().aggregate,e}return __extends(t,i),Object.defineProperty(t.prototype,"aggregate",{get:function(){return this.__aggregate},set:function(t){this.__aggregate!=t&&(this.__aggregate=n.core.asEnum(t,n.Aggregate,!0))},enumerable:!0,configurable:!0}),t}(t._EncodingOption);t._ContentEncodingOption=e}(n.options||(n.options={}))}(dv||(dv={})),function(n){!function(e){"use strict";var t=function(i){function t(t){var e=i.call(this,t)||this;return e.sort=e._option().sort,e.group=e._option().group,e.excludeNulls=e._option().excludeNulls,e}return __extends(t,i),Object.defineProperty(t.prototype,"sort",{get:function(){return this.__sort},set:function(t){null!=this.__sort&&this.__sort==t||(this.__sort=null==t?null:"object"==typeof t?new e._SortEncodingOption(t):n.core.asEnum(t,n.OrderType,!0))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"group",{get:function(){return this.__group},set:function(t){this.__group!=t&&(this.__group=n.core.asEnum(t,n.Group,!0))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"excludeNulls",{get:function(){return this.__excludeNulls},set:function(t){null!=this.__excludeNulls&&this.__excludeNulls==t||(this.__excludeNulls=n.core.asBoolean(t,!0),null==this.__excludeNulls&&(this.__excludeNulls=!1))},enumerable:!0,configurable:!0}),t}(e._EncodingOption);e._DetailEncodingOption=t}(n.options||(n.options={}))}(dv||(dv={})),function(n){!function(t){"use strict";var e=function(i){function t(t){var e=i.call(this,t)||this;return e.type=e._option().type,e}return __extends(t,i),Object.defineProperty(t.prototype,"type",{get:function(){return this.__type},set:function(t){null!=this.__type&&this.__type==t||(this.__type=n.core.asString(t,!0))},enumerable:!0,configurable:!0}),t}(t._EncodingOption);t._LayoutEncodingOption=e}(n.options||(n.options={}))}(dv||(dv={})),function(n){!function(t){"use strict";var e=function(i){function t(t){var e=i.call(this,t)||this;return e.aggregate=e._option().aggregate,e.sort=e._option().sort,e}return __extends(t,i),Object.defineProperty(t.prototype,"aggregate",{get:function(){return this.__aggregate},set:function(t){this.__aggregate!=t&&(this.__aggregate=n.core.asEnum(t,n.Aggregate,!0))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"sort",{get:function(){return this.__sort},set:function(t){null!=this.__sort&&this.__sort==t||(this.__sort=null==t?null:n.core.asEnum(t,n.OrderType,!0))},enumerable:!0,configurable:!0}),t}(t._EncodingOption);t._ShapeEncodingOption=e}(n.options||(n.options={}))}(dv||(dv={})),function(n){!function(t){"use strict";var e=function(i){function t(t){var e=i.call(this,t)||this;return e.aggregate=e._option().aggregate,e.sort=e._option().sort,e}return __extends(t,i),Object.defineProperty(t.prototype,"aggregate",{get:function(){return this.__aggregate},set:function(t){this.__aggregate!=t&&(this.__aggregate=n.core.asEnum(t,n.Aggregate,!0))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"sort",{get:function(){return this.__sort},set:function(t){null!=this.__sort&&this.__sort==t||(this.__sort=null==t?null:n.core.asEnum(t,n.OrderType,!0))},enumerable:!0,configurable:!0}),t}(t._EncodingOption);t._SizeEncodingOption=e}(n.options||(n.options={}))}(dv||(dv={})),function(n){!function(t){"use strict";var e=function(i){function t(t){var e=i.call(this,t)||this;return e.order=e._option().order,e}return __extends(t,i),Object.defineProperty(t.prototype,"order",{get:function(){return this.__order},set:function(t){null!=this.__order&&this.__order==t||(this.__order=n.core.asEnum(t,n.OrderType,!0))},enumerable:!0,configurable:!0}),t}(t._EncodingOption);t._SortEncodingOption=e}(n.options||(n.options={}))}(dv||(dv={})),function(n){!function(e){"use strict";var t=function(i){function t(t){var e=i.call(this,t)||this;return e.rowSort=e._option().rowSort,e.columnSort=e._option().columnSort,e}return __extends(t,i),Object.defineProperty(t.prototype,"rowSort",{get:function(){return this.__rowSort},set:function(t){null!=this.__rowSort&&this.__rowSort==t||(this.__rowSort=null==t?null:"object"==typeof t?new e._SortEncodingOption(t):n.core.asEnum(t,n.OrderType,!0))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"columnSort",{get:function(){return this.__columnSort},set:function(t){null!=this.__columnSort&&this.__columnSort==t||(this.__columnSort=null==t?null:"object"==typeof t?new e._SortEncodingOption(t):n.core.asEnum(t,n.OrderType,!0))},enumerable:!0,configurable:!0}),t}(e._LayoutEncodingOption);e._TrellisLayoutEncodingOption=t}(n.options||(n.options={}))}(dv||(dv={})),function(n){!function(t){"use strict";var e=function(i){function t(t){var e=i.call(this,t)||this;return e.field=e._option().field,e.aggregate=e._option().aggregate,e.excludeNulls=e._option().excludeNulls,e}return __extends(t,i),Object.defineProperty(t.prototype,"aggregate",{get:function(){return this.__aggregate},set:function(t){this.__aggregate!=t&&(this.__aggregate=n.core.asEnum(t,n.Aggregate,!0))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"field",{get:function(){return this.__field},set:function(t){this.__field!=t&&("string"==typeof t?this.__field=n.core.asString(t,!0):null!=t.lower&&null!=t.upper?this.__field={lower:n.core.asString(t.lower,!0),upper:n.core.asString(t.upper,!0)}:this.__field=t)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"excludeNulls",{get:function(){return this.__excludeNulls},set:function(t){null!=this.__excludeNulls&&this.__excludeNulls==t||(this.__excludeNulls=n.core.asBoolean(t,!0),null==this.__excludeNulls&&(this.__excludeNulls=!1))},enumerable:!0,configurable:!0}),t}(t._Option);t._ValueEncodingOption=e}(n.options||(n.options={}))}(dv||(dv={})),function(t){t.options||(t.options={})}(dv||(dv={})),function(t){t.options||(t.options={})}(dv||(dv={})),function(t){t.options||(t.options={})}(dv||(dv={})),function(t){t.options||(t.options={})}(dv||(dv={})),function(t){t.options||(t.options={})}(dv||(dv={})),function(t){t.options||(t.options={})}(dv||(dv={})),function(t){t.options||(t.options={})}(dv||(dv={})),function(t){t.options||(t.options={})}(dv||(dv={})),function(t){t.options||(t.options={})}(dv||(dv={})),function(t){t.options||(t.options={})}(dv||(dv={})),function(n){!function(r){"use strict";var t=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.__type=n.GradientType.Linear,t.__colorStops=[],t}return __extends(t,e),t.parse=function(t){if(null==t)return null;var e=null;if("string"==typeof t){if(""==t)return null;var i=t.match(/^\s*(\w*-\w*)\((.*)\)/);if(null==i)return t;"linear-gradient"==i[1]&&(e=new r._LinearGradientOption),"radial-gradient"==i[1]&&(e=new r._RadialGradientOption),e._parseCss(i[2])}else n.core.asEnum(t.type,n.GradientType,!1)==n.GradientType.Linear?e=new r._LinearGradientOption(t):n.core.asEnum(t.type,n.GradientType,!1)==n.GradientType.Radial&&(e=new r._RadialGradientOption(t));return e},Object.defineProperty(t.prototype,"type",{get:function(){return this.__type},set:function(t){this.__type!=t&&(this.__type=n.core.asEnum(t,n.GradientType,!0))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"colorStops",{get:function(){return this.__colorStops},set:function(t){if((null==this.__colorStops||this.__colorStops!=t)&&(this.__colorStops=[],null!=t)){Array.isArray(t)||(t=[t]);for(var e=0,i=t;e<i.length;e++){var n=i[e],o=new r._ColorStopOption(n);null!=o&&null!=o.color&&this.__colorStops.push(o)}}},enumerable:!0,configurable:!0}),t}(r._Option);r._GradientOption=t}(n.options||(n.options={}))}(dv||(dv={})),function(o){!function(t){"use strict";var e=function(i){function t(t){var e=i.call(this,t)||this;return"string"==typeof t&&(t=e._parseCss(t.trim())),null!=t&&"object"==typeof t&&(e.color=t.color,e.stop=t.stop),e}return __extends(t,i),Object.defineProperty(t.prototype,"color",{get:function(){return this.__color},set:function(t){this.__color!=t&&(this.__color=o.core.asString(t,!0))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"stop",{get:function(){return this.__stop},set:function(t){this.__stop!=t&&(this.__stop=o.core.asNumber(t,!0))},enumerable:!0,configurable:!0}),t.prototype._parseCss=function(t){var e=t.lastIndexOf(" ");if(-1==e)return{color:o.core._Color.fromCss(t).toCss(),stop:null};var i=o.core._Color.fromCss(t.slice(0,e).trim());if(null==i)return null;var n=t.slice(e+1);return"%"==n?{color:i.toCss(),stop:null}:"%"==n[n.length-1]?{color:i.toCss(),stop:Number(n.slice(0,n.length-1))/100}:{color:i.toCss(),stop:Number(n)}},t}(t._Option);t._ColorStopOption=e}(o.options||(o.options={}))}(dv||(dv={})),function(n){!function(t){"use strict";var e=function(i){function t(t){var e=i.call(this,t)||this;return e.__angle=180,e.type=n.GradientType.Linear,e.angle=e._option().angle,e.colorStops=e._option().colorStops,e}return __extends(t,i),Object.defineProperty(t.prototype,"angle",{get:function(){return this.__angle},set:function(t){this.__angle!=t&&null!=t&&(this.__angle="number"==typeof t?t:this._getAngle(n.core.asEnum(t,n.GradientSideOrCorner,!0)))},enumerable:!0,configurable:!0}),t.prototype._getAngle=function(t){var e={};return e[n.GradientSideOrCorner.ToLeft]=270,e[n.GradientSideOrCorner.ToRight]=90,e[n.GradientSideOrCorner.ToTop]=360,e[n.GradientSideOrCorner.ToBottom]=180,e[n.GradientSideOrCorner.ToLeftTop]=315,e[n.GradientSideOrCorner.ToRightTop]=45,e[n.GradientSideOrCorner.ToLeftBottom]=225,e[n.GradientSideOrCorner.ToRightBottom]=135,null==e[t]?t:e[t]},t.prototype._parseCss=function(t){var e=t.split(new RegExp(",(?![^()]*\\))")),i=e;if("to"==e[0].slice(0,2)){var n=e[0].toLowerCase().split(" "),o="";for(var r in n)o+=n[r].substring(0,1).toUpperCase()+n[r].substring(1);e[0]=o}if("To"==e[0].slice(0,2)&&(this.angle=e[0],i=e.slice(1)),e[0].search("deg")==e[0].length-3){var s=Number(e[0].slice(0,e[0].length-3));null!=s&&NaN!=s&&(this.angle=s),i=e.slice(1)}this.colorStops=i},t.prototype._toLinearGradientColor=function(){return null},t}(t._GradientOption);t._LinearGradientOption=e}(n.options||(n.options={}))}(dv||(dv={})),function(r){!function(t){"use strict";var e=function(i){function t(t){var e=i.call(this,t)||this;return e.x0=.5,e.y0=.5,e.r0=.5,e.x1=.5,e.y1=.5,e.r1=.5,e.__extentKeyword=r.GradientExtentKeyword.FarthestCorner,e.__position=r.GradientPosition.Center,e.type=r.GradientType.Radial,e.position=e._option().position,e.extentKeyword=e._option().extentKeyword,e.colorStops=e._option().colorStops,e}return __extends(t,i),Object.defineProperty(t.prototype,"extentKeyword",{get:function(){return this.__extentKeyword},set:function(t){var e=Math.min(this.x0,1-this.x0),i=Math.min(this.y0,1-this.y0);if(this.__extentKeyword!=t)switch(this.__extentKeyword=r.core.asEnum(t,r.GradientExtentKeyword,!0),this.__extentKeyword){case r.GradientExtentKeyword.ClosestSide:this.r0=this.r1=Math.min(e,i);break;case r.GradientExtentKeyword.ClosestCorner:this.r0=this.r1=Math.sqrt(e*e+i*i);break;case r.GradientExtentKeyword.FarthestSide:this.r0=this.r1=Math.max(1-e,1-i);break;case r.GradientExtentKeyword.FarthestCorner:this.r0=this.r1=Math.sqrt((1-e)*(1-e)+(1-i)*(1-i))}},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"position",{get:function(){return this.__position},set:function(t){if(null!=t&&this.__position!=t)switch(this.__position=r.core.asEnum(t,r.GradientPosition,!0),this.position){case r.GradientPosition.Center:this._setCenter();break;case r.GradientPosition.Left:this._setLeft();break;case r.GradientPosition.Right:this._setRight();break;case r.GradientPosition.Top:this._setTop();break;case r.GradientPosition.Bottom:this._setBottom();break;case r.GradientPosition.LeftTop:this._setLeft(),this._setTop();break;case r.GradientPosition.LeftBottom:this._setLeft(),this._setBottom();break;case r.GradientPosition.RightTop:this._setRight(),this._setTop();break;case r.GradientPosition.RightBottom:this._setRight(),this._setBottom()}},enumerable:!0,configurable:!0}),t.prototype._parseCss=function(t){var e=t.split(new RegExp(",(?![^()]*\\))")),i=t.match(/\s*((closest-side|closest-corner|farthest-side|farthest-corner)\s+)?(at(\s+\w+)+)?/);null!=i[2]&&("closest-side"==i[2]?this.extentKeyword=r.GradientExtentKeyword.ClosestSide:"closest-corner"==i[2]?this.extentKeyword=r.GradientExtentKeyword.ClosestCorner:"farthest-side"==i[2]?this.extentKeyword=r.GradientExtentKeyword.FarthestSide:"farthest-corner"==i[2]&&(this.extentKeyword=r.GradientExtentKeyword.FarthestCorner));var n=[],o=[];null!=i[3]&&i[3].split(" ").forEach(function(t){if(""!=t.trim()){if(t.search("%")==t.length-1){var e=Number(t.slice(0,t.length-1));if(null!=e&&!isNaN(e))return void n.push(e/100)}if(!isNaN(Number(t)))return void n.push(Number(t)/100);switch(t){case"top":case"bottom":case"left":case"right":o.push(t)}}}),(n.length||o.length)&&e.shift(),this._setCoordinate(n,o),this.colorStops=e},t.prototype._toRadialGradientColor=function(){return null},t.prototype._setCoordinate=function(t,e){null!=t[0]&&(this.x0=this.x1=t[0]),null!=t[1]&&(this.y0=this.y1=t[1]),-1<e.indexOf("left")&&this._setLeft(),-1<e.indexOf("right")&&this._setRight(),-1<e.indexOf("top")&&this._setTop(),-1<e.indexOf("bottom")&&this._setBottom()},t.prototype._setBottom=function(){this.y0=this.y1=1},t.prototype._setTop=function(){this.y0=this.y1=0},t.prototype._setLeft=function(){this.x0=this.x1=0},t.prototype._setRight=function(){this.x0=this.x1=1},t.prototype._setCenter=function(){this.x0=this.x1=this.y0=this.y1=.5},t}(t._GradientOption);t._RadialGradientOption=e}(r.options||(r.options={}))}(dv||(dv={})),function(t){t.options||(t.options={})}(dv||(dv={})),function(t){t.options||(t.options={})}(dv||(dv={})),function(t){t.options||(t.options={})}(dv||(dv={})),function(t){t.options||(t.options={})}(dv||(dv={})),function(t){t.options||(t.options={})}(dv||(dv={})),function(t){t.options||(t.options={})}(dv||(dv={})),function(t){t.options||(t.options={})}(dv||(dv={})),function(t){t.options||(t.options={})}(dv||(dv={})),function(t){t.options||(t.options={})}(dv||(dv={})),function(t){t.options||(t.options={})}(dv||(dv={})),function(t){t.options||(t.options={})}(dv||(dv={})),function(t){t.options||(t.options={})}(dv||(dv={})),function(t){t.options||(t.options={})}(dv||(dv={})),function(t){t.options||(t.options={})}(dv||(dv={})),function(t){t.options||(t.options={})}(dv||(dv={})),function(n){!function(e){"use strict";var t=function(i){function t(t){var e=i.call(this,t)||this;return e.text=e._option().text,e.textStyle=e._option().textStyle,e.template=e._option().template,e}return __extends(t,i),Object.defineProperty(t.prototype,"template",{get:function(){return this.__template},set:function(t){null!=t&&(this.__template=n.core.asString(t))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"text",{get:function(){return this.__text},set:function(t){null!=t&&(this.__text=n.core.asString(t))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"textStyle",{get:function(){return null==this.__textStyle&&(this.__textStyle=new e._TextStyleOption({})),this.__textStyle},set:function(t){this.__textStyle!=t&&(this.__textStyle=t)},enumerable:!0,configurable:!0}),t}(e._Option);e._LegendItemOption=t}(n.options||(n.options={}))}(dv||(dv={})),function(t){t.options||(t.options={})}(dv||(dv={})),function(t){t.options||(t.options={})}(dv||(dv={})),function(t){t.options||(t.options={})}(dv||(dv={})),function(t){t.options||(t.options={})}(dv||(dv={})),function(t){t.options||(t.options={})}(dv||(dv={})),function(t){t.options||(t.options={})}(dv||(dv={})),function(t){t.options||(t.options={})}(dv||(dv={})),function(t){t.options||(t.options={})}(dv||(dv={})),function(t){t.options||(t.options={})}(dv||(dv={})),function(t){t.options||(t.options={})}(dv||(dv={})),function(t){t.options||(t.options={})}(dv||(dv={})),function(t){t.options||(t.options={})}(dv||(dv={})),function(t){t.options||(t.options={})}(dv||(dv={})),function(t){t.options||(t.options={})}(dv||(dv={})),function(t){t.options||(t.options={})}(dv||(dv={})),function(t){t.options||(t.options={})}(dv||(dv={})),function(t){t.options||(t.options={})}(dv||(dv={})),function(t){t.options||(t.options={})}(dv||(dv={})),function(t){t.options||(t.options={})}(dv||(dv={})),function(t){t.options||(t.options={})}(dv||(dv={})),function(t){t.options||(t.options={})}(dv||(dv={})),function(t){t.options||(t.options={})}(dv||(dv={})),function(t){t.options||(t.options={})}(dv||(dv={})),function(t){t.options||(t.options={})}(dv||(dv={})),function(t){t.options||(t.options={})}(dv||(dv={})),function(n){!function(t){"use strict";var e=function(i){function t(t){var e=i.call(this,t)||this;return e.topWidth=e._option().topWidth,e.width=e._option().width,e.bottomWidth=e._option().bottomWidth,e.neckHeight=e._option().neckHeight,e.overlap=e._option().overlap,e}return __extends(t,i),Object.defineProperty(t.prototype,"width",{get:function(){return this.__width},set:function(t){null!=t&&this.__width!=t&&(this.__width=n.core.asNumber(t,!0),1<this.__width?this.__width=1:this.__width<0&&(this.__width=0))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"bottomWidth",{get:function(){return this.__bottomWidth},set:function(t){null!=t&&this.__bottomWidth!=t&&(this.__bottomWidth=t)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"topWidth",{get:function(){return this.__topWidth},set:function(t){null!=t&&this.__topWidth!=t&&(this.__topWidth=n.core.asNumber(t,!0),1<this.__topWidth?this.__topWidth=1:this.__width<0&&(this.__topWidth=0))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"neckHeight",{get:function(){return this.__neckHeight},set:function(t){null!=t&&this.__neckHeight!=t&&(this.__neckHeight=t)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"overlap",{get:function(){return this.__barOverlap},set:function(t){null!=this.__barOverlap&&this.__barOverlap==t||(this.__barOverlap=n.core.asNumber(t,!0),null==this.__barOverlap?this.__barOverlap=0:1<this.__barOverlap?this.__barOverlap=1:this.__barOverlap<-1&&(this.__barOverlap=-1))},enumerable:!0,configurable:!0}),t}(t._Option);t._BarOption=e}(n.options||(n.options={}))}(dv||(dv={})),function(t){t.options||(t.options={})}(dv||(dv={})),function(n){!function(e){"use strict";var t=function(i){function t(t){var e=i.call(this,t)||this;return e.format=e._option().format,e.categoryStyle=e._option().categoryStyle,e.symbolSpace=e._option().symbolSpace,e.seriesSpace=e._option().seriesSpace,e.categorySpace=e._option().categorySpace,e.dimensionSpace=e._option().dimensionSpace,e.hAlign=e._option().hAlign,e.vAlign=e._option().vAlign,e}return __extends(t,i),Object.defineProperty(t.prototype,"format",{get:function(){return this.__format},set:function(t){null!=this.__format&&this.__format==t||(this.__format=n.core.asString(t,!0))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"categoryStyle",{get:function(){return this.__categoryStyle},set:function(t){null!=this.__categoryStyle&&this.__categoryStyle==t||(this.__categoryStyle=new e._TextStyleOption(t))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"symbolSpace",{get:function(){return this.__symbolSpace},set:function(t){null!=this.__symbolSpace&&this.__symbolSpace==t||(this.__symbolSpace=n.core.asNumber(t,!0,!0),null==this.__symbolSpace&&(this.__symbolSpace=0))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"seriesSpace",{get:function(){return this.__seriesSpace},set:function(t){null!=this.__seriesSpace&&this.__seriesSpace==t||(this.__seriesSpace=n.core.asNumber(t,!0,!0),null==this.__seriesSpace&&(this.__seriesSpace=0))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"categorySpace",{get:function(){return this.__categorySpace},set:function(t){null!=this.__categorySpace&&this.__categorySpace==t||(this.__categorySpace=n.core.asNumber(t,!0,!0),null==this.__categorySpace&&(this.__categorySpace=0))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"dimensionSpace",{get:function(){return this.__dimensionSpace},set:function(t){null!=this.__dimensionSpace&&this.__dimensionSpace==t||(this.__dimensionSpace=n.core.asNumber(t,!0,!0),null==this.__dimensionSpace&&(this.__dimensionSpace=0))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"hAlign",{get:function(){return this.__hAlign},set:function(t){null!=this.__hAlign&&this.__hAlign==t||(this.__hAlign=n.core.asEnum(t,n.HAlign,!0),null==this.__hAlign&&(this.__hAlign=n.HAlign.Center))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"vAlign",{get:function(){return this.__vAlign},set:function(t){null!=this.__vAlign&&this.__vAlign==t||(this.__vAlign=n.core.asEnum(t,n.VAlign,!0),null==this.__vAlign&&(this.__vAlign=n.VAlign.Middle))},enumerable:!0,configurable:!0}),t}(e._Option);e._TextPlotConfigOption=t}(n.options||(n.options={}))}(dv||(dv={})),function(t){t.options||(t.options={})}(dv||(dv={})),function(t){!function(e){"use strict";var t=function(i){function t(t){var e=i.call(this,t)||this;return e.padding=e._option().padding,e}return __extends(t,i),Object.defineProperty(t.prototype,"padding",{get:function(){return this.__padding},set:function(t){null!=this.__padding&&this.__padding==t||(this.__padding=new e._PaddingOption(t))},enumerable:!0,configurable:!0}),t}(e._TextStyleOption);e._LabelStyleOption=t}(t.options||(t.options={}))}(dv||(dv={})),function(n){!function(t){"use strict";var e=function(i){function t(t){var e=i.call(this,t)||this;return e.adorners=e._option().adorners,e}return __extends(t,i),Object.defineProperty(t.prototype,"adorners",{get:function(){return this.__adorners},set:function(t){this.__adorners!=t&&(this.__adorners=n.core.asBoolean(t,!0))},enumerable:!0,configurable:!0}),t}(t._DataPointStyleOption);t._SelectionStyleOption=e}(n.options||(n.options={}))}(dv||(dv={})),function(t){t.options||(t.options={})}(dv||(dv={})),function(t){t.options||(t.options={})}(dv||(dv={})),function(t){!function(t){"use strict";var e=function(i){function t(t){var e=i.call(this,t)||this;return e.steps=e._option().steps,e}return __extends(t,i),Object.defineProperty(t.prototype,"steps",{get:function(){return this.__steps},set:function(t){if(this.__steps!=t)if(null==t)this.__steps=null;else if(Array.isArray(t)){for(var e=[],i=0,n=t;i<n.length;i++){var o=n[i];"number"==typeof o&&e.push(o)}0<e.length&&(this.__steps=e)}},enumerable:!0,configurable:!0}),t}(t._Option);t._BinOption=e}(t.options||(t.options={}))}(dv||(dv={})),function(n){!function(e){"use strict";var t=function(i){function t(t){var e=i.call(this,t)||this;return e.bin=e._option().bin,e.field=e._option().field,e.as=e._option().as,e}return __extends(t,i),Object.defineProperty(t.prototype,"bin",{get:function(){return this.__bin},set:function(t){null!=this.__bin&&this.__bin==t||(null==t?this.__bin=!1:"boolean"==typeof t?this.__bin=t:"object"==typeof t&&(this.__bin=new e._BinOption(t)))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"field",{get:function(){return this.__field},set:function(t){this.__field!=t&&(this.__field=n.core.asString(t,!0))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"as",{get:function(){return this.__as},set:function(t){this.__as!=t&&(this.__as=n.core.asString(t,!0))},enumerable:!0,configurable:!0}),t}(e._Option);e._BinTransformOption=t}(n.options||(n.options={}))}(dv||(dv={})),function(t){t.options||(t.options={})}(dv||(dv={})),function(t){t.options||(t.options={})}(dv||(dv={})),function(i){!function(t){"use strict";var e=function(){function t(){}return t.prototype.create=function(){return new i.models._DataContentProvider},t}();t._DataContentProviderPlugin=e}(i.plugins||(i.plugins={}))}(dv||(dv={})),function(i){!function(t){"use strict";var e=function(){function t(){}return t.prototype.create=function(){return new i.models._DateParser},t}();t._DateParserPlugin=e}(i.plugins||(i.plugins={}))}(dv||(dv={})),function(n){!function(c){"use strict";var t=function(){function i(){}return i._resetAdornerRender=function(t){this.__adornerRenders[t]=null},i._adornerRender=function(t){if(null==i.__adornerRenders[t]){var e=c._adornerRenderPlugin(t);e&&(this.__adornerRenders[t]=e.create())}return i.__adornerRenders[t]},i._conditionalFormattingRule=function(t,e){var i=c._conditionalFormattingRulePlugin(t);return i?i.create(e):null},i._coordinateSystem=function(t,e){var i=c._coordinateSystemPlugin(t);return null!=i?i.create(e):null!=e?new n._CoordinateSystemView(e):null},i._resetDataContentProvider=function(t){this.__dataContentProviders[t]=null},i._dataContentProvider=function(t){if(null==i.__dataContentProviders[t]){var e=c._dataContentProviderPlugin(t);e&&(this.__dataContentProviders[t]=e.create())}return i.__dataContentProviders[t]},i._resetDateParser=function(t){this.__dateParsers[t]=null},i._dateParser=function(t){if(null==i.__dateParsers[t]){var e=c._dateParserPlugin(t);e&&(this.__dateParsers[t]=e.create())}return i.__dateParsers[t]},i._clickInteractions=function(){return c._clickInteractionPlugins().map(function(t){return t.create()})},i._hoverInteractions=function(){return c._hoverInteractionPlugins().map(function(t){return t.create()})},i._layout=function(t,e,i,n){var o=c._layoutPlugin(t);if(null==o&&(o=c._layoutPlugin("Default")),null!=o){var r=o.create(e,i,n);if(null!=r)return r}return null},i._plot=function(t,e,i){var n=c._plotNames();if(null!=n){for(var o=[],r=0,s=n;r<s.length;r++){var a=s[r],l=c._plotPlugin(a);l.chartType==t&&o.push(l)}1<o.length&&o.sort(function(t,e){return e.priority-t.priority});for(var _=0,u=o;_<u.length;_++){var h=u[_].create(e,i);if(null!=h)return h}}return null},i._renderEngine=function(t,e){var i=c._renderEnginePlugin(t);return i?i.create(e):null},i._resetSymbol=function(t){this.__symbols[t]=null},i._symbol=function(t){if(null==i.__symbols[t]){var e=c._symbolPlugin(t);e&&(this.__symbols[t]=e.create())}return i.__symbols[t]},i._symbolNames=function(){return c._symbolNames()},i._resetStringFormatting=function(t){this.__stringFormattings[t]=null},i._stringFormatting=function(t){if(null==i.__stringFormattings[t]){var e=c._stringFormattingPlugin(t);e&&(this.__stringFormattings[t]=e.create())}return i.__stringFormattings[t]},i._filter=function(t){return c._filterPlugin(t).create()},i.__adornerRenders={},i.__dataContentProviders={},i.__dateParsers={},i.__symbols={},i.__symbolNames=[],i.__stringFormattings={},i}();c._Plugins=t}(n.plugins||(n.plugins={}))}(dv||(dv={})),function(t){!function(t){"use strict";var e=function(){function r(){}return r.prototype.render=function(t,e){for(var i=0,n=e;i<n.length;i++){var o=n[i];t.drawRect(o.x-r.__HALF_SIZE_LENGTH,o.y-r.__HALF_SIZE_LENGTH,2*r.__HALF_SIZE_LENGTH,2*r.__HALF_SIZE_LENGTH,null,{fill:"transparent",stroke:"#80A3BE",storkeWidth:1})}},r.__HALF_SIZE_LENGTH=3,r}();t._BoxAdornerRender=e}(t.plugins||(t.plugins={}))}(dv||(dv={})),function(t){!function(e){"use strict";var t=function(){function t(){}return t.prototype.create=function(){return new e._BoxAdornerRender},t}();e._BoxAdornerRenderPlugin=t}(t.plugins||(t.plugins={}))}(dv||(dv={})),function(t){!function(t){"use strict";var e=function(){function r(){}return r.prototype.render=function(t,e){for(var i=0,n=e;i<n.length;i++){var o=n[i];t.drawEllipse(o.x,o.y,r.__RADIUS,r.__RADIUS,null,{fill:"#B3D6F2",stroke:"#047AD8",strokeWidth:1})}},r.__RADIUS=3,r}();t._DotAdornerRender=e}(t.plugins||(t.plugins={}))}(dv||(dv={})),function(t){!function(e){"use strict";var t=function(){function t(){}return t.prototype.create=function(){return new e._DotAdornerRender},t}();e._DotAdornerRenderPlugin=t}(t.plugins||(t.plugins={}))}(dv||(dv={})),function(n){!function(e){"use strict";var t=function(){function t(t){null!=(this.__option=t).condition&&0<t.condition.length&&null!=t.actions&&0<t.actions.length?this.__proxy=this._generateCalcSourceProxy():this.__proxy=null}return t.prototype._option=function(){return this.__option},t.prototype._current=function(){return this.__current},t.prototype.evaluate=function(t){n._isCalculationEngineExist()&&null!=this.__proxy&&(this.__current=t,this.__proxy.getCalcSourceModel().setFormulaByName("condition",this._option().condition))},t.prototype._isIdentityExpression=function(t){return"current"==t||8<t.length&&"current."==t.substring(0,8)||("parent"==t||5<t.length&&"parent."==t.substring(0,5))},t.prototype._getValue=function(t){return("parent"==t||7<t.length&&"parent."==t.substring(0,7))&&(t="current."+t),"current"==t?this._current():8<t.length&&"current."==t.substring(0,8)&&null!=this._current()?new n.core._Binding(t.substring(8)).getValue(this._current()):void 0},t.prototype._applyActions=function(){for(var t=0,e=this._option().actions;t<e.length;t++){var i=e[t],n=this._findActionTarget(i);if(null!=n)this._createTargetElementAction(i)._apply(n)}},t.prototype._findActionTarget=function(t){return this._current()},t.prototype._createTargetElementAction=function(t){return new e._TargetElementAction(t)},t.prototype._generateCalcSourceProxy=function(){return n._isCalculationEngineExist()?new(function(i){function t(t){var e=i.call(this,new GC.Spread.CalcEngine.CalcService)||this;return n._assertDebug(function(){return null!=t}),e.__rule=t,e.getCalcService().getSourceModel(e),e}return __extends(t,i),t.prototype.getParserContext=function(t,e,i){var a=this,n=new GC.Spread.CalcEngine.ParserContext(this,t,e||{},i),o=new GC.Spread.CalcEngine.TokenResolver(7e3);return o.resolveToken=function(t,e,i,n){var o=i[n],r=o.stringValue();if(0===o.type()&&0===o.subType()&&a.__rule._isIdentityExpression(r)){var s=new GC.Spread.CalcEngine.Expression(25);return s.value=r,s}},n.addResolver(o),n},t.prototype.getEvaluatorContext=function(t,e,i){var n=new GC.Spread.CalcEngine.EvaluateContext(this,t,e,i),o=this;return n.evaluate=function(t,e,i){return this.getValue(o,t.value)},n},t.prototype.getValueByName=function(t){return""},t.prototype.setValueByName=function(t,e){"CONDITION"==t?1==e&&this.__rule._applyActions():n._assertDebug(function(){return!1})},t.prototype.getValue=function(t){return this.__rule._getValue(t)},t}(GC.Spread.CalcEngine.CalcSource))(this):null},t}();e._ConditionalFormattingRule=t}(n.plugins||(n.plugins={}))}(dv||(dv={})),function(o){!function(t){"use strict";var e=function(){function t(t){this.__option=t}return t.prototype._option=function(){return this.__option},t.prototype._apply=function(t){for(var e=0,i=this._option().properties;e<i.length;e++){var n=i[e];this._assign(t,n.name,n.value)}},t.prototype._assign=function(t,e,i){new o.core._Binding(e).setValue(t,i)},t.prototype._parseColorValue=function(t){if(null==t)return null;var e=null;if("string"==typeof t){var i=t.match(/^\s*(\w*-\w*)\((.*)\)/);if(null==i)return t;"linear-gradient"==i[1]&&(e=new o.options._LinearGradientOption),"radial-gradient"==i[1]&&(e=new o.options._RadialGradientOption),e._parseCss(i[2])}else{var n=o.core.asEnum(t.type,o.GradientType,!0);n==o.GradientType.Linear?e=new o.options._LinearGradientOption(t):n==o.GradientType.Radial&&(e=new o.options._RadialGradientOption(t))}return null!=e?o._fillColorFromOption(e):null},t}();t._TargetElementAction=e}(o.plugins||(o.plugins={}))}(dv||(dv={})),function(t){!function(i){"use strict";var t=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return __extends(e,t),e.prototype._findActionTarget=function(t){return"DataPoint"==t.targetElement?this._current():null},e.prototype._createTargetElementAction=function(t){return new i._PointTargetElementAction(t)},e}(i._ConditionalFormattingRule);i._PointConditionalFormattingRule=t}(t.plugins||(t.plugins={}))}(dv||(dv={})),function(o){!function(t){"use strict";var e=function(n){function t(){return null!==n&&n.apply(this,arguments)||this}return __extends(t,n),t.prototype._assign=function(t,e,i){"color"==e?new o.core._Binding(e).setValue(t,this._parseColorValue(i)):n.prototype._assign.call(this,t,e,i)},t}(t._TargetElementAction);t._PointTargetElementAction=e}(o.plugins||(o.plugins={}))}(dv||(dv={})),function(t){!function(i){"use strict";var t=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return __extends(e,t),e.prototype._findActionTarget=function(t){return"Group"==t.targetElement?this._current():null},e.prototype._createTargetElementAction=function(t){return new i._SeriesTargetElementAction(t)},e}(i._ConditionalFormattingRule);i._SeriesConditionalFormattingRule=t}(t.plugins||(t.plugins={}))}(dv||(dv={})),function(o){!function(t){"use strict";var e=function(n){function t(){return null!==n&&n.apply(this,arguments)||this}return __extends(t,n),t.prototype._assign=function(t,e,i){"color"==e?new o.core._Binding(e).setValue(t,this._parseColorValue(i)):n.prototype._assign.call(this,t,e,i)},t}(t._TargetElementAction);t._SeriesTargetElementAction=e}(o.plugins||(o.plugins={}))}(dv||(dv={})),function(t){!function(e){"use strict";var t=function(){function t(){}return t.prototype.create=function(t){return"DataPoint"==t.type?new e._CartesianPointConditionalFormattingRule(t):"Group"==t.type?new e._CartesianSeriesConditionalFormattingRule(t):null},t}();e._CartesianConditionalFormattingRulePlugin=t}(t.plugins||(t.plugins={}))}(dv||(dv={})),function(n){!function(t){"use strict";var e=function(i){function t(){return null!==i&&i.apply(this,arguments)||this}return __extends(t,i),t.prototype._isIdentityExpression=function(t){return"index"==t||("previous"==t||9<t.length&&"previous."==t.substring(0,9)||("next"==t||5<t.length&&"next."==t.substring(0,5)||("parent"==t||5<t.length&&"parent."==t.substring(0,5)||i.prototype._isIdentityExpression.call(this,t))))},t.prototype._getValue=function(t){var e=this._current();if(e instanceof n.models._CartesianPointData){if("index"==t)return this._index(e);if("previous"==t)return this._previous(e);if(9<t.length&&"previous."==t.substring(0,9)&&null!=this._previous(e))return new n.core._Binding(t.substring(9)).getValue(this._previous(e));if("next"==t)return this._next(e);if(5<t.length&&"next."==t.substring(0,5)&&null!=this._next(e))return new n.core._Binding(t.substring(5)).getValue(this._next(e))}return i.prototype._getValue.call(this,t)},t.prototype._previous=function(t){var e=t._series(),i=this._index(t);return 0<i?e._points()[i-1]:void 0},t.prototype._next=function(t){var e=t._series(),i=this._index(t);return i<e._points().length-1?e._points()[i+1]:void 0},t.prototype._index=function(t){return t._series()._points().indexOf(t)},t}(t._PointConditionalFormattingRule);t._CartesianPointConditionalFormattingRule=e}(n.plugins||(n.plugins={}))}(dv||(dv={})),function(n){!function(t){"use strict";var e=function(i){function t(){return null!==i&&i.apply(this,arguments)||this}return __extends(t,i),t.prototype._isIdentityExpression=function(t){return"index"==t||("previous"==t||9<t.length&&"previous."==t.substring(0,9)||("next"==t||5<t.length&&"next."==t.substring(0,5)||("parent"==t||5<t.length&&"parent."==t.substring(0,5)||i.prototype._isIdentityExpression.call(this,t))))},t.prototype._getValue=function(t){var e=this._current();if(e instanceof n.models._CartesianSeriesData){if("index"==t)return this._index(e);if("previous"==t)return this._previous(e);if(9<t.length&&"previous."==t.substring(0,9)&&null!=this._previous(e))return new n.core._Binding(t.substring(9)).getValue(this._previous(e));if("next"==t)return this._next(e);if(5<t.length&&"next."==t.substring(0,5)&&null!=this._next(e))return new n.core._Binding(t.substring(5)).getValue(this._next(e))}return i.prototype._getValue.call(this,t)},t.prototype._previous=function(t){var e=t._plot(),i=this._index(t);return 0<i?e._seriesList()[i-1]:void 0},t.prototype._next=function(t){var e=t._plot(),i=this._index(t);return i<e._seriesList().length-1?e._seriesList()[i+1]:void 0},t.prototype._index=function(t){return t._plot()._seriesList().indexOf(t)},t}(t._SeriesConditionalFormattingRule);t._CartesianSeriesConditionalFormattingRule=e}(n.plugins||(n.plugins={}))}(dv||(dv={})),function(t){!function(e){"use strict";var t=function(){function t(){}return t.prototype.create=function(t){return"DataPoint"==t.type?new e._HierarchicalPointConditionalFormattingRule(t):null},t}();e._HierarchicalConditionalFormattingRulePlugin=t}(t.plugins||(t.plugins={}))}(dv||(dv={})),function(n){!function(t){"use strict";var e=function(i){function t(){return null!==i&&i.apply(this,arguments)||this}return __extends(t,i),t.prototype._isIdentityExpression=function(t){return"index"==t||("previous"==t||9<t.length&&"previous."==t.substring(0,9)||("next"==t||5<t.length&&"next."==t.substring(0,5)||("parent"==t||5<t.length&&"parent."==t.substring(0,5)||i.prototype._isIdentityExpression.call(this,t))))},t.prototype._getValue=function(t){var e=this._current();if(e instanceof n.models._HierarchicalBasePointData){if("index"==t)return this._index(e);if("previous"==t)return this._previous(e);if(9<t.length&&"previous."==t.substring(0,9)&&null!=this._previous(e))return new n.core._Binding(t.substring(9)).getValue(this._previous(e));if("next"==t)return this._next(e);if(5<t.length&&"next."==t.substring(0,5)&&null!=this._next(e))return new n.core._Binding(t.substring(5)).getValue(this._next(e))}return i.prototype._getValue.call(this,t)},t.prototype._previous=function(t){if(t instanceof n.models._HierarchicalPointData){var e=t._parent(),i=this._index(t);return 0<i?e.children[i-1]:void 0}t instanceof n.models._HierarchicalRootPointData||n._assertDebug(function(){return!1})},t.prototype._next=function(t){if(t instanceof n.models._HierarchicalPointData){var e=t._parent(),i=this._index(t);return i<e.children.length-1?e.children[i+1]:void 0}t instanceof n.models._HierarchicalRootPointData||n._assertDebug(function(){return!1})},t.prototype._index=function(t){return t instanceof n.models._HierarchicalPointData?t._parent().children.indexOf(t):t instanceof n.models._HierarchicalRootPointData?0:void n._assertDebug(function(){return!1})},t}(t._PointConditionalFormattingRule);t._HierarchicalPointConditionalFormattingRule=e}(n.plugins||(n.plugins={}))}(dv||(dv={})),function(i){!function(t){"use strict";var e=function(){function t(){}return t.prototype.create=function(t){return null!=t?new i._LineCartesianCoordinateSystemView(t):null},t}();t._LineCartesianCoordinateSystemPlugin=e}(i.plugins||(i.plugins={}))}(dv||(dv={})),function(i){!function(t){"use strict";var e=function(){function t(){}return t.prototype.create=function(t){return null!=t?new i._PolygonalCartesianCoordinateSystemView(t):null},t}();t._PolygonalCartesianCoordinateSystemPlugin=e}(i.plugins||(i.plugins={}))}(dv||(dv={})),function(i){!function(t){"use strict";var e=function(){function t(){}return t.prototype.create=function(t){return null!=t?new i._RadialCartesianCoordinateSystemView(t):null},t}();t._RadialCartesianCoordinateSystemPlugin=e}(i.plugins||(i.plugins={}))}(dv||(dv={})),function(i){!function(t){"use strict";var e=function(){function t(){}return t.prototype.create=function(t){return null!=t?new i._TextCategoriesCoordinateSystemView(t):null},t}();t._TextCategoriesCoordinateSystemPlugin=e}(i.plugins||(i.plugins={}))}(dv||(dv={})),function(t){!function(t){"use strict";var e=function(){function t(){}return t.prototype.filter=function(t,e){return null!=t[e]},t}();t._CategoryEncodingExcludeNullsFilter=e}(t.plugins||(t.plugins={}))}(dv||(dv={})),function(t){!function(e){"use strict";var t=function(){function t(){}return t.prototype.create=function(){return new e._CategoryEncodingExcludeNullsFilter},t}();e._CategoryEncodingExcludeNullsFilterPlugin=t}(t.plugins||(t.plugins={}))}(dv||(dv={})),function(t){!function(t){"use strict";var e=function(){function t(){}return t.prototype.filter=function(t,e){return null!=t[e]},t}();t._ValueEncodingExcludeNullsFilter=e}(t.plugins||(t.plugins={}))}(dv||(dv={})),function(t){!function(e){"use strict";var t=function(){function t(){}return t.prototype.create=function(){return new e._ValueEncodingExcludeNullsFilter},t}();e._ValueEncodingExcludeNullsFilterPlugin=t}(t.plugins||(t.plugins={}))}(dv||(dv={})),function(i){!function(t){"use strict";var e=function(){function t(){}return t.prototype.create=function(){return new i.models._AxisLabelHoverInteraction},t}();t._AxisLabelHoverInteractionPlugin=e}(i.plugins||(i.plugins={}))}(dv||(dv={})),function(i){!function(t){"use strict";var e=function(){function t(){}return t.prototype.create=function(){return new i.models._AxisLabelSelectionInteraction},t}();t._AxisLabelSelectionInteractionPlugin=e}(i.plugins||(i.plugins={}))}(dv||(dv={})),function(i){!function(t){"use strict";var e=function(){function t(){}return t.prototype.create=function(){return new i.models._CancelSelectionInteraction},t}();t._CancelSelectionInteractionPlugin=e}(i.plugins||(i.plugins={}))}(dv||(dv={})),function(i){!function(t){"use strict";var e=function(){function t(){}return t.prototype.create=function(){return new i.models._CategorySelectionInteraction},t}();t._CategorySelectionInteractionPlugin=e}(i.plugins||(i.plugins={}))}(dv||(dv={})),function(i){!function(t){"use strict";var e=function(){function t(){}return t.prototype.create=function(){return new i.models._LegendHoverInteraction},t}();t._LegendHoverInteractionPlugin=e}(i.plugins||(i.plugins={}))}(dv||(dv={})),function(i){!function(t){"use strict";var e=function(){function t(){}return t.prototype.create=function(){return new i.models._LegendSelectionInteraction},t}();t._LegendSelectionInteractionPlugin=e}(i.plugins||(i.plugins={}))}(dv||(dv={})),function(i){!function(t){"use strict";var e=function(){function t(){}return t.prototype.create=function(){return new i.models._PointHoverInteraction},t}();t._PointHoverInteractionPlugin=e}(i.plugins||(i.plugins={}))}(dv||(dv={})),function(i){!function(t){"use strict";var e=function(){function t(){}return t.prototype.create=function(){return new i.models._PointSelectionInteraction},t}();t._PointSelectionInteractionPlugin=e}(i.plugins||(i.plugins={}))}(dv||(dv={})),function(i){!function(t){"use strict";var e=function(){function t(){}return t.prototype.create=function(){return new i.models._SeriesHoverInteraction},t}();t._SeriesHoverInteractionPlugin=e}(i.plugins||(i.plugins={}))}(dv||(dv={})),function(i){!function(t){"use strict";var e=function(){function t(){}return t.prototype.create=function(){return new i.models._SeriesSelectionInteraction},t}();t._SeriesSelectionInteractionPlugin=e}(i.plugins||(i.plugins={}))}(dv||(dv={})),function(i){!function(t){"use strict";var e=function(){function t(){}return t.prototype.create=function(){return new i.models._ToolTipHoverInteraction},t}();t._ToolTipHoverInteractionPlugin=e}(i.plugins||(i.plugins={}))}(dv||(dv={})),function(i){!function(t){"use strict";var e=function(){function t(){}return t.prototype.create=function(){return new i.models._TrellisColumnHeaderHoverInteraction},t}();t._TrellisColumnHeaderHoverInteractionPlugin=e}(i.plugins||(i.plugins={}))}(dv||(dv={})),function(i){!function(t){"use strict";var e=function(){function t(){}return t.prototype.create=function(){return new i.models._TrellisColumnHeaderSelectionInteraction},t}();t._TrellisColumnHeaderSelectionInteractionPlugin=e}(i.plugins||(i.plugins={}))}(dv||(dv={})),function(i){!function(t){"use strict";var e=function(){function t(){}return t.prototype.create=function(){return new i.models._TrellisRowHeaderHoverInteraction},t}();t._TrellisRowHeaderHoverInteractionPlugin=e}(i.plugins||(i.plugins={}))}(dv||(dv={})),function(i){!function(t){"use strict";var e=function(){function t(){}return t.prototype.create=function(){return new i.models._TrellisRowHeaderSelectionInteraction},t}();t._TrellisRowHeaderSelectionInteractionPlugin=e}(i.plugins||(i.plugins={}))}(dv||(dv={})),function(i){!function(t){"use strict";var e=function(){function t(){}return t.prototype.create=function(){return new i.models._LegendFilterInteraction},t}();t.LegendFilterInteractionPlugin=e}(i.plugins||(i.plugins={}))}(dv||(dv={})),function(n){!function(t){"use strict";var e=function(){function t(){}return t.prototype.create=function(t,e,i){return null!=t&&i&&0<i.length?new n._DefaultLayoutView(t,e,i):null},t}();t._DefaultLayoutPlugin=e}(n.plugins||(n.plugins={}))}(dv||(dv={})),function(n){!function(t){"use strict";var e=function(){function t(){}return t.prototype.create=function(t,e,i){return null!=t&&i&&0<i.length?new n._TrellisView(t,e,i):null},t}();t._TrellisLayoutPlugin=e}(n.plugins||(n.plugins={}))}(dv||(dv={})),function(n){!function(t){"use strict";var e=function(){function t(){}return Object.defineProperty(t.prototype,"type",{get:function(){return"ReferenceBand"},enumerable:!0,configurable:!0}),t.prototype.create=function(t,e){if(null!=e&&null!=t&&t instanceof n._CartesianPlotView&&e.type==this.type){var i=new n.options._ReferenceBandOverlayOption(e.option());return new n._CartesianReferenceBandOverlayView(t,i)}return null},t}();t._ReferenceBandOverlayPlugin=e}(n.plugins||(n.plugins={}))}(dv||(dv={})),function(n){!function(t){"use strict";var e=function(){function t(){}return Object.defineProperty(t.prototype,"type",{get:function(){return"ReferenceLine"},enumerable:!0,configurable:!0}),t.prototype.create=function(t,e){if(null!=e&&null!=t&&t instanceof n._CartesianPlotView&&e.type==this.type){var i=new n.options._ReferenceLineOverlayOption(e.option());return t._layoutView()instanceof n._TrellisCellLayoutView?new n._TrellisCartesianReferenceLineOverlayView(t,i):new n._CartesianReferenceLineOverlayView(t,i)}return null},t}();t._ReferenceLineOverlayPlugin=e}(n.plugins||(n.plugins={}))}(dv||(dv={})),function(i){!function(t){"use strict";var e=function(){function t(){}return Object.defineProperty(t.prototype,"chartType",{get:function(){return"Area"},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"priority",{get:function(){return 0},enumerable:!0,configurable:!0}),t.prototype.create=function(t,e){return null!=e&&null!=t?new i._AreaPlotView(t,e):null},t}();t._AreaPlotPlugin=e}(i.plugins||(i.plugins={}))}(dv||(dv={})),function(i){!function(t){"use strict";var e=function(){function t(){}return Object.defineProperty(t.prototype,"chartType",{get:function(){return"Bar"},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"priority",{get:function(){return 0},enumerable:!0,configurable:!0}),t.prototype.create=function(t,e){return null!=e&&null!=t?new i._BarPlotView(t,e):null},t}();t._BarPlotPlugin=e}(i.plugins||(i.plugins={}))}(dv||(dv={})),function(i){!function(t){"use strict";var e=function(){function t(){}return Object.defineProperty(t.prototype,"chartType",{get:function(){return"Line"},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"priority",{get:function(){return 0},enumerable:!0,configurable:!0}),t.prototype.create=function(t,e){return null!=e&&null!=t?new i._LinePlotView(t,e):null},t}();t._LinePlotPlugin=e}(i.plugins||(i.plugins={}))}(dv||(dv={})),function(n){!function(t){"use strict";var e=function(){function t(){}return Object.defineProperty(t.prototype,"chartType",{get:function(){return"Area"},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"priority",{get:function(){return 2},enumerable:!0,configurable:!0}),t.prototype.create=function(t,e){if(null!=e&&null!=t){var i=new n.models._ParallelEncodingsAnalyser(t._plotAreaView()._dvView()._dataSource()._fields())._analyse(e.encodings,t._plotAreaView()._option().legends);if(null!=i.valueDefinitions&&0<i.valueDefinitions.length&&i.valueDefinitions[0]instanceof n.models._ParallelValueDefinition)return new n._RadialParallelAreaPlotView(t,e)}return null},t}();t._ParallelAreaPlotPlugin=e}(n.plugins||(n.plugins={}))}(dv||(dv={})),function(n){!function(t){"use strict";var e=function(){function t(){}return Object.defineProperty(t.prototype,"chartType",{get:function(){return"Line"},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"priority",{get:function(){return 2},enumerable:!0,configurable:!0}),t.prototype.create=function(t,e){if(null!=e&&null!=t){var i=new n.models._ParallelEncodingsAnalyser(t._plotAreaView()._dvView()._dataSource()._fields())._analyse(e.encodings,t._plotAreaView()._option().legends);if(null!=i.valueDefinitions&&0<i.valueDefinitions.length&&i.valueDefinitions[0]instanceof n.models._ParallelValueDefinition)return new n._RadialParallelLinePlotView(t,e)}return null},t}();t._ParallelLinePlotPlugin=e}(n.plugins||(n.plugins={}))}(dv||(dv={})),function(i){!function(t){"use strict";var e=function(){function t(){}return Object.defineProperty(t.prototype,"chartType",{get:function(){return"Scatter"},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"priority",{get:function(){return 0},enumerable:!0,configurable:!0}),t.prototype.create=function(t,e){return null!=e&&null!=t?new i._ScatterPlotView(t,e):null},t}();t._ScatterPlotPlugin=e}(i.plugins||(i.plugins={}))}(dv||(dv={})),function(o){!function(t){"use strict";var e=function(){function t(){}return Object.defineProperty(t.prototype,"chartType",{get:function(){return"Bar"},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"priority",{get:function(){return 1},enumerable:!0,configurable:!0}),t.prototype.create=function(t,e){if(e.config.axisMode==o.AxisMode.Polygonal||e.config.axisMode==o.AxisMode.Radial){var i=new o.models._HierarchicalEncodingsAnalyser(t._plotAreaView()._dvView()._dataSource()._fields())._analyse(e.encodings,t._plotAreaView()._option().legends);if(null!=i.detailDefinitions&&0<i.detailDefinitions.length){var n=i.detailDefinitions[0];if(n instanceof o.models._HierarchicalFieldsDetailDefinition&&null!=n._fieldDefinitions()&&1<n._fieldDefinitions().length)return new o._SunburstPlotView(t,e)}}return null},t}();t._SunburstPlotPlugin=e}(o.plugins||(o.plugins={}))}(dv||(dv={})),function(i){!function(t){"use strict";var e=function(){function t(){}return Object.defineProperty(t.prototype,"chartType",{get:function(){return"Text"},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"priority",{get:function(){return 0},enumerable:!0,configurable:!0}),t.prototype.create=function(t,e){return null!=e&&null!=t?new i._TextPlotView(t,e):null},t}();t._TextPlotPlugin=e}(i.plugins||(i.plugins={}))}(dv||(dv={})),function(i){!function(t){"use strict";var e=function(){function t(){}return Object.defineProperty(t.prototype,"chartType",{get:function(){return"TreeMap"},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"priority",{get:function(){return 0},enumerable:!0,configurable:!0}),t.prototype.create=function(t,e){return null!=e&&null!=t?new i._TreemapPlotView(t,e):null},t}();t._TreeMapPlotPlugin=e}(i.plugins||(i.plugins={}))}(dv||(dv={})),function(i){!function(t){"use strict";var e=function(){function t(){}return Object.defineProperty(t.prototype,"chartType",{get:function(){return"Area"},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"priority",{get:function(){return 10},enumerable:!0,configurable:!0}),t.prototype.create=function(t,e){return null!=e&&t instanceof i._TrellisCellLayoutView?new i._TrellisAreaPlotView(t,e):null},t}();t._TrellisAreaPlotPlugin=e}(i.plugins||(i.plugins={}))}(dv||(dv={})),function(i){!function(t){"use strict";var e=function(){function t(){}return Object.defineProperty(t.prototype,"chartType",{get:function(){return"Bar"},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"priority",{get:function(){return 10},enumerable:!0,configurable:!0}),t.prototype.create=function(t,e){return null!=e&&t instanceof i._TrellisCellLayoutView?new i._TrellisBarPlotView(t,e):null},t}();t._TrellisBarPlotPlugin=e}(i.plugins||(i.plugins={}))}(dv||(dv={})),function(i){!function(t){"use strict";var e=function(){function t(){}return Object.defineProperty(t.prototype,"chartType",{get:function(){return"Line"},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"priority",{get:function(){return 10},enumerable:!0,configurable:!0}),t.prototype.create=function(t,e){return null!=e&&t instanceof i._TrellisCellLayoutView?new i._TrellisLinePlotView(t,e):null},t}();t._TrellisLinePlotPlugin=e}(i.plugins||(i.plugins={}))}(dv||(dv={})),function(i){!function(t){"use strict";var e=function(){function t(){}return Object.defineProperty(t.prototype,"chartType",{get:function(){return"Scatter"},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"priority",{get:function(){return 10},enumerable:!0,configurable:!0}),t.prototype.create=function(t,e){return null!=e&&t instanceof i._TrellisCellLayoutView?new i._TrellisScatterPlotView(t,e):null},t}();t._TrellisScatterPlotPlugin=e}(i.plugins||(i.plugins={}))}(dv||(dv={})),function(o){!function(t){"use strict";var e=function(){function t(){}return Object.defineProperty(t.prototype,"chartType",{get:function(){return"Bar"},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"priority",{get:function(){return 11},enumerable:!0,configurable:!0}),t.prototype.create=function(t,e){if(e.config.axisMode==o.AxisMode.Polygonal||e.config.axisMode==o.AxisMode.Radial){var i=new o.models._HierarchicalEncodingsAnalyser(t._plotAreaView()._dvView()._dataSource()._fields())._analyse(e.encodings,t._plotAreaView()._option().legends);if(null!=i.detailDefinitions&&0<i.detailDefinitions.length){var n=i.detailDefinitions[0];if(n instanceof o.models._HierarchicalFieldsDetailDefinition&&null!=n._fieldDefinitions()&&1<n._fieldDefinitions().length)return new o._SunburstPlotView(t,e)}}return null},t}();t._TrellisSunburstPlotPlugin=e}(o.plugins||(o.plugins={}))}(dv||(dv={})),function(i){!function(t){"use strict";var e=function(){function t(){}return t.prototype.create=function(t){return new i.models._CanvasRenderEngine(t)},t}();t._CanvasRenderEnginePlugin=e}(i.plugins||(i.plugins={}))}(dv||(dv={})),function(i){!function(t){"use strict";var e=function(){function t(){}return t.prototype.create=function(t){return new i.models._SvgRenderEngine(t)},t}();t._SvgRenderEnginePlugin=e}(i.plugins||(i.plugins={}))}(dv||(dv={})),function(i){!function(t){"use strict";var e=function(){function t(){}return t.prototype.create=function(t){return new i.models._PureCanvasRenderEngine(t)},t}();t.PureCanvasRenderEnginePlugin=e}(i.plugins||(i.plugins={}))}(dv||(dv={})),function(s){!function(t){"use strict";(s.plugins||(s.plugins={})).formatDate=function(t,e){switch(e){case"r":case"R":return t.toUTCString();case"u":return t.toISOString().replace(/\.\d{3}/,"")}e=s.core.Globalize._expandFormat(e);for(var i="",n=0,o=s.core.Globalize._parseDateFormat(e);n<o.length;n++){var r=o[n];i+=s.core.Globalize._formatDatePart(t,e,r)}return i}}()}(dv||(dv={})),function(d){!function(t){"use strict";(d.plugins||(d.plugins={}))._formatNumber=function(t,e,i,n){var o,r=e?e.match(/([a-z])(\d*)(,*)(.*)/i):null,s=d.core.culture.Globalize.numberFormat,a=r?r[1].toLowerCase():"n",l=r&&r[2]?parseInt(r[2]):"c"==a?s.currency.decimals:t==Math.round(t)?0:2,_=r&&r[3]?3*r[3].length:0,u=r&&r[4]?r[4]:s.currency.symbol,h=s["."],c=s[","];if(_&&(t/=Math.pow(10,_)),"d"==a||"x"==a){for(o=Math.round(Math.abs(t)).toString("d"==a?10:16);o.length<l;)o="0"+o;return t<0&&(o="-"+o),e&&"X"==e[0]&&(o=o.toUpperCase()),o}if("p"==a&&(t=d.core.Globalize._mul100(t)),n&&(t=d.core.toFixed(t,l,!0)),o="c"==a||"p"==a?Math.abs(t).toFixed(l):t.toFixed(l),(i||"g"==a)&&-1<o.indexOf(".")&&(o=(o=o.replace(/(\.[0-9]*?)0+$/g,"$1")).replace(/\.$/,"")),"."!=h&&(o=o.replace(".",h)),c&&("n"==a||"c"==a||"p"==a)){var p=o.indexOf(h),f=/\B(?=(\d\d\d)+(?!\d))/g;o=-1<p?o.substr(0,p).replace(f,c)+o.substr(p):o.replace(f,c)}return"c"==a&&(o=s.currency.pattern[t<0?0:1].replace("n",o).replace("$",u)),"p"==a&&(o=s.percent.pattern[t<0?0:1].replace("n",o)),o}}()}(dv||(dv={})),function(n){!function(i){"use strict";var t=function(){function t(){}return t.prototype.format=function(t,e){return null==e?"":"string"==typeof e?e:"number"==typeof e?isNaN(e)?"":(t||(t=e==Math.round(e)?"n0":"n2"),i._formatNumber(e,t)):e instanceof Date?isNaN(e.getTime())?"":(t||(t=this.defaultFormat(n.core.DataType.Date)),n.core.Globalize.formatDate(e,t)):e.toString()},t.prototype.defaultFormat=function(t,e){switch(void 0===e&&(e=!1),t){case n.core.DataType.Number:return e?"p":"N";case n.core.DataType.Date:return"d";default:return null}},t}();i._StringFormatting=t}(n.plugins||(n.plugins={}))}(dv||(dv={})),function(t){!function(e){"use strict";var t=function(){function t(){}return t.prototype.create=function(){return new e._StringFormatting},t}();e._StringFormattingPlugin=t}(t.plugins||(t.plugins={}))}(dv||(dv={})),function(o){!function(t){"use strict";var e=function(){function t(){}return t.prototype.render=function(t,e,i){var n=e.width<e.height?e.width:e.height;o._applyFillColor(t,this.color),o._applyStrokeColor(t,this.color),o._applyDataPointStyle(t,new o.options._DataPointStyleOption({strokeWidth:1})),o._applyNewStyle(t,i),t.drawRect((e.right+e.left)/2-n/2,e.top,n,n)},t}();t._BoxSymbol=e}(o.plugins||(o.plugins={}))}(dv||(dv={})),function(t){!function(e){"use strict";var t=function(){function t(){}return t.prototype.create=function(){return new e._BoxSymbol},t}();e._BoxSymbolPlugin=t}(t.plugins||(t.plugins={}))}(dv||(dv={})),function(r){!function(t){"use strict";var e=function(){function t(){}return t.prototype.render=function(t,e,i){var n=e.width<e.height?e.width:e.height,o={x:.5*(e.left+e.right),y:.5*(e.top+e.bottom)};r._applyStrokeColor(t,this.color),r._applyDataPointStyle(t,new r.options._DataPointStyleOption({strokeWidth:2,strokeDasharray:"2,2"})),r._applyNewStyle(t,i),t.drawLine(o.x-.5*n,o.y,o.x+.5*n,o.y)},t}();t._DashSymbol=e}(r.plugins||(r.plugins={}))}(dv||(dv={})),function(t){!function(e){"use strict";var t=function(){function t(){}return t.prototype.create=function(){return new e._DashSymbol},t}();e._DashSymbolPlugin=t}(t.plugins||(t.plugins={}))}(dv||(dv={})),function(a){!function(t){"use strict";var e=function(){function t(){}return t.prototype.render=function(t,e,i){var n=e.width<e.height?e.width:e.height,o={x:.5*(e.left+e.right),y:.5*(e.top+e.bottom)},r=[o.x,o.x+.5*n,o.x,o.x-.5*n],s=[o.y-.5*n,o.y,o.y+.5*n,o.y];a._applyFillColor(t,this.color),a._applyStrokeColor(t,this.color),a._applyDataPointStyle(t,new a.options._DataPointStyleOption({strokeWidth:1})),a._applyNewStyle(t,i),t.drawPolygon(r,s)},t}();t._DiamondSymbol=e}(a.plugins||(a.plugins={}))}(dv||(dv={})),function(t){!function(e){"use strict";var t=function(){function t(){}return t.prototype.create=function(){return new e._DiamondSymbol},t}();e._DiamondSymbolPlugin=t}(t.plugins||(t.plugins={}))}(dv||(dv={})),function(o){!function(t){"use strict";var e=function(){function t(){}return t.prototype.render=function(t,e,i){var n=e.width<e.height?e.width/2:e.height/2;o._applyFillColor(t,this.color),o._applyStrokeColor(t,this.color),o._applyDataPointStyle(t,new o.options._DataPointStyleOption({strokeWidth:1})),o._applyNewStyle(t,i),t.drawEllipse((e.right+e.left)/2,(e.top+e.bottom)/2,n,n)},t}();t._DotSymbol=e}(o.plugins||(o.plugins={}))}(dv||(dv={})),function(t){!function(e){"use strict";var t=function(){function t(){}return t.prototype.create=function(){return new e._DotSymbol},t}();e._DotSymbolPlugin=t}(t.plugins||(t.plugins={}))}(dv||(dv={})),function(r){!function(t){"use strict";var e=function(){function t(){}return t.prototype.render=function(t,e,i){var n=e.width<e.height?e.width:e.height,o={x:.5*(e.left+e.right),y:.5*(e.top+e.bottom)};r._applyStrokeColor(t,this.color),r._applyDataPointStyle(t,new r.options._DataPointStyleOption({strokeWidth:2})),r._applyNewStyle(t,i),t.drawLine(o.x,o.y-.5*n,o.x,o.y+.5*n),t.drawLine(o.x-.5*n,o.y,o.x+.5*n,o.y)},t}();t._PlusSymbol=e}(r.plugins||(r.plugins={}))}(dv||(dv={})),function(t){!function(e){"use strict";var t=function(){function t(){}return t.prototype.create=function(){return new e._PlusSymbol},t}();e._PlusSymbolPlugin=t}(t.plugins||(t.plugins={}))}(dv||(dv={})),function(u){!function(t){"use strict";var e=function(){function t(){}return t.prototype.render=function(t,e,i){var n=e.width<e.height?e.width:e.height,o=e.clone();e.width>e.height&&(o.left=o.left+(e.width-n)/2,o.width=n),e.height>e.width&&(o.top=o.top+(e.height-n)/2,o.height=n);var r=new u.core.Point(o.left+o.width/2,o.top),s=new u.core.Point(o.left,o.width/2/.5773502691896257+o.top),a=new u.core.Point(o.right,s.y),l=[],_=[];l.push(r.x),l.push(s.x),l.push(a.x),_.push(r.y),_.push(s.y),_.push(a.y),u._applyFillColor(t,this.color),u._applyStrokeColor(t,this.color),u._applyDataPointStyle(t,new u.options._DataPointStyleOption({strokeWidth:1})),u._applyNewStyle(t,i),t.drawPolygon(l,_)},t}();t._TriangleSymbol=e}(u.plugins||(u.plugins={}))}(dv||(dv={})),function(t){!function(e){"use strict";var t=function(){function t(){}return t.prototype.create=function(){return new e._TriangleSymbol},t}();e._TriangleSymbolPlugin=t}(t.plugins||(t.plugins={}))}(dv||(dv={})),function(s){!function(t){"use strict";var e=function(){function t(){}return t.prototype.render=function(t,e,i){var n=e.width<e.height?e.width:e.height,o=.5*(e.left+e.right),r=.5*(e.top+e.bottom);s._applyStrokeColor(t,this.color),s._applyDataPointStyle(t,new s.options._DataPointStyleOption({strokeWidth:2})),s._applyNewStyle(t,i),t.drawLine(o-.5*n,r-.5*n,o+.5*n,r+.5*n),t.drawLine(o+.5*n,r-.5*n,o-.5*n,r+.5*n)},t}();t._XSymbol=e}(s.plugins||(s.plugins={}))}(dv||(dv={})),function(t){!function(e){"use strict";var t=function(){function t(){}return t.prototype.create=function(){return new e._XSymbol},t}();e._XSymbolPlugin=t}(t.plugins||(t.plugins={}))}(dv||(dv={})),function(o){!function(i){"use strict";var n={};i.registerAdornerRender=function(t,e){null!=t&&"string"==typeof t||o._throwException(o.Exception.Plugin_InvalidTypeName),null==e&&o._throwException(o.Exception.Plugin_InvalidPlugin),null==n[t]?(n[t]=e,i._Plugins._resetAdornerRender(t)):o._throwException(o.Exception.Plugin_IsRegistered)},i.unregisterAdorner=function(t){null!=t&&"string"==typeof t||o._throwException(o.Exception.Plugin_InvalidTypeName),null!=n[t]&&(delete n[t],i._Plugins._resetAdornerRender(t))},i.hasRegisteredAdornerRender=function(t){return null!=t&&"string"==typeof t||o._throwException(o.Exception.Plugin_InvalidTypeName),null!=n[t]},i._adornerRenderPlugin=function(t){return null==t||"string"!=typeof t?null:null!=n[t]?n[t]:null}}(o.plugins||(o.plugins={}))}(dv||(dv={})),function(i){!function(t){"use strict";var o={};t.registerClickInteraction=function(t,e){null!=t&&"string"==typeof t||i._throwException(i.Exception.Plugin_InvalidTypeName),null==e&&i._throwException(i.Exception.Plugin_InvalidPlugin),null==o[t]?o[t]=e:i._throwException(i.Exception.Plugin_IsRegistered)},t.unregisterClickInteraction=function(t){null!=t&&"string"==typeof t||i._throwException(i.Exception.Plugin_InvalidTypeName),null!=o[t]&&delete o[t]},t.hasRegisteredClickInteraction=function(t){return null!=t&&"string"==typeof t||i._throwException(i.Exception.Plugin_InvalidTypeName),null!=o[t]},t._clickInteractionPlugin=function(t){return null==t||"string"!=typeof t?null:null!=o[t]?o[t]:null},t._clickInteractionPlugins=function(){for(var t=[],e=0,i=Object.keys(o);e<i.length;e++){var n=i[e];t.push(o[n])}return t}}(i.plugins||(i.plugins={}))}(dv||(dv={})),function(n){!function(t){"use strict";var i={};t.registerConditionalFormattingRule=function(t,e){null!=t&&"string"==typeof t||n._throwException(n.Exception.Plugin_InvalidTypeName),null==e&&n._throwException(n.Exception.Plugin_InvalidPlugin),null==i[t]?i[t]=e:n._throwException(n.Exception.Plugin_IsRegistered)},t.unregisterConditionalFormattingRule=function(t){null!=t&&"string"==typeof t||n._throwException(n.Exception.Plugin_InvalidTypeName),null!=i[t]&&delete i[t]},t.hasRegisteredConditionalFormattingRule=function(t){return null!=t&&"string"==typeof t||n._throwException(n.Exception.Plugin_InvalidTypeName),null!=i[t]},t._conditionalFormattingRulePlugin=function(t){return null==t||"string"!=typeof t?null:null!=i[t]?i[t]:null}}(n.plugins||(n.plugins={}))}(dv||(dv={})),function(n){!function(t){"use strict";var i={};t.registerCoordinateSystem=function(t,e){null!=t&&"string"==typeof t||n._throwException(n.Exception.Plugin_InvalidTypeName),null==e&&n._throwException(n.Exception.Plugin_InvalidPlugin),null==i[t]?i[t]=e:n._throwException(n.Exception.Plugin_IsRegistered)},t.unregisterCoordinateSystem=function(t){null!=t&&"string"==typeof t||n._throwException(n.Exception.Plugin_InvalidTypeName),null!=i[t]&&delete i[t]},t.hasRegisteredCoordinateSystem=function(t){return null!=t&&"string"==typeof t||n._throwException(n.Exception.Plugin_InvalidTypeName),null!=i[t]},t._coordinateSystemPlugin=function(t){return null==t||"string"!=typeof t?null:null!=i[t]?i[t]:null}}(n.plugins||(n.plugins={}))}(dv||(dv={})),function(o){!function(i){"use strict";var n={};i.registerDataContentProvider=function(t,e){null!=t&&"string"==typeof t||o._throwException(o.Exception.Plugin_InvalidTypeName),null==e&&o._throwException(o.Exception.Plugin_InvalidPlugin),null==n[t]?(n[t]=e,i._Plugins._resetDataContentProvider(t)):o._throwException(o.Exception.Plugin_IsRegistered)},i.unregisterDataContentProvider=function(t){null!=t&&"string"==typeof t||o._throwException(o.Exception.Plugin_InvalidTypeName),null!=n[t]&&(delete n[t],i._Plugins._resetDataContentProvider(t))},i.hasRegisteredDataContentProvider=function(t){return null!=t&&"string"==typeof t||o._throwException(o.Exception.Plugin_InvalidTypeName),null!=n[t]},i._dataContentProviderPlugin=function(t){return null==t||"string"!=typeof t?null:null!=n[t]?n[t]:null}}(o.plugins||(o.plugins={}))}(dv||(dv={})),function(o){!function(i){"use strict";var n={};i.registerDateParser=function(t,e){null!=t&&"string"==typeof t||o._throwException(o.Exception.Plugin_InvalidTypeName),null==e&&o._throwException(o.Exception.Plugin_InvalidPlugin),null==n[t]?(n[t]=e,i._Plugins._resetDateParser(t)):o._throwException(o.Exception.Plugin_IsRegistered)},i.unregisterDateParser=function(t){null!=t&&"string"==typeof t||o._throwException(o.Exception.Plugin_InvalidTypeName),null!=n[t]&&(delete n[t],i._Plugins._resetDateParser(t))},i.hasRegisteredDateParser=function(t){return null!=t&&"string"==typeof t||o._throwException(o.Exception.Plugin_InvalidTypeName),null!=n[t]},i._dateParserPlugin=function(t){return null==t||"string"!=typeof t?null:null!=n[t]?n[t]:null}}(o.plugins||(o.plugins={}))}(dv||(dv={})),function(n){!function(t){"use strict";var i={};t.registerFilter=function(t,e){null!=t&&"string"==typeof t||n._throwException(n.Exception.Plugin_InvalidTypeName),null==e&&n._throwException(n.Exception.Plugin_InvalidPlugin),null==i[t]?i[t]=e:n._throwException(n.Exception.Plugin_IsRegistered)},t.unregisterFilter=function(t){null!=t&&"string"==typeof t||n._throwException(n.Exception.Plugin_InvalidTypeName),null!=i[t]&&delete i[t]},t.hasRegisteredFilter=function(t){return null!=t&&"string"==typeof t||n._throwException(n.Exception.Plugin_InvalidTypeName),null!=i[t]},t._filterPlugin=function(t){return null==t||"string"!=typeof t?null:null!=i[t]?i[t]:null}}(n.plugins||(n.plugins={}))}(dv||(dv={})),function(i){!function(t){"use strict";var o={};t.registerHoverInteraction=function(t,e){null!=t&&"string"==typeof t||i._throwException(i.Exception.Plugin_InvalidTypeName),null==e&&i._throwException(i.Exception.Plugin_InvalidPlugin),null==o[t]?o[t]=e:i._throwException(i.Exception.Plugin_IsRegistered)},t.unregisterHoverInteraction=function(t){null!=t&&"string"==typeof t||i._throwException(i.Exception.Plugin_InvalidTypeName),null!=o[t]&&delete o[t]},t.hasRegisteredHoverInteraction=function(t){return null!=t&&"string"==typeof t||i._throwException(i.Exception.Plugin_InvalidTypeName),null!=o[t]},t._hoverInteractionPlugin=function(t){return null==t||"string"!=typeof t?null:null!=o[t]?o[t]:null},t._hoverInteractionPlugins=function(){for(var t=[],e=0,i=Object.keys(o);e<i.length;e++){var n=i[e];t.push(o[n])}return t}}(i.plugins||(i.plugins={}))}(dv||(dv={})),function(n){!function(t){"use strict";var i={};t.registerLayout=function(t,e){null!=t&&"string"==typeof t||n._throwException(n.Exception.Plugin_InvalidTypeName),null==e&&n._throwException(n.Exception.Plugin_InvalidPlugin),null==i[t]?i[t]=e:n._throwException(n.Exception.Plugin_IsRegistered)},t.unregisterLayout=function(t){null!=t&&"string"==typeof t||n._throwException(n.Exception.Plugin_InvalidTypeName),null!=i[t]&&delete i[t]},t.hasRegisteredLayout=function(t){return null!=t&&"string"==typeof t||n._throwException(n.Exception.Plugin_InvalidTypeName),null!=i[t]},t._layoutPlugin=function(t){return null==t||"string"!=typeof t?null:null!=i[t]?i[t]:null}}(n.plugins||(n.plugins={}))}(dv||(dv={})),function(o){!function(t){"use strict";var i={},n=[];t.registerOverlay=function(t,e){null!=t&&"string"==typeof t||o._throwException(o.Exception.Plugin_InvalidTypeName),null==e&&o._throwException(o.Exception.Plugin_InvalidPlugin),null==i[t]?(i[t]=e,n.push(t)):o._throwException(o.Exception.Plugin_IsRegistered)},t.unregisterOverlay=function(t){if(null!=t&&"string"==typeof t||o._throwException(o.Exception.Plugin_InvalidTypeName),null!=i[t]){delete i[t];for(var e=0;e<n.length;e++)if(n[e]==t){n.splice(e,1);break}}},t.hasRegisteredOverlay=function(t){return null!=t&&"string"==typeof t||o._throwException(o.Exception.Plugin_InvalidTypeName),null!=i[t]},t._overlayPlugin=function(t){return null==t||"string"!=typeof t?null:null!=i[t]?i[t]:null},t._overlayNames=function(){return n}}(o.plugins||(o.plugins={}))}(dv||(dv={})),function(o){!function(t){"use strict";var i={},n=[];t.registerPlot=function(t,e){null!=t&&"string"==typeof t||o._throwException(o.Exception.Plugin_InvalidTypeName),null==e&&o._throwException(o.Exception.Plugin_InvalidPlugin),null==i[t]?(i[t]=e,n.push(t)):o._throwException(o.Exception.Plugin_IsRegistered)},t.unregisterPlot=function(t){if(null!=t&&"string"==typeof t||o._throwException(o.Exception.Plugin_InvalidTypeName),null!=i[t]){delete i[t];for(var e=0;e<n.length;e++)if(n[e]==t){n.splice(e,1);break}}},t.hasRegisteredPlot=function(t){return null!=t&&"string"==typeof t||o._throwException(o.Exception.Plugin_InvalidTypeName),null!=i[t]},t._plotPlugin=function(t){return null==t||"string"!=typeof t?null:null!=i[t]?i[t]:null},t._plotNames=function(){return n}}(o.plugins||(o.plugins={}))}(dv||(dv={})),function(n){!function(t){"use strict";var i={};t.registerRenderEngine=function(t,e){null!=t&&"string"==typeof t||n._throwException(n.Exception.Plugin_InvalidTypeName),null==e&&n._throwException(n.Exception.Plugin_InvalidPlugin),null==i[t]?i[t]=e:n._throwException(n.Exception.Plugin_IsRegistered)},t.unregisterRenderEngine=function(t){null!=t&&"string"==typeof t||n._throwException(n.Exception.Plugin_InvalidTypeName),null!=i[t]&&delete i[t]},t.hasRegisteredRenderEngine=function(t){return null!=t&&"string"==typeof t||n._throwException(n.Exception.Plugin_InvalidTypeName),null!=i[t]},t._renderEnginePlugin=function(t){return null==t||"string"!=typeof t?null:null!=i[t]?i[t]:null}}(n.plugins||(n.plugins={}))}(dv||(dv={})),function(o){!function(i){"use strict";var n={};i.registerStringFormatting=function(t,e){null!=t&&"string"==typeof t||o._throwException(o.Exception.Plugin_InvalidTypeName),null==e&&o._throwException(o.Exception.Plugin_InvalidPlugin),null==n[t]?(n[t]=e,i._Plugins._resetStringFormatting(t)):o._throwException(o.Exception.Plugin_IsRegistered)},i.unregisterStringFormatting=function(t){null!=t&&"string"==typeof t||o._throwException(o.Exception.Plugin_InvalidTypeName),null!=n[t]&&(delete n[t],i._Plugins._resetStringFormatting(t))},i.hasRegisteredStringFormatting=function(t){return null!=t&&"string"==typeof t||o._throwException(o.Exception.Plugin_InvalidTypeName),null!=n[t]},i._stringFormattingPlugin=function(t){return null==t||"string"!=typeof t?null:null!=n[t]?n[t]:null}}(o.plugins||(o.plugins={}))}(dv||(dv={})),function(r){!function(i){"use strict";var n={},o=[];i.registerSymbol=function(t,e){null!=t&&"string"==typeof t||r._throwException(r.Exception.Plugin_InvalidTypeName),null==e&&r._throwException(r.Exception.Plugin_InvalidPlugin),null==n[t]?(n[t]=e,o.push(t),i._Plugins._resetSymbol(t)):r._throwException(r.Exception.Plugin_IsRegistered)},i.unregisterSymbol=function(t){if(null!=t&&"string"==typeof t||r._throwException(r.Exception.Plugin_InvalidTypeName),null!=n[t]){delete n[t];for(var e=0;e<o.length;e++)if(o[e]==t){o.splice(e,1);break}i._Plugins._resetSymbol(t)}},i.hasRegisteredSymbol=function(t){return null!=t&&"string"==typeof t||r._throwException(r.Exception.Plugin_InvalidTypeName),null!=n[t]},i._symbolPlugin=function(t){return null==t||"string"!=typeof t?null:null!=n[t]?n[t]:null},i._symbolNames=function(){return o}}(r.plugins||(r.plugins={}))}(dv||(dv={})),function(o){"use strict";var t=function(){function i(t,e){this.__fillOpacity=1,this.__strokeOpacity=1,o._assertDebug(function(){return null!=t}),this.__element=t,this.__renderEngine=e,this.__stringRender=new o._StringRender(this),this.__transformRender=new o._TransformRender(this)}return i._renderFromType=function(t,e){return new i(t,o.plugins._Plugins._renderEngine(e,t))},Object.defineProperty(i.prototype,"element",{get:function(){return null!=this.__renderEngine?this.__renderEngine.element:null},enumerable:!0,configurable:!0}),Object.defineProperty(i.prototype,"renderEngine",{get:function(){return this.__renderEngine},enumerable:!0,configurable:!0}),Object.defineProperty(i.prototype,"fillOpacity",{get:function(){return this.__fillOpacity},set:function(t){if(this.__fillOpacity=t,null!=this.__renderEngine&&null!=this.fillOpacity&&"string"==typeof this.fill&&"none"!=this.fill&&"transparent"!=this.fill&&this.fill){var e=o.core._Color.fromCss(this.fill);e.alpha=e.alpha*this.fillOpacity,this.__renderEngine.fill=e.toCss()}},enumerable:!0,configurable:!0}),Object.defineProperty(i.prototype,"strokeOpacity",{get:function(){return this.__strokeOpacity},set:function(t){if(this.__strokeOpacity=t,null!=this.__renderEngine&&null!=this.strokeOpacity&&"string"==typeof this.stroke&&"none"!=this.stroke&&"transparent"!=this.stroke&&this.stroke){var e=o.core._Color.fromCss(this.stroke);e.alpha=e.alpha*this.strokeOpacity,this.__renderEngine.stroke=e.toCss()}},enumerable:!0,configurable:!0}),Object.defineProperty(i.prototype,"fill",{get:function(){return this.__fill},set:function(t){if(this.__fill=t,null!=this.__renderEngine)if(null!=this.fillOpacity&&"string"==typeof this.fill&&"none"!=this.fill&&"transparent"!=this.fill&&this.fill){var e=o.core._Color.fromCss(this.fill);e.alpha=e.alpha*this.fillOpacity,this.__renderEngine.fill=e.toCss()}else this.__renderEngine.fill=this.fill},enumerable:!0,configurable:!0}),Object.defineProperty(i.prototype,"stroke",{get:function(){return this.__stroke},set:function(t){if(this.__stroke=t,null!=this.__renderEngine)if(null!=this.strokeOpacity&&"string"==typeof this.stroke&&"none"!=this.stroke&&"transparent"!=this.stroke&&this.stroke){var e=o.core._Color.fromCss(this.stroke);e.alpha=e.alpha*this.strokeOpacity,this.__renderEngine.stroke=e.toCss()}else this.__renderEngine.stroke=this.stroke},enumerable:!0,configurable:!0}),Object.defineProperty(i.prototype,"strokeWidth",{get:function(){return null!=this.__renderEngine?this.__renderEngine.strokeWidth:null},set:function(t){null!=this.__renderEngine&&(this.__renderEngine.strokeWidth=t)},enumerable:!0,configurable:!0}),Object.defineProperty(i.prototype,"strokeDasharray",{get:function(){return null!=this.__renderEngine?this.__renderEngine.strokeDasharray:null},set:function(t){null!=this.__renderEngine&&(this.__renderEngine.strokeDasharray=t)},enumerable:!0,configurable:!0}),Object.defineProperty(i.prototype,"textFill",{get:function(){return null!=this.__renderEngine?this.__renderEngine.textFill:null},set:function(t){null!=this.__renderEngine&&(this.__renderEngine.textFill=t)},enumerable:!0,configurable:!0}),Object.defineProperty(i.prototype,"fontSize",{get:function(){return null!=this.__renderEngine?this.__renderEngine.fontSize:null},set:function(t){null!=this.__renderEngine&&(this.__renderEngine.fontSize=t)},enumerable:!0,configurable:!0}),Object.defineProperty(i.prototype,"fontFamily",{get:function(){return null!=this.__renderEngine?this.__renderEngine.fontFamily:null},set:function(t){null!=this.__renderEngine&&(this.__renderEngine.fontFamily=t)},enumerable:!0,configurable:!0}),Object.defineProperty(i.prototype,"fontWeight",{get:function(){return null!=this.__renderEngine?this.__renderEngine.fontWeight:null},set:function(t){null!=this.__renderEngine&&(this.__renderEngine.fontWeight=t)},enumerable:!0,configurable:!0}),Object.defineProperty(i.prototype,"fontStyle",{get:function(){return null!=this.__renderEngine?this.__renderEngine.fontStyle:null},set:function(t){null!=this.__renderEngine&&(this.__renderEngine.fontStyle=t)},enumerable:!0,configurable:!0}),Object.defineProperty(i.prototype,"textDecoration",{get:function(){return null!=this.__renderEngine?this.__renderEngine.textDecoration:null},set:function(t){null!=this.__renderEngine&&null!=t&&(null==this.__renderEngine.textDecoration&&(this.__renderEngine.textDecoration=new o.options._TextDecorationOption(null),this.__renderEngine.textDecoration.lineThrough=!1,this.__renderEngine.textDecoration.overline=!1,this.__renderEngine.textDecoration.underline=!1),null!=t.lineThrough&&(this.__renderEngine.textDecoration.lineThrough=t.lineThrough),null!=t.overline&&(this.__renderEngine.textDecoration.overline=t.overline),null!=t.underline&&(this.__renderEngine.textDecoration.underline=t.underline))},enumerable:!0,configurable:!0}),Object.defineProperty(i.prototype,"devicePixelRatio",{get:function(){return null!=this.__renderEngine?this.__renderEngine.devicePixelRatio:null},set:function(t){null!=this.__renderEngine&&(this.__renderEngine.devicePixelRatio=t)},enumerable:!0,configurable:!0}),i.prototype.beginRender=function(){null!=this.__renderEngine&&this.__renderEngine.beginRender()},i.prototype.endRender=function(){null!=this.__renderEngine&&this.__renderEngine.endRender()},i.prototype.setViewportSize=function(t,e){null!=this.__renderEngine&&this.__renderEngine.setViewportSize(t,e)},i.prototype.beginTransform=function(){this.__transformRender.begin()},i.prototype.restoreTransform=function(){this.__transformRender.restore()},i.prototype.drawMultipleStrings=function(t,e,i,n,o,r,s,a,l){void 0===i&&(i="Left"),void 0===n&&(n="None"),void 0===o&&(o=null),void 0===r&&(r=null),void 0===s&&(s=null),void 0===a&&(a=0),void 0===l&&(l=null),this.__stringRender._draw(t,e,i,n,o,r,s,a,l)},i.prototype.measureMultipleStrings=function(t,e,i,n,o,r){return void 0===i&&(i="None"),void 0===n&&(n=null),void 0===o&&(o=null),void 0===r&&(r=null),this.__stringRender._measure(t,e,i,n,o,r)},i.prototype.startGroup=function(t,e,i){if(null!=this.__renderEngine)return this.__renderEngine.startGroup(t,e,i)},i.prototype.endGroup=function(){null!=this.__renderEngine&&this.__renderEngine.endGroup()},i.prototype.drawEllipse=function(t,e,i,n,o,r){null!=this.__renderEngine&&this.__renderEngine.drawEllipse(t,e,i,n,o,r)},i.prototype.drawRect=function(t,e,i,n,o,r,s){null!=this.__renderEngine&&0<i&&0<n&&this.__renderEngine.drawRect(t,e,i,n,o,r,s)},i.prototype.drawLine=function(t,e,i,n,o,r){if(null!=this.__renderEngine){if(t==i&&e==n)return null;this.__renderEngine.drawLine(t,e,i,n,o,r)}},i.prototype.drawLines=function(t,e,i,n,o){null!=this.__renderEngine&&this.__renderEngine.drawLines(t,e,i,n,o)},i.prototype.drawSplines=function(t,e,i,n,o){null!=this.__renderEngine&&this.__renderEngine.drawSplines(t,e,i,n,o)},i.prototype.drawPolygon=function(t,e,i,n,o){null!=this.__renderEngine&&this.__renderEngine.drawPolygon(t,e,i,n,o)},i.prototype.drawPieSegment=function(t,e,i,n,o,r,s,a){i<=0||null!=this.__renderEngine&&this.__renderEngine.drawPieSegment(t,e,i,n,o,r,s,a)},i.prototype.drawDonutSegment=function(t,e,i,n,o,r,s,a,l){null!=this.__renderEngine&&this.__renderEngine.drawDonutSegment(t,e,i,n,o,r,s,a,l)},i.prototype.drawString=function(t,e,i,n){t&&null!=this.__renderEngine&&this.__renderEngine.drawString(t,e,i,n)},i.prototype.drawStringRotated=function(t,e,i,n,o,r){null!=this.__renderEngine&&this.__renderEngine.drawStringRotated(t,e,i,n,o,r)},i.prototype.drawImage=function(t,e,i,n,o){null!=this.__renderEngine&&this.__renderEngine.drawImage(t,e,i,n,o)},i.prototype.measureString=function(t,e,i,n){return null!=this.__renderEngine?t?this.__renderEngine.measureString(t,e,i,n):new o.core.Size(0,0):null},i.prototype.addClipRect=function(t,e){null!=this.__renderEngine&&this.__renderEngine.addClipRect(t,e)},i}();o._Render=t}(dv||(dv={})),function(o){"use strict";function i(t,e){null!=e&&(null!=e.color&&(t.textFill=e.color),null!=e.fontSize&&(t.fontSize=e.fontSize),null!=e.fontFamily&&(t.fontFamily=e.fontFamily),null!=e.fontWeight&&(t.fontWeight=e.fontWeight),null!=e.fontStyle&&(t.fontStyle=e.fontStyle),null!=e.textDecoration&&(t.textDecoration=e.textDecoration))}function n(t){if("string"==typeof t)return t;if(null!=t){if(t.type==o.GradientType.Linear){var e=t;return new o.models.LinearGradientColor(e.angle,e.colorStops)}if(t.type==o.GradientType.Radial){e=t;var i=new o.core.Point(e.x0,e.y0),n=new o.core.Point(e.x1,e.y1);return new o.models.RadialGradientColor(i,e.r0,n,e.r1,e.colorStops)}o._assertDebug(function(){return!0})}else o._assertDebug(function(){return!0})}o._applyTextStyle=i,o._applyLabelStyle=function(t,e){i(t,e)},o._applyLineStyle=function(t,e){null!=e&&(null!=e.opacity&&(t.strokeOpacity=e.opacity),null!=e.stroke&&(t.stroke=n(e.stroke)),null!=e.strokeWidth&&(t.strokeWidth=e.strokeWidth),null!=e.strokeDasharray&&(t.strokeDasharray=e.strokeDasharray))},o._applyLineStyleFromGStyle=function(t,e){null!=e&&(null!=e.stroke&&(t.stroke=n(e.stroke)),null!=e.strokeWidth&&(t.strokeWidth=e.strokeWidth),null!=e.strokeDasharray&&(t.strokeDasharray=e.strokeDasharray))},o._applyDataPointStyle=function(t,e){null!=e&&(null!=e.fill&&(t.fill=n(e.fill)),null!=e.opacity&&(t.fillOpacity=e.opacity),null!=e.stroke&&(t.stroke=n(e.stroke)),null!=e.strokeOpacity&&(t.strokeOpacity=e.strokeOpacity),null!=e.strokeWidth&&(t.strokeWidth=e.strokeWidth),null!=e.strokeDasharray&&(t.strokeDasharray=e.strokeDasharray))},o._applyDataPointSymbolStyle=function(t,e){null!=e&&(null!=e.symbolFill&&(t.fill=n(e.symbolFill)),null!=e.symbolOpacity&&(t.fillOpacity=e.symbolOpacity),null!=e.symbolStroke&&(t.stroke=n(e.symbolStroke)),null!=e.symbolStrokeOpacity&&(t.strokeOpacity=e.symbolStrokeOpacity),null!=e.symbolStrokeWidth&&(t.strokeWidth=e.symbolStrokeWidth),null!=e.symbolStrokeDasharray&&(t.strokeDasharray=e.symbolStrokeDasharray))},o._applyNewStyle=function(t,e){null!=e&&(null!=e.fill&&(t.fill=e.fill),null!=e.fillOpacity&&(t.fillOpacity=e.fillOpacity),null!=e.stroke&&(t.stroke=e.stroke),null!=e.strokeOpacity&&(t.strokeOpacity=e.strokeOpacity),null!=e.strokeWidth&&(t.strokeWidth=e.strokeWidth),null!=e.strokeDasharray&&(t.strokeDasharray=e.strokeDasharray))},o._applyBackgroundColor=function(t,e){null!=e&&(t.fill=n(e))},o._applyStrokeColor=function(t,e){null!=e&&(t.stroke=e)},o._applyFillColor=function(t,e){null!=e&&(t.fill=e)},o._applyGStyle=function(t,e){null!=e&&(null!=e.fill&&(t.fill=n(e.fill)),null!=e.stroke&&(t.stroke=n(e.stroke)),null!=e.strokeWidth&&(t.strokeWidth=e.strokeWidth),null!=e.strokeDasharray&&(t.strokeDasharray=e.strokeDasharray))},o._applyStyle=function(t,e){null!=e&&(null!=e.opacity&&(t.fillOpacity=e.opacity),null!=e.fill&&(t.fill=n(e.fill)),null!=e.stroke&&(t.stroke=n(e.stroke)),null!=e.strokeWidth&&(t.strokeWidth=e.strokeWidth),null!=e.strokeDasharray&&(t.strokeDasharray=e.strokeDasharray),null!=e.color&&(t.textFill=e.color),null!=e.fontSize&&(t.fontSize=e.fontSize),null!=e.fontFamily&&(t.fontFamily=e.fontFamily),null!=e.fontWeight&&(t.fontWeight=e.fontWeight),null!=e.fontStyle&&(t.fontStyle=e.fontStyle),null!=e.textDecoration&&(t.textDecoration=e.textDecoration))},o._fillColorFromOption=n,o._cssColorFromOption=function(t){if("string"==typeof t)return t;t instanceof o.options._LinearGradientOption||t instanceof o.options._RadialGradientOption||o._assertDebug(function(){return!0})}}(dv||(dv={})),function(t){"use strict";(dv||(dv={}))._fillRectangle=function(t,e){e.width<=0||e.height<=0||(null!=t.fill&&"transparent"!=t.fill&&"none"!=t.fill||null!=t.strokeWidth&&0<t.strokeWidth)&&t.drawRect(e.left+t.strokeWidth/2,e.top+t.strokeWidth/2,e.width-t.strokeWidth,e.height-t.strokeWidth)}}(),function(p){"use strict";var t=function(){function t(){}return t.renderText=function(t,e,i,n,o,r,s,a,l){var _=t.measureString(e,r,s,a),u=i.x,h=i.y;switch(n){case 1:u-=.5*_.width;break;case 2:u-=_.width}switch(o){case 1:h+=.5*_.height;break;case 0:h+=_.height}var c=new p.core.Rect(u,h-_.height,_.width,_.height);return l?l(c)?(t.drawString(e,new p.core.Point(u,h),r,a),c):null:(t.drawString(e,new p.core.Point(u,h),r,a),c)},t.renderRotatedText=function(t,e,i,n,o,r,s,a,l,_){var u=t.measureString(e,a,l,_),h=i.x,c=i.y;switch(n){case 1:h-=.5*u.width;break;case 2:h-=u.width}switch(o){case 1:c+=.5*u.height;break;case 0:c+=u.height}t.drawStringRotated(e,new p.core.Point(h,c),r,s,a,_)},t}();p._RenderUtils=t}(dv||(dv={})),function(c){"use strict";var t=function(){function t(t,e){this.k=.002,this._a=[],this._b=[],this._c=[],this._d=[],this.m=[[-.5,1.5,-1.5,.5],[1,-2.5,2,-.5],[-.5,0,.5,0],[0,1,0,0]],this._x=t,this._y=e;var i=this._len=Math.min(t.length,e.length);if(3<=i)for(var n=0;n<i-1;n++){var o=0==n?new c.core.Point(t[n],e[n]):new c.core.Point(t[n-1],e[n-1]),r=new c.core.Point(t[n],e[n]),s=new c.core.Point(t[n+1],e[n+1]),a=n==i-2?new c.core.Point(t[n+1],e[n+1]):new c.core.Point(t[n+2],e[n+2]),l=new c.core.Point,_=new c.core.Point,u=new c.core.Point,h=new c.core.Point;l.x=o.x*this.m[0][0]+r.x*this.m[0][1]+s.x*this.m[0][2]+a.x*this.m[0][3],_.x=o.x*this.m[1][0]+r.x*this.m[1][1]+s.x*this.m[1][2]+a.x*this.m[1][3],u.x=o.x*this.m[2][0]+r.x*this.m[2][1]+s.x*this.m[2][2]+a.x*this.m[2][3],h.x=o.x*this.m[3][0]+r.x*this.m[3][1]+s.x*this.m[3][2]+a.x*this.m[3][3],l.y=o.y*this.m[0][0]+r.y*this.m[0][1]+s.y*this.m[0][2]+a.y*this.m[0][3],_.y=o.y*this.m[1][0]+r.y*this.m[1][1]+s.y*this.m[1][2]+a.y*this.m[1][3],u.y=o.y*this.m[2][0]+r.y*this.m[2][1]+s.y*this.m[2][2]+a.y*this.m[2][3],h.y=o.y*this.m[3][0]+r.y*this.m[3][1]+s.y*this.m[3][2]+a.y*this.m[3][3],this._a.push(l),this._b.push(_),this._c.push(u),this._d.push(h)}}return t.prototype.calculatePoint=function(t){var e=Math.floor(t);e<0&&(e=0),e>this._len-2&&(e=this._len-2);var i=t-e,n=((this._a[e].x*i+this._b[e].x)*i+this._c[e].x)*i+this._d[e].x,o=((this._a[e].y*i+this._b[e].y)*i+this._c[e].y)*i+this._d[e].y;return new c.core.Point(n,o)},t.prototype.calculate=function(t,e){if(void 0===t&&(t=1),void 0===e&&(e=1),this._len<=2)return{xs:this._x,ys:this._y};var i=[],n=[],o=this.calculatePoint(0);i.push(o.x),n.push(o.y);for(var r=this._len*this.k,s=3*t,a=3*e,l=null,_=r;_<=this._len-1;_+=r)l=this.calculatePoint(_),(Math.abs(o.x-l.x)>=s||Math.abs(o.y-l.y)>=a)&&(i.push(l.x),n.push(l.y),o=l);return i[i.length-1]==l.x&&n[n.length-1]==l.y||(i.push(l.x),n.push(l.y)),{xs:i,ys:n}},t}();c._Spline=t}(dv||(dv={})),function(w){"use strict";var t=function(){function t(t){this.__render=t}return t.prototype._draw=function(t,e,i,n,o,r,s,a,l){if(void 0===i&&(i="Left"),void 0===n&&(n="None"),void 0===o&&(o=null),void 0===r&&(r=null),void 0===s&&(s=null),void 0===a&&(a=0),void 0===l&&(l=null),null==l&&(l=new w.core.Point(e.left+.5*e.width,e.top+.5*e.height)),"None"==n){if("Left"==i)0==a?this.__render.drawString(t,new w.core.Point(e.left,e.bottom),o,s):this.__render.drawStringRotated(t,new w.core.Point(e.left,e.bottom),l,a,o,s);else if("Center"==i){var _=this.__render.measureString(t,o,r,s);0==a?this.__render.drawString(t,new w.core.Point(e.left+(e.width-_.width)/2,e.bottom),o,s):this.__render.drawStringRotated(t,new w.core.Point(e.left+(e.width-_.width)/2,e.bottom),l,a,o,s)}else if("Right"==i){_=this.__render.measureString(t,o,r,s);0==a?this.__render.drawString(t,new w.core.Point(e.left+e.width-_.width,e.bottom),o,s):this.__render.drawStringRotated(t,new w.core.Point(e.left+e.width-_.width,e.bottom),l,a,o,s)}}else if("Wrap"==n)for(var u=this._measureMultipleLines(t,e.width,o,r,s),h=e.top,c=0,p=u;c<p.length;c++){var f=p[c];if("Left"==i)0==a?this.__render.drawString(f.text,new w.core.Point(e.left,h+f.size.height),o,s):this.__render.drawStringRotated(f.text,new w.core.Point(e.left,h+f.size.height),l,a,o,s);else if("Center"==i)0==a?this.__render.drawString(f.text,new w.core.Point(e.left+(e.width-f.size.width)/2,h+f.size.height),o,s):this.__render.drawStringRotated(f.text,new w.core.Point(e.left+(e.width-f.size.width)/2,h+f.size.height),l,a,o,s);else if("Right"==i){_=this.__render.measureString(t,o,r,s);0==a?this.__render.drawString(f.text,new w.core.Point(e.left+e.width-f.size.width,h+f.size.height),o,s):this.__render.drawStringRotated(f.text,new w.core.Point(e.left+e.width-f.size.width,h+f.size.height),l,a,o,s)}h+=f.size.height}else if("Ellipsis"==n){f=t;var d=this._measureFirstLine(f,e.width,o,r,s,!0);if(d.position<f.length){for(var g=this.__render.measureString(".",o,r,s),y=1,m=0;m<3&&!(e.width-y*g.width<0);m++)y=3<y+1?y:y+1;var v=e.width-g.width*y;f=0<v?(0<(d=this._measureFirstLine(f,v,o,r,s,!0)).position?t.substring(0,d.position):"")+new Array(y+1).join("."):new Array(y+1).join(".")}if("Left"==i)0==a?this.__render.drawString(f,new w.core.Point(e.left,e.bottom),o,s):this.__render.drawStringRotated(f,new w.core.Point(e.left,e.bottom),l,a,o,s);else if("Center"==i){_=this.__render.measureString(f,o,r,s);0==a?this.__render.drawString(f,new w.core.Point(e.left+(e.width-_.width)/2,e.bottom),o,s):this.__render.drawStringRotated(f,new w.core.Point(e.left+(e.width-_.width)/2,e.bottom),l,a,o,s)}else if("Right"==i){_=this.__render.measureString(f,o,r,s);0==a?this.__render.drawString(f,new w.core.Point(e.left+e.width-_.width,e.bottom),o,s):this.__render.drawStringRotated(f,new w.core.Point(e.left+e.width-_.width,e.bottom),l,a,o,s)}}},t.prototype._measure=function(t,e,i,n,o,r){if(void 0===i&&(i="None"),void 0===n&&(n=null),void 0===o&&(o=null),void 0===r&&(r=null),"None"==i)return this.__render.measureString(t,n,o,r);if("Wrap"==i){for(var s=this._measureMultipleLines(t,e,n,o,r),a=new w.core.Size(0,0),l=0,_=s;l<_.length;l++){var u=_[l];a.height+=u.size.height,a.width=Math.max(a.width,u.size.width)}return a}if("Ellipsis"==i){var h=this._measureFirstLine(t,e,n,o,r,!0);if(h.position<t.length){for(var c=this.__render.measureString(".",n,o,r),p=1,f=0;f<3&&!(e-p*c.width<0);f++)p=3<p+1?p:p+1;0<(e-=c.width*p)?((h=this._measureFirstLine(t,e,n,o,r,!0)).size.height=c.height,h.size.width+=c.width*p):(h.size.height=c.height,h.size.width=c.width*p)}return h.size}},t.prototype._measureMultipleLines=function(t,e,i,n,o){if(void 0===i&&(i=null),void 0===n&&(n=null),void 0===o&&(o=null),t.length<=0)return[];for(var r=[];0<t.length;){var s=this._measureFirstLine(t,e,i,n,o);r.push({text:t.substring(0,s.position),size:s.size}),t=t.substring(s.position)}return r},t.prototype._measureFirstLine=function(t,e,i,n,o,r){void 0===i&&(i=null),void 0===n&&(n=null),void 0===o&&(o=null),void 0===r&&(r=!1);var s={position:0,size:new w.core.Size(0,0)},a=t.length;do{var l=t.substring(0,s.position+a),_=this.__render.measureString(l,i,n,o);if(_.width<=e)s.position=s.position+a,s.size=_,a=t.length-s.position;else{if(1==a)break;0<a&&(a=Math.floor(a/2))<1&&(a=1)}}while(0<a);return s.position<=0&&!r&&(s.position=1,s.size=this.__render.measureString(t.substring(0,s.position),i,n,o)),s},t}();w._StringRender=t}(dv||(dv={})),function(e){"use strict";var t=function(){function t(){}return Object.defineProperty(t.prototype,"fillOpacity",{get:function(){return this.__fillOpacity},set:function(t){this.__fillOpacity=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"strokeOpacity",{get:function(){return this.__strokeOpacity},set:function(t){this.__strokeOpacity=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"strokeWidth",{get:function(){return this.__strokeWidth},set:function(t){this.__strokeWidth=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"strokeDasharray",{get:function(){return this.__strokeDasharray},set:function(t){this.__strokeDasharray=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"textFill",{get:function(){return this.__textFill},set:function(t){this.__textFill=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"fontSize",{get:function(){return this.__fontSize},set:function(t){this.__fontSize=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"fontFamily",{get:function(){return this.__fontFamily},set:function(t){this.__fontFamily=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"fontWeight",{get:function(){return this.__fontWeight},set:function(t){this.__fontWeight=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"fontStyle",{get:function(){return this.__fontStyle},set:function(t){this.__fontStyle=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"textDecoration",{get:function(){return this.__textDecoration},set:function(t){this.__textDecoration=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"fill",{get:function(){return null!=this.__fillOption&&(this.__fill=e._fillColorFromOption(this.__fillOption),this.__fillOption=null),this.__fill},set:function(t){this.__fill=t,this.__fillOption=null},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"stroke",{get:function(){return null!=this.__strokeOption&&(this.__stroke=e._fillColorFromOption(this.__strokeOption),this.__strokeOption=null),this.__stroke},set:function(t){this.__stroke=t,this.__strokeOption=null},enumerable:!0,configurable:!0}),t.prototype._mergeDataPointStyle=function(t){null!=t&&(null!=t.fill&&this._setFill(t.fill),null!=t.opacity&&(this.__fillOpacity=t.opacity),null!=t.stroke&&this._setStroke(t.stroke),null!=t.strokeOpacity&&(this.__strokeOpacity=t.strokeOpacity),null!=t.strokeWidth&&(this.__strokeWidth=t.strokeWidth),null!=t.strokeDasharray&&(this.__strokeDasharray=t.strokeDasharray))},t.prototype._mergeTextStyle=function(t){null!=t&&(null!=t.color&&(this.__textFill=t.color),null!=t.fontSize&&(this.__fontSize=t.fontSize),null!=t.fontFamily&&(this.__fontFamily=t.fontFamily),null!=t.fontWeight&&(this.__fontWeight=t.fontWeight),null!=t.fontStyle&&(this.__fontStyle=t.fontStyle),null!=t.textDecoration&&(this.__textDecoration=t.textDecoration))},t.prototype._mergeLabelStyle=function(t){this._mergeTextStyle(t)},t.prototype._mergeLineStyle=function(t){null!=t&&(null!=t.opacity&&(this.__strokeOpacity=t.opacity),null!=t.stroke&&this._setStroke(t.stroke),null!=t.strokeWidth&&(this.__strokeWidth=t.strokeWidth),null!=t.strokeDasharray&&(this.__strokeDasharray=t.strokeDasharray))},t.prototype._mergeLineStyleFromGStyle=function(t){null!=t&&(null!=t.stroke&&this._setStroke(t.stroke),null!=t.strokeWidth&&(this.__strokeWidth=t.strokeWidth),null!=t.strokeDasharray&&(this.__strokeDasharray=t.strokeDasharray))},t.prototype._mergeDataPointSymbolStyle=function(t){null!=t&&(null!=t.symbolFill&&this._setFill(t.symbolFill),null!=t.symbolOpacity&&(this.__fillOpacity=t.symbolOpacity),null!=t.symbolStroke&&this._setStroke(t.symbolStroke),null!=t.symbolStrokeOpacity&&(this.__strokeOpacity=t.symbolStrokeOpacity),null!=t.symbolStrokeWidth&&(this.__strokeWidth=t.symbolStrokeWidth),null!=t.symbolStrokeDasharray&&(this.__strokeDasharray=t.symbolStrokeDasharray))},t.prototype._mergeBackgroundColor=function(t){null!=t&&this._setFill(t)},t.prototype._mergeStrokeColor=function(t){null!=t&&(this.stroke=t)},t.prototype._mergeFillColor=function(t){null!=t&&(this.fill=t)},t.prototype._mergeGStyle=function(t){null!=t&&(null!=t.fill&&this._setFill(t.fill),null!=t.stroke&&this._setStroke(t.stroke),null!=t.strokeWidth&&(this.__strokeWidth=t.strokeWidth),null!=t.strokeDasharray&&(this.__strokeDasharray=t.strokeDasharray))},t.prototype.applyRender=function(t){null!=this.__fillOpacity&&(t.fillOpacity=this.__fillOpacity),null!=this.__strokeOpacity&&(t.strokeOpacity=this.__strokeOpacity),null!=this.fill&&(t.fill=this.fill),null!=this.stroke&&(t.stroke=this.stroke),null!=this.__strokeWidth&&(t.strokeWidth=this.__strokeWidth),null!=this.__strokeDasharray&&(t.strokeDasharray=this.__strokeDasharray),null!=this.__textFill&&(t.textFill=this.__textFill),null!=this.__fontSize&&(t.fontSize=this.__fontSize),null!=this.__fontFamily&&(t.fontFamily=this.__fontFamily),null!=this.__fontWeight&&(t.fontWeight=this.__fontWeight),null!=this.__fontStyle&&(t.fontStyle=this.__fontStyle),null!=this.__textDecoration&&(t.textDecoration=this.__textDecoration)},t.prototype._setFill=function(t){"string"==typeof t?(this.__fill=t,this.__fillOption=null):(this.__fillOption=t,this.__fill=null)},t.prototype._setStroke=function(t){"string"==typeof t?(this.__stroke=t,this.__strokeOption=null):(this.__strokeOption=t,this.__stroke=null)},t}();e._Style=t}(dv||(dv={})),function(i){"use strict";var t=function(){function t(t){this.__transforms=[],this.__render=t}return t.prototype.begin=function(){this.__transforms.push({fillOpacity:this.__render.fillOpacity,strokeOpacity:this.__render.strokeOpacity,fill:this.__render.fill,stroke:this.__render.stroke,strokeWidth:this.__render.strokeWidth,strokeDasharray:this.__render.strokeDasharray,textFill:this.__render.textFill,fontSize:this.__render.fontSize,fontFamily:this.__render.fontFamily,fontWeight:this.__render.fontWeight,fontStyle:this.__render.fontStyle,textDecoration:i.core.cloneDeep(this.__render.textDecoration)})},t.prototype.restore=function(){var t=this;if(i._assertDebug(function(){return 0<t.__transforms.length}),0<this.__transforms.length){var e=this.__transforms.pop();this.__render.fillOpacity=e.fillOpacity,this.__render.strokeOpacity=e.strokeOpacity,this.__render.fill=e.fill,this.__render.stroke=e.stroke,this.__render.strokeWidth=e.strokeWidth,this.__render.strokeDasharray=e.strokeDasharray,this.__render.textFill=e.textFill,this.__render.fontSize=e.fontSize,this.__render.fontFamily=e.fontFamily,this.__render.fontWeight=e.fontWeight,this.__render.fontStyle=e.fontStyle,this.__render.textDecoration=e.textDecoration}},t}();i._TransformRender=t}(dv||(dv={})),dv||(dv={}),function(t){t.models||(t.models={})}(dv||(dv={})),function(r){"use strict";var t=function(){function t(t,e){this._swapAxes=t,this._lineAspect=e}return t.prototype.convert=function(t){if(1<t.length){if(this._swapAxes&&this._lineAspect==r.LineAspect.StepLeft||!this._swapAxes&&this._lineAspect==r.LineAspect.StepRight){(n=[]).push(t[0]);for(var e=1;e<t.length;e++)n.push(new r.core.Point(t[e].x,t[e-1].y)),n.push(new r.core.Point(t[e].x,t[e].y));return n}if(this._swapAxes&&this._lineAspect==r.LineAspect.StepRight||!this._swapAxes&&this._lineAspect==r.LineAspect.StepLeft){(n=[]).push(t[0]);for(e=1;e<t.length;e++)n.push(new r.core.Point(t[e-1].x,t[e].y)),n.push(new r.core.Point(t[e].x,t[e].y));return n}if(this._swapAxes&&this._lineAspect==r.LineAspect.StepCenter){(n=[]).push(t[0]);for(e=1;e<t.length;e++){var i=t[e-1].y+(t[e].y-t[e-1].y)/2;n.push(new r.core.Point(t[e-1].x,i)),n.push(new r.core.Point(t[e].x,i)),n.push(new r.core.Point(t[e].x,t[e].y))}return n}if(this._swapAxes||this._lineAspect!=r.LineAspect.StepCenter)return t;var n;(n=[]).push(t[0]);for(e=1;e<t.length;e++){var o=t[e-1].x+(t[e].x-t[e-1].x)/2;n.push(new r.core.Point(o,t[e-1].y)),n.push(new r.core.Point(o,t[e].y)),n.push(new r.core.Point(t[e].x,t[e].y))}return n}return t},t}();r._LineAspectConverter=t}(dv||(dv={})),function(f){"use strict";var t=function(){function p(){}return p.getRect=function(t,e){return new f.core.Rect(t.x,t.y,t.x+e.width,t.y+e.height)},p.getTextByMaxLength=function(t,e,i,n,o,r){for(var s=t.measureString(e,r,o,n);s.width>i&&0<e.length;)e=e.substr(0,e.length-1),s=t.measureString(e,r,o,n);return e},p.binarySearch=function(t,e,i,n,o){if(void 0===o&&(o=!0),0<t.length&&n)if(2<=i-e){var r,s=e,a=Math.floor((i+e)/2),l=i;o&&(n(t[s],s,NaN,NaN),n(t[l],l,NaN,NaN)),(r=n(t[a],a,s,l)).left&&p.binarySearch(t,s,a,n,!1),r.right&&p.binarySearch(t,a,l,n,!1)}else i-e==1?(n(t[e],e,NaN,NaN),n(t[i],i,NaN,NaN)):e==i&&n(t[e],0,NaN,NaN)},p.mergeRect=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];var i=new f.core.Rect(0,0,0,0);return i.left=Math.min.apply(this,t.map(function(t){return t.left})),i.top=Math.min.apply(this,t.map(function(t){return t.top})),i.width=Math.max.apply(this,t.map(function(t){return t.right}))-i.left,i.height=Math.max.apply(this,t.map(function(t){return t.bottom}))-i.top,i},p.isMixed=function(t,e){var i=!1;return Math.abs((t.left+t.right)/2-(e.left+e.right)/2)<(t.right+e.right-t.left-e.left)/2&&Math.abs((t.top+t.bottom)/2-(e.top+e.bottom)/2)<(t.bottom+e.bottom-t.top-e.top)/2&&(i=!0),i},p.parseMargin=function(t){var e={};if(f.core.isNumber(t)&&!isNaN(t))e.top=e.bottom=e.left=e.right=f.core.asNumber(t);else if(f.core.isString(t)){var i=f.core.asString(t,!0).split(" ",4),n=NaN,o=NaN,r=NaN,s=NaN;i&&(4==i.length?(n=parseFloat(i[0]),s=parseFloat(i[1]),o=parseFloat(i[2]),r=parseFloat(i[3])):2==i.length?(n=o=parseFloat(i[0]),r=s=parseFloat(i[1])):1==i.length&&(n=o=r=s=parseFloat(i[1])),isNaN(n)||(e.top=n),isNaN(o)||(e.bottom=o),isNaN(r)||(e.left=r),isNaN(s)||(e.right=s))}return e},p.resetRect=function(t,e,i,n,o){t.left=e,t.top=i,t.width=n,t.height=o},p.translateRect=function(t,e,i){t.left+=e,t.top+=i},p.translateRectX=function(t,e){p.translateRect(t,e,0)},p.translateRectY=function(t,e){p.translateRect(t,0,e)},p.isNil=function(t){return t.right-t.left<=0||t.bottom-t.top<=0},p.IsPointInPolygon=function(t,e){for(var i=e[0].x,n=e[0].x,o=e[0].y,r=e[0].y,s=1;s<e.length;s++){var a=e[s];i=Math.min(a.x,i),n=Math.max(a.x,n),o=Math.min(a.y,o),r=Math.max(a.y,r)}if(t.x<i||t.x>n||t.y<o||t.y>r)return!1;for(var l=!1,_=(s=0,e.length-1);s<e.length;_=s++)e[s].y>t.y!=e[_].y>t.y&&t.x<(e[_].x-e[s].x)*(t.y-e[s].y)/(e[_].y-e[s].y)+e[s].x&&(l=!l);return l},p.IsPointInPolygon2=function(t,e,i){for(var n=e[0],o=e[0],r=i[0],s=i[0],a=1;a<e.length;a++)n=Math.min(e[a],n),o=Math.max(e[a],o),r=Math.min(i[a],r),s=Math.max(i[a],s);if(t.x<n||t.x>o||t.y<r||t.y>s)return!1;for(var l=!1,_=(a=0,e.length-1);a<e.length;_=a++)i[a]>t.y!=i[_]>t.y&&t.x<(e[_]-e[a])*(t.y-i[a])/(i[_]-i[a])+e[a]&&(l=!l);return l},p.Area=function(t,e){for(var i=0,n=0;n<t.length;n++)n<t.length-1?i+=t[n]*e[n+1]-t[n+1]*e[n]:i+=t[n]*e[0]-t[0]*e[n];return i/=2},p.CenterOfPolygon=function(t,e){for(var i=0,n=0,o=0,r=1;r<=t.length;r++){var s=t[r%t.length],a=e[r%e.length],l=t[(r-1)%t.length],_=e[(r-1)%e.length],u=(s*_-a*l)/2;i+=u,n+=u*(s+l)/3,o+=u*(a+_)/3}return n/=i,o/=i,new f.core.Point(n,o)},p.sort=function(t,e){for(var i,n=0;n<t.length;++n)for(var o=0;o<t.length;++o)e(t[o],t[n])&&(i=t[o],t[o]=t[n],t[n]=i)},p.scale=function(t,e){if(0<e){var i=t.width*e,n=t.height*e;t.left-=(i-t.width)/2,t.top-=(n-t.height)/2,t.width=i,t.height=n}return t},p.pointToLine=function(t,e,i,n,o,r){var s,a,l;if(s=p._lineSpace(t,e,i,n),a=p._lineSpace(t,e,o,r),(l=p._lineSpace(i,n,o,r))+a==s)return 0;if(s<=1e-6)return a;if(s*s+a*a<=l*l)return a;if(s*s+l*l<=a*a)return l;var _=(s+a+l)/2;return 2*Math.sqrt(_*(_-s)*(_-a)*(_-l))/s},p._lineSpace=function(t,e,i,n){return Math.sqrt((t-i)*(t-i)+(e-n)*(e-n))},p.HashCode=function(t){if(null==t)return"";if(t instanceof Object){var e="";for(var i in t)e=e+p.HashCode(i)+p.HashCode(t[i]);return p.HashCodeString(e)}return"string"==typeof t?p.HashCodeString(t):"number"==typeof t?p.HashCodeString("number"+t):"boolean"==typeof t?p.HashCodeString("boolean"+t):null},p.HashCodeString=function(t){var e,i=0;if(null==t||0===t.length)return i+"";for(e=0;e<t.length;++e)i=(i<<5)-i+t.charCodeAt(e),i|=0;return i+""},p.SecondaryIdentityHash=function(t){return t+=t<<15^4294954365,t^=t>>>10,t+=t<<3,t^=t>>>6,(t+=(t<<2)+(t<<14))^t>>>16},p.isChildOf=function(t,e,r){var i=function(t,e,i){if(e.length<i.length)return null;for(var n=!1,o=0;o<i.length;o++){if(null==r||!r(e[t+o],i[o])||p.equals(e[t+o],i[o])){n=!1;break}n=!0}return n?{start:t,end:t+i.length-1}:null};if(t.length<e.length)return null;if(t.length==e.length)return i(0,t,e);for(var n=0;n<t.length;n++){var o=i(n,t,e);if(null!=o)return o}return null},p.findMaxSameArrayOf=function(t,e,o){for(var r=t.length>=e.length,s=r?t:e,a=r?e:t,l=0,_=0,u=0,h=0,c=0,i=function(n){for(var t=function(t){var e=p.isChildOf(s,a.slice(n,t+1),o);if(null!=e){var i=t+1-n;l<i&&(f._assertDebug(function(){return t-n==e.end-e.start}),l=i,_=r?n:e.start,u=r?t:e.end,h=r?e.start:n,c=r?e.end:t)}},e=n;e<a.length;e++)t(e)},n=0;n<a.length;n++)i(n);return 0!=l?{arrayStart:h,arrayEnd:c,otherStart:_,otherEnd:u}:null},p.equals=function(t,e){return null!=t.equals&&t.equals instanceof Function?t.equals(e):t===e},p.createPtsFromRect=function(t,e){for(var i=[],n=[],o=[new f.core.Point(t.left,t.top),new f.core.Point(t.right,t.top),new f.core.Point(t.right,t.bottom),new f.core.Point(t.left,t.bottom),new f.core.Point(t.left,t.top)],r=0;r<o.length-1;++r)for(var s=o[r],a=o[r+1],l=0;l<e/4;++l)i.push(s.x+(a.x-s.x)/(e/4)*l),n.push(s.y+(a.y-s.y)/(e/4)*l);return{xs:i,ys:n}},p.createPtsFromCircle=function(t,e,i){for(var n=[],o=[],r=Math.PI,s=0;s<i;++s){var a=360/i*s/r,l=Math.sin(a)*t+e.x,_=Math.cos(a)*t+e.y;n.push(l),o.push(_)}return{xs:n,ys:o}},p.createPtsFromRadialBar=function(t,e,i,n,o,r){for(var s=[],a=[],l=[],_=[],u=(Math.PI,(e-t)/((r-2)/2)),h=t;h<e;h+=u){var c=Math.cos(h)*i+o.x,p=Math.sin(h)*i+o.y,f=Math.cos(h)*n+o.x,d=Math.sin(h)*n+o.y;s.push(c),a.push(p),l.push(f),_.push(d)}return s.unshift(l[0]),a.unshift(_[0]),l.push(s[s.length-1]),_.push(a[a.length-1]),{xs:s=s.concat(l.reverse()),ys:a=a.concat(_.reverse())}},p.createPtsFromPyologon=function(t,e){return null},p.__createAnimationEase=function(t){var e=null;if("number"==typeof t){var i=f.AnimationEasing[t];"string"==typeof i&&(e=f._AnimationEase[i])}return e},p.applyMixins=function(t,e){for(var i=0;i<e.length;i++)for(var n=e[i],o=Object.getOwnPropertyNames(n.prototype),r=0;r<o.length;r++){var s=o[r];"constructor"!==s&&(t.prototype[s]=n.prototype[s])}},p.sameValue=function(t,e){return t==e||t instanceof Date&&e instanceof Date&&t.getTime()==e.getTime()},p}();f._Util=t}(dv||(dv={})),function(t){"use strict";var e=function(){function i(){}return i.PercentileINC=function(t,e){if(e<0||1<e)return NaN;e*=100,t.sort(function(t,e){return t-e});var i,n=e/100*(t.length-1);if(Math.floor(n)==n)i=t[n];else{var o=Math.floor(n),r=n-o;i=t[o]+(t[o+1]-t[o])*r}return i},i.PercentileEXC=function(t,e){var i=t.sort(function(t,e){return t-e}),n=e*(t.length+1)-1,o=Math.floor(n);return i[o]+(i[o+1]-i[o])*(n-o)},i.Sum=function(t){return 0===t.length?0:t.reduce(function(t,e){return t+e})},i.Average=function(t){var e=t.filter(function(t){return null!=t});return 0==e.length?0:i.Sum(e)/e.length},i.Max=function(t){return Math.max.apply(Math,t)},i.Min=function(t){return Math.min.apply(Math,t)},i.Median=function(t){if(t&&0<t.length){var e=[].concat(t);e.sort(function(t,e){return e-t});var i=e.length-1;return(e[Math.floor(i/2)]+e[Math.round(i/2)])/2}return NaN},i.Count=function(t){return t.length},i}();t.Statics=e}(dv||(dv={})),function(e){"use strict";var t=function(){function t(){this.__visible=!0,this.__hover=!1,this.__preparingAnimation=!1,this.opacity=null,this.__rectangle=new e.core.Rect(0,0,0,0)}return t.prototype._rectangle=function(t){if(arguments.length<=0)return this.__rectangle;this.__rectangle=t},t.prototype._visible=function(t){if(arguments.length<=0)return this.__visible;this.__visible!=t&&(this.__visible=t)},t.prototype._hover=function(t){if(arguments.length<=0)return this.__hover;this.__hover!=t&&(this.__hover=t)},t.prototype._className=function(){return null},t.prototype._clipId=function(){return null},t.prototype._layout=function(t,e,i){},t.prototype._render=function(t,e){if(this._visible()||null!=this.animation&&!this.animation.isAniamtionEnd()){var i=this._className();null!=i?(t.startGroup(i),this._renderContent(t,e),t.endGroup()):this._renderContent(t,e)}},t.prototype._hitTest=function(t){return null},t.prototype._renderContent=function(t,e){},t.prototype.__startAnimation=function(t){},t.prototype.__getUpdateAnimation=function(t){return null},t}();e._View=t}(dv||(dv={})),function(y){"use strict";var t=function(i){function t(t){var e=i.call(this)||this;return e.__lines=t,e.__rotatedRectangle=new y.models._RotatedRectangle(0,0,0,0,0),e}return __extends(t,i),t.prototype.flipping=function(){return!0},t.prototype._paddings=function(){return new y.options._PaddingOption(y.__Constant_Core_LABEL_PADDING)},t.prototype._overflow=function(){return y.TextOverflow.Clip},t.prototype._overflowRenderString=function(){switch(this._overflow()){case y.TextOverflow.Clip:return"None";case y.TextOverflow.Ellipsis:return"Ellipsis";case y.TextOverflow.Wrap:return"Wrap"}return"None"},t.prototype._rotatedRectangle=function(t){if(arguments.length<=0)return this.__rotatedRectangle;this.__rotatedRectangle.equals(t)||(this.__rotatedRectangle=t)},t.prototype._lines=function(){return this.__lines},t.prototype._renderContent=function(t,e){t.beginTransform(),this._applyBorderStyle(t),this._applyBackgroundStyle(t);var i=this._rotatedRectangle();(null!=t.fill&&"transparent"!=t.fill&&"none"!=t.fill||null!=t.strokeWidth&&0<t.strokeWidth)&&(Math.abs(i.angle)<y.__Constant_Precision?t.drawRect(i.center.x-i.size.width/2+t.strokeWidth/2,i.center.y-i.size.height/2+t.strokeWidth/2,i.size.width-t.strokeWidth,i.size.height-t.strokeWidth):t.drawPolygon([i.leftTop.x,i.rightTop.x,i.rightBottom.x,i.leftBottom.x],[i.leftTop.y,i.rightTop.y,i.rightBottom.y,i.leftBottom.y]),i=new y.models._RotatedRectangle(i.center.x,i.center.y,i.size.width-2*t.strokeWidth,i.size.height-2*t.strokeWidth,i.angle));var n=this._paddings();i=new y.models._RotatedRectangle(i.center.x+(n.left-n.right)/2,i.center.y+(n.top-n.bottom)/2,i.size.width-n.left-n.right,i.size.height-n.top-n.bottom,i.angle),this._applyTextStyle(t);for(var o=this._overflowRenderString(),r=new y.core.Size(0,0),s=0,a=this._lines();s<a.length;s++){if(null!=(g=a[s])&&0<g.length){var l=t.measureMultipleStrings(g,i.size.width,o);r.height+=l.height}}if(Math.abs(i.angle)<y.__Constant_Precision)for(var _=new y.core.Rect(i.center.x-i.size.width/2,i.center.y-i.size.height/2,i.size.width-2*t.strokeWidth,r.height),u=0,h=this._lines();u<h.length;u++){if(null!=(g=h[u])&&0<g.length){l=t.measureMultipleStrings(g,i.size.width,o);_=new y.core.Rect(_.left,_.top,_.width,l.height),t.drawMultipleStrings(g,_,"Left",o),_.top+=l.height}}else{var c=!1;this.flipping()&&Math.cos(i.angle)<0&&(c=!0),i=new y.models._RotatedRectangle(i.center.x,i.center.y,i.size.width,r.height,i.angle);for(var p=new y.core.Point(i.center.x-i.size.width/2,i.center.y-i.size.height/2),f=0,d=this._lines();f<d.length;f++){var g;if(null!=(g=d[f])&&0<g.length){l=t.measureMultipleStrings(g,i.size.width,o);p.y+=l.height,c?t.drawStringRotated(g,p,i.center,180*(i.angle-Math.PI)/Math.PI):t.drawStringRotated(g,p,i.center,180*i.angle/Math.PI)}}}t.restoreTransform()},t.prototype._measure=function(t,e){null==e&&(e=new y.core.Size(Number.MAX_VALUE,Number.MAX_VALUE)),e=e.clone();var i=new y.core.Size(0,0);t.beginTransform(),this._applyBorderStyle(t),null!=t.strokeWidth&&0<t.strokeWidth&&(i.width+=2*t.strokeWidth,i.height+=2*t.strokeWidth,e.width-=2*t.strokeWidth,e.height-=2*t.strokeWidth);var n=this._paddings();i.width+=n.left+n.right,i.height+=n.top+n.bottom,e.width-=n.left+n.right,e.height-=n.top+n.bottom,t.restoreTransform();var o=this._measureInnerContent(t,e);return i.width+=o.width,i.height+=o.height,i},t.prototype._measureInnerContent=function(t,e){t.beginTransform(),this._applyTextStyle(t);for(var i=this._overflowRenderString(),n=new y.core.Size(0,0),o=0,r=this._lines();o<r.length;o++){var s=r[o];if(null!=s&&0<s.length){var a=t.measureMultipleStrings(s,e.width,i);n.height+=a.height,n.width<a.width&&(n.width=a.width)}}return t.restoreTransform(),n},t.prototype._applyBorderStyle=function(t){y._applyLineStyle(t,new y.options._LineStyleOption({opacity:null,stroke:y.__Constant_Core_Style_Stroke,strokeWidth:0,strokeDasharray:null}))},t.prototype._applyBackgroundStyle=function(t){y._applyBackgroundColor(t,"none")},t.prototype._applyTextStyle=function(t){},t}(y._View);y._LabelView=t}(dv||(dv={})),function(r){"use strict";var t=function(n){function t(){return null!==n&&n.apply(this,arguments)||this}return __extends(t,n),t.prototype._paddings=function(){return new r.options._PaddingOption(null)},t.prototype._layout=function(t,e,i){this._rectangle(e),t.beginTransform(),this._applyBorderStyle(t);var n=this._calculateInnerRectangle(t,this._rectangle());t.restoreTransform(),this._layoutInnerContent(t,n,i)},t.prototype._render=function(t,e){var i=this._rectangle();i.width<=0||i.height<=0||n.prototype._render.call(this,t,e)},t.prototype._measure=function(t,e){null==e&&(e=new r.core.Size(Number.MAX_VALUE,Number.MAX_VALUE)),e=e.clone();var i=new r.core.Size(0,0);t.beginTransform(),this._applyBorderStyle(t),null!=t.strokeWidth&&0<t.strokeWidth&&(i.width+=2*t.strokeWidth,i.height+=2*t.strokeWidth,e.width-=2*t.strokeWidth,e.height-=2*t.strokeWidth);var n=this._paddings();i.width+=n.left+n.right,i.height+=n.top+n.bottom,e.width-=n.left+n.right,e.height-=n.top+n.bottom,t.restoreTransform();var o=this._measureInnerContent(t,e);return i.width+=o.width,i.height+=o.height,i},t.prototype._renderContent=function(t,e){t.beginTransform(),this._applyBorderStyle(t),this._applyBackgroundStyle(t);var i=this._rectangle();(null!=t.fill&&"transparent"!=t.fill&&"none"!=t.fill||null!=t.strokeWidth&&0<t.strokeWidth)&&(t.drawRect(i.left+t.strokeWidth/2,i.top+t.strokeWidth/2,i.width-t.strokeWidth,i.height-t.strokeWidth),i=i.inflate(-t.strokeWidth,-t.strokeWidth)),t.restoreTransform();var n=this._paddings();i=new r.core.Rect(i.left+n.left,i.top+n.top,i.width-n.left-n.right,i.height-n.top-n.bottom),this._renderInnerContent(t,i,e)},t.prototype._layoutInnerContent=function(t,e,i){},t.prototype._renderInnerContent=function(t,e,i){},t.prototype._measureInnerContent=function(t,e){return new r.core.Size(0,0)},t.prototype._applyBorderStyle=function(t){r._applyLineStyle(t,new r.options._LineStyleOption({opacity:null,stroke:r.__Constant_Core_Style_Stroke,strokeWidth:0,strokeDasharray:null}))},t.prototype._applyBackgroundStyle=function(t){r._applyBackgroundColor(t,"none")},t.prototype._calculateInnerRectangle=function(t,e){var i=e.clone();null!=t.strokeWidth&&0<t.strokeWidth&&(i=i.inflate(-t.strokeWidth,-t.strokeWidth));var n=this._paddings();return i=new r.core.Rect(i.left+n.left,i.top+n.top,i.width-n.left-n.right,i.height-n.top-n.bottom)},t}(r._View);r._RectangleView=t}(dv||(dv={})),function(h){"use strict";var t=function(i){function t(t){var e=i.call(this)||this;return e.__lines=t,e}return __extends(t,i),t.prototype._hAlign=function(){return h.HAlign.Center},t.prototype._vAlign=function(){return h.VAlign.Middle},t.prototype._overflow=function(){return h.TextOverflow.Clip},t.prototype._overflowRenderString=function(){switch(this._overflow()){case h.TextOverflow.Clip:return"None";case h.TextOverflow.Ellipsis:return"Ellipsis";case h.TextOverflow.Wrap:return"Wrap"}return"None"},t.prototype._lines=function(){return this.__lines},t.prototype._renderInnerContent=function(t,e,i){t.beginTransform(),this._applyStyle(t);for(var n=this._overflowRenderString(),o=new h.core.Size(0,0),r=0,s=this._lines();r<s.length;r++){if(null!=(u=s[r])&&0<u.length){var a=t.measureMultipleStrings(u,e.width,n);o.height+=a.height}}switch(e=e.clone(),this._vAlign()){case h.VAlign.Top:break;case h.VAlign.Bottom:e.top=e.bottom-o.height;break;default:e.top=e.top+(e.height-o.height)/2}for(var l=0,_=this._lines();l<_.length;l++){var u;if(null!=(u=_[l])&&0<u.length){a=t.measureMultipleStrings(u,e.width,n);switch(e.height=a.height,this._hAlign()){case h.HAlign.Left:t.drawMultipleStrings(u,e,"Left",n);break;case h.HAlign.Right:t.drawMultipleStrings(u,e,"Right",n);break;default:t.drawMultipleStrings(u,e,"Center",n)}e.top+=a.height}}t.restoreTransform()},t.prototype._measureInnerContent=function(t,e){t.beginTransform(),this._applyStyle(t);for(var i=this._overflowRenderString(),n=new h.core.Size(0,0),o=0,r=this._lines();o<r.length;o++){var s=r[o];if(null!=s&&0<s.length){var a=t.measureMultipleStrings(s,e.width,i);n.height+=a.height,n.width<a.width&&(n.width=a.width)}}return t.restoreTransform(),n},t.prototype._applyStyle=function(t){},t}(h._RectangleView);h._TextView=t}(dv||(dv={})),function(r){"use strict";var t=function(o){function t(t,e){var i=o.call(this,e)||this;return i.__pointView=t,i}return __extends(t,o),t.prototype._pointView=function(){return this.__pointView},t.prototype._hAlign=function(){return r.HAlign.Left},t.prototype._render=function(t,e){this._layout(t,null,{});var i=e.DataLabelClipRectangle,n=this._rotatedRectangle();(null==i||i.contains(n.leftTop)&&i.contains(n.leftBottom)&&i.contains(n.rightTop)&&i.contains(n.rightBottom))&&o.prototype._render.call(this,t,e)},t.prototype._renderContent=function(t,e){t.beginTransform();var i=this._lines();if(i&&0<i.length){var n=this._pointView()._plotView()._option().config.text.overlappingLabels;(n==r.OverlappingLabels.Show||n==r.OverlappingLabels.Auto&&!this._checkOverlap(e))&&(this._renderConnectingLine(t,e),o.prototype._renderContent.call(this,t,e),e.labels.push(this._rotatedRectangle()))}t.restoreTransform()},t.prototype._renderConnectingLine=function(t,e){var i=this._startPoint(),n=this._endPoint();null!=i&&null!=n&&(t.beginTransform(),this._applyConnectingLineStyle(t),t.drawLine(i.x,i.y,n.x,n.y,r.__Constant_Core_Line_ClassName),t.restoreTransform())},t.prototype._applyConnectingLineStyle=function(t){r._applyLineStyle(t,this._pointView()._plotView()._connectingLine())},t.prototype._applyBorderStyle=function(t){r._applyLineStyle(t,new r.options._LineStyleOption({opacity:null,stroke:r.__Constant_Core_Style_Stroke,strokeWidth:0,strokeDasharray:null})),r._applyLineStyleFromGStyle(t,this._pointView()._plotView()._plotAreaView()._dvView()._option().style),r._applyLineStyleFromGStyle(t,this._pointView()._plotView()._plotAreaView()._option().style),r._applyLineStyleFromGStyle(t,this._pointView()._plotView()._option().config.text.style),r._applyLineStyle(t,this._pointView()._plotView()._option().config.text.borderStyle)},t.prototype._applyBackgroundStyle=function(t){r._applyBackgroundColor(t,"none"),r._applyBackgroundColor(t,this._pointView()._plotView()._plotAreaView()._dvView()._option().style.backgroundColor),r._applyBackgroundColor(t,this._pointView()._plotView()._plotAreaView()._option().style.backgroundColor),r._applyBackgroundColor(t,this._pointView()._plotView()._option().config.text.style.backgroundColor)},t.prototype._applyTextStyle=function(t){r._applyGStyle(t,this._pointView()._plotView()._plotAreaView()._dvView()._option().style),r._applyTextStyle(t,this._pointView()._plotView()._plotAreaView()._dvView()._option().textStyle),r._applyGStyle(t,this._pointView()._plotView()._plotAreaView()._option().style),r._applyTextStyle(t,this._pointView()._plotView()._plotAreaView()._option().textStyle),r._applyTextStyle(t,this._pointView()._plotView()._option().config.textStyle),r._applyGStyle(t,this._pointView()._plotView()._option().config.text.style),r._applyTextStyle(t,this._pointView()._plotView()._option().config.text.textStyle)},t.prototype._checkOverlap=function(t){for(var e=0,i=t.labels;e<i.length;e++){var n=i[e];if(n instanceof r.core.Rect){if(this._rotatedRectangle().intersectsWith(new r.models._RotatedRectangle((n.left+n.right)/2,(n.top+n.bottom)/2,n.width,n.height,0)))return!0}else if(n instanceof r.models._RotatedRectangle){if(n.intersectsWith(this._rotatedRectangle()))return!0}else r._assertDebug(function(){return!1})}return!1},t}(r._LabelView);r._DataLabelView=t}(dv||(dv={})),function(b){"use strict";var t=function(a){function t(t,e,i,n,o){var r=a.call(this)||this;return r.__plotAreaViews=[],r.__parent=t,r.__option=e,r.__dataOption=i,r.__transformOptions=o,r.__headerView=r._createHeaderView(e),r.__footerView=r._createFooterView(e),r.__plotAreaViews=r._createPlotAreaViews(e.plotAreas,n),r._loadData(i.values),r}return __extends(t,a),Object.defineProperty(t.prototype,"type",{get:function(){return b.ElementType.Control},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"parent",{get:function(){return null},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"control",{get:function(){return this.__parent},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"option",{get:function(){return this._option()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"header",{get:function(){return this.__headerView},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"footer",{get:function(){return this.__footerView},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"plotAreas",{get:function(){return this.__plotAreaViews},enumerable:!0,configurable:!0}),t.prototype._plotAreaViews=function(){return this.__plotAreaViews},t.prototype._option=function(){return this.__option},t.prototype._dataSource=function(){return null==this.__dataSource&&(this.__dataSource=new b.models._DataSource(this.__dataOption.values,this.__dataOption,this.__transformOptions)),this.__dataSource},t.prototype._colorProvider=function(){if(null==this.__colorProvider)if(Array.isArray(this._option().palette))this.__colorProvider=new b.models._PaletteColorProvider(this._option().palette);else{var t=b.Palette[this._option().palette];this.__colorProvider=new b.models._PaletteColorProvider(b.models._Palettes[t])}return this.__colorProvider},t.prototype._symbolProvider=function(){return null==this.__symbolProvider&&(this.__symbolProvider=new b.models._SymbolProvider),this.__symbolProvider},t.prototype._dateParser=function(){if(null==this.__dateParser){var t=[],e=this.__dataOption.dateFormats;t="boolean"==typeof e?e?b.__Constant_Core_Default_Date_Formats:[]:e,this.__dateParser=new b.models._DateStringParser(t)}return this.__dateParser},t.prototype._scrollableViewManager=function(){return this.__scrollableViewManager||(this.__scrollableViewManager=new b._ScrollableViewManager),this.__scrollableViewManager},t.prototype._headerView=function(){return this.__headerView},t.prototype._footerView=function(){return this.__footerView},t.prototype._style=function(){return{strokeWidth:0,stroke:b.__Constant_Core_Style_Stroke,fill:"none",color:b.__Constant_Core_Style_Color,fontFamily:"Helvetica",fontSize:14}},t.prototype._paddings=function(){return this._option().padding},t.prototype._loadData=function(t){this.__dataSource=new b.models._DataSource(t,this.__dataOption,this.__transformOptions);for(var e=0,i=this._plotAreaViews();e<i.length;e++){i[e]._loadData(this._dataSource())}},t.prototype._query=function(t){for(var e=[],i=(new b.models._VectorConditionalRule(t),0),n=this._plotAreaViews();i<n.length;i++)for(var o=0,r=n[i]._plotViews();o<r.length;o++){var s=r[o];e=e.concat(s._query(t))}return e},t.prototype._select=function(t,e){void 0===e&&(e=null);for(var i=0,n=this.plotAreas;i<n.length;i++)for(var o=0,r=n[i].plotsPanes;o<r.length;o++)for(var s=0,a=r[o].plots;s<a.length;s++)for(var l=0,_=a[s].points;l<_.length;l++){var u=_[l];u.selected=0<=t.indexOf(u),u.additionalKind=e}},t.prototype._startLoadAnimation=function(){for(var t=0,e=this._plotAreaViews();t<e.length;t++)for(var i=0,n=e[t]._plotViews();i<n.length;i++){n[i]._startLoadAnimation()}},t.prototype._layoutInnerContent=function(t,e,i){t.beginTransform(),this._applyStyle(t),(e=e.clone()).width<0&&(e.width=0),e.height<0&&(e.height=0);var n=e.clone(),o=this._headerView();if(null!=o){var r=n.clone(),s=o._measure(t,new b.core.Size(e.width,e.height)),a=this._option().header.width,l=r.width;(l="string"==typeof a?"Auto"===a?s.width:b.core.asNumber(b.core._Parser._parseCssPixel(a)):a)<r.width&&(r.left+=(r.width-l)/2,r.width=l),r.width<s.width&&0===this._option().header.textStyle.overflow&&(this._option().header.title=b._Util.getTextByMaxLength(t,this._option().header.title,r.width,this._option().header.textStyle||this._option().textStyle));var _=this._option().header.height,u=this._option().header.maxHeight;if(null!=u){var h=Number.MAX_VALUE;"number"==typeof u?h=u*e.height:"string"==typeof u&&(h=b.core._Parser._parseCssPixel(u)),s.height>h&&(s.height=h)}else"number"==typeof _?s.height=_*e.height:"string"==typeof _&&(s.height=b.core._Parser._parseCssPixel(_));o._layout(t,new b.core.Rect(r.left,n.top,r.width,s.height),i),n.top+=s.height,n.height-=s.height}var c=this._footerView();if(null!=c){var p=n.clone(),f=c._measure(t,new b.core.Size(e.width,e.height));a=this._option().footer.width,l=p.width;(l="string"==typeof a?"Auto"===a?f.width:b.core.asNumber(b.core._Parser._parseCssPixel(a)):a)<p.width&&(p.left+=(p.width-l)/2,p.width=l),p.width<f.width&&0===this._option().footer.textStyle.overflow&&(this._option().footer.title=b._Util.getTextByMaxLength(t,this._option().footer.title,p.width,this._option().footer.textStyle||this._option().textStyle));var d=this._option().footer.height,g=this._option().footer.maxHeight;if(null!=g){h=Number.MAX_VALUE;"number"==typeof g?h=g*e.height:"string"==typeof g&&(h=b.core._Parser._parseCssPixel(g)),f.height>h&&(f.height=h)}else"number"==typeof d?f.height=d*e.height:"string"==typeof d&&(f.height=b.core._Parser._parseCssPixel(d));f.height>n.height&&(f.height=n.height),c._layout(t,new b.core.Rect(p.left,n.bottom-f.height,p.width,f.height),i),n.height-=f.height}var y=this._plotAreaViews();new b._PlotAreaLayout(this._option().plotAreaLayout)._analyse(y,n);for(var m=0,v=y;m<v.length;m++){var w=v[m];w._layout(t,w._rectangle(),i)}t.restoreTransform()},t.prototype._renderInnerContent=function(t,e,i){t.beginTransform(),this._applyStyle(t);for(var n=this._scrollableViewManager()._scrollableViews(),o=0;o<n.length;o++)n[o]._beginRender();var r=this._headerView();null!=r&&r._render(t,i);var s=this._footerView();null!=s&&s._render(t,i);for(var a=0,l=this._plotAreaViews();a<l.length;a++){l[a]._render(t,i)}n.sort(function(t,e){return t._zIndex()-e._zIndex()});for(o=0;o<n.length;o++)n[o]._endRender();t.restoreTransform()},t.prototype._applyStyle=function(t){b._applyStyle(t,this._style()),b._applyGStyle(t,this._option().style),b._applyTextStyle(t,this._option().textStyle)},t.prototype._applyBorderStyle=function(t){a.prototype._applyBorderStyle.call(this,t),b._applyLineStyleFromGStyle(t,this._option().style),b._applyLineStyle(t,this._option().borderStyle)},t.prototype._applyBackgroundStyle=function(t){a.prototype._applyBackgroundStyle.call(this,t),b._applyBackgroundColor(t,this._option().style.backgroundColor),b._applyBackgroundColor(t,this._option().backgroundColor)},t.prototype._createHeaderView=function(t){return t.header&&t.header.title?new b._HeaderView(this):null},t.prototype._createFooterView=function(t){return t.footer&&t.footer.title?new b._FooterView(this):null},t.prototype._createPlotAreaViews=function(t,e){var i=[];if(null!=t&&0<t.length)for(var n=0,o=t;n<o.length;n++){var r=o[n];null!=(a=this._createPlotAreaView(r,e))&&i.push(a)}else for(var s=0;s<e.length;s++){var a;null!=(a=this._createPlotAreaView(new b.options._PlotAreaOption({row:s,column:0}),[e[s]]))&&i.push(a)}return i},t.prototype._createPlotAreaView=function(t,e){return new b._PlotAreaView(this,t,e)},t.prototype._hitTest=function(t){var e=this._rectangle();if(null!=e&&e.contains(t)){for(var i=0,n=this._plotAreaViews().concat().reverse();i<n.length;i++){if(null!=(r=n[i]._hitTest(t)))return r}var o=this._footerView();if(null!=o)if(null!=(r=o._hitTest(t)))return r;var r,s=this._headerView();if(null!=s)if(null!=(r=s._hitTest(t)))return r;return new b.HitTestResult(t,this,this,b.ElementType.Control)}return a.prototype._hitTest.call(this,t)},t.prototype.dispose=function(){for(var t=0,e=this._plotAreaViews();t<e.length;t++){e[t].dispose()}},t}(b._RectangleView);b._DvView=t}(dv||(dv={})),dv||(dv={}),function(f){"use strict";var t=function(c){function t(t){var e=c.call(this)||this;return e.__zIndex=-1,e.__ownerLayer=t,e.__scrollX=0,e.__scrollY=0,e}return __extends(t,c),t.prototype._canScroll=function(){return!0},t.prototype._zIndex=function(t){if(0===arguments.length)return this.__zIndex;this.__zIndex=t},t.prototype._redraw=function(t){this._canScroll()&&(t&&this._saveBackground(t),this._drawBackground(),this._copy(this.__scrollX,this.__scrollY))},t.prototype._scrollTo=function(t,e){this._canScroll()&&(this.__scrollX=t,this.__scrollY=e,this._redraw())},t.prototype._copy=function(t,e){var i=this._canvasLayer();if(i){var n=this._rectangle(),o=this.__ownerLayer._devicePixelRatio(),r=(t+n.left)*o,s=(e+n.top)*o,a=n.width*o,l=n.height*o,_=n.left,u=n.top,h=n.width,c=n.height;i.copyTo(this.__ownerLayer,r,s,a,l,_,u,h,c)}else this.__scrollGroup&&this.__scrollGroup.setAttribute("transform","translate("+-t+","+-e+")")},t.prototype._layout=function(t,e,i){this.__canvasLayer=null,this.__backgroundCanvas=null,c.prototype._layout.call(this,t,e,i)},t.prototype._beginRender=function(){this._zIndex(-1)},t.prototype._endRender=function(){this._canScroll()&&(this._saveBackground(this._rectangle()),this._copy(this.__scrollX,this.__scrollY))},t.prototype._renderContent=function(t,e){if(-1===this._zIndex()){var i=e.scrollableViewZIndex+1;if(e.scrollableViewZIndex=i,this._zIndex(i),this._canScroll()){var n=this._rectangle(),o="scrollingClip"+(1e5*Math.random()).toFixed();if(t.addClipRect(n,o),t.startGroup("scroll-viewport",o),l=this._canvasLayer()){(_=l._render()).beginRender();var r=this._getLogicSize(),s=n.left+r.width+1,a=n.top+r.height+1;_.setViewportSize(s,a),c.prototype._renderContent.call(this,_,e),_.endRender()}else this.__scrollGroup=t.startGroup("scroll-content"),c.prototype._renderContent.call(this,t,e),t.endGroup();t.endGroup()}else c.prototype._renderContent.call(this,t,e)}else{var l;if(this._canScroll())if(l=this._canvasLayer()){var _;(_=l._render()).beginRender(),c.prototype._renderContent.call(this,_,e),_.endRender()}else{var u=t.renderEngine,h=u._group;u._group=this.__scrollGroup,c.prototype._renderContent.call(this,t,e),u._group=h}else c.prototype._renderContent.call(this,t,e)}},t.prototype._getLogicSize=function(){return new f.core.Size(0,0)},t.prototype._canvasLayer=function(){var t=this.__ownerLayer;if(t._renderMethod()===f.RenderMethod.Canvas)if(this.__canvasLayer)f.models._Layer._copyStyle(t,this.__canvasLayer);else{var e=f.models._Layer._fromLayer(t);e._render().element.parentNode.removeChild(e._render().element),this.__canvasLayer=e}else this.__canvasLayer=null;return this.__canvasLayer},t.prototype._backgroundCanvas=function(){if(this.__ownerLayer._renderMethod()===f.RenderMethod.SVG)this.__backgroundCanvas=null;else if(!this.__backgroundCanvas){var t=this._rectangle(),e=document.createElement("canvas"),i=t.width+1,n=t.height+1;e.width=i,e.height=n,e.style.width=i+"px",e.style.height=n+"px",this.__backgroundCanvas=e}return this.__backgroundCanvas},t.prototype._saveBackground=function(t){var e=this._backgroundCanvas();if(e){var i=this.__ownerLayer._render().element,n=this._rectangle();t=f.core.Rect.intersection(t,n);var o=this.__ownerLayer._devicePixelRatio(),r=t.left*o,s=t.top*o,a=t.width*o,l=t.height*o,_=t.left-n.left,u=t.top-n.top,h=t.width,c=t.height;if(0<a&&0<l){var p=e.getContext("2d");p.clearRect(_,u,a,l),a=Math.min(i.width,a),l=Math.min(i.height,l),p.drawImage(i,r,s,a,l,_,u,h,c)}}},t.prototype._drawBackground=function(){var t=this.__ownerLayer._render().element;if(t instanceof HTMLCanvasElement){var e=this._rectangle(),i=this._backgroundCanvas(),n=e.width,o=e.height,r=e.left,s=e.top,a=e.width,l=e.height;if(0<a&&0<l){var _=t.getContext("2d");_.clearRect(r,s,a,l),_.drawImage(i,0,0,n,o,r,s,a,l)}}},t.prototype._hitTest=function(t){var e=this._rectangle();return null!=e&&e.contains(t)?this._hitTestContent(new f.core.Point(this.__scrollX+t.x,this.__scrollY+t.y)):c.prototype._hitTest.call(this,t)},t.prototype._hitTestContent=function(t){return c.prototype._hitTest.call(this,t)},t}(f._RectangleView);f._ScrollableView=t}(dv||(dv={})),function(n){"use strict";var t=function(i){function t(t){var e=i.call(this)||this;return e.__layoutView=t,e.__plotsView=new n._PlotsView(e),e}return __extends(t,i),Object.defineProperty(t.prototype,"type",{get:function(){return"None"},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"plotRect",{get:function(){return null},enumerable:!0,configurable:!0}),t.prototype._layoutView=function(){return this.__layoutView},t.prototype._plotAreaView=function(){return this._layoutView()._plotAreaView()},t.prototype._plotsView=function(){return this.__plotsView},t.prototype._plotViews=function(){return this.__plotsView._plotViews()},t.prototype._layout=function(t,e,i){this._layoutPlotViews(t,e,i)},t.prototype._renderContent=function(t,e){this.__plotsView._render(t,e)},t.prototype.dispose=function(){},t.prototype._layoutPlotViews=function(t,e,i){this.__plotsView._layout(t,e,i)},t.prototype._hitTest=function(t){var e=this._plotsView()._hitTest(t);return null!=e?e:i.prototype._hitTest.call(this,t)},t.__Default_Axis_X_Option=new n.options._AxisOption({type:n.AxisType.X}),t.__Default_Axis_Y_Option=new n.options._AxisOption({type:n.AxisType.Y}),t}(n._View);n._CoordinateSystemView=t}(dv||(dv={})),function(p){"use strict";var t=function(s){function t(t){var e=s.call(this,t)||this;e.__axisXViews=[],e.__axisYViews=[];for(var i=0,n=t._plotAreaView()._option().axes;i<n.length;i++){var o=n[i],r=e._createAxisView(o);o.type==p.AxisType.X?e.__axisXViews.push(r):o.type==p.AxisType.Y&&e.__axisYViews.push(r)}if(e.__axisXViews.length<=0){r=e._createAxisView(p._CoordinateSystemView.__Default_Axis_X_Option);e.__axisXViews.push(r)}if(e.__axisYViews.length<=0){r=e._createAxisView(p._CoordinateSystemView.__Default_Axis_Y_Option);e.__axisYViews.push(r)}return e}return __extends(t,s),t.prototype._axisX=function(){return this._axisXViews()[0]},t.prototype._axisY=function(){return this._axisYViews()[0]},t.prototype._axisXViews=function(){return this.__axisXViews},t.prototype._axisYViews=function(){return this.__axisYViews},t.prototype._plotViews=function(){return s.prototype._plotViews.call(this)},t.prototype._swapAxes=function(){for(var t=0,e=this._plotViews();t<e.length;t++){var i=e[t]._option().config.swapAxes;if(null!=i)return i}return!1},t.prototype._xAxesView=function(){return this.__xAxesView||(this.__xAxesView=new p._AxesView(this,p.AxisType.X)),this.__xAxesView},t.prototype._yAxesView=function(){return this.__yAxesView||(this.__yAxesView=new p._AxesView(this,p.AxisType.Y)),this.__yAxesView},t.prototype._xViewSize=function(t){if(0===arguments.length)return this.__xViewSize||1;null!=t&&(this.__xViewSize=t)},t.prototype._yViewSize=function(t){if(0===arguments.length)return this.__yViewSize||1;null!=t&&(this.__yViewSize=t)},t.prototype._xScrollbarVisible=function(t){if(0===arguments.length)return!1!==this.__xScrollbarVisible;null!=t&&(this.__xScrollbarVisible=t)},t.prototype._yScrollbarVisible=function(t){if(0===arguments.length)return!1!==this.__yScrollbarVisible;null!=t&&(this.__yScrollbarVisible=t)},t.prototype._layout=function(t,e,i){s.prototype._layout.call(this,t,e,i),this._addScrollbar()||this._destoryScrollbar()},t.prototype._applyBackgroundStyle=function(t){p._applyStyle(t,{fill:this._plotAreaView()._option().style.fill})},t.prototype._applyInnerBorderStyle=function(t){var e=this._plotAreaView()._option().style.innerStrokeWidth,i=this._plotAreaView()._option().style.innerStroke||p.__Constant_Core_Style_Stroke,n=this._plotAreaView()._option().style.innerStrokeDasharray||"none";null!=e&&p._applyStyle(t,{stroke:i,strokeWidth:e,strokeDasharray:n})},t.prototype._createAxisView=function(t){return null},t.prototype._addScrollbar=function(){var t=this._xScrollbarVisible(),e=this._yScrollbarVisible();if(!t&&!e)return!1;var i=this._plotAreaView()._dvView(),n=this._plotsView(),o=this._xAxesView(),r=this._yAxesView();if(!o._canScroll()&&!r._canScroll())return!1;var s=n._rectangle(),a=n._getLogicSize(),l=0,_=0,u=[],h=[],c=[];return"Cartesian"===this.type?(u=[n],h=[o],c=[r],l=o._rectangle().bottom-s.bottom,_=r._rectangle().right-s.right):u=[n,o,r],this.__scrollbar?this.__scrollbar._update({containerRect:s,contentSize:a,xscroll:t,yscroll:e,trackXOffset:l,trackYOffset:_}):this.__scrollbar=new p._DvScrollbar(i,{host:i.control.hostElement,option:{containerRect:s,contentSize:a,xscroll:t,yscroll:e,trackXOffset:l,trackYOffset:_},xyScrollViews:u,xScrollViews:h,yScrollViews:c}),!0},t.prototype._destoryScrollbar=function(){this.__scrollbar&&this.__scrollbar.dispose(),this.__scrollbar=null},t.prototype.dispose=function(){s.prototype.dispose.call(this),this._destoryScrollbar()},t.prototype._hitTest=function(t){var e=s.prototype._hitTest.call(this,t);return e||((e=this._yAxesView()._hitTest(t))?e:(e=this._xAxesView()._hitTest(t))||null)},t}(p._CoordinateSystemView);p._CartesianCoordinateSystemView=t}(dv||(dv={})),function(f){"use strict";var t=function(n){function t(t,e){var i=n.call(this)||this;return i.__labelViews=[],i._GRIDLINE_WIDTH=.25,i._LINE_WIDTH=1,i._TICK_WIDTH=1,i._TICK_OVERLAP=1,i._TICK_LABEL_DISTANCE=4,i._axisGroupLabelHeightlist=[],i._offset={left:0,top:0,right:0,bottom:0},i._isTimeAxis=!1,i._axisLinePosition=NaN,i._allAxisLinePosition=[],i._customConvert=null,i._customConvertBack=null,i.rangeChanged=new f.core.Event,i.__coordinateSystemView=t,i.__option=e,i.__scale=i._createScale(),i.__titleView=i._createTitleView(),i}return __extends(t,n),Object.defineProperty(t.prototype,"type",{get:function(){return f.ElementType.Axis},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"parent",{get:function(){return this._coordinateSystemView()._layoutView()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"min",{get:function(){var t=this._scale();return t?t.min():null},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"max",{get:function(){var t=this._scale();return t?t.max():null},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"majorUnit",{get:function(){var t=this._scale();return t?t._majorUnit():null},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"minorUnit",{get:function(){var t=this._scale();return t?t._minorUnit():null},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"position",{get:function(){return this._position()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"axisType",{get:function(){return this._option().type},enumerable:!0,configurable:!0}),t.prototype._coordinateSystemView=function(){return this.__coordinateSystemView},t.prototype._titleView=function(){return this.__titleView},t.prototype._labelViews=function(){return this.__labelViews},t.prototype._option=function(){return this.__option},t.prototype._title=function(){var t=this._option();return null!=t.title?t.title:null!=this._site()?this._site().name:null},t.prototype._labelAngle=function(){return this._option().labelAngle},t.prototype._majorTicks=function(){return this._option().majorTicks},t.prototype._minorTicks=function(){return this._option().minorTicks},t.prototype._majorTickStyle=function(){return this._option().majorTickStyle},t.prototype._minorTickStyle=function(){return this._option().minorTickStyle},t.prototype._labelStyle=function(){return this._option().labelStyle},t.prototype._style=function(){return this._option().style},t.prototype._styleClassName=function(){var t=this._option().type;return t==f.AxisType.X?f.__Constant_Core_Axis_X_ClassName:t==f.AxisType.Y?f.__Constant_Core_Axis_Y_ClassName:null},t.prototype._defaultLineStyle=function(){return new f.options._LineStyleOption({opacity:null,stroke:f.__Constant_Core_Style_Stroke,strokeWidth:1,strokeDasharray:null})},t.prototype._defaultMajorTickStyle=function(){return new f.options._LineStyleOption({opacity:null,stroke:f.__Constant_Core_Style_Stroke,strokeWidth:1,strokeDasharray:null})},t.prototype._defaultMinorTickStyle=function(){return new f.options._LineStyleOption({opacity:null,stroke:f.__Constant_Core_Style_Stroke,strokeWidth:1,strokeDasharray:null})},t.prototype._defaultMajorGridStyle=function(){return new f.options._LineStyleOption({opacity:null,stroke:f.__Constant_Core_Style_Stroke,strokeWidth:1,strokeDasharray:null})},t.prototype._defaultMinorGridStyle=function(){return new f.options._LineStyleOption({opacity:null,stroke:f.__Constant_Core_Style_Stroke,strokeWidth:1,strokeDasharray:null})},t.prototype._applyOptionToScale=function(t,e){var i=e._domain()[0],n=e._domain()[1],o=null;o=this._isTimeAxis&&t.min instanceof Date?n<(o=t.min.getTime())?n:o:"number"!=typeof t.min||isNaN(t.min)?i:n<(o=t.min)?n:o;var r=null;if(r=this._isTimeAxis&&t.max instanceof Date?(r=t.max.getTime())<o?o:r:"number"!=typeof t.max||isNaN(t.max)?n:(r=t.max)<o?o:r,e._domain([o,r]),null==t.majorUnit||isNaN(t.majorUnit)||e._majorUnit(t.majorUnit),e instanceof f._LinearAxisScale&&this instanceof f._LineAxisView){var s=(e.max()-e.min())/e.tickNumber();isNaN(e._majorUnit())||(s=e._majorUnit()),e.format(this._getformat(s))}else e.format(this._getformat())},t.prototype._createScale=function(){return null},t.prototype._createTitleView=function(){return new f._BaseAxisTitleView(this)},t.prototype._createLabelView=function(t,e){return new f._BaseAxisLabelView(this,t,e)},t.prototype._position=function(){return this._option().position},t.prototype._textStyle=function(){return this._option().textStyle},t.prototype._origin=function(){return this._option().origin},t.prototype._scale=function(t){if(arguments.length<=0)return this.__scale;this.__scale=t},t.prototype._hitTest=function(t){return null},t.prototype._site=function(){return this.__site},t.prototype.getPosition=function(){return this._position()==f.AxisPosition.None?null:this._option().type==f.AxisType.X?this._position()==f.AxisPosition.Near?f.Position.Bottom:f.Position.Top:this._option().type==f.AxisType.Y?this._position()==f.AxisPosition.Near?f.Position.Left:f.Position.Right:null},t.prototype._majorUnit=function(){return this._option().majorUnit},t.prototype._minorUnit=function(){return this._option().minorUnit},t.prototype._format=function(){return this._option().format},t.prototype._majorGrid=function(){return this._option().majorGrid},t.prototype._minorGrid=function(){return this._option().minorGrid},t.prototype._axisLine=function(){return this._option().axisLine},t.prototype._labels=function(){return this._option().labels},Object.defineProperty(t.prototype,"labelAlign",{get:function(){return this._labelAlign},set:function(t){t!=this._labelAlign&&(this._labelAlign=f.core.asString(t,!0))},enumerable:!0,configurable:!0}),t.prototype._overlappingLabels=function(){return this._option().overlappingLabels},Object.defineProperty(t.prototype,"itemFormatter",{get:function(){return this._ifmt},set:function(t){this._ifmt!=t&&(this._ifmt=f.core.asFunction(t,!0))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"logBase",{get:function(){return null==this._option().logBase?10:this._option().logBase},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"scale",{get:function(){return this._option().scale},enumerable:!0,configurable:!0}),t.prototype._majorTickSize=function(){return this._option().majorTickSize},t.prototype._minorTickSize=function(){return this._option().minorTickSize},t.prototype._overlapAxis=function(){},t.prototype.onRangeChanged=function(t){this.rangeChanged.raise(this,t)},t.prototype._getGrouplabelsHeight=function(t,e,i,n){for(var o=0,r=n+1,s=0;s<e.length;++s){e[s]&&e[s]._children&&0<e[s]._children.length&&this._getGrouplabelsHeight(t,e[s]._children,i,r);var a=e[s]._value.toString(),l=t.measureString(a,f.__Constant_Core_Label_ClassName,this._styleClassName()),_=l.height,u=l.width;if(null!=i[n]&&"number"==typeof i[n]){var h=i[n]*Math.PI/180,c=l.width,p=l.height;u=c*Math.abs(Math.cos(h))+p*Math.abs(Math.sin(h)),_=c*Math.abs(Math.sin(h))+p*Math.abs(Math.cos(h))}this._option().type==f.AxisType.X?o<_+this._TICK_LABEL_DISTANCE&&(o=_+this._TICK_LABEL_DISTANCE):o<u+this._TICK_LABEL_DISTANCE&&(o=u+this._TICK_LABEL_DISTANCE)}for(;this._axisGroupLabelHeightlist.length<n+1;)this._axisGroupLabelHeightlist.push(0);this._axisGroupLabelHeightlist[n]<o&&(this._axisGroupLabelHeightlist[n]=o)},t.prototype._getTickHeightBelowAxis=function(t,e,i){var n=0,o=i,r=this._TICK_OVERLAP,s=e;return null==s&&(s=f.TickMark.Outside),s==f.TickMark.Outside?r=1:s==f.TickMark.Inside?r=-1:s==f.TickMark.Cross&&(r=0),s!=f.TickMark.None&&(n+=.5*(1+r)*o),n},t.prototype._getCorrectAngle=function(){var t=this._option().labelAngle[0];return null==t&&(t=null!=this._actualAngle?this._actualAngle:0),t},t.prototype._getAcutalOrigin=function(){var t=this._actualOrigin;return null==t&&(t=this._origin()),t},t.prototype._getHeightOrdinal=function(t,e){var i=this._site();if(i&&i.isOrdinal&&i instanceof f.models._XCategorySiteModel&&0<i.groupLevels){f._applyGStyle(t,this._style());var n=i.groups;this._getGrouplabelsHeight(t,n,e,0);for(var o=0,r=0;r<this._axisGroupLabelHeightlist.length;++r)o+=this._axisGroupLabelHeightlist[r];return o}return 0},t.prototype._measure=function(t,e){return new f.core.Size(0,0)},t.prototype._getformat=function(t){return null==this._option().format?this._isTimeAxis?null:Math.round(t)?"n0":"n":this._option().format},t.prototype._getPrecision=function(t){if(t<=0||isNaN(t))return 0;if(0===(t-=Math.floor(t)))return 0;var e=Math.log(t)/Math.LN10,i=Math.floor(e);return(i=-i)<=2&&(i=0),i},t.prototype._updateActualLimits=function(t){this.__site=t,this._isTimeAxis||(this._isTimeAxis=this._site().dataType==f.core.DataType.Date)},Object.defineProperty(t.prototype,"offset",{get:function(){return this._offset},set:function(t){this._offset=t},enumerable:!0,configurable:!0}),t.prototype._render=function(t,e){},t.prototype.convert=function(t,e,i){return this._scale().value(t)},t.prototype._getMinNum=function(){return this._scale().min()},t.prototype._getMaxNum=function(){return this._scale().max()},t.prototype._formatValue=function(t){var e=f.plugins._Plugins._stringFormatting("Default");if(this._isTimeAxis)return null!=e?this._option().format?e.format(this._option().format,new Date(t)):e.format(this._tfmt,new Date(t)):new Date(t).toString();if(null==e)return t.toString();if(this._option().format)return e.format(this._option().format,t);var i=t==Math.round(t)?"n0":"n";return e.format(i,t)},Object.defineProperty(t.prototype,"plots",{get:function(){return this._option().plots},enumerable:!0,configurable:!0}),t.prototype._majorGridStyle=function(){return this._option().majorGridStyle},t.prototype._minorGridStyle=function(){return this._option().minorGridStyle},t.prototype._lineStyle=function(){return this._option().lineStyle},t.__AXIS_LABEL_PADDING=2,t.__AXIS_TITLE_PADDING=2,t.MAX_MAJOR=1e3,t.MAX_MINOR=2e3,t._id=0,t}(f._View);f._BaseAxisView=t}(dv||(dv={})),function(_){"use strict";var t=function(o){function t(t,e,i){var n=o.call(this)||this;return n.__title=e,n.__axisView=t,n.__value=i,n}return __extends(t,o),Object.defineProperty(t.prototype,"type",{get:function(){return _.ElementType.AxisLabel},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"parent",{get:function(){return this._axisView()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"hover",{get:function(){return this._hover()},set:function(t){this._hover(t)},enumerable:!0,configurable:!0}),t.prototype.relatedModels=function(){for(var t=[],e=this._axisView()._labelViews().indexOf(this),i=this._value(),n=0,o=this._axisView()._coordinateSystemView()._plotViews();n<o.length;n++)for(var r=0,s=o[n]._data().points;r<s.length;r++){var a=s[r];if(a instanceof _.models._CartesianPointData){var l=a._dimensionValue();_._Util.sameValue(l._value(),i)&&l._index()==e&&t.push(a)}}return t},t.prototype._title=function(){return this.__title},t.prototype._value=function(){return this.__value},t.prototype._labelRectangle=function(t){if(arguments.length<=0)return this.__labelRectangle;this.__labelRectangle!=t&&(this.__labelRectangle=t)},t.prototype._axisView=function(){return this.__axisView},t}(_._View);_._BaseAxisLabelView=t}(dv||(dv={})),function(t){"use strict";var e=function(i){function t(t,e){return i.call(this)||this}return __extends(t,i),t}(t._View);t._BaseAxisTickView=e}(dv||(dv={})),function(c){"use strict";var t=function(i){function t(t){var e=i.call(this,null)||this;return e.__axisView=t,e}return __extends(t,i),Object.defineProperty(t.prototype,"type",{get:function(){return c.ElementType.AxisTitle},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"parent",{get:function(){return this._axisView()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"hover",{get:function(){return this._hover()},set:function(t){this._hover(t)},enumerable:!0,configurable:!0}),t.prototype._option=function(){return this._axisView()._option()},t.prototype._styleClassName=function(){return this._option().type===c.AxisType.X?c.__Constant_Core_Axis_X_ClassName:c.__Constant_Core_Axis_Y_ClassName},t.prototype._axisView=function(){return this.__axisView},t.prototype._overflow=function(){return null!=this._axisView()._option().titleStyle.overflow?this._axisView()._option().titleStyle.overflow:null!=this._axisView()._option().textStyle.overflow?this._axisView()._option().textStyle.overflow:null!=this._axisView()._coordinateSystemView()._plotAreaView()._option().textStyle.overflow?this._axisView()._coordinateSystemView()._plotAreaView()._option().textStyle.overflow:null!=this._axisView()._coordinateSystemView()._plotAreaView()._dvView()._option().textStyle.overflow?this._axisView()._coordinateSystemView()._plotAreaView()._dvView()._option().textStyle.overflow:i.prototype._overflow.call(this)},t.prototype._lines=function(){return[this._axisView()._title()]},t.prototype._applyStyle=function(t){c._applyTextStyle(t,this._option().textStyle),c._applyLabelStyle(t,this._option().titleStyle)},t.prototype._layout=function(t,e,i){if(e.height<=0||e.width<=0)this._rectangle(e);else{var n,o=this._axisView()._option().type==c.AxisType.Y,r=this._axisView()._position()==c.AxisPosition.Near,s=this._option().titleStyle.padding,a=this._measure(t,o?new c.core.Size(e.height,e.width):new c.core.Size(e.width,e.height));if(o){var l=e.top+(e.height-a.width)/2,_=e.left;n=(_=r?e.width>a.height?e.left+(s.isEmpty()?0:s.left):e.right-a.height-(s.isEmpty()?0:s.right):e.width>a.height?e.right-a.height-(s.isEmpty()?0:s.right):e.left+(s.isEmpty()?0:s.left),new c.core.Rect(_,l,a.height,a.width))}else{_=e.left+(e.width-a.width)/2;var u=e.top;n=(u=r?e.height<a.height?e.top+(s.isEmpty()?0:s.top):e.bottom-a.height-(s.isEmpty()?0:s.bottom):e.height<a.height?e.bottom-a.height-(s.isEmpty()?0:s.bottom):e.top+(s.isEmpty()?0:s.top),new c.core.Rect(_,u,a.width,a.height))}this._rectangle(n)}},t.prototype._getTitleHeight=function(t,e,i){if(null==e)return null==i&&(i=new c.core.Size(this._rectangle().width,this._rectangle().height)),this._measure(t,i).height;if(e.length<=0)return 0;t.beginTransform(),this._applyStyle(t);var n=t.measureString(e,c.__Constant_Core_Title_ClassName,this._styleClassName());return t.restoreTransform(),n.height},t.prototype._renderInnerContent=function(t,e,i){t.beginTransform(),this._applyStyle(t);var n=this._overflowRenderString(),o=c.__Constant_Core_Title_ClassName;e=e.clone();for(var r=new c.core.Size(0,0),s=0,a=this._lines();s<a.length;s++){if(null!=(h=a[s])&&0<h.length){var l=t.measureMultipleStrings(h,e.width,n);r.height+=l.height}}switch(this._vAlign()){case c.VAlign.Top:break;case c.VAlign.Bottom:e.top=e.bottom-r.height;break;default:e.top=e.top+(e.height-r.height)/2}for(var _=0,u=this._lines();_<u.length;_++){var h;if(null!=(h=u[_])&&0<h.length){l=t.measureMultipleStrings(h,e.width,n);switch(e.height=l.height,this._hAlign()){case c.HAlign.Left:t.drawMultipleStrings(h,e,"Left",n,o);break;case c.HAlign.Right:t.drawMultipleStrings(h,e,"Right",n,o);break;default:t.drawMultipleStrings(h,e,"Center",n,o)}e.top+=l.height}}t.restoreTransform()},t.prototype._hitTest=function(t){var e=this._rectangle();return null!=e&&e.contains(t)?new c.HitTestResult(t,this,this,c.ElementType.AxisTitle):i.prototype._hitTest.call(this,t)},t}(c._TextView);c._BaseAxisTitleView=t}(dv||(dv={})),function(A){"use strict";var t=function(r){function t(t,e){return r.call(this,t,e)||this}return __extends(t,r),t.prototype._createLabelViews=function(){for(var t=[],e=this._scale(),i=this._site(),n=0,o=e.ticks();n<o.length;n++){var r=o[n];this._isTimeAxis&&!i.isOrdinal&&(r=new Date(r)),t.push(this._createLabelView(i.labelFromValue(r,e.format()),r))}return t},t.prototype._createLabelView=function(t,e){return new A._LineAxisLabelView(this,t,e)},t.prototype._createTitleView=function(){return new A._LineAxisTitleView(this)},t.prototype._titleSuggestSize=function(t){return null},t.prototype._measure=function(t,e){var i=e.width;t.beginTransform(),A._applyGStyle(t,this._option().style),A._applyTextStyle(t,this._textStyle()),this._annoSize=this._calculateMaxLabelSize(t,this._createLabelViews()),this._actualAngle=void 0;var n=new A.core.Size(0,0);this._option().type===A.AxisType.X?this._scale()._range([this._annoSize.width/2,i-this._annoSize.width/2]):this._option().type===A.AxisType.Y&&this._scale()._range([this._annoSize.height/2,i-this._annoSize.height/2]),this._annoSize=this._calculateMaxLabelSize(t,this._createLabelViews()),isNaN(this._majorUnit())&&(this._option().type===A.AxisType.X?0<i?this._scale().tickNumber(i/(this._annoSize.width+6)):this._scale().tickNumber(1):this._option().type===A.AxisType.Y&&(0<i?this._scale().tickNumber(i/(this._annoSize.height+6)):this._scale().tickNumber(1)));var o=this._option().labelAngle[0];if(void 0===o&&this._option().type==A.AxisType.X&&(this._isOverlapped(t,i)?o=this._actualAngle=-45:this._actualAngle=0),o){var r=o*Math.PI/180,s=this._annoSize.width,a=this._annoSize.height;this._annoSize.width=s*Math.abs(Math.cos(r))+a*Math.abs(Math.sin(r)),this._annoSize.height=s*Math.abs(Math.sin(r))+a*Math.abs(Math.cos(r))}this._labels()&&(this._option().type===A.AxisType.X?n.height+=this._annoSize.height:n.height+=this._annoSize.width),t.beginTransform(),A._applyLabelStyle(t,this._option().titleStyle),n.height+=Math.max(this._getTickHeightBelowAxis(t,this._majorTicks(),this._majorTickSize()),this._getTickHeightBelowAxis(t,this._minorTicks(),this._minorTickSize()));var l=this._titleSuggestSize();null!=l&&(e=l);var _=this._titleView()._measure(t,e);if(n.height+=_.height,this._option().type==A.AxisType.Y){var u=this._option().titleStyle.padding,h=this._labelStyle().padding;n.height+=u.isEmpty()?2*A._BaseAxisView.__AXIS_TITLE_PADDING:u.left+u.right,n.height+=h.isEmpty()?2*A._BaseAxisView.__AXIS_LABEL_PADDING:h.left+h.right}else if(this._option().type===A.AxisType.X){u=this._option().titleStyle.padding,h=this._labelStyle().padding;n.height+=u.isEmpty()?2*A._BaseAxisView.__AXIS_TITLE_PADDING:u.top+u.bottom,n.height+=h.isEmpty()?2*A._BaseAxisView.__AXIS_LABEL_PADDING:h.top+h.bottom}if(this._site().isOrdinal){A._applyLabelStyle(t,this._labelStyle());var c=this._option().labelAngle.slice(1);n.height+=this._getHeightOrdinal(t,c)}return t.restoreTransform(),t.restoreTransform(),this._measureSize=n=this._position()==A.AxisPosition.None?new A.core.Size(0,0):n,n},t.prototype._calculateMaxLabelSize=function(t,e){for(var i=new A.core.Size(0,0),n=0,o=e;n<o.length;n++){var r=o[n]._measure(t,null);i.width<r.width&&(i.width=r.width),i.height<r.height&&(i.height=r.height)}return i},t.prototype.getPosition=function(){return this._position()==A.AxisPosition.None?null:this._option().type==A.AxisType.X?this._position()==A.AxisPosition.Near?A.Position.Bottom:A.Position.Top:this._option().type==A.AxisType.Y?this._position()==A.AxisPosition.Near?A.Position.Left:A.Position.Right:null},t.prototype._overlapAxis=function(){for(var t=this._labelViews(),e=0;e<t.length;++e){var i=t[e];if(i&&i._visible()&&null!=i._labelRectangle())for(var n=e+1;n<t.length;++n){var o=t[n];if(!o||null==o._labelRectangle()||!i._labelRectangle().intersectsWith(o._labelRectangle()))break;o._visible(!1)}}},t.prototype._isOverlapped=function(t,e){var i=this._scale().ticks();if(null!=i&&0<i.length)for(var n=i.length,o=0;o<n-1;o++){var r=i[o],s=i[o+1];if(r>=this._site().min&&r<=this._site().max){var a=this._scale().value(r),l=this._scale().value(s);this._isTimeAxis&&!this._site().isOrdinal&&(r=new Date(r),s=new Date(s));var _=this._site().labelFromValue(r,this._scale().format()),u=this._site().labelFromValue(s,this._scale().format()),h=t.measureString(_,A.__Constant_Core_Label_ClassName,this._styleClassName()),c=t.measureString(u,A.__Constant_Core_Label_ClassName,this._styleClassName());if(0<o&&Math.abs(a-l)<(h.width+c.width)/2)return!0}}return!1},t.prototype._layoutXAxis=function(t){if(this._option().position!=A.AxisPosition.None){var e=this._labelViews();e.length=0,t.beginTransform(),A._applyTextStyle(t,this._textStyle()),A._applyLabelStyle(t,this._labelStyle());var i=this._getCorrectAngle();i<0&&(i=180+i);this._position(),A.AxisPosition.Near,this._site().isOrdinal;var n=this._scale().ticks(),o=this._position()===A.AxisPosition.Far,r=this._getTickHeightBelowAxis(t,this._majorTicks(),this._majorTickSize()),s=this._majorTickSize(),a=this._minorTickSize(),l=this._getTickHeightBelowAxis(t,this._minorTicks(),this._minorTickSize()),_=this._scale().min(),u=this._labelStyle().padding,h=this._isTimeAxis&&this._scale()instanceof A._TimeAxisScale?1e3*A._timeSpan.fromDays(this._minorUnit()).TotalSeconds:this._minorUnit();Math.abs(h)<Math.abs(this._scale().max()-this._scale().min())/100&&(h=null),this._scale()._minorUnit(h);for(var c=0;n&&c<n.length;++c){var p=n[c],f=c>=n.length?null:n[c+1];this._isTimeAxis&&!this._site().isOrdinal&&(p=new Date(p));var d=this._site().labelFromValue(p,this._scale().format()),g=t.measureString(d,A.__Constant_Core_Label_ClassName,this._styleClassName());this._labels()||(g.width=0,g.height=0);var y=this._scale().value(p),m=u.isEmpty()?A._BaseAxisView.__AXIS_LABEL_PADDING:u.top,v=this._rectangle().top+Math.max(r,l)+m,w=this._rectangle().top;o&&(m=u.isEmpty()?A._BaseAxisView.__AXIS_LABEL_PADDING:u.bottom,v=this._rectangle().bottom-Math.max(r,l)-m,w=this._rectangle().bottom);var b=this._createLabelView(d,this._site().itemValue(p)),x=y,S=v+g.height/2;o?(null!=i&&0<i&&(x=y-Math.cos(i*Math.PI/180)*g.width/2,S=v-Math.sin(i*Math.PI/180)*g.width/2),null!=i&&i<0&&(x=y+Math.cos(i*Math.PI/180)*g.width/2,S=v-Math.sin(i*Math.PI/180)*g.width/2),null!=i&&0!=i||(S=v-g.height/2)):(null!=i&&0<i&&(x=y+Math.cos(i*Math.PI/180)*g.width/2,S=v+Math.sin(i*Math.PI/180)*g.width/2),null!=i&&i<0&&(x=y-Math.cos(i*Math.PI/180)*g.width/2,S=v+Math.sin(i*Math.PI/180)*g.width/2),null!=i&&0!=i||(S=v+g.height/2)),b._labelRectangle(new A.models._RotatedRectangle(x,S,g.width,g.height,i*Math.PI/180)),b.majorTickLine=new A._RotatedLine(y,w,r,s-r,o?Math.PI:0);var P=h;if(null==P||isNaN(P))null==(P=(f-(p instanceof Date?p.valueOf():p))/2)||isNaN(P)||this._scale()._minorUnit(P);for(;_<(c==n.length-1?this._scale().max():f);){var V=this._scale().value(_),C=w;_+=P,V!=y&&b.minorTickLines.push(new A._RotatedLine(V,C,l,a-l,o?Math.PI:0))}e.push(b)}t.restoreTransform()}},t.prototype._layoutYAxis=function(t){if(this._option().position!=A.AxisPosition.None){var e=this._getCorrectAngle();t.beginTransform(),A._applyTextStyle(t,this._textStyle()),A._applyLabelStyle(t,this._labelStyle());this._position(),A.AxisPosition.Near;var i=this._scale().ticks(),n=this._position()===A.AxisPosition.Far,o=this._getTickHeightBelowAxis(t,this._majorTicks(),this._majorTickSize()),r=this._majorTickSize(),s=this._minorTickSize(),a=this._getTickHeightBelowAxis(t,this._minorTicks(),this._minorTickSize()),l=this._scale().min(),_=this._labelStyle().padding,u=this._isTimeAxis&&this._scale()instanceof A._TimeAxisScale?1e3*A._timeSpan.fromDays(this._minorUnit()).TotalSeconds:this._minorUnit();Math.abs(u)<Math.abs(this._scale().max()-this._scale().min())/100&&(u=null),this._scale()._minorUnit(u);for(var h=0;i&&h<i.length;++h){var c=i[h],p=h>=i.length?null:i[h+1];this._isTimeAxis&&!this._site().isOrdinal&&(c=new Date(c));var f=this._site().labelFromValue(c,this._scale().format()),d=t.measureString(f,A.__Constant_Core_Label_ClassName,this._styleClassName());this._labels()||(d.width=0,d.height=0);d.width;var g=this._scale().value(c),y=_.isEmpty()?A._BaseAxisView.__AXIS_LABEL_PADDING:_.right,m=this._rectangle().right-Math.max(o,a)-y,v=this._rectangle().right;n&&(y=_.isEmpty()?A._BaseAxisView.__AXIS_LABEL_PADDING:_.left,m=this._rectangle().left+Math.max(o,a)+y,v=this._rectangle().left);var w=this._createLabelView(f,this._site().itemValue(c)),b=m-d.width/2;n&&(b=m+d.width/2);var x=g;null!=e&&0!=e&&(x=n?(b=m-Math.cos(e*Math.PI/180+Math.PI)*d.width/2,g-Math.sin(e*Math.PI/180+Math.PI)*d.width/2):(b=m-Math.cos(e*Math.PI/180)*d.width/2,g-Math.sin(e*Math.PI/180)*d.width/2)),w._labelRectangle(new A.models._RotatedRectangle(b,x,d.width,d.height,e*Math.PI/180)),w.majorTickLine=new A._RotatedLine(v,g,o,r-o,Math.PI/2*(n?-1:1));var S=u;if(null==S||isNaN(S))null==(S=(p-(c instanceof Date?c.valueOf():c))/2)||isNaN(S)||this._scale()._minorUnit(S);for(;l<(h==i.length-1?this._scale().max():p);){var P=this._scale().value(l),V=v;l+=S,P!=g&&w.minorTickLines.push(new A._RotatedLine(V,P,a,s-a,Math.PI/2*(n?-1:1)))}this._labelViews().push(w)}t.restoreTransform()}},t.prototype._layoutGroupAxis=function(t){if(t.beginTransform(),this._axisGroupLabelHeightlist.reverse(),A._applyLabelStyle(t,this._labelStyle()),this._option().position!=A.AxisPosition.None){var e=this._site();null!=e&&e instanceof A.models._XCategorySiteModel&&null!=e.groups&&0<e.groups.length&&(this._option().type==A.AxisType.X?this.__layoutXGroupAxis(t,e.groupLevels-1,e.groups,e):this._option().type==A.AxisType.Y&&this.__layoutYGroupAxis(t,e.groupLevels-1,e.groups,e)),t.restoreTransform()}},t.prototype.__layoutYGroupAxis=function(t,e,i,n){if(!(e<0)){var o=this._position()!=A.AxisPosition.Far,r=this._titleView()._getTitleHeight(t,this._title()),s=this._option().titleStyle.padding,a=this._labelStyle().padding,l=a.isEmpty()?A._BaseAxisView.__AXIS_LABEL_PADDING:(a.top,a.bottom);l=s.isEmpty()?2*A._BaseAxisView.__AXIS_TITLE_PADDING:s.top+s.bottom;var _=this._option().labelAngle[e+1];null==_&&(_=0),_<0&&(_=180+_);var u=this._axisGroupLabelHeightlist.slice(0,e),h=0;0<u.length&&(h=u.reduce(function(t,e){return t+e}));var c=0;c=o?this._rectangle().left+(0<this._axisGroupLabelHeightlist.length?this._axisGroupLabelHeightlist.reduce(function(t,e){return t+e}):0)+r+l:this._rectangle().right-(0<this._axisGroupLabelHeightlist.length?this._axisGroupLabelHeightlist.reduce(function(t,e){return t+e}):0)-r-l;for(var p=0;p<i.length;++p){var f=i[p],d=(f._start+f._end)/2;if(e<n.groupLevels){var g=f._value.toString(),y=new A._AxisGroupLabelViewModel(this,g,f),m=t.measureString(g,A.__Constant_Core_Label_ClassName,this._styleClassName()),v=c-h,w=this.convert(d),b=v=o?c-h:c+h,x=w;o?(null!=_&&0<_&&(b=v-Math.cos(_*Math.PI/180)*m.width/2,x=w-Math.sin(_*Math.PI/180)*m.width/2),null!=_&&_<0&&(b=v-Math.cos(_*Math.PI/180)*m.width/2,x=w-Math.sin(_*Math.PI/180)*m.width/2),null!=_&&0!=_||(b=v-m.width/2)):(null!=_&&0<_&&(b=v+Math.cos(_*Math.PI/180)*m.width/2,x=w+Math.sin(_*Math.PI/180)*m.width/2),null!=_&&_<0&&(b=v+Math.cos(_*Math.PI/180)*m.width/2,x=w+Math.sin(_*Math.PI/180)*m.width/2),null!=_&&0!=_||(b=v+m.width/2)),y._labelRectangle(new A.models._RotatedRectangle(b,x,m.width,m.height,_*Math.PI/180));var S=this.convert(f._start-.5);if(y.majorTickLine=o?new A._RotatedLine(this._rectangle().right,S,this._rectangle().right-c+h+this._axisGroupLabelHeightlist[e],0,Math.PI/2):new A._RotatedLine(this._rectangle().left,S,0,c-this._rectangle().left+h+this._axisGroupLabelHeightlist[e],Math.PI/2),this._labelViews().push(y),p==i.length-1){var P=new A._AxisGroupLabelViewModel(this,null,null),V=this.convert(f._end+.5);P.majorTickLine=o?new A._RotatedLine(this._rectangle().right,V,this._rectangle().right-c+h+this._axisGroupLabelHeightlist[e],0,Math.PI/2):new A._RotatedLine(this._rectangle().left,V,0,c-this._rectangle().left+h+this._axisGroupLabelHeightlist[e],Math.PI/2),this._labelViews().push(P)}this.__layoutYGroupAxis(t,e-1,f._children,n)}}}},t.prototype.__layoutXGroupAxis=function(t,e,i,n){if(!(e<0)){var o=this._position()!=A.AxisPosition.Far,r=this._option().labelAngle[e+1],s=this._titleView()._getTitleHeight(t,this._title()),a=this._option().titleStyle.padding,l=this._labelStyle().padding,_=l.isEmpty()?A._BaseAxisView.__AXIS_LABEL_PADDING:(l.top,l.bottom);_=a.isEmpty()?2*A._BaseAxisView.__AXIS_TITLE_PADDING:a.top+a.bottom,null==r&&(r=0),r<0&&(r=180+r);var u=this._axisGroupLabelHeightlist.slice(0,e),h=0;0<u.length&&(h=u.reduce(function(t,e){return t+e}));var c=0;c=o?this._rectangle().bottom-(0<this._axisGroupLabelHeightlist.length?this._axisGroupLabelHeightlist.reduce(function(t,e){return t+e}):0)-s-_:this._rectangle().top+(0<this._axisGroupLabelHeightlist.length?this._axisGroupLabelHeightlist.reduce(function(t,e){return t+e}):0)+s+_;for(var p=0;p<i.length;++p){var f=i[p],d=(f._start+f._end)/2;if(e<n.groupLevels){var g=f._value.toString(),y=new A._AxisGroupLabelViewModel(this,g,f),m=t.measureString(g,A.__Constant_Core_Label_ClassName,this._styleClassName()),v=this.convert(d),w=c+h,b=v,x=w=o?c+h:c-h;o?(null!=r&&0<r&&(b=v+Math.cos(r*Math.PI/180)*m.width/2,x=w+Math.sin(r*Math.PI/180)*m.width/2),null!=r&&r<0&&(b=v-Math.cos(r*Math.PI/180)*m.width/2,x=w+Math.sin(r*Math.PI/180)*m.width/2),null!=r&&0!=r||(x=w+m.height/2)):(null!=r&&0<r&&(b=v-Math.cos(r*Math.PI/180)*m.width/2,x=w-Math.sin(r*Math.PI/180)*m.width/2),null!=r&&r<0&&(b=v+Math.cos(r*Math.PI/180)*m.width/2,x=w-Math.sin(r*Math.PI/180)*m.width/2),null!=r&&0!=r||(x=w-m.height/2)),y._labelRectangle(new A.models._RotatedRectangle(b,x,m.width,m.height,r*Math.PI/180));var S=0<=p-1?i[p-1]:null,P=null!=S?this.convert((f._start+S._end)/2):this.convert(this._getMinNum());if(y.majorTickLine=o?new A._RotatedLine(P,this._rectangle().top,w-this._rectangle().top+this._axisGroupLabelHeightlist[e],0,0):new A._RotatedLine(P,this._rectangle().bottom,0,this._rectangle().bottom-c+h+this._axisGroupLabelHeightlist[e],0),this._labelViews().push(y),p==i.length-1){var V=new A._AxisGroupLabelViewModel(this,null,null),C=this.convert(this._getMaxNum());V.majorTickLine=o?new A._RotatedLine(C,this._rectangle().top,c-this._rectangle().top+h+this._axisGroupLabelHeightlist[e],0,0):new A._RotatedLine(C,this._rectangle().bottom,0,this._rectangle().bottom-c+h+this._axisGroupLabelHeightlist[e],0),this._labelViews().push(V)}this.__layoutXGroupAxis(t,e-1,f._children,n)}}}},t.prototype._getformat=function(t){if(null!=this._format())return this._format();if(this._isTimeAxis)return null;if(null==t)return Math.round(t)?"n0":"n";var e=t,i=this._getPrecision(e);return 0<i?"n"+i:"n"},t.prototype._layout=function(t,e,i){var n=i.LineCartesianCoordinateSystemContent;if(this._option().type==A.AxisType.Y?this._rectangle(new A.core.Rect(e.left,e.top,e.height,e.width)):this._rectangle(e),null!=n){n.width<0&&(n.width=0),n.height<0&&(n.height=0),this._labelViews().length=0,this._plotrect=n;var o=this._rectangle().left+this.offset.left,r=this._rectangle().width-(this.offset.left+this.offset.right),s=this._rectangle().top+this.offset.top,a=this._rectangle().height-(this.offset.top+this.offset.bottom);this._scale()._reversed(this._option().reversed),this._scale()._majorUnit(this._majorUnit()),this._option().type==A.AxisType.X?(this._scale()._range([o,o+r]),this._layoutXAxis(t)):this._option().type==A.AxisType.Y&&(this._scale()._range([s+a,s]),this._layoutYAxis(t)),null!=this.__site&&this.__site.isOrdinal&&this._layoutGroupAxis(t),this._overlappingLabels()!=A.OverlappingLabels.Show&&this._overlapAxis(),this._checkAxisline(t),this._titleView()._layout(t,this._rectangle(),i)}},t.prototype._checkAxisline=function(t){t.beginTransform(),A._applyLineStyle(t,this._defaultLineStyle()),A._applyLineStyle(t,this._lineStyle());var e=this._position()==A.AxisPosition.Near,i=this._option().type==A.AxisType.Y;0<t.strokeWidth&&"transparent"!=t.stroke&&"#00000000"!=t.stroke&&"rgba(0,0,0,0)"!=t.stroke&&(this._axisLinePosition=i?e?this._rectangle().right:this._rectangle().left:e?this._rectangle().top:this._rectangle().bottom),t.restoreTransform()},t.prototype._getClipRectangle=function(){return this._rectangle()},t.prototype._render=function(t,e){if(null!=this._rectangle()&&!A._Util.isNil(this._rectangle())&&this._option().position!=A.AxisPosition.None){if(t.beginTransform(),A._applyGStyle(t,this._option().style),A._applyTextStyle(t,this._textStyle()),e.renderLabel){var i="axisClip"+(1e5*Math.random()).toFixed(),n=this._getClipRectangle();t.addClipRect(n,i),t.startGroup(this._styleClassName(),i)}else t.startGroup(this._styleClassName());this._vals={};for(var o=this._option().type==A.AxisType.Y,r=this._position()==A.AxisPosition.Near,s=0,a=this._labelViews();s<a.length;s++){var l=a[s];l&&(e.renderLabel?this._labels()&&l._render(t,e):((this._majorGrid()||this._minorGrid())&&this._renderGridLines(t,l),(this._majorTicks()||this._minorTicks())&&this._renderTicks(t,l)))}e.renderLabel?this._titleView()._render(t,e):this._renderLine(t,o,r),t.endGroup(),t.restoreTransform()}},t.prototype._renderGridLines=function(t,e){if(this._majorGrid()&&(t.beginTransform(),A._applyLineStyle(t,this._defaultMajorGridStyle()),A._applyLineStyle(t,this._majorGridStyle()),this._option().type==A.AxisType.Y?-1==this._allAxisLinePosition.indexOf(e.majorTickLine.startPoint.y)&&t.drawLine(this._plotrect.left,e.majorTickLine.startPoint.y,this._plotrect.right,e.majorTickLine.startPoint.y,A.__Constant_Core_Grid_Line_Major_ClassName):-1==this._allAxisLinePosition.indexOf(e.majorTickLine.startPoint.x)&&t.drawLine(e.majorTickLine.startPoint.x,this._plotrect.top,e.majorTickLine.startPoint.x,this._plotrect.bottom,A.__Constant_Core_Grid_Line_Major_ClassName),t.restoreTransform()),this._minorGrid()){t.beginTransform(),A._applyLineStyle(t,this._defaultMinorGridStyle()),A._applyLineStyle(t,this._minorGridStyle());for(var i=0,n=e.minorTickLines;i<n.length;i++){var o=n[i];this._option().type==A.AxisType.Y?-1==this._allAxisLinePosition.indexOf(o.startPoint.y)&&t.drawLine(this._plotrect.left,o.startPoint.y,this._plotrect.right,o.startPoint.y,A.__Constant_Core_Grid_Line_Minor_ClassName):-1==this._allAxisLinePosition.indexOf(o.startPoint.x)&&t.drawLine(o.startPoint.x,this._plotrect.top,o.startPoint.x,this._plotrect.bottom,A.__Constant_Core_Grid_Line_Minor_ClassName)}t.restoreTransform()}},t.prototype._renderLine=function(t,e,i){if(this._axisLine()){t.beginTransform(),A._applyLineStyle(t,this._defaultLineStyle()),A._applyLineStyle(t,this._lineStyle());var n=A.__Constant_Core_Line_ClassName;e?i?t.drawLine(this._rectangle().right,this._rectangle().top,this._rectangle().right,this._rectangle().bottom,n):t.drawLine(this._rectangle().left,this._rectangle().top,this._rectangle().left,this._rectangle().bottom,n):i?t.drawLine(this._rectangle().left,this._rectangle().top,this._rectangle().right,this._rectangle().top,n):t.drawLine(this._rectangle().left,this._rectangle().bottom,this._rectangle().right,this._rectangle().bottom,n),t.restoreTransform()}},t.prototype._renderTicks=function(t,e){if(this._majorTicks()!=A.TickMark.None&&e.majorTickLine&&(t.beginTransform(),A._applyLineStyle(t,this._defaultMajorTickStyle()),A._applyLineStyle(t,this._majorTickStyle()),t.drawLine(e.majorTickLine.startPoint.x,e.majorTickLine.startPoint.y,e.majorTickLine.endPoint.x,e.majorTickLine.endPoint.y,A.__Constant_Core_Tick_Major_ClassName),t.restoreTransform()),this._minorTicks()!=A.TickMark.None){t.beginTransform(),A._applyLineStyle(t,this._defaultMinorTickStyle()),A._applyLineStyle(t,this._minorTickStyle());for(var i=0;i<e.minorTickLines.length;++i){var n=e.minorTickLines[i];t.drawLine(n.startPoint.x,n.startPoint.y,n.endPoint.x,n.endPoint.y,A.__Constant_Core_Tick_Minor_ClassName)}t.restoreTransform()}},t.prototype._getLabelAlign=function(t){var e=1;if(this.labelAlign){var i=this.labelAlign.toLowerCase();t?"top"==i?e=0:"bottom"==i&&(e=2):"left"==i?e=0:"right"==i&&(e=2)}return e},t.prototype._calcAxisRange=function(t){return this._option().type==A.AxisType.X?[.5*this._annoSize.width,t-.5*this._annoSize.width]:this._option().type==A.AxisType.Y?[.5*this._annoSize.height,t-.5*this._annoSize.height]:[0,t]},t.prototype.convert=function(t,e,i){return this._scale().value(t)},t.prototype._getMinNum=function(){return this._scale().min()},t.prototype._getMaxNum=function(){return this._scale().max()},t.prototype._hitTest=function(t){for(var e=0,i=this._labelViews();e<i.length;e++){var n=i[e]._hitTest(t);if(null!=n)return n}var o=this._titleView()._hitTest(t);return null!=o?o:r.prototype._hitTest.call(this,t)},t}(A._BaseAxisView);A._LineAxisView=t}(dv||(dv={})),function(R){"use strict";var t=function(r){function t(t,e){var i=r.call(this,t,e)||this;return i._axisPosition=0,i._axisSize=0,i.__radiusoffset=0,i._isPolygonal=!1,i.__startAngle=0,i._sweep=2*Math.PI,i._innerRadius=0,i}return __extends(t,r),t.prototype._startAngleDegree=function(t){if(arguments.length<=0)return 180*this.__startAngle/Math.PI;this.__startAngle=t*Math.PI/180},t.prototype._startAngle=function(){return this.__startAngle+3*Math.PI/2},t.prototype._labelViews=function(){return r.prototype._labelViews.call(this)},Object.defineProperty(t.prototype,"cx",{get:function(){return this._cx},set:function(t){this._cx=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"cy",{get:function(){return this._cy},set:function(t){this._cy=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"innerRadius",{get:function(){return this._innerRadius},set:function(t){this._innerRadius=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"radius",{get:function(){return this._radius},set:function(t){this._radius=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"sweep",{get:function(){return this._sweep},set:function(t){this._sweep=t},enumerable:!0,configurable:!0}),t.prototype._createTitleView=function(){return new R._RadialAxisTitleView(this)},t.prototype._createLabelView=function(t,e){return new R._RadialAxisLabelView(this,t,e)},t.prototype._radiusOffset=function(t){if(arguments.length<=0)return this.__radiusoffset;this.__radiusoffset=t},t.prototype._getformat=function(t){if(null!=this._format())return this._format();if(this._isTimeAxis)return null;if(null==t)return Math.round(t)?"n0":"n";var e=t,i=this._getPrecision(e);return 0<i?"n"+i:"n"},t.prototype.getPosition=function(){return this._position()==R.AxisPosition.None?null:this._option().type==R.AxisType.X?this._position()==R.AxisPosition.Near?R.Position.Bottom:R.Position.Top:this._option().type==R.AxisType.Y?this._position()==R.AxisPosition.Near?R.Position.Left:R.Position.Right:null},t.prototype._overlapAxis=function(){for(var t=this._labelViews(),e=t.length,i=0;i<e;++i){var n=t[i];if(n&&n._visible())for(var o=i+1;o<e;++o){var r=t[o];if(!r||!n._labelRectangle().intersectsWith(r._labelRectangle()))break;r._visible(!1)}}2<=e&&t[0]._labelRectangle().intersectsWith(t[e-1]._labelRectangle())&&t[e-1]._visible(!1)},t.prototype._measure=function(t,e){var i=this._scale(),n=(i.max()-i.min())/i.tickNumber();isNaN(i._majorUnit())||(n=i._majorUnit()),t.beginTransform(),R._applyGStyle(t,this._option().style),R._applyTextStyle(t,this._textStyle()),this._actualAngle=void 0;var o=new R.core.Size(0,0);this._annoSize=this.getMaxLabelSize(t);var r=this._option().labelAngle[0];if(r){var s=r*Math.PI/180,a=this._annoSize.width,l=this._annoSize.height;this._annoSize.width=a*Math.abs(Math.cos(s))+l*Math.abs(Math.sin(s)),this._annoSize.height=a*Math.abs(Math.sin(s))+l*Math.abs(Math.cos(s))}i._reversed(this._option().reversed),i._majorUnit(this._majorUnit()),i instanceof R._OrdinalAxisScale||i.tickNumber(this._getAnnoNumber(this._option().type==R.AxisType.Y,e)),i.format(this._getformat(n)),this._labels()&&this._position()!=R.AxisPosition.Far&&(o.height+=this._annoSize.height),t.beginTransform(),R._applyLabelStyle(t,this._option().titleStyle),o.height+=Math.max(this._getTickHeightBelowAxis(t,this._majorTicks(),this._majorTickSize()),this._getTickHeightBelowAxis(t,this._minorTicks(),this._minorTickSize()));var _=this._titleView()._measure(t,e);o.height+=_.height;var u=this._option().titleStyle.padding,h=this._labelStyle().padding;return o.height+=u.isEmpty()?2*R._BaseAxisView.__AXIS_LABEL_PADDING:u.top+u.bottom,o.height+=h.isEmpty()?2*R._BaseAxisView.__AXIS_LABEL_PADDING:h.top+h.bottom,t.restoreTransform(),t.restoreTransform(),this._measureSize=o=this._position()==R.AxisPosition.None?new R.core.Size(0,0):o,o},t.prototype._layout=function(t,e,i){var n=i.LineCartesianCoordinateSystemContent;if(this._option().type==R.AxisType.Y?this._rectangle(new R.core.Rect(e.left,e.top,e.height,e.width)):this._rectangle(e),this._labelViews().length=0,this._plotrect=n,this._scale()._reversed(this._option().reversed),this._scale()._majorUnit(this._majorUnit()),this._scale()instanceof R._OrdinalAxisScale||this._scale().tickNumber(this._getAnnoNumber(this._option().type==R.AxisType.Y,this._rectangle())),this._option().type==R.AxisType.X)this._scale()._range([this.innerRadius*this.radius,this.radius]),this._layoutXAxis(t);else if(this._option().type==R.AxisType.Y){var o=this._startAngle(),r=o+this.sweep;this._scale()._range([o,r]),this._layoutYAxis(t)}this._overlappingLabels()!=R.OverlappingLabels.Show&&this._overlapAxis(),this._titleView()._layout(t,this._rectangle(),i)},t.prototype.getMaxLabelSize=function(t){t.beginTransform(),R._applyTextStyle(t,this._option().textStyle),R._applyLabelStyle(t,this._option().labelStyle);for(var e=this._site().isOrdinal,i=new R.core.Size(0,0),n=0;n<this._scale().ticks().length;++n){var o=this._scale().ticks()[n];this._isTimeAxis&&!this._site().isOrdinal&&(o=new Date(o));var r=this._site().labelFromValue(o,e?null:this._scale().format()),s=t.measureString(r,R.__Constant_Core_Label_ClassName,this._styleClassName());i.width<s.width&&(i.width=s.width),i.height<s.height&&(i.height=s.height)}return t.restoreTransform(),i},t.prototype._layoutXAxis=function(t){if(this._option().position!=R.AxisPosition.None){var e=this._startAngle();this._labelViews().length=0,t.beginTransform(),R._applyTextStyle(t,this._textStyle()),R._applyLabelStyle(t,this._labelStyle());for(var i=this._getCorrectAngle(),n=this._site().isOrdinal,o=this._scale().ticks(),r=this._getTickHeightBelowAxis(t,this._majorTicks(),this._majorTickSize()),s=this._majorTickSize(),a=this._minorTickSize(),l=this._getTickHeightBelowAxis(t,this._minorTicks(),this._minorTickSize()),_=(this._option().titleStyle.padding,this._labelStyle().padding),u=NaN,h=0;o&&h<o.length;++h){var c=o[h],p=h>=o.length?null:o[h+1],f=n?this._site().labelFromValue(this._isTimeAxis?new Date(c):c,null):this._site().labelFromValue(this._isTimeAxis?new Date(c):c,this._scale().format()),d=t.measureString(f,R.__Constant_Core_Label_ClassName,this._styleClassName());this._labels()||(d.width=0,d.height=0);var g=this._scale().value(c+this.__radiusoffset),y=Math.cos(e)*g+this.cx,m=Math.sin(e)*g+this.cy,v=_.isEmpty()?R._BaseAxisView.__AXIS_LABEL_PADDING:_.top,w=Math.PI+(isNaN(i)?0:i*Math.PI/180),b=d.width/2*Math.abs(Math.sin(w))+d.height/2*Math.abs(Math.cos(w)),x=y+Math.sin(e)*(Math.max(r,l)+v+b),S=m-Math.cos(e)*(Math.max(r,l)+v+b),P=this._createLabelView(f,this._site().itemValue(c));P._labelRectangle(new R.models._RotatedRectangle(x,S,d.width,d.height,e-Math.PI+(isNaN(i)?0:i*Math.PI/180)+(isNaN(i)?Math.PI/2:0))),P.majorTickLine=new R._RotatedLine(y,m,s-r,r,e);var V=this._minorUnit();if(null==V||isNaN(V))null==(V=(p-(c instanceof Date?c.valueOf():c))/2)||isNaN(V)||this._scale()._minorUnit(V);else this._scale()._minorUnit(V);for(isNaN(u)&&(u=c+V);u<p;){var C=this._scale().value(u+this.__radiusoffset),A=Math.cos(e)*C+this.cx,D=Math.sin(e)*C+this.cy;u+=V,A==y&&D==m||P.minorTickLines.push(new R._RotatedLine(A,D,a-l,l,e))}this._labelViews().push(P)}t.restoreTransform()}},t.prototype.getProjectivePoint=function(t,e,i,n){var o=new R.core.Point;return o.y=0==e?(o.x=t.x,t.y):(o.x=(e*i+t.x/e+t.y-n)/(1/e+e),-1/e*(o.x-t.x)+t.y),o.x=R.core.toFixed(o.x,4,!1),o.y=R.core.toFixed(o.y,4,!1),o},t.prototype.getDistance=function(t,e,i){return R.core.toFixed(Math.sqrt((t.x-e)*(t.x-e)+(t.y-i)*(t.y-i)),2,!1)},t.prototype._layoutYAxis=function(x){var S=this;if(this._option().position!=R.AxisPosition.None){var P=this._getCorrectAngle();x.beginTransform(),R._applyTextStyle(x,this._textStyle()),R._applyLabelStyle(x,this._labelStyle());for(var V=this._position()==R.AxisPosition.Far,C=this._scale().ticks(),A=(this._position(),R.AxisPosition.Far,this._getTickHeightBelowAxis(x,this._majorTicks(),this._majorTickSize())),D=this._majorTickSize(),T=this._minorTickSize(),L=this._getTickHeightBelowAxis(x,this._minorTicks(),this._minorTickSize()),O=NaN,M=(this._option().titleStyle.padding,this._labelStyle().padding),t=function(t){var e=C[t],i=t>=C.length?null:C[t+1];k._isTimeAxis&&(e=new Date(e));var n=k._site().labelFromValue(e,k._scale().format()),o=x.measureString(n,R.__Constant_Core_Label_ClassName,k._styleClassName());k._labels()||(o.width=0,o.height=0);var r=k._scale().value(e),s=k.cx+Math.cos(r)*k.radius,a=k.cy+Math.sin(r)*k.radius,l=M.isEmpty()?R._BaseAxisView.__AXIS_LABEL_PADDING:M.bottom,_=k.cx+Math.cos(r)*(k.radius+Math.max(A,L)+l),u=k.cy+Math.sin(r)*(k.radius+Math.max(A,L)+l);V&&(_=k.cx+Math.cos(r)*(k.innerRadius*k.radius-Math.max(A,L)-l),u=k.cy+Math.sin(r)*(k.innerRadius*k.radius-Math.max(A,L)-l),s=k.cx+Math.cos(r)*(k.radius*k.innerRadius),a=k.cy+Math.sin(r)*(k.radius*k.innerRadius));var h=new R.models._RotatedRectangle(_,u,o.width,o.height,P*Math.PI/180),c=[h.leftTop,h.rightTop,h.rightBottom,h.leftBottom],p=c.map(function(t){return S.getProjectivePoint(t,R.core.toFixed(Math.tan(r%(2*Math.PI)),2,!1),S.cx,S.cy)}).map(function(t){return S.getDistance(t,S.cx,S.cy)}),f=Math.min.apply(Math,p),d=p.indexOf(f),g=p.lastIndexOf(f);V?(_-=_-(d==g?c[d].x:(c[d].x+c[g].x)/2),u-=u-(d==g?c[d].y:(c[d].y+c[g].y)/2)):(_+=_-(d==g?c[d].x:(c[d].x+c[g].x)/2),u+=u-(d==g?c[d].y:(c[d].y+c[g].y)/2));var y=k._createLabelView(n,k._site().itemValue(e));y._labelRectangle(new R.models._RotatedRectangle(_,u,o.width,o.height,P*Math.PI/180)),y.majorTickLine=new R._RotatedLine(s,a,A,D-A,r-Math.PI/2),V&&(y.majorTickLine=new R._RotatedLine(s,a,D-A,A,r-Math.PI/2));var m=k._minorUnit();null==m||isNaN(m)?null==(m=(i-(e instanceof Date?e.valueOf():e))/2)||isNaN(m)||k._scale()._minorUnit(m):k._scale()._minorUnit(m);for(isNaN(O)&&(O=e+m);O<i;){var v=k._scale().value(O),w=k.cx+Math.cos(v)*k.radius,b=k.cy+Math.sin(v)*k.radius;O+=m,w==s&&b==a||y.minorTickLines.push(new R._RotatedLine(w,b,L,T-L,v-Math.PI/2))}k._labelViews().push(y)},k=this,e=0;C&&e<C.length;++e)t(e);x.restoreTransform()}},t.prototype._render=function(t,e){if(this._position()!=R.AxisPosition.None){var i=this._startAngle();t.beginTransform(),R._applyGStyle(t,this._option().style),R._applyTextStyle(t,this._textStyle());var n=R.__Constant_Core_Grid_Line_Major_ClassName;this._GRIDLINE_WIDTH;if(this._option().position!=R.AxisPosition.None){t.startGroup(this._styleClassName()),this._vals={};this._getCorrectAngle(),this._option().type,R.AxisType.Y,this._position(),R.AxisPosition.Near;for(var o=0;o<this._labelViews().length;++o){var r=this._labelViews()[o];if(r)if(e.renderLabel)this._labels()&&r._render(t,e);else{if(this._majorGrid()){if(t.beginTransform(),R._applyLineStyle(t,this._defaultMajorGridStyle()),R._applyLineStyle(t,this._majorGridStyle()),this._option().type==R.AxisType.Y){var s=this.cx-Math.sin(r.majorTickLine.angle)*this.innerRadius*this.radius,a=this.cy+Math.cos(r.majorTickLine.angle)*this.innerRadius*this.radius;t.drawLine(r.majorTickLine.cx,r.majorTickLine.cy,s,a,n)}else if(this._option().type==R.AxisType.X){var l=isNaN(this.sweep)?this.sweep:360,_=Math.sqrt(Math.pow(r.majorTickLine.startPoint.x-this.cx,2)+Math.pow(r.majorTickLine.startPoint.y-this.cy,2));t.drawPieSegment(this.cx,this.cy,_,i*Math.PI/180,l*Math.PI/180,R.__Constant_Core_Grid_Line_Major_ClassName,{fill:"none"})}t.restoreTransform()}if(this._minorGrid()){if(t.beginTransform(),R._applyLineStyle(t,this._defaultMinorGridStyle()),R._applyLineStyle(t,this._minorGridStyle()),this._option().type==R.AxisType.Y)for(var u=0;u<r.minorTickLines.length;++u){var h=r.minorTickLines[u];s=this.cx-Math.sin(h.angle)*this.innerRadius*this.radius,a=this.cy+Math.cos(h.angle)*this.innerRadius*this.radius;t.drawLine(h.startPoint.x,h.startPoint.y,s,a,n)}else if(this._option().type==R.AxisType.X)for(u=0;u<r.minorTickLines.length;++u){h=r.minorTickLines[u],l=isNaN(this.sweep)?this.sweep:360,_=Math.sqrt(Math.pow(h.startPoint.x-this.cx,2)+Math.pow(h.startPoint.y-this.cy,2));t.drawPieSegment(this.cx,this.cy,_,i*Math.PI/180,l*Math.PI/180,R.__Constant_Core_Grid_Line_Minor_ClassName,{fill:"none"})}t.restoreTransform()}if(this._majorTicks()!=R.TickMark.None&&(t.beginTransform(),R._applyLineStyle(t,this._defaultMajorTickStyle()),R._applyLineStyle(t,this._majorTickStyle()),t.drawLine(r.majorTickLine.startPoint.x,r.majorTickLine.startPoint.y,r.majorTickLine.endPoint.x,r.majorTickLine.endPoint.y,R.__Constant_Core_Tick_Major_ClassName),t.restoreTransform()),this._minorTicks()!=R.TickMark.None){t.beginTransform(),R._applyLineStyle(t,this._defaultMinorTickStyle()),R._applyLineStyle(t,this._minorTickStyle());for(u=0;u<r.minorTickLines.length;++u){var c=r.minorTickLines[u];t.drawLine(c.startPoint.x,c.startPoint.y,c.endPoint.x,c.endPoint.y,R.__Constant_Core_Tick_Minor_ClassName)}t.restoreTransform()}}}e.renderLabel?this._titleView()._render(t,e):this._renderLine(t),t.endGroup(),t.restoreTransform()}}},t.prototype._renderLine=function(t){var e=this._startAngle();t.beginTransform();this._option().titleStyle.padding;R._applyLabelStyle(t,this._option().titleStyle);var i=R.__Constant_Core_Line_ClassName;if(this._option().type===R.AxisType.X){var n=this.cx+Math.cos(e)*this.radius,o=this.cy+Math.sin(e)*this.radius,r=this.cx+Math.cos(e)*this.innerRadius*this.radius,s=this.cy+Math.sin(e)*this.innerRadius*this.radius;t.beginTransform(),R._applyLineStyle(t,this._defaultLineStyle()),R._applyLineStyle(t,this._lineStyle()),t.drawLine(r,s,n,o,i,this._lineStyle()),t.restoreTransform()}else t.beginTransform(),R._applyLineStyle(t,this._defaultLineStyle()),R._applyLineStyle(t,this._lineStyle()),this._position()===R.AxisPosition.Far?t.drawPieSegment(this.cx,this.cy,this.radius*this.innerRadius,e,this.sweep,i,{fill:"none"}):t.drawPieSegment(this.cx,this.cy,this.radius,e,this.sweep,i,{fill:"none"}),t.restoreTransform();t.restoreTransform()},t.prototype.convert=function(t,e,i){return this._scale().value(t)},t.prototype._getMinNum=function(){return this._scale().min()},t.prototype._getMaxNum=function(){return this._scale().max()},t.prototype._invalidate=function(){},t.prototype._getAnnoNumber=function(t,e){var i=t?this._annoSize.height:this._annoSize.width,n=t?e.height:e.width;if(0<i&&0<n){var o=Math.floor(n/(i+6));return o<=0&&(o=1),o}return 10},t.prototype._hitTest=function(t){for(var e=0,i=this._labelViews();e<i.length;e++){var n=i[e]._hitTest(t);if(null!=n)return n}var o=this._titleView()._hitTest(t);return null!=o?o:r.prototype._hitTest.call(this,t)},t}(R._BaseAxisView);R._RadialAxisView=t}(dv||(dv={})),function(s){"use strict";var t=function(r){function t(t,e){var i=r.call(this,t._plotAreaView()._dvView().control._layer())||this;return i.__parent=t,i.__axisType=e,i.__axisViews=[],i}return __extends(t,r),t.prototype.parent=function(){return this.__parent},t.prototype._axisType=function(){return this.__axisType},t.prototype._axisViews=function(){return this.__axisViews},t.prototype._axisRect=function(t){var e;void 0===t&&(t=s.AxisPosition.Near);for(var i=this._axisViews(),n=0;n<i.length;n++){var o=i[n];o._position()===t&&(e=e?s.core.Rect.union(o._rectangle(),e):o._rectangle().clone())}return e},t.prototype._annoSize=function(){for(var t=new s.core.Size(0,0),e=this._axisViews(),i=0;i<e.length;i++)t.width=Math.max(t.width,e[i]._annoSize.width),t.height=Math.max(t.height,e[i]._annoSize.height);return t},t.prototype._canScroll=function(){var t=this.parent()._layoutView();if(t instanceof s._TrellisView||t instanceof s._TrellisCellLayoutView)return!1;var e=this.parent().type,i=this.parent()._xViewSize(),n=this.parent()._yViewSize();return"Radial"===e?1!==i||1!==n:this._axisType()===s.AxisType.X?1!==i:1!==n},t.prototype._add=function(t){this.__axisViews.push(t)},t.prototype._clear=function(){this.__axisViews.splice(0)},t.prototype._renderInnerContent=function(t,e,i){for(var n=this._axisViews(),o=0;o<n.length;o++){var r=n[o];r._scale()&&r._render(t,i)}},t.prototype._getLogicSize=function(){var t=this._rectangle(),e=(this.parent()._plotAreaView(),this.parent()._xViewSize()),i=this.parent()._yViewSize();return"Cartesian"===this.parent().type?this._axisType()===s.AxisType.X?new s.core.Size(t.width/e,t.height):new s.core.Size(t.width,t.height/i):new s.core.Size(t.width/e,t.height/i)},t.prototype._hitTestContent=function(t){var e=this._axisViews();if(0<e.length)for(var i=0,n=e.concat().reverse();i<n.length;i++){var o=n[i]._hitTest(t);if(null!=o)return o}return r.prototype._hitTestContent.call(this,t)},t}(s._ScrollableView);s._AxesView=t}(dv||(dv={})),function(r){"use strict";var t=function(o){function t(t,e,i){var n=o.call(this,t,e,i&&i._value)||this;return n.minorTickLines=[],n.__group=i,n}return __extends(t,o),t.prototype._group=function(){return this.__group},t.prototype.relatedModels=function(){for(var t=[],e=this._group()._items,i=0,n=this._axisView()._coordinateSystemView()._plotViews();i<n.length;i++)for(var o=0,r=n[i]._data().points;o<r.length;o++){var s=r[o];0===s.items.filter(function(t){return-1===e.indexOf(t)}).length&&t.push(s)}return t},t.prototype._renderContent=function(t,e){this._title()&&(this.__renderBg(t,e),this.__renderLabel(t,e)),this.__renderTick(t)},t.prototype.__renderBg=function(t,e){t.beginTransform(),r._applyGStyle(t,this._axisView()._style()),r._applyBackgroundColor(t,this._axisView()._style().backgroundColor||"none");var i=this._labelRectangle();t.drawPolygon([i.leftTop.x,i.rightTop.x,i.rightBottom.x,i.leftBottom.x],[i.leftTop.y,i.rightTop.y,i.rightBottom.y,i.leftBottom.y]),t.restoreTransform()},t.prototype.__renderLabel=function(t,e){var i=this._title();if(i){t.beginTransform(),r._applyLabelStyle(t,this._axisView()._labelStyle()),this._hover()&&r._applyTextStyle(t,this._axisView()._option().hoverStyle),t.startGroup(r.__Constant_Core_Label_ClassName);var n=this._labelRectangle();n.angle>Math.PI/2?t.drawStringRotated(i,n.rightTop,n.rightTop,180*n.angle/Math.PI+180):t.drawStringRotated(i,n.leftBottom,n.leftBottom,180*n.angle/Math.PI),t.endGroup(),t.restoreTransform()}},t.prototype.__renderTick=function(t){t.beginTransform(),r._applyLineStyle(t,this._defaultMajorTickStyle()),r._applyLineStyle(t,this._axisView()._majorTickStyle()),t.drawLine(this.majorTickLine.startPoint.x,this.majorTickLine.startPoint.y,this.majorTickLine.endPoint.x,this.majorTickLine.endPoint.y,r.__Constant_Core_Tick_Major_ClassName),t.restoreTransform()},t.prototype._defaultMajorTickStyle=function(){return new r.options._LineStyleOption({opacity:null,stroke:r.__Constant_Core_Style_Stroke,strokeWidth:1,strokeDasharray:null})},t.prototype._defaultMinorTickStyle=function(){return new r.options._LineStyleOption({opacity:null,stroke:r.__Constant_Core_Style_Stroke,strokeWidth:1,strokeDasharray:null})},t.prototype._defaultMajorGridStyle=function(){return new r.options._LineStyleOption({opacity:null,stroke:r.__Constant_Core_Style_Stroke,strokeWidth:1,strokeDasharray:null})},t.prototype._defaultMinorGridStyle=function(){return new r.options._LineStyleOption({opacity:null,stroke:r.__Constant_Core_Style_Stroke,strokeWidth:1,strokeDasharray:null})},t.prototype._hitTest=function(t){return null!=this._labelRectangle()&&this._labelRectangle().contains(t)?new r.HitTestResult(t,this,this,r.ElementType.AxisLabel):o.prototype._hitTest.call(this,t)},t}(r._BaseAxisLabelView);r._AxisGroupLabelViewModel=t}(dv||(dv={})),function(t){"use strict";var e=function(t){function e(){return t.call(this)||this}return __extends(e,t),e.prototype._measure=function(t){},e.prototype._render=function(t,e){},e}(t._View);t._AxisGroupViewModel=e}(dv||(dv={})),function(n){"use strict";var t=function(o){function t(t,e,i){var n=o.call(this)||this;return n.__degree=0,n.__axisView=t,n.__title=e,n.__tick=i,n}return __extends(t,o),t.prototype._title=function(){return this.__title},t.prototype._tick=function(){return this.__tick},t.prototype._location=function(t){if(arguments.length<=0)return this.__location;this.__location=t},t.prototype._center=function(t){if(arguments.length<=0)return this.__center;this.__center=t},t.prototype._degree=function(t){if(arguments.length<=0)return this.__degree;this.__degree=t},t.prototype._axisView=function(){return this.__axisView},t.prototype._renderContent=function(t,e){var i=this._axisView()._option();i.labels&&(t.beginTransform(),n._applyLabelStyle(t,i.labelStyle),t.drawStringRotated(this._title(),this._location(),this._center(),this._degree()),t.restoreTransform())},t}(n._View);n._AxisLabelView=t}(dv||(dv={})),function(t){"use strict";var e=function(i){function t(t,e){return i.call(this,t,e)||this}return __extends(t,i),t}(t._RadialAxisView);t._CircleAxisView=e}(dv||(dv={})),function(T){"use strict";var t=function(i){function t(t,e){return i.call(this,t,e)||this}return __extends(t,i),t.prototype._measure=function(t,e){var i=e.width;t.beginTransform(),T._applyGStyle(t,this._option().style),T._applyTextStyle(t,this._textStyle()),this._annoSize=this._calculateMaxLabelSize(t,this._createLabelViews()),this._actualAngle=void 0;var n=new T.core.Size(e.width,0);if(this._scale()._range([this._annoSize.width/2,i-this._annoSize.width/2]),this._annoSize=this._calculateMaxLabelSize(t,this._createLabelViews()),isNaN(this._majorUnit()))if(0<i){var o=i/(this._annoSize.width+6);this._scale().tickNumber(o<1?1:o)}else this._scale().tickNumber(1);var r=this._option().labelAngle[0];if(void 0===r&&(this._isOverlapped(t,i)?r=this._actualAngle=-45:this._actualAngle=0),this._labels()){var s=this._annoSize.height;if(r){var a=r*Math.PI/180,l=this._annoSize.width,_=this._annoSize.height;s=l*Math.abs(Math.sin(a))+_*Math.abs(Math.cos(a))}n.height+=s}t.beginTransform(),T._applyLabelStyle(t,this._option().titleStyle),n.height+=Math.max(this._getTickHeightBelowAxis(t,this._majorTicks(),this._majorTickSize()),this._getTickHeightBelowAxis(t,this._minorTicks(),this._minorTickSize()));var u=this._titleView()._measure(t,e);n.height+=u.height;var h=this._option().titleStyle.padding,c=this._labelStyle().padding;if(n.height+=h.isEmpty()?2*T._BaseAxisView.__AXIS_TITLE_PADDING:h.top+h.bottom,n.height+=c.isEmpty()?2*T._BaseAxisView.__AXIS_LABEL_PADDING:c.top+c.bottom,this._site().isOrdinal){T._applyLabelStyle(t,this._labelStyle());var p=this._option().labelAngle.slice(1);n.height+=this._getHeightOrdinal(t,p)}return t.restoreTransform(),t.restoreTransform(),this._measureSize=n=this._position()==T.AxisPosition.None?new T.core.Size(0,0):n,n},t.prototype._layout=function(t,e,i){this._rectangle(e);var n=i.LineCartesianCoordinateSystemContent;if(null!=n){n.width<0&&(n.width=0),n.height<0&&(n.height=0),this._plotrect=n,this._labelViews().length=0;var o=this._rectangle().left+this.offset.left,r=this._rectangle().width-(this.offset.left+this.offset.right);this._rectangle().top,this.offset.top,this._rectangle().height,this.offset.top,this.offset.bottom;this._scale()._reversed(this._option().reversed),this._scale()._majorUnit(this._majorUnit()),this._scale()._range([o,o+r]),this._layoutXAxis(t),null!=this.__site&&this.__site.isOrdinal&&this._layoutGroupAxis(t),this._overlappingLabels()!=T.OverlappingLabels.Show&&this._overlapAxis(),this._checkAxisline(t);var s=this._rectangle().clone(),a=this._position()==T.AxisPosition.Near,l=this._annoSize.height;if(this._getCorrectAngle()){var _=this._getCorrectAngle()*Math.PI/180,u=this._annoSize.width,h=this._annoSize.height;l=u*Math.abs(Math.sin(_))+h*Math.abs(Math.cos(_))}var c=this._labels()?l:0,p=Math.max(this._getTickHeightBelowAxis(t,this._majorTicks(),this._majorTickSize()),this._getTickHeightBelowAxis(t,this._minorTicks(),this._minorTickSize()));s.height-=c,s.height-=p,a?(s.top+=c,s.top+=p):s.height<=0&&(s.top-=c,s.top-=p),this._titleView()._layout(t,s,i)}},t.prototype._layoutXAxis=function(t){var e=this._option().position;if(e!=T.AxisPosition.None){var i=this._labelViews();i.length=0,t.beginTransform(),T._applyTextStyle(t,this._textStyle()),T._applyLabelStyle(t,this._labelStyle());var n=this._scale().ticks(),o=this._position()===T.AxisPosition.Far,r=this._getTickHeightBelowAxis(t,this._majorTicks(),this._majorTickSize()),s=this._majorTickSize(),a=this._minorTickSize(),l=this._getTickHeightBelowAxis(t,this._minorTicks(),this._minorTickSize()),_=this._scale().min(),u=this._labelStyle().padding,h=this._isTimeAxis&&this._scale()instanceof T._TimeAxisScale?1e3*T._timeSpan.fromDays(this._minorUnit()).TotalSeconds:this._minorUnit();Math.abs(h)<Math.abs(this._scale().max()-this._scale().min())/100&&(h=null),this._scale()._minorUnit(h);for(var c=this._getCorrectAngle(),p=0;n&&p<n.length;++p){var f=n[p],d=p>=n.length?null:n[p+1];this._isTimeAxis&&!this._site().isOrdinal&&(f=new Date(f));var g=this._site().labelFromValue(f,this._scale().format()),y=t.measureString(g,T.__Constant_Core_Label_ClassName,this._styleClassName());this._labels()||(y.width=0,y.height=0);var m=this._scale().value(f),v=u.isEmpty()?T._BaseAxisView.__AXIS_LABEL_PADDING:u.top,w=(this._rectangle().top,Math.max(r,l),this._rectangle().top);o&&(v=u.isEmpty()?T._BaseAxisView.__AXIS_LABEL_PADDING:u.bottom,this._rectangle().bottom-Math.max(r,l)-v,w=this._rectangle().bottom);var b=this._createLabelView(g,this._site().itemValue(f));if(e==T.AxisPosition.Far){var x=u.isEmpty()?T._BaseAxisView.__AXIS_LABEL_PADDING:u.bottom,S=this._rectangle().bottom-Math.max(r,l)-x,P=new T.core.Point(this._scale().value(f),S);b._labelRectangle(T.models._RotatedRectangle._fromBottomConnectingPoint(P,y,c*Math.PI/180))}else{x=u.isEmpty()?T._BaseAxisView.__AXIS_LABEL_PADDING:u.top;var V=this._rectangle().top+Math.max(r,l)+x;P=new T.core.Point(this._scale().value(f),V);b._labelRectangle(T.models._RotatedRectangle._fromTopConnectingPoint(P,y,c*Math.PI/180))}b.majorTickLine=new T._RotatedLine(m,w,r,s-r,o?Math.PI:0);var C=h;if(null==C||isNaN(C))null==(C=(d-(f instanceof Date?f.valueOf():f))/2)||isNaN(C)||this._scale()._minorUnit(C);for(;_<(p==n.length-1?this._scale().max():d);){var A=this._scale().value(_),D=w;_+=C,A!=m&&b.minorTickLines.push(new T._RotatedLine(A,D,l,a-l,o?Math.PI:0))}i.push(b)}t.restoreTransform()}},t.prototype._checkAxisline=function(t){t.beginTransform(),T._applyLineStyle(t,this._defaultLineStyle()),T._applyLineStyle(t,this._lineStyle());var e=this._position()==T.AxisPosition.Near;0<t.strokeWidth&&"transparent"!=t.stroke&&"#00000000"!=t.stroke&&"rgba(0,0,0,0)"!=t.stroke&&(this._axisLinePosition=e?this._rectangle().top:this._rectangle().bottom),t.restoreTransform()},t.prototype._calcAxisRange=function(t){if(!this._labels())return[0,t];var e=this._site(),i=0;e instanceof T.models._XSiteModel?i=e.padding():e instanceof T.models._XCategorySiteModel&&(i=e.padding());var n=this._getCorrectAngle();if(null!=n){var o=n*Math.PI/180,r=this._annoSize.width,s=this._annoSize.height,a=r*Math.abs(Math.cos(o))+s*Math.abs(Math.sin(o)),l=[.5*a,t-(0==i?s:0)],_=[0==i?s:0,t-.5*a];if(this._position()==T.AxisPosition.Far){if(0<n)return l;if(n<0)return _}else{if(0<n)return _;if(n<0)return l}}return.5==i||-.5==i?[0,t]:[.5*this._annoSize.width,t-.5*this._annoSize.width]},t.prototype._getClipRectangle=function(){var t=this._rectangle().clone(),e=this._getCorrectAngle(),i=this._annoSize.width/2;if(null!=e){var n=e*Math.PI/180,o=this._annoSize.width,r=this._annoSize.height;i=o*Math.abs(Math.cos(n))+r*Math.abs(Math.sin(n))}return t.left-=i,t.width+=2*i,t},t}(T._LineAxisView);T._HorizontalLineAxisView=t}(dv||(dv={})),function(r){"use strict";var t=function(o){function t(t,e,i){var n=o.call(this,t,e,i)||this;return n.minorTickLines=[],n}return __extends(t,o),t.prototype._axisView=function(){return o.prototype._axisView.call(this)},t.prototype._measure=function(t,e){null==e&&(e=new r.core.Size(Number.MAX_VALUE,Number.MAX_VALUE)),t.beginTransform(),r._applyTextStyle(t,this._axisView()._option().textStyle),r._applyLabelStyle(t,this._axisView()._option().labelStyle);var i=t.measureString(this._title(),r.__Constant_Core_Label_ClassName);return t.restoreTransform(),i},t.prototype._renderContent=function(t,e){this._title()&&(this.__renderBg(t,e),this.__renderLabel(t,e))},t.prototype.__renderBg=function(t,e){t.beginTransform(),r._applyGStyle(t,this._axisView()._style()),r._applyBackgroundColor(t,this._axisView()._style().backgroundColor||"none");var i=this._labelRectangle();t.drawPolygon([i.leftTop.x,i.rightTop.x,i.rightBottom.x,i.leftBottom.x],[i.leftTop.y,i.rightTop.y,i.rightBottom.y,i.leftBottom.y]),t.restoreTransform()},t.prototype.__renderLabel=function(t,e){var i=this._title();if(i){var n=this._labelRectangle(),o=this._axisView();t.beginTransform(),r._applyLabelStyle(t,o._labelStyle()),this._hover()&&r._applyTextStyle(t,o._option().hoverStyle),t.startGroup(r.__Constant_Core_Label_ClassName),n.angle>Math.PI/2?t.drawStringRotated(i,n.rightTop,n.rightTop,180*n.angle/Math.PI+180):t.drawStringRotated(i,n.leftBottom,n.leftBottom,180*n.angle/Math.PI),t.endGroup(),t.restoreTransform()}},t.prototype.__renderTick=function(t){if(this._axisView()._majorTicks()!=r.TickMark.None&&this.majorTickLine&&(t.beginTransform(),r._applyLineStyle(t,this._defaultMajorTickStyle()),r._applyLineStyle(t,this._axisView()._majorTickStyle()),t.drawLine(this.majorTickLine.startPoint.x,this.majorTickLine.startPoint.y,this.majorTickLine.endPoint.x,this.majorTickLine.endPoint.y,r.__Constant_Core_Tick_Major_ClassName),t.restoreTransform()),this._axisView()._minorTicks()!=r.TickMark.None){t.beginTransform(),r._applyLineStyle(t,this._defaultMinorTickStyle()),r._applyLineStyle(t,this._axisView()._minorTickStyle());for(var e=0;e<this.minorTickLines.length;++e){var i=this.minorTickLines[e];t.drawLine(i.startPoint.x,i.startPoint.y,i.endPoint.x,i.endPoint.y,r.__Constant_Core_Tick_Minor_ClassName)}t.restoreTransform()}},t.prototype._defaultMajorTickStyle=function(){return new r.options._LineStyleOption({opacity:null,stroke:r.__Constant_Core_Style_Stroke,strokeWidth:1,strokeDasharray:null})},t.prototype._defaultMinorTickStyle=function(){return new r.options._LineStyleOption({opacity:null,stroke:r.__Constant_Core_Style_Stroke,strokeWidth:1,strokeDasharray:null})},t.prototype._defaultMajorGridStyle=function(){return new r.options._LineStyleOption({opacity:null,stroke:r.__Constant_Core_Style_Stroke,strokeWidth:1,strokeDasharray:null})},t.prototype._defaultMinorGridStyle=function(){return new r.options._LineStyleOption({opacity:null,stroke:r.__Constant_Core_Style_Stroke,strokeWidth:1,strokeDasharray:null})},t.prototype._hitTest=function(t){var e=this._labelRectangle();return null!=e&&e.contains(t)?new r.HitTestResult(t,this,this,r.ElementType.AxisLabel):o.prototype._hitTest.call(this,t)},t}(r._BaseAxisLabelView);r._LineAxisLabelView=t}(dv||(dv={})),function(r){"use strict";var t=function(o){function t(t,e,i){var n=o.call(this,t,e,i)||this;return n.minorTickLines=[],n}return __extends(t,o),t.prototype._axisView=function(){return o.prototype._axisView.call(this)},t.prototype._renderContent=function(t,e){this._title()&&(this.__renderBg(t,e),this.__renderLabel(t,e))},t.prototype.__renderBg=function(t,e){t.beginTransform(),r._applyGStyle(t,this._axisView()._style()),r._applyBackgroundColor(t,this._axisView()._style().backgroundColor||"none");var i=this._labelRectangle();t.drawPolygon([i.leftTop.x,i.rightTop.x,i.rightBottom.x,i.leftBottom.x],[i.leftTop.y,i.rightTop.y,i.rightBottom.y,i.leftBottom.y]),t.restoreTransform()},t.prototype.__renderLabel=function(t,e){var i=this._title();if(null!=i){t.beginTransform(),t.startGroup(r.__Constant_Core_Label_ClassName),r._applyLabelStyle(t,this._axisView()._labelStyle());var n=this._labelRectangle();t.drawStringRotated(i,n.leftBottom,n.leftBottom,180*n.angle/Math.PI),t.endGroup(),t.restoreTransform()}},t.prototype._hitTest=function(t){var e=this._labelRectangle();return null!=e&&e.contains(t)?new r.HitTestResult(t,this,this,r.ElementType.AxisLabel):o.prototype._hitTest.call(this,t)},t}(r._BaseAxisLabelView);r._RadialAxisLabelView=t}(dv||(dv={})),function(D){"use strict";var t=function(i){function t(t,e){return i.call(this,t,e)||this}return __extends(t,i),t.prototype._measure=function(t,e){var i=e.width;t.beginTransform(),D._applyGStyle(t,this._option().style),D._applyTextStyle(t,this._textStyle()),this._annoSize=this._calculateMaxLabelSize(t,this._createLabelViews()),this._actualAngle=void 0;var n=new D.core.Size(e.width,0);if(this._scale()._range([this._annoSize.height/2,i-this._annoSize.height/2]),this._annoSize=this._calculateMaxLabelSize(t,this._createLabelViews()),isNaN(this._majorUnit()))if(0<i){var o=i/(this._annoSize.height+6);this._scale().tickNumber(o<1?1:o)}else this._scale().tickNumber(1);if(this._labels()){var r=this._option().labelAngle[0],s=this._annoSize.width;if(r){var a=r*Math.PI/180,l=this._annoSize.width,_=this._annoSize.height;s=l*Math.abs(Math.cos(a))+_*Math.abs(Math.sin(a))}n.height+=s}t.beginTransform(),D._applyLabelStyle(t,this._option().titleStyle),n.height+=Math.max(this._getTickHeightBelowAxis(t,this._majorTicks(),this._majorTickSize()),this._getTickHeightBelowAxis(t,this._minorTicks(),this._minorTickSize()));var u=this._titleView()._measure(t,e);n.height+=u.height;var h=this._option().titleStyle.padding,c=this._labelStyle().padding;if(n.height+=h.isEmpty()?2*D._BaseAxisView.__AXIS_TITLE_PADDING:h.left+h.right,n.height+=c.isEmpty()?2*D._BaseAxisView.__AXIS_LABEL_PADDING:c.left+c.right,this._site().isOrdinal){D._applyLabelStyle(t,this._labelStyle());var p=this._option().labelAngle.slice(1);n.height+=this._getHeightOrdinal(t,p)}return t.restoreTransform(),t.restoreTransform(),this._measureSize=n=this._position()==D.AxisPosition.None?new D.core.Size(0,0):n,n},t.prototype._layout=function(t,e,i){this._rectangle(new D.core.Rect(e.left,e.top,e.height,e.width));var n=i.LineCartesianCoordinateSystemContent;if(null!=n){n.width<0&&(n.width=0),n.height<0&&(n.height=0),this._plotrect=n,this._labelViews().length=0;this._rectangle().left,this.offset.left,this._rectangle().width,this.offset.left,this.offset.right;var o=this._rectangle().top+this.offset.top,r=this._rectangle().height-(this.offset.top+this.offset.bottom);this._scale()._reversed(this._option().reversed),this._scale()._majorUnit(this._majorUnit()),this._scale()._range([o+r,o]),this._layoutYAxis(t),null!=this.__site&&this.__site.isOrdinal&&this._layoutGroupAxis(t),this._overlappingLabels()!=D.OverlappingLabels.Show&&this._overlapAxis(),this._checkAxisline(t);var s=this._rectangle().clone(),a=this._position()==D.AxisPosition.Near,l=this._annoSize.width;if(this._getCorrectAngle()){var _=this._getCorrectAngle()*Math.PI/180,u=this._annoSize.width,h=this._annoSize.height;l=u*Math.abs(Math.cos(_))+h*Math.abs(Math.sin(_))}var c=this._labels()?l:0,p=Math.max(this._getTickHeightBelowAxis(t,this._majorTicks(),this._majorTickSize()),this._getTickHeightBelowAxis(t,this._minorTicks(),this._minorTickSize()));s.width-=c,s.width-=p,a?s.width<=0&&(s.left-=c,s.left-=p):(s.left+=c,s.left+=p),this._titleView()._layout(t,s,i)}},t.prototype._layoutYAxis=function(t){var e=this._option().position;if(e!=D.AxisPosition.None){t.beginTransform(),D._applyTextStyle(t,this._textStyle()),D._applyLabelStyle(t,this._labelStyle());var i=this._scale().ticks(),n=this._position()===D.AxisPosition.Far,o=this._getTickHeightBelowAxis(t,this._majorTicks(),this._majorTickSize()),r=this._majorTickSize(),s=this._minorTickSize(),a=this._getTickHeightBelowAxis(t,this._minorTicks(),this._minorTickSize()),l=this._scale().min(),_=this._labelStyle().padding,u=this._isTimeAxis&&this._scale()instanceof D._TimeAxisScale?1e3*D._timeSpan.fromDays(this._minorUnit()).TotalSeconds:this._minorUnit();Math.abs(u)<Math.abs(this._scale().max()-this._scale().min())/100&&(u=null),this._scale()._minorUnit(u);for(var h=this._getCorrectAngle(),c=0;i&&c<i.length;++c){var p=i[c],f=c>=i.length?null:i[c+1];this._isTimeAxis&&!this._site().isOrdinal&&(p=new Date(p));var d=this._site().labelFromValue(p,this._scale().format()),g=t.measureString(d,D.__Constant_Core_Label_ClassName,this._styleClassName());this._labels()||(g.width=0,g.height=0);var y=this._scale().value(p),m=_.isEmpty()?D._BaseAxisView.__AXIS_LABEL_PADDING:_.right,v=(this._rectangle().right,Math.max(o,a),this._rectangle().right);n&&(m=_.isEmpty()?D._BaseAxisView.__AXIS_LABEL_PADDING:_.left,this._rectangle().left+Math.max(o,a)+m,v=this._rectangle().left);var w=this._createLabelView(d,this._site().itemValue(p));if(e==D.AxisPosition.Far){var b=_.isEmpty()?D._BaseAxisView.__AXIS_LABEL_PADDING:_.left,x=this._rectangle().left+Math.max(o,a)+b,S=new D.core.Point(x,this._scale().value(p));w._labelRectangle(D.models._RotatedRectangle._fromLeftConnectingPoint(S,g,h*Math.PI/180))}else{b=_.isEmpty()?D._BaseAxisView.__AXIS_LABEL_PADDING:_.right;var P=this._rectangle().right-Math.max(o,a)-b;S=new D.core.Point(P,this._scale().value(p));w._labelRectangle(D.models._RotatedRectangle._fromRightConnectingPoint(S,g,h*Math.PI/180))}w.majorTickLine=new D._RotatedLine(v,y,o,r-o,Math.PI/2*(n?-1:1));var V=u;if(null==V||isNaN(V))null==(V=(f-(p instanceof Date?p.valueOf():p))/2)||isNaN(V)||this._scale()._minorUnit(V);for(;l<(c==i.length-1?this._scale().max():f);){var C=this._scale().value(l),A=v;l+=V,C!=y&&w.minorTickLines.push(new D._RotatedLine(A,C,a,s-a,Math.PI/2*(n?-1:1)))}this._labelViews().push(w)}t.restoreTransform()}},t.prototype._checkAxisline=function(t){t.beginTransform(),D._applyLineStyle(t,this._defaultLineStyle()),D._applyLineStyle(t,this._lineStyle());var e=this._position()==D.AxisPosition.Near;0<t.strokeWidth&&"transparent"!=t.stroke&&"#00000000"!=t.stroke&&"rgba(0,0,0,0)"!=t.stroke&&(this._axisLinePosition=e?this._rectangle().right:this._rectangle().left),t.restoreTransform()},t.prototype._calcAxisRange=function(t){return[.5*this._annoSize.height,t-.5*this._annoSize.height]},t.prototype._getClipRectangle=function(){var t=this._rectangle().clone(),e=this._getCorrectAngle(),i=this._annoSize.height/2,n=0;if(null!=e){var o=e*Math.PI/180,r=this._annoSize.width,s=this._annoSize.height;i=r*Math.abs(Math.sin(o))+s*Math.abs(Math.cos(o)),n=r*Math.abs(Math.cos(o))+s*Math.abs(Math.sin(o))}return t.top-=i,t.height+=2*i,t.width+=n/2,t},t}(D._LineAxisView);D._VerticalLineAxisView=t}(dv||(dv={})),function(g){"use strict";var t=function(d){function t(t){return d.call(this,t)||this}return __extends(t,d),t.prototype._axisView=function(){return d.prototype._axisView.call(this)},t.prototype._renderInnerContent=function(t,e,i){if(t.beginTransform(),this._applyStyle(t),this._axisView()._option().type==g.AxisType.Y){var n=this._overflowRenderString(),o=this._axisView()._position()==g.AxisPosition.Near,r=g.__Constant_Core_Title_ClassName,s=o?-90:90,a=(this._measure(t,new g.core.Size(e.width,e.height)),new g.core.Point(e.left+.5*e.width,e.top+.5*e.height));e=new g.core.Rect(a.x-e.height/2,a.y-e.width/2,e.height,e.width);for(var l=new g.core.Size(0,0),_=0,u=this._lines();_<u.length;_++){if(null!=(f=u[_])&&0<f.length){var h=t.measureMultipleStrings(f,e.width,n);l.height+=h.height}}switch(this._vAlign()){case g.VAlign.Top:break;case g.VAlign.Bottom:e.top=e.bottom-l.height;break;default:e.top=e.top+(e.height-l.height)/2}for(var c=0,p=this._lines();c<p.length;c++){var f;if(null!=(f=p[c])&&0<f.length){h=t.measureMultipleStrings(f,e.width,n);switch(e.height=h.height,this._hAlign()){case g.HAlign.Left:t.drawMultipleStrings(f,e,"Left",n,r,null,null,s);break;case g.HAlign.Right:t.drawMultipleStrings(f,e,"Right",n,r,null,null,s);break;default:t.drawMultipleStrings(f,e,"Center",n,r,null,null,s)}e.top+=h.height}}}else d.prototype._renderInnerContent.call(this,t,e,i);t.restoreTransform()},t}(g._BaseAxisTitleView);g._LineAxisTitleView=t}(dv||(dv={})),function(Q){"use strict";var t=function(Z){function t(){return null!==Z&&Z.apply(this,arguments)||this}return __extends(t,Z),Object.defineProperty(t.prototype,"type",{get:function(){return"Cartesian"},enumerable:!0,configurable:!0}),t.prototype._axisX=function(){return Z.prototype._axisX.call(this)},t.prototype._axisY=function(){return Z.prototype._axisY.call(this)},t.prototype._axisXViews=function(){return Z.prototype._axisXViews.call(this)},t.prototype._axisYViews=function(){return Z.prototype._axisYViews.call(this)},t.prototype._layout=function(t,e,i){this._initPlotViews(t,e,i);for(var n=e.width,o=e.height,r=0,s=0,a=n,l=o,_=0,u=0,h=n,c=o,p=0,f=this._xAxesView(),d=this._yAxesView(),g=f._canScroll()?this._xViewSize():1,y=d._canScroll()?this._yViewSize():1,m=this._axisYViews().slice().concat(this._axisXViews()),v=0;v<m.length;v++){if((X=m[v])._scale()){var w=X._origin();X._applyOptionToScale(X._option(),X._scale()),X._option().type==Q.AxisType.X?Q.core.isNumber(w)&&this._axisY()&&(w<this._axisY()._getMinNum()?null==this._axisY()._option().min?this._axisY()._scale()._domain([w,this._axisY()._scale()._domain()[1]]):X._actualOrigin=this._axisY()._getMinNum():w>this._axisY()._getMaxNum()&&(null==this._axisY()._option().max?this._axisY()._scale()._domain([this._axisY()._scale()._domain()[0],w]):X._actualOrigin=this._axisY()._getMaxNum())):X._option().type==Q.AxisType.Y&&Q.core.isNumber(w)&&this._axisX()&&(null==this._axisX()._option().min&&w<this._axisX()._getMinNum()?null==this._axisX()._option().min?this._axisX()._scale()._domain([w,this._axisX()._scale()._domain()[1]]):X._actualOrigin=this._axisX()._getMinNum():null==this._axisX()._option().max&&w>this._axisX()._getMaxNum()&&(null==this._axisX()._option().max?this._axisX()._scale()._domain([this._axisX()._scale()._domain()[0],w]):X._actualOrigin=this._axisX()._getMaxNum()))}}for(v=0;v<m.length;v++){if((X=m[v])._scale()){var b=X.getPosition();if(X._option().type==Q.AxisType.X){var x=void 0,S=void 0,P=X._option().height,V=X._option().maxHeight;null!=V&&("number"==typeof V?x=V*o:"string"==typeof V&&(x=Q.core._Parser._parseCssPixel(V))),null!=P&&("number"==typeof P?S=x=P*o:"string"==typeof P&&(S=x=Q.core._Parser._parseCssPixel(P)));var C=X._measure(t,new Q.core.Size(n/g-p,x||o));null!=S?C.height=S:C.height>x&&(C.height=x),C.height,X._desiredSize=new Q.core.Size(n,C.height);var A=this._calcAxisRange(X,n);b==Q.Position.Bottom?(r=Math.max(r,A[0]),a=Math.min(a,A[1]),c-=C.height):b==Q.Position.Top&&(r=Math.max(r,A[0]),a=Math.min(a,A[1]),u+=C.height)}else if(X._option().type==Q.AxisType.Y){var D=void 0,T=void 0,L=X._option().width,O=X._option().maxWidth;null!=O&&("number"==typeof O?D=O*n:"string"==typeof O&&(D=Q.core._Parser._parseCssPixel(O))),null!=L&&("number"==typeof L?T=D=L*n:"string"==typeof L&&(T=D=Q.core._Parser._parseCssPixel(L)));var M=X._measure(t,new Q.core.Size(o/y,D||n));null!=T?M.height=T:M.height>D&&(M.height=D),p+=M.height,X._desiredSize=new Q.core.Size(o,M.height);A=this._calcAxisRange(X,o);b==Q.Position.Left?(s=Math.max(s,A[0]),l=Math.min(l,A[1]),_+=M.height):b==Q.Position.Right&&(s=Math.max(s,A[0]),l=Math.min(l,A[1]),h-=M.height)}}}r=_=Math.max(r,_)+e.left,a=h=Math.min(a,h)+e.left,s=u=Math.max(s,u)+e.top,l=c=Math.min(l,c)+e.top;for(v=0;v<m.length;++v){(X=m[v])._scale()&&(X._option().type==Q.AxisType.Y&&X._measure(t,new Q.core.Size(l-s,X._desiredSize.height)))}n=Math.max(1,a-r),o=Math.max(1,l-s);for(v=0;v<m.length;++v){var k=m[v];if(k._scale()){var R=void 0,N=0,E=0;k._option().type==Q.AxisType.X?E=(N=r+k.offset.left)+((E=N+n-(k.offset.left+k.offset.right))-N)/g:k._option().type==Q.AxisType.Y&&(N=(E=s+k.offset.top)+((N=E+o-(k.offset.top+k.offset.bottom))-E)/y),k._scale()._range([N,E])}}for(v=0;v<m.length;v++){if((X=m[v])._scale()){w=X._getAcutalOrigin(),b=X.getPosition();if(X._option().type==Q.AxisType.X){if(X._hasOrigin=Q.core.isNumber(w)&&this._axisY()&&w>=this._axisY()._getMinNum()&&w<=this._axisY()._getMaxNum(),X._hasOrigin){var I=this._axisY()._scale().value(w),F=this._axisY()._scale().endPosition,j=(B=this._axisY()._scale().startPosition)-F;A=this._calcAxisRange(this._axisY(),j);if(b==Q.Position.Top){var z=j*(1-(H=1-(I-F)/j))/H;(G=X._desiredSize.height-A[0])<z&&(z=G),s-=z,u-=z,o+=z,this._axisY()._scale()._range([F-z,B])}else if(b==Q.Position.Bottom){z=j*(1-(H=1-(B-I)/j))/H;(G=X._desiredSize.height-(j-A[1]))<z&&(z=G),l+=z,c+=z,o+=z,this._axisY()._scale()._range([F,B+z])}X._hasOrigin=Q.core.isNumber(w)&&this._axisY()&&w>=this._axisY()._getMinNum()&&w<=this._axisY()._getMaxNum()}}else if(X._option().type==Q.AxisType.Y&&(X._hasOrigin=Q.core.isNumber(w)&&this._axisX()&&w>=this._axisX()._getMinNum()&&w<=this._axisX()._getMaxNum(),X._hasOrigin)){var B;I=this._axisX()._scale().value(w),F=this._axisX()._scale().startPosition,j=(B=this._axisX()._scale().endPosition)-F,A=this._calcAxisRange(this._axisX(),j);if(b==Q.Position.Left){z=j*(1-(H=1-(I-F)/j))/H;(G=X._desiredSize.height-A[0])<z&&(z=G),r-=z,_-=z,n+=z,this._axisX()._scale()._range([F-z,B])}else if(b==Q.Position.Right){var H,G;z=j*(1-(H=1-(B-I)/j))/H;(G=X._desiredSize.height-(j-A[1]))<z&&(z=G),a+=z,h+=z,n+=z,this._axisX()._scale()._range([F,B+z])}X._hasOrigin=Q.core.isNumber(w)&&this._axisX()&&w>=this._axisX()._getMinNum()&&w<=this._axisX()._getMaxNum()}}}this._plotRect=new Q.core.Rect(r,s,n/g,o/y);var W=new Q.core.Rect(r,s,n,o);f._clear(),d._clear();for(v=0;v<m.length;v++){var X;if((X=m[v])._scale()){w=X._getAcutalOrigin(),b=X.getPosition();if(X._option().type==Q.AxisType.X){var U=void 0;if(X._hasOrigin){var Y=this._axisY()._scale().value(w);b==Q.Position.Bottom?(Y=Math.max(W.top,Math.min(Y,c)),U=new Q.core.Rect(r,Y,n,X._desiredSize.height),c+=Math.max(0,U.bottom-W.bottom)):b==Q.Position.Top?(Y-=X._desiredSize.height,Y=Math.max(u-X._desiredSize.height,Math.min(Y,W.bottom-X._desiredSize.height)),U=new Q.core.Rect(r,Y,n,X._desiredSize.height),u-=Math.max(0,W.top-U.top)):U=new Q.core.Rect(r,u,n,1)}else b==Q.Position.Bottom?(U=new Q.core.Rect(r,c,n,X._desiredSize.height),c+=X._desiredSize.height):b==Q.Position.Top?(U=new Q.core.Rect(r,u-X._desiredSize.height,n,X._desiredSize.height),u-=X._desiredSize.height):U=new Q.core.Rect(r,u,n,1);R=new Q.core.Rect(U.left,U.top,U.width/g,U.height);var q=new Q.core.Rect(W.left,W.top,W.width/g,W.height);i.LineCartesianCoordinateSystemContent=q.clone(),X._layout(t,R,i),delete i.LineCartesianCoordinateSystemContent,f._add(X)}else if(X._option().type==Q.AxisType.Y){var K=void 0;if(X._hasOrigin){I=this._axisX()._scale().value(w);b==Q.Position.Left?(I-=X._desiredSize.height,I=Math.max(_-X._desiredSize.height,Math.min(I,W.right-X._desiredSize.height)),K=new Q.core.Rect(I,s,o,X._desiredSize.height),_-=X._desiredSize.height):b==Q.Position.Right?(I=Math.max(W.left,Math.min(I,h)),K=new Q.core.Rect(I,s,o,X._desiredSize.height),h+=X._desiredSize.height):K=new Q.core.Rect(r,u,o,1)}else b==Q.Position.Left?(K=new Q.core.Rect(_-X._desiredSize.height,s,o,X._desiredSize.height),_-=X._desiredSize.height):b==Q.Position.Right?(K=new Q.core.Rect(h,s,o,X._desiredSize.height),h+=X._desiredSize.height):K=new Q.core.Rect(_,s,o,1);R=new Q.core.Rect(K.left,K.top,K.width/y,K.height),q=new Q.core.Rect(W.left,W.top,W.width,W.height/y);i.LineCartesianCoordinateSystemContent=q.clone(),X._layout(t,R,i),delete i.LineCartesianCoordinateSystemContent,d._add(X)}}}d._layout(t,Q.core.Rect.intersection(this._getYAxesViewRect(W),e),i),f._layout(t,Q.core.Rect.intersection(this._getXAxesViewRect(W),e),i),Z.prototype._layout.call(this,t,W,i)},t.prototype._initPlotViews=function(t,e,i){for(var n=0,o=this._plotViews();n<o.length;n++){var r=o[n];r._layoutStack(),r._initAxisScale(),r._initAxis(t,e)}},t.prototype._renderContent=function(t,e){if(!e.renderLabel){t.beginTransform(),null!=this.plotRect&&(Q._applyStyle(t,{strokeWidth:0}),this._layoutView()instanceof Q._TrellisColumnView||this._applyBackgroundStyle(t),null!=t.fill&&"transparent"!=t.fill&&"none"!=t.fill&&t.drawRect(this.plotRect.left,this.plotRect.top,this.plotRect.width,this.plotRect.height),Q._applyStyle(t,{fill:"none"}),this._layoutView()instanceof Q._TrellisColumnView||this._applyInnerBorderStyle(t),null!=t.strokeWidth&&0<t.strokeWidth&&t.drawRect(this.plotRect.left,this.plotRect.top,this.plotRect.width,this.plotRect.height)),t.restoreTransform();for(var i=this._axisYViews().slice().concat(this._axisXViews()),n=[],o=[],r=0,s=i;r<s.length;r++){(l=s[r])._option().type===Q.AxisType.X?n.push(l._axisLinePosition):l._option().type==Q.AxisType.Y&&o.push(l._axisLinePosition)}for(var a=0;a<i.length;a++){var l;(l=i[a])._scale()&&(l._option().type===Q.AxisType.X?l._allAxisLinePosition=o:l._option().type===Q.AxisType.Y&&(l._allAxisLinePosition=n))}}this._renderAxes(t,e),Z.prototype._renderContent.call(this,t,e)},t.prototype._createAxisView=function(t){return t.type==Q.AxisType.X?new Q._HorizontalLineAxisView(this,t):t.type==Q.AxisType.Y?new Q._VerticalLineAxisView(this,t):(Q._assertDebug(function(){return!1}),null)},t.prototype._calcAxisRange=function(t,e){return t._calcAxisRange(e)},t.prototype._getYAxesViewRect=function(t){var e=this._yAxesView(),i=t.clone(),n=.5*e._annoSize().height;i.top-=n,i.height+=n;var o=e._axisRect(Q.AxisPosition.Near);o&&(i.left-=o.width,i.width+=o.width);var r=e._axisRect(Q.AxisPosition.Far);return r&&(i.width+=r.width),i},t.prototype._getXAxesViewRect=function(t){var e=this._xAxesView(),i=t.clone(),n=e._axisRect(Q.AxisPosition.Near);n&&(i.height+=n.height);var o=e._axisRect(Q.AxisPosition.Far);return o&&(i.top-=o.height,i.height+=o.height),i},t.prototype._renderAxes=function(t,e){this._xAxesView()._render(t,e),this._yAxesView()._render(t,e)},Object.defineProperty(t.prototype,"plotRect",{get:function(){return this._plotRect},enumerable:!0,configurable:!0}),t}(Q._CartesianCoordinateSystemView);Q._LineCartesianCoordinateSystemView=t}(dv||(dv={})),function(p){"use strict";var t=function(c){function t(t,e){var i=c.call(this)||this;return i.__axisLabelViews=[],i.__option=t,i.__scale=e,i}return __extends(t,c),t.prototype._scale=function(){return this.__scale},t.prototype._option=function(){return this.__option},t.prototype._format=function(){return this._option().format},t.prototype._axisLabelViews=function(){return this.__axisLabelViews},t.prototype._styleClassName=function(){return null},t.prototype._defaultLineStyle=function(){return new p.options._LineStyleOption({opacity:null,stroke:p.__Constant_Core_Style_Stroke,strokeWidth:1,strokeDasharray:null})},t.prototype._defaultMajorTickStyle=function(){return new p.options._LineStyleOption({opacity:null,stroke:p.__Constant_Core_Style_Stroke,strokeWidth:1,strokeDasharray:null})},t.prototype._defaultMinorTickStyle=function(){return new p.options._LineStyleOption({opacity:null,stroke:p.__Constant_Core_Style_Stroke,strokeWidth:1,strokeDasharray:null})},t.prototype._majorTickSize=function(){var t=this._option();return null==t.majorTickSize?4:t.majorTickSize},t.prototype._minorTickSize=function(){var t=this._option();return null==t.minorTickSize?2:t.minorTickSize},t.prototype._layout=function(t,e,i){c.prototype._layout.call(this,t,e,i);var n=p.plugins._Plugins._stringFormatting("Default"),o=this._format(),r=this._option();t.beginTransform(),p._applyLineStyle(t,this._defaultMajorTickStyle()),p._applyLineStyle(t,r.majorTickStyle);for(var s=this._scale(),a=0,l=s.ticks();a<l.length;a++){var _=l[a],u=(s.value(_),n.format(o,_)),h=this._createAxisLabelView(u,_);null!=h&&this._axisLabelViews().push(h)}t.restoreTransform()},t.prototype._renderContent=function(t,e){t.beginTransform();var i=this._styleClassName();null!=i&&0<i.length?(t.startGroup(this._styleClassName()),this._renderAxis(t,e),t.endGroup()):this._renderAxis(t,e),t.restoreTransform()},t.prototype._renderAxis=function(t,e){},t.prototype._createAxisLabelView=function(t,e){return new p._AxisLabelView(this,t,e)},t}(p._View);p._AxisView=t}(dv||(dv={})),function(r){"use strict";var t=function(o){function s(t,e,i){var n=o.call(this,e,new r._LinearAxisScale)||this;return n.__plotView=t,n.__dimension=i,n}return __extends(s,o),s.prototype._dimension=function(){return this.__dimension},s.prototype._plotView=function(){return this.__plotView},s.prototype._format=function(){var t=this._option().format;return null!=t?t:this._dimension()._fieldDefinition()._format()},s.prototype._styleClassName=function(){return r.__Constant_Core_Axis_Y_ClassName},s.prototype._toLocation=function(t){return null},s.prototype._initScale=function(){var t=this._scale(),e=this._dimension(),i=e._minimum(),n=e._maximum(),o=this._option().min;null!=o&&"number"==typeof o&&(i=o);var r=this._option().max;null!=r&&"number"==typeof r&&(n=r),0<(i-=(n-i)*s.__Constant_Minimum_Space)?t._domain([i,n]):t._domain([0,n])},s.__Constant_Minimum_Space=.25,s}(r._AxisView);r._ParallelAxisView=t}(dv||(dv={})),function(i){"use strict";var t=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return __extends(e,t),e.prototype._measure=function(t,e){return new i.core.Size(0,0)},e}(i._ParallelAxisView);i._LineParallelAxisView=t}(dv||(dv={})),function(y){"use strict";var t=function(g){function t(){return null!==g&&g.apply(this,arguments)||this}return __extends(t,g),t.prototype._toLocation=function(t){var e=this._scale().value(t);if(null==e||isNaN(e))return null;var i=this._axisDegree()*Math.PI/180,n=new y.core.Size(Math.cos(i),Math.sin(i));return new y.core.Point(this.center.x+e*n.width,this.center.y+e*n.height)},t.prototype._layout=function(t,e,i){g.prototype._layout.call(this,t,e,i);var n=this._option(),o=this._scale(),r=this._axisDegree()*Math.PI/180,s=new y.core.Size(Math.cos(r),Math.sin(r)),a=this._majorTickSize(),l=a*s.height,_=a*s.width;t.beginTransform(),y._applyLineStyle(t,this._defaultMajorTickStyle()),y._applyLineStyle(t,n.majorTickStyle);for(var u=0,h=this._axisLabelViews();u<h.length;u++){var c=h[u],p=o.value(c._tick()),f=t.measureString(c._title()),d=this._calculateMajorLabelLocation(n,s,l,_,p,f);c._location(d.location),c._center(d.center),c._degree(d.degree)}t.restoreTransform()},t.prototype._axisDegree=function(){var t=this._plotView()._option().config.startAngle+this.degree-180;return t<0?t=t%360+360:t%=360,t},t.prototype._initScale=function(){g.prototype._initScale.call(this),this._scale()._range([0,this.radius])},t.prototype._renderAxis=function(t,e){this._option();var i=this._axisDegree()*Math.PI/180,n=new y.core.Size(Math.cos(i),Math.sin(i));this._renderAxisLine(t,n);for(var o=this._majorTickSize(),r=o*n.height,s=o*n.width,a=this._scale(),l=0,_=a.ticks();l<_.length;l++){var u=_[l],h=a.value(u);this._drawMajorTick(t,h,r,s,n)}for(var c=0,p=this._axisLabelViews();c<p.length;c++){p[c]._render(t,e)}},t.prototype._renderAxisLine=function(t,e){var i=this._option();i.axisLine&&(t.beginTransform(),y._applyLineStyle(t,this._defaultLineStyle()),y._applyLineStyle(t,i.lineStyle),t.drawLine(this.center.x,this.center.y,this.center.x+this.radius*e.width,this.center.y+this.radius*e.height),t.restoreTransform())},t.prototype._drawMajorTick=function(t,e,i,n,o){var r=this._option();if(r.majorTicks!=y.TickMark.None){t.beginTransform(),y._applyLineStyle(t,this._defaultMajorTickStyle()),y._applyLineStyle(t,r.majorTickStyle);var s=this._calculateMajorTickLocation(r,o,i,n,e);t.drawLine(s.start.x,s.start.y,s.end.x,s.end.y),t.restoreTransform()}},t.prototype._drawMajorLabel=function(t,e,i){if(i.option.labels){t.beginTransform(),y._applyLabelStyle(t,i.option.labelStyle);var n=i.stringFormatting.format(this._format(),e),o=t.measureString(n),r=null!=i.option.labelAngle&&i.option.labelAngle instanceof Array&&0<i.option.labelAngle.length?Math.round(i.option.labelAngle[0]):0,s=i.degree;if(0==r){var a=void 0;a=270<=s?(s-=270,new y.core.Point(i.location.x+o.width/2*i.labelSlope.height,i.location.y-o.width/2*i.labelSlope.width)):180<=s?(s-=180,new y.core.Point(i.location.x+o.height/2*i.labelSlope.height,i.location.y-o.height/2*i.labelSlope.width)):90<=s?(s-=90,new y.core.Point(i.location.x+o.width/2*i.labelSlope.height,i.location.y-o.width/2*i.labelSlope.width)):new y.core.Point(i.location.x+o.height/2*i.labelSlope.height,i.location.y-o.height/2*i.labelSlope.width),t.drawStringRotated(n,new y.core.Point(a.x-o.width/2,a.y+o.height/2),a,s)}else{0<r?s+=r:s=s+180+r;var l=i.angle-Math.PI/2,_=o.height*Math.cos(r*Math.PI/180)/2*Math.cos(l),u=o.height*Math.cos(r*Math.PI/180)/2*Math.sin(l);a=new y.core.Point(i.location.x+_,i.location.y+u);s-=180,Math.cos(s*Math.PI/180),t.drawStringRotated(n,new y.core.Point(a.x,a.y+o.height/2),a,s)}t.restoreTransform()}},t.prototype._calculateMajorTickLocation=function(t,e,i,n,o){var r=new y.core.Point(this.center.x+o*e.width,this.center.y+o*e.height);return t.majorTicks==y.TickMark.Cross?{start:new y.core.Point(r.x+i/2,r.y-n/2),end:new y.core.Point(r.x-i/2,r.y+n/2)}:t.majorTicks==y.TickMark.Outside?{start:new y.core.Point(r.x+i,r.y-n),end:r}:t.majorTicks==y.TickMark.Inside?{start:r,end:new y.core.Point(r.x-i,r.y+n)}:{start:r,end:r}},t.prototype._calculateMajorLabelLocation=function(t,e,i,n,o,r){var s=this._calculateMajorTickLocation(t,e,i,n,o).start,a=null!=t.labelAngle&&t.labelAngle instanceof Array&&0<t.labelAngle.length?Math.round(t.labelAngle[0]):0,l=this._axisDegree();if(0==a){var _=void 0;return _=270<=l?(l-=270,new y.core.Point(s.x+r.width/2*e.height,s.y-r.width/2*e.width)):180<=l?(l-=180,new y.core.Point(s.x+r.height/2*e.height,s.y-r.height/2*e.width)):90<=l?(l-=90,new y.core.Point(s.x+r.width/2*e.height,s.y-r.width/2*e.width)):new y.core.Point(s.x+r.height/2*e.height,s.y-r.height/2*e.width),{location:new y.core.Point(_.x-r.width/2,_.y+r.height/2),center:_,degree:l}}0<a?l+=a:l=l+180+a;var u=r.height*Math.cos(a*Math.PI/180)/2*Math.cos(l*Math.PI/180-Math.PI/2),h=r.height*Math.cos(a*Math.PI/180)/2*Math.sin(l*Math.PI/180-Math.PI/2);_=new y.core.Point(s.x+u,s.y+h);return l<0?l=l%360+360:l%=360,270<l?{location:new y.core.Point(_.x,_.y+r.height/2),center:_,degree:l}:180<l?{location:new y.core.Point(_.x,_.y+r.height/2),center:_,degree:l-180}:90<l?{location:new y.core.Point(_.x,_.y+r.height/2),center:_,degree:l-180}:{location:new y.core.Point(_.x,_.y+r.height/2),center:_,degree:l}},t}(y._ParallelAxisView);y._RadialParallelAxisView=t}(dv||(dv={})),function(g){"use strict";var t=function(d){function t(t){return d.call(this,t)||this}return __extends(t,d),t.prototype._axisView=function(){return d.prototype._axisView.call(this)},t.prototype._layout=function(t,e){var i,n=this._axisView()._option().type==g.AxisType.Y,o=(this._axisView()._position(),g.AxisPosition.Near,this._option().titleStyle.padding);if(n){var r=this._measure(t,e),s=o.isEmpty()?g._BaseAxisView.__AXIS_LABEL_PADDING:o.bottom,a=e.left+e.width/2-r.width/2,l=e.bottom-s-r.height;i=new g.core.Rect(a,l,r.width,r.height)}else{var _=this._axisView()._getTickHeightBelowAxis(t,this._axisView()._majorTicks(),this._axisView()._majorTickSize()),u=(s=o.isEmpty()?0:o.top,this._axisView()._axisSize+(this._axisView().radius-this._axisView().innerRadius*this._axisView().radius)/2+_+s),h=(r=this._measure(t,new g.core.Rect(e.left,e.top,e.width-u,e.height/2)),this._axisView()._startAngle()),c=Math.cos(h)*(this._axisView().radius+this._axisView().innerRadius*this._axisView().radius)/2+this._axisView().cx,p=Math.sin(h)*(this._axisView().radius+this._axisView().innerRadius*this._axisView().radius)/2+this._axisView().cy,f=c+2*Math.sin(h)*(_+s+r.height),d=p-2*Math.cos(h)*(_+s+r.height)-r.height;i=new g.core.Rect(f,d,r.width,r.height)}this._rectangle(i)},t.prototype._renderInnerContent=function(t,e,i){t.beginTransform(),this._applyStyle(t);var n=this._overflowRenderString(),o=this._axisView()._option().type==g.AxisType.Y,r=(this._axisView()._position(),g.AxisPosition.Near,180*this._axisView()._startAngle()/Math.PI-180),s=g.__Constant_Core_Title_ClassName;if(o)d.prototype._renderInnerContent.call(this,t,e,i);else{for(var a=new g.core.Size(0,0),l=0,_=this._lines();l<_.length;l++){if(null!=(p=_[l])&&0<p.length){var u=t.measureMultipleStrings(p,e.width,n);a.height+=u.height}}switch(this._vAlign()){case g.VAlign.Top:break;case g.VAlign.Bottom:e.top=e.bottom-a.height;break;default:e.top=e.top+(e.height-a.height)/2}for(var h=0,c=this._lines();h<c.length;h++){var p;if(null!=(p=c[h])&&0<p.length){u=t.measureMultipleStrings(p,e.width,n);e.height=u.height;var f=new g.core.Point(e.left,e.bottom);switch(this._hAlign()){case g.HAlign.Left:t.drawMultipleStrings(p,e,"Left",n,s,null,null,r,f);break;case g.HAlign.Right:t.drawMultipleStrings(p,e,"Right",n,s,null,null,r,f);break;default:t.drawMultipleStrings(p,e,"Center",n,s,null,null,r,f)}e.top+=u.height}}}t.restoreTransform()},t}(g._BaseAxisTitleView);g._RadialAxisTitleView=t}(dv||(dv={})),function(D){"use strict";var t=function(A){function t(){return null!==A&&A.apply(this,arguments)||this}return __extends(t,A),Object.defineProperty(t.prototype,"type",{get:function(){return"Radial"},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"plotRect",{get:function(){return this._plotRect},enumerable:!0,configurable:!0}),t.prototype._layout=function(t,e,i){for(var n=0,o=this._plotViews();n<o.length;n++){var r=o[n];r._layoutStack(),r._initAxisScale(),r._initAxis(t,e)}for(var s=this._xAxesView(),a=this._yAxesView(),l=s._canScroll()?this._xViewSize():1,_=a._canScroll()?this._yViewSize():1,u=e.width/l,h=e.height/_,c=e.left+u/2,p=e.top+h/2,f=Math.min(u/2,h/2),d=this._axisYViews().slice().concat(this._axisXViews()),g=0,y=0;y<d.length;y++){if((b=d[y])._scale()){var m=b._origin();b._applyOptionToScale(b._option(),b._scale()),b._option().type==D.AxisType.X?D.core.isNumber(m)&&this._axisY()&&(m<this._axisY()._getMinNum()?null==this._axisY()._option().min?this._axisY()._scale()._domain([m,this._axisY()._scale()._domain()[1]]):b._actualOrigin=this._axisY()._getMinNum():m>this._axisY()._getMaxNum()&&(null==this._axisY()._option().max?this._axisY()._scale()._domain([this._axisY()._scale()._domain()[0],m]):b._actualOrigin=this._axisY()._getMaxNum())):b._option().type==D.AxisType.Y&&D.core.isNumber(m)&&this._axisX()&&(null==this._axisX()._option().min&&m<this._axisX()._getMinNum()?null==this._axisX()._option().min?this._axisX()._scale()._domain([m,this._axisX()._scale()._domain()[1]]):b._actualOrigin=this._axisX()._getMinNum():null==this._axisX()._option().max&&m>this._axisX()._getMaxNum()&&(null==this._axisX()._option().max?this._axisX()._scale()._domain([this._axisX()._scale()._domain()[0],m]):b._actualOrigin=this._axisX()._getMaxNum()))}}for(y=0;y<d.length;y++){if((b=d[y])._scale())if(b._option().type==D.AxisType.Y)g=b._measure(t,new D.core.Size(u,h)).height,b._position()!=D.AxisPosition.Far&&(f-=g),b.radius=f,b._axisSize=g;else if(b._option().type==D.AxisType.X)b._measure(t,new D.core.Size(u,h-g))}this._plotRect=new D.core.Rect(c-f,p-f,2*f,2*f);for(y=0;y<d.length;++y){if((b=d[y])._scale())if(b._option().type==D.AxisType.X)b.radius=f,b._axisSize=g,b._scale()._range([b.innerRadius*b.radius,b.radius]);else if(b._option().type==D.AxisType.Y){var v=b._startAngle(),w=v+b.sweep;b._scale()._range([v,w])}}for(y=0;y<d.length;y++){if((b=d[y])._scale()){m=b._getAcutalOrigin();b._option().type==D.AxisType.Y?b._hasOrigin=D.core.isNumber(m)&&m>=this._axisX()._getMinNum()&&m<=this._axisX()._getMaxNum():b._option().type==D.AxisType.X&&(b._hasOrigin=D.core.isNumber(m)&&m>=this._axisY()._getMinNum()&&m<=this._axisY()._getMaxNum())}}s._clear(),a._clear();for(y=0;y<d.length;y++){var b;if((b=d[y])._scale()){b.cx=c,b.cy=p;m=b._getAcutalOrigin();if(b._option().type==D.AxisType.X){if(b._hasOrigin){var x=180*(this._axisY()._scale().value(m)-3*Math.PI/2)/Math.PI;b._startAngleDegree(x)}var S=new D.core.Rect(c-(b._axisSize+b.radius),p-(b._axisSize+b.radius),2*(b._axisSize+b.radius),2*(b._axisSize+b.radius));i.LineCartesianCoordinateSystemContent=this._plotRect.clone(),b._layout(t,S,i),delete i.LineCartesianCoordinateSystemContent,s._add(b)}else if(b._option().type==D.AxisType.Y){if(b._hasOrigin){var P=this._axisX(),V=this._axisX()._scale().value(m+(null!=P?P._radiusOffset():0));b.radius=V}var C=new D.core.Rect(c-(b._axisSize+b.radius),p-(b._axisSize+b.radius),2*(b._axisSize+b.radius),2*(b._axisSize+b.radius));i.LineCartesianCoordinateSystemContent=this._plotRect.clone(),b._layout(t,C,i),delete i.LineCartesianCoordinateSystemContent,a._add(b)}}}a._layout(t,e,i),s._layout(t,e,i),A.prototype._layout.call(this,t,e,i)},t.prototype._renderContent=function(t,e){if(!e.renderLabel){var i=this.plotRect;if(t.beginTransform(),null!=i){var n=i.width,o=i.height,r=i.left+i.width/2,s=i.top+i.height/2,a=n<o?n/2:o/2;D._applyStyle(t,{strokeWidth:0}),this._applyBackgroundStyle(t),null!=t.fill&&"transparent"!=t.fill&&"none"!=t.fill&&t.drawEllipse(r,s,a,a),D._applyStyle(t,{fill:"none"}),this._applyInnerBorderStyle(t),null!=t.strokeWidth&&0<t.strokeWidth&&t.drawEllipse(r,s,a,a)}t.restoreTransform()}this._xAxesView()._render(t,e),this._yAxesView()._render(t,e),A.prototype._renderContent.call(this,t,e)},t.prototype._createAxisView=function(t){return t.type==D.AxisType.X?new D._RadialAxisView(this,t):t.type==D.AxisType.Y?new D._CircleAxisView(this,t):(D._assertDebug(function(){return!1}),null)},t}(D._CartesianCoordinateSystemView);D._RadialCartesianCoordinateSystemView=t}(dv||(dv={})),function(x){"use strict";var t=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.__scales=[],t}return __extends(t,e),t.prototype._addScale=function(t){this.__scales.push(t)},t.prototype.__angles=function(t){for(var e=t.ticks(),i=[],n=0;e&&n<e.length;++n){var o=t.value(e[n]);isNaN(o)||null==o||i.push(o)}return i.push(i[0]),i},t.prototype._render=function(t,e){if(this._position()!=x.AxisPosition.None){t.beginTransform(),x._applyGStyle(t,this._option().style),x._applyTextStyle(t,this._textStyle());var i=x.__Constant_Core_Grid_Line_Major_ClassName;if(this._option().position!=x.AxisPosition.None){t.startGroup(this._styleClassName()),this._vals={};for(var n=0;n<this._labelViews().length;++n){var o=this._labelViews()[n];if(o)if(e.renderLabel)this._labels()&&o._render(t,e);else{if(this._majorGrid()){if(t.beginTransform(),x._applyLineStyle(t,this._defaultMajorGridStyle()),x._applyLineStyle(t,this._majorGridStyle()),this._option().type==x.AxisType.Y){var r=this.cx-Math.sin(o.majorTickLine.angle)*this.innerRadius*this.radius,s=this.cy+Math.cos(o.majorTickLine.angle)*this.innerRadius*this.radius;t.drawLine(o.majorTickLine.cx,o.majorTickLine.cy,r,s,i)}else if(this._option().type==x.AxisType.X)for(var a=Math.sqrt(Math.pow(o.majorTickLine.startPoint.x-this.cx,2)+Math.pow(o.majorTickLine.startPoint.y-this.cy,2)),l=0,_=this.__scales;l<_.length;l++){for(var u=_[l],h=this.__angles(u),c={xs:[],ys:[]},p=0;h&&p<h.length;++p){var f=h[p],d=(h[p+1],Math.cos(f)*a+this.cx),g=Math.sin(f)*a+this.cy;c.xs.push(d),c.ys.push(g)}t.drawPolygon(c.xs,c.ys,i)}t.restoreTransform()}if(this._minorGrid()){if(t.beginTransform(),x._applyLineStyle(t,this._defaultMinorGridStyle()),x._applyLineStyle(t,this._minorGridStyle()),this._option().type==x.AxisType.Y)for(var y=0;y<o.minorTickLines.length;++y){var m=o.minorTickLines[y];r=this.cx-Math.sin(m.angle)*this.innerRadius*this.radius,s=this.cy+Math.cos(m.angle)*this.innerRadius*this.radius;t.drawLine(m.startPoint.x,m.startPoint.y,r,s,i)}else if(this._option().type==x.AxisType.X)for(y=0;y<o.minorTickLines.length;++y){m=o.minorTickLines[y],isNaN(this.sweep)&&this.sweep,a=Math.sqrt(Math.pow(m.startPoint.x-this.cx,2)+Math.pow(m.startPoint.y-this.cy,2));for(var v=0,w=this.__scales;v<w.length;v++){for(u=w[v],h=this.__angles(u),c={xs:[],ys:[]},p=0;h&&p<h.length;++p){f=h[p],d=Math.cos(f)*a+this.cx,g=Math.sin(f)*a+this.cy;c.xs.push(d),c.ys.push(g)}t.drawPolygon(c.xs,c.ys,i)}}t.restoreTransform()}if(this._majorTicks()!=x.TickMark.None&&(t.beginTransform(),x._applyLineStyle(t,this._defaultMajorTickStyle()),x._applyLineStyle(t,this._majorTickStyle()),t.drawLine(o.majorTickLine.startPoint.x,o.majorTickLine.startPoint.y,o.majorTickLine.endPoint.x,o.majorTickLine.endPoint.y,x.__Constant_Core_Tick_Major_ClassName),t.restoreTransform()),this._minorTicks()!=x.TickMark.None){t.beginTransform(),x._applyLineStyle(t,this._defaultMinorTickStyle()),x._applyLineStyle(t,this._minorTickStyle());for(y=0;y<o.minorTickLines.length;++y){var b=o.minorTickLines[y];t.drawLine(b.startPoint.x,b.startPoint.y,b.endPoint.x,b.endPoint.y,x.__Constant_Core_Tick_Minor_ClassName)}t.restoreTransform()}}}e.renderLabel?this._titleView()._render(t,e):this._renderLine(t),t.endGroup(),t.restoreTransform()}}},t.prototype._renderPolygon=function(t){for(var e=this.__angles(this._scale()),i={xs:[],ys:[]},n=0;e&&n<e.length;++n){var o=e[n],r=(e[n+1],Math.cos(o)*this.radius+this.cx),s=Math.sin(o)*this.radius+this.cy;i.xs.push(r),i.ys.push(s)}t.drawPolygon(i.xs,i.ys)},t.prototype._renderLine=function(t){var e=this._startAngle();t.beginTransform();this._option().titleStyle.padding;x._applyLabelStyle(t,this._option().titleStyle);x.__Constant_Core_Title_ClassName;var i=x.__Constant_Core_Line_ClassName;if(this._option().type===x.AxisType.X){var n=this.cx+Math.cos(e)*this.radius,o=this.cy+Math.sin(e)*this.radius,r=this.cx+Math.cos(e)*this.innerRadius*this.radius,s=this.cy+Math.sin(e)*this.innerRadius*this.radius;t.beginTransform(),x._applyLineStyle(t,this._defaultLineStyle()),x._applyLineStyle(t,this._lineStyle()),t.drawLine(r,s,n,o,i,this._lineStyle()),t.restoreTransform()}else{t.beginTransform(),x._applyLineStyle(t,this._defaultLineStyle()),x._applyLineStyle(t,this._lineStyle());for(var a=this.__angles(this._scale()),l={xs:[],ys:[]},_=0;a&&_<a.length;++_){var u=a[_],h=(a[_+1],Math.cos(u)*this.radius+this.cx),c=Math.sin(u)*this.radius+this.cy;l.xs.push(h),l.ys.push(c)}t.drawPolygon(l.xs,l.ys,i,{fill:"none"}),t.restoreTransform()}t.restoreTransform()},t}(x._RadialAxisView);x._PolygonalAxisView=t}(dv||(dv={})),function(o){"use strict";var t=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return __extends(e,t),Object.defineProperty(e.prototype,"type",{get:function(){return"Polygonal"},enumerable:!0,configurable:!0}),e.prototype._createAxisView=function(t){return new o._PolygonalAxisView(this,t)},e.prototype._renderContent=function(t,e){if(!e.renderLabel){var i=this.plotRect;if(t.beginTransform(),null!=i){var n;i.width,i.height,i.left,i.width,i.top,i.height;if(o._applyStyle(t,{strokeWidth:0}),this._applyBackgroundStyle(t),null!=t.fill&&"transparent"!=t.fill&&"none"!=t.fill)(n=this._yAxesView()._axisViews()[0])instanceof o._PolygonalAxisView&&n._renderPolygon(t);if(o._applyStyle(t,{fill:"none"}),this._applyInnerBorderStyle(t),null!=t.strokeWidth&&0<t.strokeWidth)(n=this._yAxesView()._axisViews()[0])instanceof o._PolygonalAxisView&&n._renderPolygon(t)}t.restoreTransform()}this._xAxesView()._render(t,e),this._yAxesView()._render(t,e),this.__plotsView._render(t,e)},e}(o._RadialCartesianCoordinateSystemView);o._PolygonalCartesianCoordinateSystemView=t}(dv||(dv={})),function(t){"use strict";var e=function(e){function t(t){return e.call(this,t)||this}return __extends(t,e),t}(t._BaseAxisTitleView);t._TextAxisTitleView=e}(dv||(dv={})),function(l){"use strict";var t=function(o){function t(){var t=null!==o&&o.apply(this,arguments)||this;return t.__axisXViews=[],t}return __extends(t,o),Object.defineProperty(t.prototype,"type",{get:function(){return"TextCategories"},enumerable:!0,configurable:!0}),t.prototype._axisXViews=function(){return this.__axisXViews},t.prototype._plotsArea=function(){return this.__plotsArea},t.prototype._applyAxis=function(t,e){if(null==e&&(e=l._CoordinateSystemView.__Default_Axis_X_Option),e.type!=l.AxisType.X)return null;for(var i=0,n=this._axisXViews();i<n.length;i++){var o=n[i];if(o._option()==e)return o}var r=null;null!=t&&(r=e.scale.type==l.ValueScaleType.Ordinal?new l._OrdinalAxisScale:e.scale.type==l.ValueScaleType.Logarithmic&&t instanceof l.models._NumberFieldDefinition?new l._LogAxisScale(e.logBase):e.scale.type==l.ValueScaleType.Linear&&t instanceof l.models._NumberFieldDefinition?new l._LinearAxisScale:e.scale.type==l.ValueScaleType.Percentage&&t instanceof l.models._NumberFieldDefinition?new l._LinearAxisScale:t instanceof l.models._StringFieldDefinition?new l._OrdinalAxisScale:t instanceof l.models._BooleanFieldDefinition?new l._OrdinalAxisScale:t instanceof l.models._DateFieldDefinition?new l._TimeAxisScale:new l._LinearAxisScale);var s=this._createAxisView(e,r);return this._axisXViews().push(s),s},t.prototype._layout=function(t,e,i){this._rectangle(e),this.__plotsArea=e.clone();for(var n=0,o=this._axisXViews();n<o.length;n++){var r=o[n];r._scale()._range([this.__plotsArea.left,this.__plotsArea.right]);var s=r._measure(t,new l.core.Size(this.__plotsArea.width,e.height)),a=this.__plotsArea.clone();a.height=s.height,r._option().position==l.AxisPosition.Far?(this.__plotsArea.top+=s.height,this.__plotsArea.height-=s.height,i.LineCartesianCoordinateSystemContent=this.__plotsArea.clone(),r._layout(t,a,i),delete i.LineCartesianCoordinateSystemContent):r._option().position==l.AxisPosition.Near&&(this.__plotsArea.height-=s.height,a.top=this.__plotsArea.bottom,i.LineCartesianCoordinateSystemContent=this.__plotsArea.clone(),r._layout(t,a,i),delete i.LineCartesianCoordinateSystemContent)}this._layoutPlotViews(t,e,i)},t.prototype._hitTest=function(t){var e=o.prototype._hitTest.call(this,t);if(e)return e;for(var i=0,n=this._axisXViews();i<n.length;i++){if(e=n[i]._hitTest(t))return e}return null},t.prototype._renderContent=function(t,e){for(var i=0,n=this._axisXViews();i<n.length;i++){var o=n[i];o._option().position!=l.AxisPosition.None&&o._render(t,e)}this._plotsView()._render(t,e)},t.prototype._createAxisView=function(t,e){var i=new l._TextCategoriesLineAxisView(this,t);return i._scale(e),i},t}(l._CoordinateSystemView);l._TextCategoriesCoordinateSystemView=t}(dv||(dv={})),function(i){"use strict";var t=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return __extends(e,t),e.prototype._majorTicks=function(){return i.TickMark.None},e.prototype._axisLine=function(){return!1},e.prototype._title=function(){var t=this._option();return null!=t.title?t.title:null},e.prototype._createTitleView=function(){return new i._TextAxisTitleView(this)},e}(i._LineAxisView);i._TextCategoriesLineAxisView=t}(dv||(dv={})),function(n){"use strict";var t=function(i){function t(t){var e=i.call(this,null)||this;return e.__dvView=t,e}return __extends(t,i),Object.defineProperty(t.prototype,"type",{get:function(){return n.ElementType.Footter},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"parent",{get:function(){return this.__dvView},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"title",{get:function(){return this._lines()[0]},enumerable:!0,configurable:!0}),t.prototype._dvView=function(){return this.__dvView},t.prototype._className=function(){return n.__Constant_Core_Footer_ClassName},t.prototype._hAlign=function(){var t=this._dvView()._option().footer.hAlign;return null==t&&(t=n.HAlign.Center),t},t.prototype._vAlign=function(){var t=this._dvView()._option().footer.vAlign;return null==t&&(t=n.VAlign.Middle),t},t.prototype._overflow=function(){return null!=this._dvView()._option().footer.textStyle.overflow?this._dvView()._option().footer.textStyle.overflow:null!=this._dvView()._option().textStyle.overflow?this._dvView()._option().textStyle.overflow:n.TextOverflow.Wrap},t.prototype._lines=function(){return[this._dvView()._option().footer.title]},t.prototype._paddings=function(){return this._dvView()._option().footer.padding},t.prototype._applyStyle=function(t){var e=this._dvView()._option();n._applyGStyle(t,e.footer.style),n._applyTextStyle(t,e.footer.textStyle)},t.prototype._applyBorderStyle=function(t){i.prototype._applyBorderStyle.call(this,t);var e=this._dvView()._option();n._applyLineStyleFromGStyle(t,e.style),n._applyLineStyleFromGStyle(t,e.footer.style),n._applyLineStyle(t,e.footer.borderStyle)},t.prototype._applyBackgroundStyle=function(t){i.prototype._applyBackgroundStyle.call(this,t);var e=this._dvView()._option();n._applyBackgroundColor(t,e.style.backgroundColor),n._applyBackgroundColor(t,e.footer.style.backgroundColor)},t.prototype._hitTest=function(t){var e=this._rectangle();return null!=e&&e.contains(t)?new n.HitTestResult(t,this,this,n.ElementType.Footter):i.prototype._hitTest.call(this,t)},t}(n._TextView);n._FooterView=t}(dv||(dv={})),function(n){"use strict";var t=function(i){function t(t){var e=i.call(this,null)||this;return e.__dvView=t,e}return __extends(t,i),Object.defineProperty(t.prototype,"type",{get:function(){return n.ElementType.Header},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"parent",{get:function(){return this.__dvView},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"title",{get:function(){return this._lines()[0]},enumerable:!0,configurable:!0}),t.prototype._dvView=function(){return this.__dvView},t.prototype._className=function(){return n.__Constant_Core_Header_ClassName},t.prototype._hAlign=function(){var t=this._dvView()._option().header.hAlign;return null==t&&(t=n.HAlign.Center),t},t.prototype._vAlign=function(){var t=this._dvView()._option().header.vAlign;return null==t&&(t=n.VAlign.Middle),t},t.prototype._overflow=function(){return null!=this._dvView()._option().header.textStyle.overflow?this._dvView()._option().header.textStyle.overflow:null!=this._dvView()._option().textStyle.overflow?this._dvView()._option().textStyle.overflow:n.TextOverflow.Wrap},t.prototype._lines=function(){return[this._dvView()._option().header.title]},t.prototype._paddings=function(){return this._dvView()._option().header.padding},t.prototype._applyStyle=function(t){var e=this._dvView()._option();n._applyGStyle(t,e.header.style),n._applyTextStyle(t,e.header.textStyle)},t.prototype._applyBorderStyle=function(t){i.prototype._applyBorderStyle.call(this,t);var e=this._dvView()._option();n._applyLineStyleFromGStyle(t,e.style),n._applyLineStyleFromGStyle(t,e.header.style),n._applyLineStyle(t,e.header.borderStyle)},t.prototype._applyBackgroundStyle=function(t){i.prototype._applyBackgroundStyle.call(this,t);var e=this._dvView()._option();n._applyBackgroundColor(t,e.style.backgroundColor),n._applyBackgroundColor(t,e.header.style.backgroundColor)},t.prototype._hitTest=function(t){var e=this._rectangle();return null!=e&&e.contains(t)?new n.HitTestResult(t,this,this,n.ElementType.Header):i.prototype._hitTest.call(this,t)},t}(n._TextView);n._HeaderView=t}(dv||(dv={})),function(p){"use strict";var t=function(n){function t(t,e){var i=n.call(this)||this;return i.__coordinateSystemViews=[],i.__option=t,i.__plotOptions=e,i}return __extends(t,n),t.prototype._plotOptions=function(){return this.__plotOptions},t.prototype._coordinateSystemViews=function(){return this.__coordinateSystemViews},t.prototype._hasSelection=function(){for(var t=0,e=this._plotViews();t<e.length;t++)for(var i=0,n=e[t]._data().points;i<n.length;i++){if(n[i].selected)return!0}return!1},t.prototype._option=function(){return this.__option},t.prototype.dispose=function(){for(var t=0,e=this._coordinateSystemViews();t<e.length;t++){e[t].dispose()}},t.prototype._coordinateSystemView=function(t){for(var e=0,i=this._coordinateSystemViews();e<i.length;e++){var n=i[e];if(n.type==t)return n}return null},t.prototype._layout=function(t,e,i){this._rectangle(e)},t.prototype._matchAxisOptionToPlotOptions=function(i,t){var n=[];if(0<t.length)for(var o={},e=0,r=t;e<r.length;e++){var s=r[e];if(s.plots)for(var a=function(e){if(!o[e]){var t=p.core.find(i,function(t){return t.name==e});t&&(o[e]={plotOption:t,axisOptions:[]},n.push(o[e]))}null!=o[e]&&-1==o[e].axisOptions.indexOf(s)&&o[e].axisOptions.push(s)},l=0,_=s.plots;l<_.length;l++){a(_[l])}}else for(var u=0,h=i;u<h.length;u++){var c=h[u];n.push({plotOption:c,axisOptions:[]})}return n},t}(p._View);p._LayoutView=t}(dv||(dv={})),function(p){"use strict";var t=function(r){function t(t,e,i){var n=r.call(this,e,i)||this;return n.__plotAreaView=t,n}return __extends(t,r),Object.defineProperty(t.prototype,"type",{get:function(){return p.ElementType.PlotsPane},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"parent",{get:function(){return this._plotAreaView()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"plots",{get:function(){return this._plotViews().map(function(t){return t._data()})},enumerable:!0,configurable:!0}),t.prototype._plotAreaView=function(){return this.__plotAreaView},t.prototype._plotViews=function(){for(var t=[],e=0,i=this._coordinateSystemViews();e<i.length;e++){var n=i[e];t.push.apply(t,n._plotViews())}return t},t.prototype._plotsPaneViews=function(){return[this]},t.prototype._dataLabelsRectangle=function(){return this._plotAreaView()._rectangle()},t.prototype._loadData=function(t){for(var e=[],i=this._coordinateSystemViews().length=0,n=this._matchAxisOptionToPlotOptions(this._plotOptions(),this._plotAreaView()._option().axes);i<n.length;i++){var o=n[i];null!=(r=this._createPlotView(o.plotOption))&&(e.push({plotView:r,axisOptions:o.axisOptions}),this._prepareCoordinateSystem(r))}if(0===this._coordinateSystemViews().length){var r=new p._CartesianPlotView(this,new p.options._PlotOption(null));e.push({plotView:r,axisOptions:[]}),this._prepareCoordinateSystem(r)}for(var s=0,a=this._coordinateSystemViews();s<a.length;s++)for(var l=0,_=a[s]._plotViews();l<_.length;l++){(r=_[l])._loadData(t)}for(var u=0,h=e;u<h.length;u++){var c=h[u];c.plotView._attachCoordinateSystem(c.axisOptions)}},t.prototype._layout=function(t,e,i){r.prototype._layout.call(this,t,e,i);for(var n=0,o=this._coordinateSystemViews();n<o.length;n++){o[n]._layout(t,e,i)}},t.prototype._renderContent=function(t,e){for(var i=0,n=this._coordinateSystemViews();i<n.length;i++){var o=n[i];e.renderLabel=!1,o._render(t,e),e.renderLabel=!0,o._render(t,e),delete e.renderLabel}},t.prototype._layoutInnerContent=function(t,e,i){t.beginTransform(),this._applyStyle(t),(e=e.clone()).width<0&&(e.width=0),e.height<0&&(e.height=0);for(var n=0,o=this._coordinateSystemViews();n<o.length;n++){var r=o[n];r instanceof p._CoordinateSystemView&&r._layout(t,e,i)}t.restoreTransform()},t.prototype._renderInnerContent=function(t,e,i){t.beginTransform(),this._applyStyle(t);for(var n=0,o=this._coordinateSystemViews();n<o.length;n++){var r=o[n];r instanceof p._CoordinateSystemView&&r._render(t,i)}t.restoreTransform()},t.prototype._applyStyle=function(t){p._applyGStyle(t,this._plotAreaView()._option().style),p._applyTextStyle(t,this._plotAreaView()._option().textStyle)},t.prototype._createCoordinateSystemView=function(t){return null!=t?p.plugins._Plugins._coordinateSystem(t,this):null},t.prototype._createPlotView=function(t){return null!=t.type?p.plugins._Plugins._plot(t.type,this,t):null},t.prototype._hitTest=function(t){var e=this._rectangle();if(null!=e&&e.contains(t))for(var i=0,n=this._coordinateSystemViews().concat().reverse();i<n.length;i++){var o=n[i]._hitTest(t);if(null!=o)return o}return r.prototype._hitTest.call(this,t)},t.prototype._prepareCoordinateSystem=function(t){if(null!=t){var e=t._coordinateSystemType(),i=this._coordinateSystemView(e);null==i&&null!=(i=this._createCoordinateSystemView(e))&&this._coordinateSystemViews().push(i),null!=i&&i._plotViews().push(t)}},t}(p._LayoutView);p._DefaultLayoutView=t}(dv||(dv={})),function(e){"use strict";var t=function(n){function t(t,e){var i=n.call(this,t._plotAreaView()._dvView().control._layer())||this;return i.__legendView=t,i.__itemViews=e,i}return __extends(t,n),t.prototype._legendView=function(){return this.__legendView},t.prototype._className=function(){return this._canScroll()?e.__Constant_Core_Legend_Content_ClassName:null},t.prototype._renderInnerContent=function(t,e,i){for(var n=0,o=this.__itemViews;n<o.length;n++){o[n]._render(t,i)}},t.prototype._canScroll=function(){return this._legendView()._scrollable()},t.prototype._getLogicSize=function(){return this._legendView()._getScrollContentSize()},t.prototype._hitTestContent=function(t){for(var e=0,i=this.__itemViews;e<i.length;e++){var n=i[e]._hitTest(t);if(null!=n)return n}return null},t}(e._ScrollableView);e._LegendContentView=t}(dv||(dv={})),function(E){"use strict";var t=function(r){function t(t,e,i){var n=r.call(this,t._dvView().control._layer())||this;return n.__legendViews=[],n.__plotAreaView=t,n.__legendViews=e.slice(),n.__position=i,n}return __extends(t,r),t.prototype._plotAreaView=function(){return this.__plotAreaView},t.prototype._legendViews=function(){return this.__legendViews},t.prototype._className=function(){return E.__Constant_Core_Legends_ClassName},t.prototype._legendSpace=function(){return t.__LEGEND_SPACE},t.prototype._position=function(){return this.__position},t.prototype._wrapping=function(){var t=this._plotAreaView()._option().legend.wrapping;return null!=t?t:null==(t=this._plotAreaView()._dvView()._option().legend.wrapping)||t},t.prototype._canScroll=function(){return!this._wrapping()&&1<this._legendViews().length},t.prototype.dispose=function(){this._destoryScrollbar();for(var t=0,e=this._legendViews();t<e.length;t++){e[t].dispose()}},t.prototype._layoutInnerContent=function(t,e,i){(e=e.clone()).width<0&&(e.width=0),e.height<0&&(e.height=0);var n=this.__legendViews,o=this._position(),r=this._legendSpace(),s=new E.core.Size(0,0),a=[],l=[],_=new E.core.Size(0,0),u=e.clone(),h=!1;if(o===E.Position.Left||o===E.Position.Right)for(var c=0,p=0;p<n.length;p++){(x=n[p])instanceof E._ItemizedLegendView&&x._init(u);var f=n[p]._measure(t,new E.core.Size(u.width,u.height));if(!h)if(c+(S=0==c?0:r)+f.height>e.height){for(var d=e.height-c,g=f.height+S-d,y=0;;){for(var m=Number.MAX_VALUE,v=p,w=0,b=0;b<=p;b++){(P=n[b]._enlarge()).width<m&&(m=P.width,v=b,w=P.height)}for(b=0;b<=p;b++)b!==v&&n[b]._restore();if(y+=w,0===w||g<=y)break}if(!(g<=y)){h=!0;continue}c+=S-y+f.height}else c+=S+f.height}else for(c=0,p=0;p<n.length;p++){var x;(x=n[p])instanceof E._ItemizedLegendView&&x._init(u);var S;f=n[p]._measure(t,new E.core.Size(u.width,u.height));if(!h)if(c+(S=0==c?0:r)+f.width>e.width){for(d=e.width-c,g=f.width+S-d,y=0;;){for(m=Number.MAX_VALUE,v=p,w=0,b=0;b<=p;b++){var P;(P=n[b]._enlarge()).height<m&&(m=P.height,v=b,w=P.width)}for(b=0;b<=p;b++)b!==v&&n[b]._restore();if(y+=w,0===w||g<=y)break}if(!(g<=y)){h=!0;continue}c+=S-y+f.width}else c+=S+f.width}for(v=0;v<n.length;v++){var V=n[v]._data()._option().width,C=n[v]._data()._option().maxWidth,A=n[v]._data()._option().height,D=n[v]._data()._option().maxHeight;o===E.Position.Left||o===E.Position.Right?u.width=Number.MAX_VALUE:u.height=Number.MAX_VALUE;f=n[v]._measure(t,new E.core.Size(u.width,u.height));switch(o===E.Position.Left||o===E.Position.Right?(u.top+=f.height+r,u.height-=f.height+r,u.height<0&&(u.height=0)):(u.left+=f.width+r,u.width-=f.width+r,u.width<0&&(u.width=0)),l.push(new E.core.Rect(e.left,e.top,f.width,f.height)),o){case E.Position.Left:case E.Position.Right:_.height+=f.height;break;case E.Position.Top:case E.Position.Bottom:_.width+=f.width}if(o===E.Position.Left||o===E.Position.Right)if(null!=C){var T=Number.MAX_VALUE;"number"==typeof C?T=C*this._plotAreaView()._rectangle().width:"string"==typeof C&&(T=E.core._Parser._parseCssPixel(C)),f.width>T&&(f.width=T)}else"number"==typeof V?f.width=V*this._plotAreaView()._rectangle().width:"string"==typeof V&&(f.width=E.core._Parser._parseCssPixel(V));else if(null!=D){var L=Number.MAX_VALUE;"number"==typeof D?L=D*this._plotAreaView()._rectangle().height:"string"==typeof D&&(L=E.core._Parser._parseCssPixel(D)),f.height>L&&(f.height=L)}else"number"==typeof A?f.height=A*this._plotAreaView()._rectangle().height:"string"==typeof A&&(f.height=E.core._Parser._parseCssPixel(A));s.width<f.width&&(s.width=f.width),s.height<f.height&&(s.height=f.height),a.push(new E.core.Rect(e.left,e.top,f.width,f.height))}var O=e.clone();switch(o){case E.Position.Left:O.width=s.width;break;case E.Position.Right:O.left+=O.width-s.width,O.width=s.width;break;case E.Position.Top:O.height=s.height;break;case E.Position.Bottom:O.top+=O.height-s.height,O.height=s.height}this._rectangle(O);var M=this._marginRect(O,l);if(i.LegendsRect=e,o===E.Position.Left||o===E.Position.Right){var k=(e.height-_.height-r*(n.length-1))/2;k<0&&(k=0);for(v=0;v<n.length;v++){var R=a[v];o===E.Position.Right&&(R.left=e.right-s.width),R.top+=k,R.left+=M,l[v].left=R.left,l[v].top=R.top,i.OriginalLegendRect=l[v],n[v]._layout(t,R,i),delete i.OriginalLegendRect,k+=R.height+r}}else{var N=(e.width-_.width-r*(n.length-1))/2;N<0&&(N=0);for(v=0;v<n.length;v++){R=a[v];o===E.Position.Bottom&&(R.top=e.bottom-s.height),R.left+=N,l[v].left=R.left,l[v].top=R.top,i.OriginalLegendRect=l[v],n[v]._layout(t,R,i),delete i.OriginalLegendRect,N+=R.width+r}}delete i.LegendsRect,this._addScrollbar()||this._destoryScrollbar()},t.prototype._marginRect=function(t,e){for(var i=this._position(),n=i===E.Position.Left||i===E.Position.Right,o=0,r=0,s=e;r<s.length;r++){var a=s[r];n&&a.width>o&&(o=a.width)}var l=0;return n&&(l=(t.width-o)/2),0<l?l:0},t.prototype._renderInnerContent=function(t,e,i){for(var n=0,o=this.__legendViews;n<o.length;n++){var r=o[n];r._position()!=E.Position.None&&r._render(t,i)}},t.prototype._getLogicSize=function(){var t=this._rectangle(),e=this.__legendViews,i=this._position(),n=new E.core.Size(t.width,t.height);if(0<e.length){var o=e[0]._rectangle().clone(),r=e[e.length-1]._rectangle().clone();i===E.Position.Left||i===E.Position.Right?(o.left=r.left=t.left,o.width=r.width=t.width):(o.top=r.top=t.top,o.height=r.height=t.height);var s=E.core.Rect.union(o,r);n.width=Math.max(n.width,s.width),n.height=Math.max(n.height,s.height)}return n},t.prototype._addScrollbar=function(){if(!this._canScroll())return!1;var t=this._plotAreaView()._dvView();return this.__scrollbar?this.__scrollbar._update({containerRect:this._rectangle(),contentSize:this._getLogicSize()}):this.__scrollbar=new E._DvScrollbar(t,{host:t.control.hostElement,option:{containerRect:this._rectangle(),contentSize:this._getLogicSize()},xyScrollViews:[this]}),!0},t.prototype._destoryScrollbar=function(){this.__scrollbar&&this.__scrollbar.dispose(),this.__scrollbar=null},t.prototype._hitTestContent=function(t){for(var e=0,i=this.__legendViews.concat().reverse();e<i.length;e++){var n=i[e];if(n._position()!=E.Position.None){var o=n._hitTest(t);if(null!=o)return o}}return r.prototype._hitTestContent.call(this,t)},t.__LEGEND_SPACE=20,t}(E._ScrollableView);E._LegendsView=t}(dv||(dv={})),function(s){"use strict";var t=function(n){function t(t){var e=n.call(this,null)||this;return e.__legendView=t,e}return __extends(t,n),Object.defineProperty(t.prototype,"type",{get:function(){return s.ElementType.LegendTitle},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"parent",{get:function(){return this._legendView()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"title",{get:function(){return this._legendView().title},enumerable:!0,configurable:!0}),t.prototype._legendView=function(){return this.__legendView},t.prototype._className=function(){return s.__Constant_Core_Title_ClassName},t.prototype._overflow=function(){return null!=this._legendView()._data()._option().titleStyle.overflow?this._legendView()._data()._option().titleStyle.overflow:null!=this._legendView()._plotAreaView()._option().legend.titleStyle.overflow?this._legendView()._plotAreaView()._option().legend.titleStyle.overflow:null!=this._legendView()._plotAreaView()._dvView()._option().legend.titleStyle.overflow?this._legendView()._plotAreaView()._dvView()._option().legend.titleStyle.overflow:null!=this._legendView()._data()._option().textStyle.overflow?this._legendView()._data()._option().textStyle.overflow:null!=this._legendView()._plotAreaView()._option().legend.textStyle.overflow?this._legendView()._plotAreaView()._option().legend.textStyle.overflow:null!=this._legendView()._plotAreaView()._dvView()._option().legend.textStyle.overflow?this._legendView()._plotAreaView()._dvView()._option().legend.textStyle.overflow:null!=this._legendView()._plotAreaView()._option().textStyle.overflow?this._legendView()._plotAreaView()._option().textStyle.overflow:null!=this._legendView()._plotAreaView()._dvView()._option().textStyle.overflow?this._legendView()._plotAreaView()._dvView()._option().textStyle.overflow:n.prototype._overflow.call(this)},t.prototype._lines=function(){return[this.title]},t.prototype._layout=function(t,e,i){if(this._legendView()._titlePosition()==s.Position.None)return this._rectangle(new s.core.Rect(0,0,0,0)),void this._visible(!1);this._visible(!0),t.beginTransform(),this._applyStyle(t);var n,o=this._legendView().title,r=new s.core.Size(0,0);switch(null!=o&&0<o.length&&(r=this._measure(t,e)),t.restoreTransform(),this._legendView()._titlePosition()){case s.Position.Left:n=new s.core.Rect(e.left,e.top+(e.height-r.height)/2,r.width,r.height);break;case s.Position.Right:n=new s.core.Rect(e.left+(e.width-r.width),e.top+(e.height-r.height)/2,r.width,r.height);break;case s.Position.Top:n=new s.core.Rect(e.left+(e.width-r.width)/2,e.top,r.width,r.height);break;case s.Position.Bottom:n=new s.core.Rect(e.left+(e.width-r.width)/2,e.top+(e.height-r.height),r.width,r.height)}this._rectangle(n)},t.prototype._renderContent=function(t,e){var i=this._rectangle();this._legendView().title&&e.labels.push(i),n.prototype._renderContent.call(this,t,e)},t.prototype._applyStyle=function(t){s._applyTextStyle(t,this._legendView()._plotAreaView()._dvView()._option().legend.titleStyle),s._applyTextStyle(t,this._legendView()._plotAreaView()._option().legend.titleStyle),s._applyTextStyle(t,this._legendView()._data()._option().titleStyle)},t.prototype._hitTest=function(t){var e=this._rectangle();return null!=e&&e.contains(t)?new s.HitTestResult(t,this,this,s.ElementType.LegendTitle):n.prototype._hitTest.call(this,t)},t}(s._TextView);s._LegendTitleView=t}(dv||(dv={})),function(h){"use strict";var t=function(a){function t(t,e){var i=a.call(this)||this;return i.__plotAreaView=t,i.__data=e,i.__clipId="legendClip"+(1e5*Math.random()).toFixed(),i.__titleView=new h._LegendTitleView(i),i}return __extends(t,a),t.prototype._enlarge=function(){return new h.core.Size(Number.MAX_VALUE,Number.MAX_VALUE)},t.prototype._restore=function(){},Object.defineProperty(t.prototype,"type",{get:function(){return h.ElementType.Legend},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"parent",{get:function(){var t=this._data()._legendManager();return t instanceof h.models._PlotAreaLegendManager?t._plotArea():t instanceof h.models._PlotLegendManager?t._plotView()._plotAreaView():null},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"title",{get:function(){return this._data()._title()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"position",{get:function(){return this._position()},enumerable:!0,configurable:!0}),t.prototype._plotAreaView=function(){return this.__plotAreaView},t.prototype._data=function(){return this.__data},t.prototype._ellipsize=function(){return null},t.prototype._titlePosition=function(){return null!=this._data()._option().titlePosition?this._data()._option().titlePosition:null!=this._plotAreaView()._option().legend.titlePosition?this._plotAreaView()._option().legend.titlePosition:null!=this._plotAreaView()._dvView()._option().legend.titlePosition?this._plotAreaView()._dvView()._option().legend.titlePosition:h.Position.Top},t.prototype._orientation=function(){return null!=this._data()._option().orientation?this._data()._option().orientation:null!=this._plotAreaView()._option().legend.orientation?this._plotAreaView()._option().legend.orientation:this._plotAreaView()._dvView()._option().legend.orientation},t.prototype._position=function(){return!1===this._data()._visible()?h.Position.None:null!=this._data()._option().position?this._data()._option().position:null!=this._plotAreaView()._option().legend.position?this._plotAreaView()._option().legend.position:null!=this._plotAreaView()._dvView()._option().legend.position?this._plotAreaView()._dvView()._option().legend.position:h.Position.Right},t.prototype._titleView=function(){return this.__titleView},t.prototype._contentView=function(){return this.__contentView||(this.__contentView=this._createContentView()),this.__contentView},t.prototype._clipId=function(){return this.__clipId},t.prototype._titleSpace=function(){return t.__TITLE_SPACE},t.prototype._paddings=function(){var t=this._data()._option().padding;if(!t.isEmpty())return t;if(!(t=this._plotAreaView()._option().legend.padding).isEmpty())return t;if(!(t=this._plotAreaView()._dvView()._option().legend.padding).isEmpty())return t;var e=this.position;return e===h.Position.Left||e===h.Position.Right?new h.options._PaddingOption("0,20,0,20"):new h.options._PaddingOption("20,0,20,0")},t.prototype._measureInnerContent=function(t,e){if(this._position()==h.Position.None)return new h.core.Size(0,0);t.beginTransform(),this._applyTextStyle(t);var i=this._measureLegendTitle(t,e);switch(this.titleSize=i.clone(),e=e.clone(),this._titlePosition()){case h.Position.Left:case h.Position.Right:0<i.width&&(e.width-=i.width+this._titleSpace());break;case h.Position.Top:case h.Position.Bottom:0<i.height&&(e.height-=i.height+this._titleSpace())}var n=this._measureLegendContent(t,e);switch(this._titlePosition()){case h.Position.Left:case h.Position.Right:0<i.width&&(n.width+=i.width+this._titleSpace()),n.height<i.height&&(n.height=i.height);break;case h.Position.Top:case h.Position.Bottom:0<i.height&&(n.height+=i.height+this._titleSpace()),n.width<i.width&&(n.width=i.width)}return t.restoreTransform(),n},t.prototype._measureLegendTitle=function(t,e){var i=e.clone();if(this.position===h.Position.Left||this.position===h.Position.Right){var n=void 0,o=this._data()._option().width,r=this._data()._option().maxWidth;null!=r&&("number"==typeof r?n=r*this._plotAreaView()._rectangle().width:"string"==typeof r&&(n=h.core._Parser._parseCssPixel(r))),null!=o&&("number"==typeof o?n=o*this._plotAreaView()._rectangle().width:"string"==typeof o&&(n=h.core._Parser._parseCssPixel(o))),this._titleView()._overflow()!=h.TextOverflow.Clip&&(i.width=null!=n?n:this._plotAreaView()._rectangle().width,i=this._calculateMeasureSize(t,i,this._titleView()._overflow()))}return this._titleView()._measure(t,i)},t.prototype._measureLegendContent=function(t,e){return new h.core.Size(0,0)},t.prototype._calculateInnerRectangle=function(t,e){var i=e.clone();null!=t.strokeWidth&&0<t.strokeWidth&&(i=i.inflate(-t.strokeWidth,-t.strokeWidth));var n=this._paddings(),o=this._position();return i=o!==h.Position.Left&&o!==h.Position.Right||null==this._data()._option().width?this._position()!=h.Position.Top&&this._position()!=h.Position.Bottom||null==this._data()._option().height?new h.core.Rect(i.left+n.left,i.top+n.top,i.width-n.left-n.right,i.height-n.top-n.bottom):new h.core.Rect(i.left+n.left,i.top+n.top,i.width-n.left-n.right,i.height-n.top):new h.core.Rect(i.left+n.left,i.top+n.top,i.width-n.left,i.height-n.top-n.bottom)},t.prototype._calculateMeasureSize=function(t,e,i){var n=e.clone();null!=t.strokeWidth&&0<t.strokeWidth&&(n.width-=2*t.strokeWidth,n.height-=2*t.strokeWidth);var o=this._paddings(),r=this._position();return r!==h.Position.Left&&r!==h.Position.Right||null==this._data()._option().width?this._position()!=h.Position.Top&&this._position()!=h.Position.Bottom||null==this._data()._option().height?(n.width-=o.left+o.right,n.height-=o.top+o.bottom):n.height-=o.top+(i!=h.TextOverflow.Clip?o.bottom:0):n.width-=o.left+(i!=h.TextOverflow.Clip?o.right:0),n},t.prototype._layout=function(t,e,i){var n;this._rectangle(e),t.beginTransform(),this._applyBorderStyle(t),n=this._titleView()._overflow()==h.TextOverflow.Clip?this._calculateInnerRectangle(t,this._rectangle()):a.prototype._calculateInnerRectangle.call(this,t,this._rectangle()),t.restoreTransform(),this._layoutInnerContent(t,n,i)},t.prototype._layoutInnerContent=function(t,e,i){if(this._position()!=h.Position.None){t.beginTransform(),this._applyTextStyle(t),(e=e.clone()).width<0&&(e.width=0),e.height<0&&(e.height=0),this.__originalRect=i.OriginalLegendRect;var n=e;null!=this.__originalRect&&this._titleView()._overflow()==h.TextOverflow.Clip&&(t.beginTransform(),this._applyBorderStyle(t),n=a.prototype._calculateInnerRectangle.call(this,t,this.__originalRect),t.restoreTransform()),this._scrollable()&&(n=h.core.Rect.intersection(n,this._calculateInnerRectangle(t,this._legendsView()._rectangle()))),this._layoutLegendTitle(t,n,i);var o=e.clone(),r=new h.core.Size(this._titleView()._rectangle().width,this._titleView()._rectangle().height),s=this._titleSpace();switch(this._titlePosition()){case h.Position.Left:o.left+=r.width,0<r.width&&(o.left+=s,o.width-=r.width+s);break;case h.Position.Right:o.width-=r.width,0<r.width&&(o.width-=s);break;case h.Position.Top:o.top+=r.height,0<r.height&&(o.top+=s,o.height-=r.height+s);break;case h.Position.Bottom:o.height-=r.height,0<r.height&&(o.height-=s)}this._layoutLegendContent(t,o,i),t.restoreTransform(),this._addScrollbar()||this._destoryScrollbar()}},t.prototype._layoutLegendTitle=function(t,e,i){this._titleView()._layout(t,e,i)},t.prototype._layoutLegendContent=function(t,e,i){},t.prototype._renderContent=function(t,e){t.beginTransform(),this._applyBorderStyle(t),this._applyBackgroundStyle(t);var i=this._rectangle();(null!=t.fill&&"transparent"!=t.fill&&"none"!=t.fill||null!=t.strokeWidth&&0<t.strokeWidth)&&(t.drawRect(i.left+t.strokeWidth/2,i.top+t.strokeWidth/2,i.width-t.strokeWidth,i.height-t.strokeWidth),i=i.inflate(-t.strokeWidth,-t.strokeWidth)),i=this._calculateInnerRectangle(t,this._rectangle()),t.restoreTransform(),this._renderInnerContent(t,i,e)},t.prototype._renderInnerContent=function(t,e,i){this._position()!=h.Position.None&&(t.beginTransform(),t.addClipRect(e,this._clipId()),t.startGroup(h.__Constant_Core_Legend_ClassName,this._clipId()),this._applyTextStyle(t),this._renderLegendTitle(t,e,i),this._renderLegendContent(t,e,i),t.endGroup(),t.restoreTransform())},t.prototype._renderLegendTitle=function(t,e,i){this._titleView()._render(t,i)},t.prototype._renderLegendContent=function(t,e,i){},t.prototype._applyTextStyle=function(t){h._applyTextStyle(t,this._plotAreaView()._dvView()._option().legend.textStyle),h._applyTextStyle(t,this._plotAreaView()._option().legend.textStyle),h._applyTextStyle(t,this._data()._option().textStyle)},t.prototype._applyBorderStyle=function(t){a.prototype._applyBorderStyle.call(this,t),h._applyLineStyleFromGStyle(t,this._plotAreaView()._dvView()._option().style),h._applyLineStyleFromGStyle(t,this._plotAreaView()._option().style),h._applyLineStyleFromGStyle(t,this._plotAreaView()._dvView()._option().legend.style),h._applyLineStyleFromGStyle(t,this._plotAreaView()._option().legend.style),h._applyLineStyleFromGStyle(t,this._data()._option().style),h._applyLineStyle(t,this._plotAreaView()._dvView()._option().legend.borderStyle),h._applyLineStyle(t,this._plotAreaView()._option().legend.borderStyle),h._applyLineStyle(t,this._data()._option().borderStyle)},t.prototype._applyBackgroundStyle=function(t){a.prototype._applyBackgroundStyle.call(this,t),h._applyBackgroundColor(t,this._plotAreaView()._dvView()._option().legend.style.backgroundColor),h._applyBackgroundColor(t,this._plotAreaView()._option().legend.style.backgroundColor),h._applyBackgroundColor(t,this._data()._option().style.backgroundColor)},t.prototype._createContentView=function(){return new h._LegendContentView(this,[])},t.prototype._scrollable=function(){return 1===this._legendsView()._legendViews().length},t.prototype._getScrollContentSize=function(){var t=new h.core.Size(this.__originalRect.width,this.__originalRect.height),e=this._titleView()._rectangle(),i=this._titleSpace(),n=this._paddings(),o=t.width,r=t.height,s=0<e.width?e.width+i:0,a=0<e.height?e.height+i:0;switch(this._titlePosition()){case h.Position.Left:o=t.width-n.left-s;break;case h.Position.Right:o=t.width-n.right-s;break;case h.Position.Top:r=t.height-n.top-a;break;case h.Position.Bottom:r=t.height-n.bottom-a}return new h.core.Size(o,r)},t.prototype._getScrollRect=function(){var t=h.core.Rect.intersection(this._legendsView()._rectangle(),this._rectangle()),e=this._titleView()._rectangle(),i=this._titleSpace(),n=this._paddings(),o=t.clone(),r=0<e.width?e.width+i:0,s=0<e.height?e.height+i:0;switch(this._titlePosition()){case h.Position.Left:var a=n.left+r;o.left=t.left+a,o.width=t.width-a;break;case h.Position.Right:var l=n.right+r;o.width=t.width-l;break;case h.Position.Top:var _=n.top+s;o.top=t.top+_,o.height=t.height-_;break;case h.Position.Bottom:var u=n.bottom+s;o.height=t.height-u}return o},t.prototype._legendsView=function(){var e=this;return this._plotAreaView()._legendsViews().filter(function(t){return t&&t._position()===e.position})[0]},t.prototype._addScrollbar=function(){if(!this._scrollable())return!1;var t=this._plotAreaView()._dvView();return this.__scrollbar?this.__scrollbar._update({containerRect:this._getScrollRect(),contentSize:this._getScrollContentSize()}):this.__scrollbar=new h._DvScrollbar(t,{host:t.control.hostElement,option:{containerRect:this._getScrollRect(),contentSize:this._getScrollContentSize()},xyScrollViews:[this._contentView()]}),!0},t.prototype._destoryScrollbar=function(){this.__scrollbar&&this.__scrollbar.dispose(),this.__scrollbar=null},t.prototype.dispose=function(){this._destoryScrollbar()},t.prototype._hitTest=function(t){var e=this._rectangle();if(null!=e&&e.contains(t)){var i=this._titleView()._hitTest(t);if(null!=i)return i}return a.prototype._hitTest.call(this,t)},t.__TITLE_SPACE=10,t}(h._RectangleView);h._LegendView=t}(dv||(dv={})),function(r){"use strict";var t=function(n){function o(t,e){var i=n.call(this,t,e)||this;return i.legendAxisView=new r._LegendAxisView(e,e.linearColor,i._createScale(e._minimum(),e._maximum())),i}return __extends(o,n),Object.defineProperty(o.prototype,"title",{get:function(){return this._data()._title()},enumerable:!0,configurable:!0}),o.prototype.characterSize=function(t){return t.measureString("A")},o.prototype._gradientScale=function(){return this.legendAxisView._gradientScale()},o.prototype._createContentView=function(){return new r._LegendContentView(this,[this.legendAxisView])},o.prototype._measureLegendContent=function(t,e){var i=this.legendAxisView._measure(t,e),n=t.measureString("A").height;return i.width+=n,i},o.prototype._layoutLegendContent=function(t,e,i){this._contentView()._layout(t,this._scrollable()?this._getScrollRect():e,i),this.legendAxisView._layout(t,e,i)},o.prototype._renderLegendContent=function(t,e,i){this._contentView()._render(t,i)},o.prototype._createScale=function(t,e){var i=new r._LinearAxisScale;return 0<(t-=(e-t)*o.__Constant_Minimum_Space)?i._domain([t,e]):i._domain([0,e]),i._range([0]),i},o.__Constant_Minimum_Space=.25,o.TicksWidth=2,o}(r._LegendView);r._GradientLegendView=t}(dv||(dv={})),function(p){"use strict";var t=function(c){function t(t,e,i){var n=c.call(this,null,i)||this;n.linearColor=e,n.__gradientScale=t._linearScale();var o=t._option().gradient,r=n._scale().ticks();return o instanceof p.options._LegendGradientOption&&(null!=o.max&&o.max>t._maximum()?n._maximum=o.max:n._maximum=t._maximum(),null!=o.min&&o.min<t._minimum()?n._minimum=o.min:n._minimum=t._minimum(),null==o.majorUnit?n._unit=r[1]-r[0]:n._unit=o.majorUnit),n.__gradientScale._range(r[0],r[r.length-1]),n}return __extends(t,c),t.prototype._gradientScale=function(){return this.__gradientScale},t.prototype._getCharacterSize=function(t){return t.measureString("A")},t.prototype._option=function(){return new p.options._AxisOption(null)},t.prototype.labelFromValue=function(t,e){var i=p.plugins._Plugins._stringFormatting("Default");return null!=i?(null==e&&(p.core.isNumber(t)?e=i.defaultFormat(p.core.DataType.Number,!1):p.core.isDate(t)&&(e=i.defaultFormat(p.core.DataType.Date,!1))),i.format(e,t)):null},t.prototype._measure=function(i,t){var n=new p.core.Size(0,0),o=0,r=p.plugins._Plugins._stringFormatting("Default"),s=r.defaultFormat(p.core.DataType.Number,!1);return n.height+=5*this._getCharacterSize(i).height,this._scale().ticks().forEach(function(t){var e=i.measureString(r.format(s,t));e.width>n.width&&(n.width=e.width),o+=e.height}),n.height<o&&(n.height=o),n.height+=this._getCharacterSize(i).height,n.width+=10,n},t.prototype._layout=function(t,e,i){c.prototype._layout.call(this,t,e,i);var n=this._measure(t),o=this._majorSize=(n.height-this._getCharacterSize(t).height)/(this._scale().ticks().length-1),r=this._option(),s=this._scale();this._end=new p.core.Point(e.left,e.top),this._start=new p.core.Point(this._end.x,this._end.y+n.height),t.beginTransform(),p._applyLineStyle(t,this._defaultMajorTickStyle()),p._applyLineStyle(t,this._option().majorTickStyle);for(var a=this._axisLabelViews(),l=0;l<a.length;l++){var _=a[l],u=(s.value(_._tick()),t.measureString(_._title())),h=this._calculateMajorLabelLocation(r,o*l,10+this._getCharacterSize(t).height,u);_._location(h.location),_._center(h.center)}t.restoreTransform()},t.prototype._calculateMajorLabelLocation=function(t,e,i,n){var o=this._calculateMajorTickLocation(t,e,i).start;return{location:new p.core.Point(o.x,o.y),center:new p.core.Point(o.x+n.width/2,o.y)}},t.prototype._calculateMajorTickLocation=function(t,e,i){var n=new p.core.Point(this._start.x,this._start.y-e);return{start:new p.core.Point(n.x+i,n.y),end:n}},t.prototype._renderAxis=function(t,e){var i=this._option(),n=(null!=i.labelAngle&&i.labelAngle instanceof Array&&0<i.labelAngle.length&&Math.round(i.labelAngle[0]),new p.core.Size(0,1));this._renderAxisLine(t,e);for(var o=this._majorSize*n.height,r=this._scale(),s=0;s<r.ticks().length;s++){r.value(r.ticks()[s]);this._drawMajorTick(t,o*s,5)}for(var a=0,l=this._axisLabelViews();a<l.length;a++){l[a]._render(t,e)}},t.prototype._renderAxisLine=function(t,e){var i=this._option();if(i.axisLine){t.beginTransform(),p._applyLineStyle(t,this._defaultLineStyle()),p._applyLineStyle(t,i.lineStyle);var n=this._getCharacterSize(t).height/2;t.fill=this.linearColor,t.drawRect(this._end.x,this._end.y+this._getCharacterSize(t).height/2,this._getCharacterSize(t).height,this._start.y-this._end.y-this._getCharacterSize(t).height),t.drawLine(this._start.x+this._getCharacterSize(t).height,this._start.y-n,this._end.x+this._getCharacterSize(t).height,this._end.y+n),t.restoreTransform()}},t.prototype._drawMajorTick=function(t,e,i){var n=this._option();if(n.majorTicks!=p.TickMark.None){t.beginTransform(),p._applyLineStyle(t,this._defaultMajorTickStyle()),p._applyLineStyle(t,n.majorTickStyle);var o=this._calculateMajorTickLocation(n,e,i);t.drawLine(o.start.x+this._getCharacterSize(t).height,o.start.y-this._getCharacterSize(t).height/2,o.end.x+this._getCharacterSize(t).height,o.end.y-this._getCharacterSize(t).height/2),t.restoreTransform()}},t}(p._AxisView);p._LegendAxisView=t}(dv||(dv={})),function(C){"use strict";var t=function(n){function V(t,e){var i=n.call(this,t,e)||this;return i.__Context={},i.__itemViews=[],i.__itemViews=i._createItemViews(e),i}return __extends(V,n),V.prototype._measure=function(t,e){return this.size=n.prototype._measure.call(this,t,e),this.size},Object.defineProperty(V.prototype,"items",{get:function(){return this._itemViews()},enumerable:!0,configurable:!0}),V.prototype._data=function(){return n.prototype._data.call(this)},V.prototype._labelPosition=function(){return C.Position.Right},V.prototype._iconColor=function(){var t=this._data()._option().style.iconColor;return null!=t?C.models._toColorFromOption(t):null!=(t=this._plotAreaView()._option().legend.style.iconColor)?C.models._toColorFromOption(t):null!=(t=this._plotAreaView()._dvView()._option().legend.style.iconColor)?C.models._toColorFromOption(t):C.__Constant_Core_Style_Fill},V.prototype._itemViews=function(){return this.__itemViews},V.prototype._wrapping=function(){var t=this._plotAreaView()._option().legend.wrapping;return null!=t?t:null==(t=this._plotAreaView()._dvView()._option().legend.wrapping)||t},V.prototype._createItemViews=function(t){for(var e=[],i=0,n=t._items();i<n.length;i++){var o=n[i],r=this._createItemView(o);null!=r&&e.push(r)}return e},V.prototype._createItemView=function(t){return new C._LegendItemView(this,t)},V.prototype._createContentView=function(){return new C._LegendContentView(this,this._itemViews())},V.prototype._init=function(t){this.__Columns&&this.__Context.parentSize&&(this.position===C.Position.Left||this.position===C.Position.Right)&&t.height>this.__Context.parentSize.height&&1<this.__Columns.list.length&&(this.__Columns=null),this.__Rows&&this.__Context.parentSize&&(this.position===C.Position.Top||this.position===C.Position.Bottom)&&t.width>this.__Context.parentSize.width&&1<this.__Rows.list.length&&(this.__Rows=null),null!=this.__Context.row&&delete this.__Context.row,null!=this.__Context.col&&delete this.__Context.col,this.__Context.parentSize=new C.core.Size(t.width,t.height)},V.prototype._measureLegendContent=function(t,e){var i;if(this.position===C.Position.Left||this.position===C.Position.Right){var n=this._data()._option().width,o=this._data()._option().maxWidth;null!=o&&("number"==typeof o?i=o*this._plotAreaView()._rectangle().width:"string"==typeof o&&(i=C.core._Parser._parseCssPixel(o))),null!=n&&("number"==typeof n?i=n*this._plotAreaView()._rectangle().width:"string"==typeof n&&(i=C.core._Parser._parseCssPixel(n)))}var r=new C.core.Size(0,0);switch(this._orientation()){case C.Orientation.Horizontal:null==this.__Rows&&this._initRow(t,e,i),r.width=this.__Rows.width,r.height=this.__Rows.height;break;default:null==this.__Columns&&this._initColum(t,e,i),r.width=this.__Columns.width,r.height=this.__Columns.height}return r},V.prototype._initColum=function(t,e,i){this.__Columns=new V.Columns;for(var n=new V.Column(this.__Columns),o=0,r=this._itemViews();o<r.length;o++){var s=r[o],a=new C.core.Size(Number.MAX_VALUE,Number.MAX_VALUE);s._overflow()!=C.TextOverflow.Clip&&((a=e.clone()).width=null!=i?i:this._plotAreaView()._rectangle().width,a=this._calculateMeasureSize(t,a,s._overflow()));var l=s._measure(t,a),_=new V._Rect(l,s);n.push(_)}this.__Columns.push(n)},V.prototype._initRow=function(t,e,i){this.__Rows=new V.Rows;for(var n=new V.Row(this.__Rows),o=0,r=this._itemViews();o<r.length;o++){var s=r[o],a=new C.core.Size(Number.MAX_VALUE,Number.MAX_VALUE);s._overflow()!=C.TextOverflow.Clip&&((a=e.clone()).width=null!=i?i:this._plotAreaView()._rectangle().width,a=this._calculateMeasureSize(t,a,s._overflow()));var l=s._measure(t,a),_=new V._Rect(l,s);n.push(_)}this.__Rows.push(n)},V.prototype._enlarge=function(){if(!this._wrapping())return n.prototype._enlarge.call(this);if(this.position===C.Position.Left||this.position===C.Position.Right){if(this._orientation()===C.Orientation.Horizontal)return new C.core.Size(Number.MAX_VALUE,0);var t=this.__Columns.height,e=this.__Columns.width;this.__Context.col=this.__Columns.copy(this.__Columns.list),this.__Columns.enlarge();var i=t-this.__Columns.height;return this.__Columns.height<this.titleSize.height&&(this._titlePosition()===C.Position.Right||this._titlePosition()===C.Position.Left)&&(i=t-this.titleSize.height),this.size.width+=this.__Columns.width-e,new C.core.Size(0<i?this.size.width:Number.MAX_VALUE,i)}if(this._orientation()!==C.Orientation.Horizontal)return new C.core.Size(0,Number.MAX_VALUE);t=this.__Rows.height,e=this.__Rows.width;this.__Context.row=this.__Rows.copy(this.__Rows.list),this.__Rows.enlarge();i=e-this.__Rows.width;return this.__Rows.width<this.titleSize.width&&(this._titlePosition()===C.Position.Top||this._titlePosition()===C.Position.Bottom)&&(i=e-this.titleSize.width),this.size.height+=this.__Rows.height-t,new C.core.Size(i,0<i?this.size.height:Number.MAX_VALUE)},V.prototype._restore=function(){if(this.position===C.Position.Left||this.position===C.Position.Right){if(this._orientation()!==C.Orientation.Horizontal&&null!=this.__Context.col){var t=this.__Columns.width;this.__Columns.list=this.__Context.col,this.__Columns.onColumChange(),this.size.width+=this.__Columns.width-t}}else if(this._orientation()===C.Orientation.Horizontal&&null!=this.__Context.row){var e=this.__Rows.height;this.__Rows.list=this.__Context.row,this.__Rows.onRowChange(),this.size.height+=this.__Rows.height-e}},V.prototype._layoutLegendContent=function(t,e,i){switch(this._contentView()._layout(t,this._scrollable()?this._getScrollRect():e,i),this._orientation()){case C.Orientation.Horizontal:if(this.__Rows)for(var n=this.__Rows,o=e.top,r=0,s=n.list;r<s.length;r++){for(var a=s[r],l=e.left,_=new C.core.Size(0,0),u=0,h=a.items;u<h.length;u++){var c=(P=h[u]).view._measureSymbolSize(t,new C.core.Size(P.width,a.height));_.width<c.width&&(_.width=c.width),_.height<c.height&&(_.height=c.height)}i.legendSymbolSize=_;for(var p=0,f=a.items;p<f.length;p++){(P=f[p]).view._layout(t,new C.core.Rect(l,o,P.width,a.height),i),l+=V.__ITEM_SPACE+P.width}o+=a.height+V.__COLUMN_ROW_SPACE}break;default:if(this.__Columns)for(var d=this.__Columns,g=(l=e.left,0),y=d.list;g<y.length;g++){for(var m=y[g],v=e.top,w=(_=new C.core.Size(0,0),0),b=m.items;w<b.length;w++){c=(P=b[w]).view._measureSymbolSize(t,new C.core.Size(m.width,P.height));_.width<c.width&&(_.width=c.width),_.height<c.height&&(_.height=c.height)}i.legendSymbolSize=_;for(var x=0,S=m.items;x<S.length;x++){var P;(P=S[x]).view._layout(t,new C.core.Rect(l,v,m.width,P.height),i),v+=V.__ITEM_SPACE+P.height}l+=m.width+V.__COLUMN_ROW_SPACE}}delete i.legendSymbolSize},V.prototype._renderLegendContent=function(t,e,i){this._contentView()._render(t,i)},V.prototype._scrollable=function(){return!this._wrapping()&&n.prototype._scrollable.call(this)},V.prototype._hitTest=function(t){var e=this._rectangle();if(null!=e&&e.contains(t)){var i=this._titleView()._hitTest(t);if(null!=i)return i;if(null!=(i=this._contentView()._hitTest(t)))return i}return n.prototype._hitTest.call(this,t)},V.__COLUMN_ROW_SPACE=10,V.__ITEM_SPACE=10,V}(C._LegendView);C._ItemizedLegendView=t}(dv||(dv={})),function(t){!function(r){var t=function(t,e){this.width=t.width,this.height=t.height,this.view=e};r._Rect=t;var e=function(){this.items=[],this.width=0,this.height=0},s=function(i){function e(t){var e=i.call(this)||this;return e.parent=t,e}return __extends(e,i),e.prototype.copy=function(){var t=new e(this.parent);return t.items=this.items.slice(0),t.width=this.width,t.height=this.height,t},e.prototype.insert=function(t){0<this.items.length?(this.width+=t.width+r.__ITEM_SPACE,this.height=Math.max(this.height,t.height)):(this.height=t.height,this.width=t.width),this.items.splice(0,0,t),this.parent.onRowChange()},e.prototype.push=function(t){0<this.items.length?(this.height=Math.max(this.height,t.height),this.width+=t.width+r.__ITEM_SPACE):(this.height=t.height,this.width=t.width),this.items.push(t),this.parent.onRowChange()},e.prototype.pop=function(){if(this&&0<this.items.length){var t=this.items.pop();this.width-=r.__ITEM_SPACE+t.width,0===this.items.length&&(this.width=0);for(var e=0,i=0,n=this.items;i<n.length;i++){var o=n[i];e=o.height>e?o.height:e}return this.height=e,this.parent.onRowChange(),t}return null},e}(r.Bar=e);r.Row=s;var i=function(){function t(){this.list=[],this.width=0,this.height=0}return t.prototype.push=function(t){0===this.list.length?this.height=t.height:this.height+=r.__COLUMN_ROW_SPACE+t.height,t.width>this.width&&(this.width=t.width,this.index=this.list.length),this.list.push(t)},t.prototype.onRowChange=function(){this.width=this.height=0;for(var t=0;t<this.list.length;++t){var e=this.list[t];e.width>this.width&&(this.width=e.width,this.index=t),this.height+=0===t?e.height:r.__COLUMN_ROW_SPACE+e.height}},t.prototype.copy=function(t){for(var e=[],i=0,n=t;i<n.length;i++){var o=n[i];e.push(o.copy())}return e},t.prototype.enlarge=function(){if(null!=this.index){for(var t=this.width,e=this.list.length,i=this.list,n=this.copy(i),o=!1;;){this.width<t&&(n=this.copy(i));for(var r=0;r<i.length;++r)if(1===i[r].items.length&&i[r].width===this.width)return void(this.list=n);if(t=this.width,this.adjust(this.index,this.width),o&&this.list.length>e+1)break;!o&&this.list.length>e&&this.width<t&&(o=!0)}this.list=n,this.onRowChange()}},t.prototype.adjust=function(t,e){var i=this.list;if(!(i[t].width<e)){null==i[t+1]&&(i[t+1]=new s(this));var n=i[t],o=i[t+1],r=n.pop();o.insert(r),this.adjust(t+1,e)}},t}();r.Rows=i;var a=function(i){function e(t){var e=i.call(this)||this;return e.parent=t,e}return __extends(e,i),e.prototype.copy=function(){var t=new e(this.parent);return t.items=this.items.slice(0),t.width=this.width,t.height=this.height,t},e.prototype.insert=function(t){0<this.items.length?(this.height+=t.height+r.__ITEM_SPACE,this.width=Math.max(this.width,t.width)):(this.height=t.height,this.width=t.width),this.items.splice(0,0,t),this.parent.onColumChange()},e.prototype.push=function(t){0<this.items.length?(this.width=Math.max(this.width,t.width),this.height+=t.height+r.__ITEM_SPACE):(this.width=t.width,this.height=t.height),this.items.push(t),this.parent.onColumChange()},e.prototype.pop=function(){if(this&&0<this.items.length){var t=this.items.pop();this.height-=r.__ITEM_SPACE+t.height,0===this.items.length&&(this.height=0);for(var e=0,i=0,n=this.items;i<n.length;i++){var o=n[i];e=o.width>e?o.width:e}return this.width=e,this.parent.onColumChange(),t}return null},e}(e);r.Column=a;var n=function(){function t(){this.list=[],this.width=0,this.height=0}return t.prototype.push=function(t){0===this.list.length?this.width=t.width:this.width+=r.__COLUMN_ROW_SPACE+t.width,t.height>this.height&&(this.height=t.height,this.index=this.list.length),this.list.push(t)},t.prototype.onColumChange=function(){this.width=this.height=0;for(var t=0;t<this.list.length;++t){var e=this.list[t];e.height>this.height&&(this.height=e.height,this.index=t),this.width+=0===t?e.width:r.__COLUMN_ROW_SPACE+e.width}},t.prototype.copy=function(t){for(var e=[],i=0,n=t;i<n.length;i++){var o=n[i];e.push(o.copy())}return e},t.prototype.enlarge=function(){if(null!=this.index){for(var t=this.height,e=this.list.length,i=this.list,n=this.copy(i),o=!1;;){this.height<t&&(n=this.copy(i));for(var r=0;r<i.length;++r)if(1===i[r].items.length&&i[r].height===this.height)return void(this.list=n);if(t=this.height,this.adjust(this.index,this.height),o&&this.list.length>e+1)break;!o&&this.list.length>e&&this.height<t&&(o=!0)}this.list=n,this.onColumChange()}},t.prototype.adjust=function(t,e){var i=this.list;if(!(i[t].height<e)){null==i[t+1]&&(i[t+1]=new a(this));var n=i[t],o=i[t+1],r=n.pop();o.insert(r),this.adjust(t+1,e)}},t}();r.Columns=n}(t._ItemizedLegendView||(t._ItemizedLegendView={}))}(dv||(dv={})),function(p){"use strict";var t=function(n){function c(t,e){var i=n.call(this)||this;return i.__filtered=!1,i.__selected=!1,i.__legendView=t,i.__data=e,i.__labelView=new p._LegendLabelView(i),i}return __extends(c,n),c.prototype._getTitleStyle=function(){return this.__data._option()?this.__data._option().textStyle:null},Object.defineProperty(c.prototype,"type",{get:function(){return p.ElementType.LegendItem},enumerable:!0,configurable:!0}),Object.defineProperty(c.prototype,"parent",{get:function(){return this._legendView()},enumerable:!0,configurable:!0}),Object.defineProperty(c.prototype,"title",{get:function(){return this._data()._title()},enumerable:!0,configurable:!0}),Object.defineProperty(c.prototype,"size",{get:function(){return this._data()._size()},enumerable:!0,configurable:!0}),Object.defineProperty(c.prototype,"color",{get:function(){return this._data()._color()},enumerable:!0,configurable:!0}),Object.defineProperty(c.prototype,"shape",{get:function(){return this._data()._shape()},enumerable:!0,configurable:!0}),Object.defineProperty(c.prototype,"filtered",{get:function(){return this.__filtered},set:function(t){this.__filtered!=t&&(this.__filtered=t)},enumerable:!0,configurable:!0}),Object.defineProperty(c.prototype,"selected",{get:function(){return this.__selected},set:function(t){this.__selected!=t&&(this.__selected=t)},enumerable:!0,configurable:!0}),Object.defineProperty(c.prototype,"hover",{get:function(){return this._hover()},set:function(t){this._hover(t)},enumerable:!0,configurable:!0}),c.prototype._className=function(){return p.__Constant_Core_Label_ClassName},c.prototype._data=function(){return this.__data},c.prototype._legendView=function(){return this.__legendView},c.prototype._labelView=function(){return this.__labelView},c.prototype._symbolRectangle=function(){return this.__symbolRectangle},c.prototype._paddings=function(){var t=this._legendView()._data()._option().itemPadding;return t.isEmpty()&&(t=this._legendView()._plotAreaView()._option().legend.itemPadding).isEmpty()&&(t=this._legendView()._plotAreaView()._dvView()._option().legend.itemPadding).isEmpty()?new p.options._PaddingOption(null):t},c.prototype._overflow=function(){return this._labelView()._overflow()},c.prototype.relatedModels=function(){var t=[],e=this._legendView()._data()._legendManager();if(e instanceof p.models._PlotLegendManager)for(var i=0,n=e._relatedPointsFromLegendItem(this);i<n.length;i++){var o=n[i];t.push(o)}else if(e instanceof p.models._PlotAreaLegendManager)for(var r=0,s=e._relatedSeriesListFromLegendItem(this);r<s.length;r++){o=s[r];t.push(o)}return t},c.prototype._hitTest=function(t){var e=this._rectangle();return null!=e&&e.contains(t)?new p.HitTestResult(t,this,this,p.ElementType.LegendItem):n.prototype._hitTest.call(this,t)},c.prototype._measureSymbolSize=function(t,e){var i;return i=this._overflow()!=p.TextOverflow.Clip||""==this._labelView()._title()?t.measureString("A"):this._labelView()._measure(t,e),this._calculateSymbolSize(i)},c.prototype._measure=function(t,e){t.beginTransform(),this._applyStyle(t);var i=this._paddings();(e=e.clone()).width-=i.left+i.right,e.height-=i.top+i.bottom;var n=new p.core.Size(0,0),o=new p.core.Size(0,0),r=t.measureString("A"),s=new p.core.Size(0,0);if(this._overflow()==p.TextOverflow.Clip)o=this._labelView()._measure(t,e),s=this._calculateSymbolSize(0==o.height?r:o);else{s=this._calculateSymbolSize(r);var a=e.clone();this._legendView()._labelPosition()!=p.Position.Left&&this._legendView()._labelPosition()!=p.Position.Right||(a.width-=s.width+c.__SPACE),o=this._labelView()._measure(t,a)}switch(0==o.width&&0==o.height&&(o.height=r.height),this._legendView()._labelPosition()){case p.Position.Left:case p.Position.Right:n.width+=o.width+s.width+c.__SPACE,n.height+=s.height>o.height?s.height:o.height;break;case p.Position.Top:case p.Position.Bottom:n.width+=o.width>s.width?o.width:s.width,n.height+=s.height+o.height+c.__SPACE}return n.width+=i.left+i.right,n.height+=i.top+i.bottom,n.width>e.width&&(n.width=e.width),n.height>e.height&&(n.height=e.height),t.restoreTransform(),n},c.prototype._layout=function(t,e,i){t.beginTransform(),this._applyStyle(t);var n=this._paddings(),o=new p.core.Rect(e.left+n.left,e.top+n.top,e.width-n.left-n.right,e.height-n.top-n.bottom),r=(new p.core.Size(0,0),new p.core.Size(0,0)),s=t.measureString("A"),a=new p.core.Size(0,0);if(this._overflow()==p.TextOverflow.Clip)r=this._labelView()._measure(t,o),a=this._calculateSymbolSize(0==r.height?s:r);else{a=this._calculateSymbolSize(s);var l=o.clone();this._legendView()._labelPosition()!=p.Position.Left&&this._legendView()._labelPosition()!=p.Position.Right||(l.width-=a.width+c.__SPACE),r=this._labelView()._measure(t,l)}0==r.width&&0==r.height&&(r.height=s.height);var _=i.legendSymbolSize;switch(this._legendView()._labelPosition()){case p.Position.Left:var u=Math.max(r.height,a.height);this._legendView()._orientation()==p.Orientation.Horizontal?u=o.height:null!=_&&(a.width=_.width),this.__symbolRectangle=new p.core.Rect(o.right-a.width,o.top+(u-a.height)/2,a.width,a.height),this._labelView()._layout(t,new p.core.Rect(o.left,o.top+(u-r.height)/2,r.width,r.height),i),this._rectangle(new p.core.Rect(e.left,e.top,e.width,u+n.top+n.bottom));break;case p.Position.Right:u=Math.max(r.height,a.height);this._legendView()._orientation()==p.Orientation.Horizontal?u=o.height:null!=_&&(a.width=_.width),this.__symbolRectangle=new p.core.Rect(o.left,o.top+(u-a.height)/2,a.width,a.height),this._labelView()._layout(t,new p.core.Rect(o.left+a.width+c.__SPACE,o.top+(u-r.height)/2,r.width,r.height),i),this._rectangle(new p.core.Rect(e.left,e.top,e.width,u+n.top+n.bottom));break;case p.Position.Top:var h=Math.max(r.width,a.width);this._legendView()._orientation()==p.Orientation.Horizontal?null!=_&&(a.height=_.height):h=o.width,this.__symbolRectangle=new p.core.Rect(o.left+(h-a.width)/2,o.top+r.height+c.__SPACE,a.width,a.height),this._labelView()._layout(t,new p.core.Rect(o.left+(h-r.width)/2,o.top,r.width,r.height),i),this._rectangle(new p.core.Rect(e.left,e.top,h+n.left+n.right,a.height+r.height+c.__SPACE+n.top+n.bottom));break;case p.Position.Bottom:h=Math.max(r.width,a.width);this._legendView()._orientation()==p.Orientation.Horizontal?null!=_&&(a.height=_.height):h=o.width,this.__symbolRectangle=new p.core.Rect(o.left+(h-a.width)/2,o.top,a.width,a.height),this._labelView()._layout(t,new p.core.Rect(o.left+(h-r.width)/2,o.top+a.height+c.__SPACE,r.width,r.height),i),this._rectangle(new p.core.Rect(e.left,e.top,h+n.left+n.right,a.height+r.height+c.__SPACE+n.top+n.bottom))}t.restoreTransform()},c.prototype._renderContent=function(t,e){t.beginTransform(),this._applyStyle(t),this._labelView()._render(t,e);var i=this._data()._symbol();if(null!=i){i._seriesColor(this._data()._seriesColor());var n=null;e.hasSelectionInPlotArea&&(n=this.selected?this._legendView()._plotAreaView()._dvView()._option().selectedStyle.symbolFill:this._legendView()._plotAreaView()._dvView()._option().unselectedStyle.symbolFill),i.color=p._fillColorFromOption(n)||this._data()._color()||this._legendView()._iconColor();var o=this._getSymbolStyle();i._style(o);var r=new p._Style;r._mergeDataPointSymbolStyle(o),i.render(t,this._symbolRectangle(),r)}t.restoreTransform()},c.prototype._applyStyle=function(t){if(this.filtered){var e=!0,i=this._legendView()._plotAreaView()._dvView()._option().legend.filteredOutStyle;if(i.isEmpty()||(e=!1,p._applyTextStyle(t,i)),(i=this._legendView()._plotAreaView()._option().legend.filteredOutStyle).isEmpty()||(e=!1,p._applyTextStyle(t,i)),(i=this._legendView()._data()._option().filteredOutStyle).isEmpty()||(e=!1,p._applyTextStyle(t,i)),e){var n=p.core._Color.fromCss(t.textFill);n.alpha=.5*n.alpha,p._applyTextStyle(t,new p.options._TextStyleOption({color:n.toCss()}))}}if(this._hover()){var o=this._legendView()._plotAreaView()._dvView()._option().legend.hoverStyle;o.isEmpty()||p._applyTextStyle(t,o),(o=this._legendView()._plotAreaView()._option().legend.hoverStyle).isEmpty()||p._applyTextStyle(t,o),(o=this._legendView()._data()._option().hoverStyle).isEmpty()||p._applyTextStyle(t,o)}},c.prototype._calculateSymbolSize=function(t){var e=16;if(null!=this._data()._size()&&this._data()._symbol()._showSymbol()){var i=this._legendView()._data()._legendManager();return e=i instanceof p.models._PlotLegendManager?this._data()._size()*i._plotView()._option().config.style.symbolSize:10*this._data()._size(),new p.core.Size(Math.max(1.2*e,16),e)}return 0<t.height?(e=.7*t.height,new p.core.Size(Math.max(2*e,16),e)):new p.core.Size(e,e)},c.prototype._getSymbolStyle=function(){var t=this._legendView()._plotAreaView()._dvView()._option().style,e=new p.options._DataPointStyleOption(this._data()._style());return null==e.stroke&&(e.stroke=t.stroke),null==e.strokeWidth&&(e.strokeWidth=t.strokeWidth),null==e.strokeDasharray&&(e.strokeDasharray=t.strokeDasharray),e},c.__SPACE=2,c}(p._View);p._LegendItemView=t}(dv||(dv={})),function(r){"use strict";var t=function(n){function o(t){var e=n.call(this,null)||this;return e.__legendItemView=t,e.__title=e._generateTitle(t._data()),e}return __extends(o,n),o.prototype._legendItemView=function(){return this.__legendItemView},o.prototype._title=function(){return this.__title},o.prototype._label=function(){return this._legendItemView()._data()._title()},o.prototype._padding=function(){return o.__PADDING},o.prototype._applyStyle=function(t){var e=this.__legendItemView._getTitleStyle();null!=e&&r._applyTextStyle(t,e)},o.prototype._generateTitle=function(t){var e=t._title(),i=this._legendItemView()._legendView()._ellipsize();return 0<i&&i<e.length?e.substr(0,i)+o.__END:e},o.prototype._overflow=function(){return null!=this._legendItemView()._legendView()._data()._option().textStyle.overflow?this._legendItemView()._legendView()._data()._option().textStyle.overflow:null!=this._legendItemView()._legendView()._plotAreaView()._option().legend.textStyle.overflow?this._legendItemView()._legendView()._plotAreaView()._option().legend.textStyle.overflow:null!=this._legendItemView()._legendView()._plotAreaView()._dvView()._option().legend.textStyle.overflow?this._legendItemView()._legendView()._plotAreaView()._dvView()._option().legend.textStyle.overflow:null!=this._legendItemView()._legendView()._plotAreaView()._option().textStyle.overflow?this._legendItemView()._legendView()._plotAreaView()._option().textStyle.overflow:null!=this._legendItemView()._legendView()._plotAreaView()._dvView()._option().textStyle.overflow?this._legendItemView()._legendView()._plotAreaView()._dvView()._option().textStyle.overflow:n.prototype._overflow.call(this)},o.prototype._lines=function(){return[this._title()]},o.prototype._layout=function(t,e,i){var n,o=this._title();switch(n=null==o||o.length<=0?new r.core.Size(0,t.measureString("A").height):this._measure(t,e),this._legendItemView()._legendView()._labelPosition()){case r.Position.Left:case r.Position.Right:this._rectangle(new r.core.Rect(e.left,e.top,n.width,n.height));break;case r.Position.Top:case r.Position.Bottom:this._rectangle(new r.core.Rect(e.left,e.top,n.width,n.height))}},o.prototype._renderContent=function(t,e){var i=this._rectangle();e.labels.push(i),n.prototype._renderContent.call(this,t,e)},o.__PADDING=10,o.__END="...",o}(r._TextView);r._LegendLabelView=t}(dv||(dv={})),function(t){"use strict";var e=function(n){function t(t,e){var i=n.call(this)||this;return i.__parent=t,i.__label=e,i}return __extends(t,n),t.prototype._parent=function(){return this.__parent},t.prototype._label=function(){return this.__label},t.prototype.getSymbol=function(){return null},t.prototype._layout=function(t,e,i){},t.prototype._hasLegend=function(){return!1},t.prototype.getDefaultColor=function(){if(!this.__color){var t=this._parent()._plotView()._plotAreaView()._dvView()._colorProvider(),e=this._parent()._paletteOffset();null!=e&&(this.__color=t.getColor(e))}return this.__color},t}(t._View);t._OverlayItemView=e}(dv||(dv={})),function(t){"use strict";var e=function(n){function t(t,e){var i=n.call(this)||this;return i.__plotView=t,i.__option=e,i}return __extends(t,n),t.prototype._paletteOffset=function(t){return null!=t&&(this.__paletteOffset=t),this.__paletteOffset},t.prototype.bindData=function(){},t.prototype._position=function(){return this._option().position},t.prototype._plotView=function(){return this.__plotView},t.prototype._option=function(){return this.__option},t}(t._View);t._OverlayView=e}(dv||(dv={})),function(t){"use strict";var e=function(n){function t(t,e){var i=n.call(this,t,e)||this;return i.__viewItems=[],i}return __extends(t,n),t.prototype._viewItems=function(){return this.__viewItems},t.prototype._maxy=function(){return this.__maxy},t.prototype._maxx=function(){return this.__maxx},t.prototype._miny=function(){return this.__miny},t.prototype._minx=function(){return this.__minx},t.prototype._plotView=function(){return n.prototype._plotView.call(this)},t.prototype._prepareOverlay=function(){},t}(t._OverlayView);t._CartesianOverlayView=e}(dv||(dv={})),function(N){"use strict";var t=function(i){function t(t,e){return i.call(this,t,e)||this}return __extends(t,i),t.prototype._option=function(){return i.prototype._option.call(this)},t.prototype._prepareOverlay=function(){this.__maxx=NaN,this.__minx=NaN,this.__maxy=NaN,this.__miny=NaN;var t=this._option();this.__start=t.start,this.__end=t.end},t.prototype._layout=function(t,e,i){this.__ares={xs:[],ys:[]},this.__circleband={startangle:0,endangle:0,radius:0,innerradius:0},this._viewItems().length=0;var n=this._plotView(),o=this._option(),r=n._getAxisX()._scale(),s=n._getAxisY()._scale();if(o.axis==N.AxisType.X)if(n._swapAxes())if(n._option().config.axisMode==N.AxisMode.Radial){var a=n._cx(),l=n._cy();this.__circleband.startangle=s.value(this.__start),this.__circleband.endangle=s.value(this.__end),this.__circleband.radius=r.value(r.max()),this.__circleband.innerradius=r.value(r.min())}else if(n._option().config.axisMode==N.AxisMode.Polygonal){this.__ares={xs:[],ys:[]};a=n._cx(),l=n._cy();for(var _=s.value(this.__start),u=s.value(this.__end),h=[_],c=[O=r.value(r.max())],p=[M=r.value(r.min())],f=0,d=(k=this._plotView()._getAxisY()._scale()).ticks(),g=NaN,y=0;y<d.length;++y){var m=d[y],v=k.value(m);if(y<d.length-1){var w=k.value(d[y+1]);f=parseFloat((w-v).toPrecision(12))}isNaN(v)||null==v||(_<v&&v<u&&(h.push(v),c.push(O),p.push(M)),u<=v&&isNaN(g)&&(g=v))}if(isNaN(g)&&(g=h[h.length-1]),h.push(u),c.push(O),p.push(M),2<h.length){if(parseFloat((h[1]-h[0]).toPrecision(12))<f){var b=O*Math.cos(f/2)/Math.cos(Math.abs(h[1]-h[0]-f/2)),x=M*Math.cos(f/2)/Math.cos(Math.abs(h[1]-h[0]-f/2));c[0]=b,p[0]=x}if(parseFloat((g-h[h.length-1]).toPrecision(12))<f){var S=O*Math.cos(f/2)/Math.cos(Math.abs(Math.abs(g-h[h.length-1])-f/2)),P=M*Math.cos(f/2)/Math.cos(Math.abs(Math.abs(g-h[h.length-1])-f/2));p[p.length-1]=P,c[c.length-1]=S}}else{if(parseFloat((g-h[0]).toPrecision(12))<f){b=O*Math.cos(f/2)/Math.cos(g-h[0]-f/2),x=M*Math.cos(f/2)/Math.cos(Math.abs(g-h[0]-f/2));c[0]=b,p[0]=x}if(parseFloat((g-h[h.length-1]).toPrecision(12))<f){S=O*Math.cos(f/2)/Math.cos(Math.abs(g-h[h.length-1]-f/2)),P=M*Math.cos(f/2)/Math.cos(Math.abs(Math.abs(g-h[h.length-1])-f/2));p[p.length-1]=P,c[c.length-1]=S}}for(y=0;y<h.length;++y){v=h[y];var V=c[y],C=Math.cos(v)*V+a,A=Math.sin(v)*V+l,D=p[y],T=Math.cos(v)*D+a,L=Math.sin(v)*D+l;this.__ares.xs.push(C),this.__ares.ys.push(A),this.__ares.xs.unshift(T),this.__ares.ys.unshift(L)}}else this.__ares.xs[0]=r.value(r.min()),this.__ares.ys[0]=s.value(this.__start),this.__ares.xs[1]=r.value(r.max()),this.__ares.ys[1]=s.value(this.__start),this.__ares.xs[2]=r.value(r.max()),this.__ares.ys[2]=s.value(this.__end),this.__ares.xs[3]=r.value(r.min()),this.__ares.ys[3]=s.value(this.__end);else if(n._option().config.axisMode==N.AxisMode.Radial){a=n._cx(),l=n._cy();this.__circleband.innerradius=r.value(this.__end),this.__circleband.radius=r.value(this.__start),this.__circleband.startangle=s.value(s.min()),this.__circleband.endangle=s.value(s.max())}else if(n._option().config.axisMode==N.AxisMode.Polygonal){this.__ares={xs:[],ys:[]};for(a=n._cx(),l=n._cy(),_=s.value(s.min()),u=s.value(s.max()),h=[_],c=[O=r.value(this.__start)],p=[M=r.value(this.__end)],f=0,d=(k=this._plotView()._getAxisY()._scale()).ticks(),g=NaN,y=0;y<d.length;++y){m=d[y],v=k.value(m);if(y<d.length-1){w=k.value(d[y+1]);f=parseFloat((w-v).toPrecision(12))}isNaN(v)||null==v||(_<v&&v<u&&(h.push(v),c.push(O),p.push(M)),u<=v&&isNaN(g)&&(g=v))}if(isNaN(g)&&(g=h[h.length-1]),h.push(u),c.push(O),p.push(M),2<h.length){if(parseFloat((h[1]-h[0]).toPrecision(12))<f){b=O*Math.cos(f/2)/Math.cos(Math.abs(h[1]-h[0]-f/2)),x=M*Math.cos(f/2)/Math.cos(Math.abs(h[1]-h[0]-f/2));c[0]=b,p[0]=x}if(parseFloat((g-h[h.length-1]).toPrecision(12))<f){S=O*Math.cos(f/2)/Math.cos(Math.abs(Math.abs(g-h[h.length-1])-f/2)),P=M*Math.cos(f/2)/Math.cos(Math.abs(Math.abs(g-h[h.length-1])-f/2));p[p.length-1]=P,c[c.length-1]=S}}else{if(parseFloat((g-h[0]).toPrecision(12))<f){b=O*Math.cos(f/2)/Math.cos(g-h[0]-f/2),x=M*Math.cos(f/2)/Math.cos(Math.abs(g-h[0]-f/2));c[0]=b,p[0]=x}if(parseFloat((g-h[h.length-1]).toPrecision(12))<f){S=O*Math.cos(f/2)/Math.cos(Math.abs(g-h[h.length-1]-f/2)),P=M*Math.cos(f/2)/Math.cos(Math.abs(Math.abs(g-h[h.length-1])-f/2));p[p.length-1]=P,c[c.length-1]=S}}for(y=0;y<h.length;++y){v=h[y],V=c[y],C=Math.cos(v)*V+a,A=Math.sin(v)*V+l,D=p[y],T=Math.cos(v)*D+a,L=Math.sin(v)*D+l;this.__ares.xs.push(C),this.__ares.ys.push(A),this.__ares.xs.unshift(T),this.__ares.ys.unshift(L)}}else this.__ares.xs[0]=r.value(this.__start),this.__ares.ys[0]=s.value(s.min()),this.__ares.xs[1]=r.value(this.__start),this.__ares.ys[1]=s.value(s.max()),this.__ares.xs[2]=r.value(this.__end),this.__ares.ys[2]=s.value(s.max()),this.__ares.xs[3]=r.value(this.__end),this.__ares.ys[3]=s.value(s.min());else if(n._swapAxes())if(n._option().config.axisMode==N.AxisMode.Radial){a=n._cx(),l=n._cy();this.__circleband.startangle=0,this.__circleband.endangle=2*Math.PI,this.__circleband.radius=r.value(this.__end),this.__circleband.innerradius=r.value(this.__start)}else if(n._option().config.axisMode==N.AxisMode.Polygonal){this.__ares={xs:[],ys:[]};for(a=n._cx(),l=n._cy(),_=Math.PI,u=2*Math.PI+Math.PI,h=[_],c=[O=r.value(this.__end)],p=[M=r.value(this.__start)],f=0,d=(k=this._plotView()._getAxisY()._scale()).ticks(),g=NaN,y=0;y<d.length;++y){m=d[y],v=k.value(m);if(y<d.length-1){w=k.value(d[y+1]);f=parseFloat((w-v).toPrecision(12))}isNaN(v)||null==v||(_<v&&v<u&&(h.push(v),c.push(O),p.push(M)),u<=v&&isNaN(g)&&(g=v))}if(isNaN(g)&&(g=h[h.length-1]),h.push(u),c.push(O),p.push(M),2<h.length){if(parseFloat((h[1]-h[0]).toPrecision(12))<f){b=O*Math.cos(f/2)/Math.cos(Math.abs(h[1]-h[0]-f/2)),x=M*Math.cos(f/2)/Math.cos(Math.abs(h[1]-h[0]-f/2));c[0]=b,p[0]=x}if(parseFloat((g-h[h.length-1]).toPrecision(12))<f){S=O*Math.cos(f/2)/Math.cos(Math.abs(Math.abs(g-h[h.length-1])-f/2)),P=M*Math.cos(f/2)/Math.cos(Math.abs(Math.abs(g-h[h.length-1])-f/2));p[p.length-1]=P,c[c.length-1]=S}}else{if(parseFloat((g-h[0]).toPrecision(12))<f){b=O*Math.cos(f/2)/Math.cos(g-h[0]-f/2),x=M*Math.cos(f/2)/Math.cos(Math.abs(g-h[0]-f/2));c[0]=b,p[0]=x}if(parseFloat((g-h[h.length-1]).toPrecision(12))<f){S=O*Math.cos(f/2)/Math.cos(Math.abs(g-h[h.length-1]-f/2)),P=M*Math.cos(f/2)/Math.cos(Math.abs(Math.abs(g-h[h.length-1])-f/2));p[p.length-1]=P,c[c.length-1]=S}}for(y=0;y<h.length;++y){v=h[y],V=c[y],C=Math.cos(v)*V+a,A=Math.sin(v)*V+l,D=p[y],T=Math.cos(v)*D+a,L=Math.sin(v)*D+l;this.__ares.xs.push(C),this.__ares.ys.push(A),this.__ares.xs.unshift(T),this.__ares.ys.unshift(L)}}else this.__ares.xs[0]=r.value(this.__start),this.__ares.ys[0]=s.value(s.min()),this.__ares.xs[1]=r.value(this.__start),this.__ares.ys[1]=s.value(s.max()),this.__ares.xs[2]=r.value(this.__end),this.__ares.ys[2]=s.value(s.max()),this.__ares.xs[3]=r.value(this.__end),this.__ares.ys[3]=s.value(s.min());else if(n._option().config.axisMode==N.AxisMode.Polygonal){this.__ares={xs:[],ys:[]};var O,M,k;for(a=n._cx(),l=n._cy(),_=s.value(this.__start),u=s.value(this.__end),h=[_],c=[O=r.value(r.max())],p=[M=r.value(r.min())],f=0,d=(k=this._plotView()._getAxisY()._scale()).ticks(),g=NaN,y=0;y<d.length;++y){m=d[y],v=k.value(m);if(y<d.length-1){w=k.value(d[y+1]);f=parseFloat((w-v).toPrecision(12))}isNaN(v)||null==v||(_<v&&v<u&&(h.push(v),c.push(O),p.push(M)),u<=v&&isNaN(g)&&(g=v))}if(isNaN(g)&&(g=h[h.length-1]),h.push(u),c.push(O),p.push(M),2<h.length){if(parseFloat((h[1]-h[0]).toPrecision(12))<f){b=O*Math.cos(f/2)/Math.cos(Math.abs(h[1]-h[0]-f/2)),x=M*Math.cos(f/2)/Math.cos(Math.abs(h[1]-h[0]-f/2));c[0]=b,p[0]=x}if(parseFloat((g-h[h.length-1]).toPrecision(12))<f){S=O*Math.cos(f/2)/Math.cos(Math.abs(Math.abs(g-h[h.length-1])-f/2)),P=M*Math.cos(f/2)/Math.cos(Math.abs(Math.abs(g-h[h.length-1])-f/2));p[p.length-1]=P,c[c.length-1]=S}}else{if(parseFloat((g-h[0]).toPrecision(12))<f){b=O*Math.cos(f/2)/Math.cos(g-h[0]-f/2),x=M*Math.cos(f/2)/Math.cos(Math.abs(g-h[0]-f/2));c[0]=b,p[0]=x}if(parseFloat((g-h[h.length-1]).toPrecision(12))<f){S=O*Math.cos(f/2)/Math.cos(Math.abs(g-h[h.length-1]-f/2)),P=M*Math.cos(f/2)/Math.cos(Math.abs(Math.abs(g-h[h.length-1])-f/2));p[p.length-1]=P,c[c.length-1]=S}}for(y=0;y<h.length;++y){v=h[y],V=c[y],C=Math.cos(v)*V+a,A=Math.sin(v)*V+l,D=p[y],T=Math.cos(v)*D+a,L=Math.sin(v)*D+l;this.__ares.xs.push(C),this.__ares.ys.push(A),this.__ares.xs.unshift(T),this.__ares.ys.unshift(L)}}else if(n._option().config.axisMode==N.AxisMode.Radial){a=n._cx(),l=n._cy();this.__circleband.innerradius=r.value(r.max()),this.__circleband.radius=r.value(r.min()),this.__circleband.startangle=s.value(this.__start),this.__circleband.endangle=s.value(this.__end)}else this.__ares.xs[0]=r.value(r.min()),this.__ares.ys[0]=s.value(this.__start),this.__ares.xs[1]=r.value(r.max()),this.__ares.ys[1]=s.value(this.__start),this.__ares.xs[2]=r.value(r.max()),this.__ares.ys[2]=s.value(this.__end),this.__ares.xs[3]=r.value(r.min()),this.__ares.ys[3]=s.value(this.__end);if(null!=this.__ares&&this._viewItems().push(new N._CartesianOverlayAreaItemView(this,this.__ares.xs,this.__ares.ys,null)),null!=this.__circleband){var R=this.__circleband;this._viewItems().push(new N._CartesianOverlayCircleAreaItemView(this,R.startangle,R.endangle,R.radius,R.innerradius,null))}},t.prototype._render=function(t,e){t.beginTransform();for(var i=0,n=this._viewItems();i<n.length;i++){n[i]._render(t,e)}t.restoreTransform()},t}(N._CartesianOverlayView);N._CartesianReferenceBandOverlayView=t}(dv||(dv={})),function(y){"use strict";var t=function(n){function t(t,e){var i=n.call(this,t,e)||this;return i.__values=[],i}return __extends(t,n),t.prototype._getLabelString=function(){var t=this._option();return null!=t.label?"string"==typeof t.label?t.label:t.label.text:null},t.prototype.isLine=function(){var t=this._option(),e=this._plotView()._axisMode();return t.axis!=y.AxisType.X||e!=y.AxisMode.Polygonal&&e!=y.AxisMode.Radial},t.prototype.createOverlayItemView=function(t,e){return void 0===e&&(e=null),this.isLine()?new y._CartesianOverlayLineItemView(this,t,e):new y._CartesianOverlayCircleItemView(this,t,e)},t.prototype._option=function(){return n.prototype._option.call(this)},t.prototype._viewItems=function(){return n.prototype._viewItems.call(this)},t.prototype.bindData=function(){for(var t,e=this._option(),i=this._getLabelString(),n=this._plotView()._data()._valueDefinitions(),o=0,r=0,s=n;r<s.length;r++){var a=s[r];null!=e.field&&e.field!==a.name||++o}if(t=1<o,null==e.value)if(e.detailLevel==y.DetailLevel.Group)for(var l=0,_=this._plotView()._data()._seriesList();l<_.length;l++){var u=_[l];if(null==e.field||u.valueDefinition===e.field)if(null==i)this._viewItems().push(this.createOverlayItemView(null,u));else{var h=null!=u.detail?u.detail:"";t&&(h=u.valueDefinition+" "+h),""!==i&&(h=" "+h),this._viewItems().push(this.createOverlayItemView(i+h,u))}}else for(var c=0,p=n;c<p.length;c++){a=p[c];if(null==e.field||e.field===a.name)if(null==i)this._viewItems().push(this.createOverlayItemView(null));else{var f=i;t&&(f=f+(""===i?"":" ")+a.name),this._viewItems().push(this.createOverlayItemView(f))}}else this._viewItems().push(this.createOverlayItemView(i))},t.prototype._prepareOverlay=function(){this.__maxx=NaN,this.__minx=NaN,this.__maxy=NaN,this.__miny=NaN,this.__values.length=0;var n=this._option();if(null==n.value)for(var t=this._dataPoints(),e=function(t){var e=void 0,i=o._plotView();if((e=i._swapAxes()?n.axis==y.AxisType.X?t.map(function(t){return t.value}):t.map(function(t){return i._getAxisXValue(t._dimensionValue())}):n.axis==y.AxisType.X?t.map(function(t){return i._getAxisXValue(t._dimensionValue())}):t.map(function(t){return t.value}))&&(e=e.filter(function(t){return null!=t})),e&&0<e.length)switch(n.aggregate){case y.ReferenceLineAggregate.Sum:o.__values.push(y.Statics.Sum(e));break;case y.ReferenceLineAggregate.Max:o.__values.push(y.Statics.Max(e));break;case y.ReferenceLineAggregate.Min:o.__values.push(y.Statics.Min(e));break;case y.ReferenceLineAggregate.Average:o.__values.push(y.Statics.Average(e));break;case y.ReferenceLineAggregate.Median:o.__values.push(y.Statics.Median(e));break;case y.ReferenceLineAggregate.Count:o.__values.push(y.Statics.Count(e));break;case y.ReferenceLineAggregate.Percentile:o._option().arguments.percentileType===y.PercentileType.Inclusive?o.__values.push(y.Statics.PercentileINC(e,o._option().arguments.k)):o.__values.push(y.Statics.PercentileEXC(e,o._option().arguments.k))}},o=this,i=0,r=t;i<r.length;i++){e(r[i])}else this.__values.push(n.value);0<this.__values.length&&(this._plotView()._swapAxes()?n.axis==y.AxisType.X?(this.__maxy=Math.max.apply(Math,this.__values),this.__miny=Math.min.apply(Math,this.__values)):(this.__maxx=Math.max.apply(Math,this.__values),this.__minx=Math.min.apply(Math,this.__values)):n.axis==y.AxisType.X?(this.__maxx=Math.max.apply(Math,this.__values),this.__minx=Math.min.apply(Math,this.__values)):(this.__maxy=Math.max.apply(Math,this.__values),this.__miny=Math.min.apply(Math,this.__values)))},t.prototype._dataPoints=function(){var t=[],e=this._option().detailLevel,i=this._plotView()._data()._valueDefinitions(),n=this._option();if(e==y.DetailLevel.Group)for(var o=0,r=(a=this._plotView()._data())._seriesList();o<r.length;o++){var s=r[o];null!=n.field&&s.valueDefinition!==n.field||t.push([].concat(s._points()))}else for(var a=this._plotView()._data(),l=0,_=i;l<_.length;l++){var u=_[l];if(null==n.field||n.field===u.name){for(var h=[],c=0,p=a._seriesList();c<p.length;c++)for(var f=0,d=(s=p[c])._points();f<d.length;f++){var g=d[f];g.valueDefinition===u.name&&h.push(g)}0<h.length&&t.push(h)}}return t},t.prototype._layout=function(t,e,i){for(var n=this._viewItems(),o=0;o<this.__values.length;++o)n[o]._bindData(this.__values[o]);for(var r=0,s=this._viewItems();r<s.length;r++){s[r]._layout(t,e,i)}},t.prototype._render=function(t,e){t.beginTransform();for(var i=0,n=this._viewItems();i<n.length;i++){n[i]._render(t,e)}t.restoreTransform()},t}(y._CartesianOverlayView);y._CartesianReferenceLineOverlayView=t}(dv||(dv={})),function(t){"use strict";var e;(e=t.DetailLevel||(t.DetailLevel={}))[e.Group=0]="Group",e[e.Total=1]="Total",e[e.Trellis=2]="Trellis"}(dv||(dv={})),function(e){"use strict";var t=function(i){function t(t,e){return i.call(this,t,e)||this}return __extends(t,i),t.prototype._parent=function(){return i.prototype._parent.call(this)},t.prototype._render=function(t,e){e.renderLabel||this.render(t,e)},t.prototype.getStrokeColor=function(){return this._parent()._option().style&&this._parent()._option().style.stroke?this._parent()._option().style.stroke:this._defaultStyle().stroke},t.prototype.getFillColor=function(){return this._parent()._option().style&&this._parent()._option().style.fill?e._fillColorFromOption(this._parent()._option().style.fill):this.getDefaultColor()},t.prototype.getStrokeWidth=function(){return this._parent()._option().style&&null!=this._parent()._option().style.strokeWidth?this._parent()._option().style.strokeWidth:this._defaultStyle().strokeWidth},t.prototype.getStrokeDash=function(){return this._parent()._option().style&&this._parent()._option().style.strokeDasharray?this._parent()._option().style.strokeDasharray:this._defaultStyle().strokeDasharray},t.prototype.getOpacity=function(){return this._parent()._option().style&&null!=this._parent()._option().style.opacity?this._parent()._option().style.opacity:this._defaultStyle().opacity},t.prototype._defaultStyle=function(){return new e.options._DataPointStyleOption({opacity:null,stroke:e.__Constant_Core_Style_Stroke,strokeWidth:0,strokeDasharray:null})},t}(e._OverlayItemView);e._CartesianOverlayBandItemView=t}(dv||(dv={})),function(s){"use strict";var t=function(r){function t(t,e,i){void 0===i&&(i=null);var n=r.call(this,t,e)||this;n.__series=i;var o=n._parent()._option().label;return o instanceof s.options._OverlayLabelOption?n.__labelOption=o:n.__labelOption=null,n}return __extends(t,r),t.prototype._bindData=function(t){this.__value=t},t.prototype._render=function(t,e){null==this.__value||isNaN(this.__value)||(e.renderLabel?this.__datalabelView&&this.__datalabelView._render(t,e):this.render(t,e))},t.prototype._layout=function(t,e,i){null==this.__value||isNaN(this.__value)||(this.layout(t,i),this.hasDataLabel()&&(null==this.__datalabelView&&(this.__datalabelView=this.createDataLabelView()),this.layoutDataLabelView(t,this.__labelOption)))},t.prototype.createDataLabelView=function(){return new s._OverlayDataLabelView(this,this._label(),this.__labelOption.textStyle)},t.prototype._hasLegend=function(){return null!=this._label&&(!this.__labelOption||this.__labelOption.display===s.OverlayLabelDisplay.Both||this.__labelOption.display===s.OverlayLabelDisplay.Legend)},t.prototype.hasDataLabel=function(){return this.__labelOption&&null!=this._label()&&(this.__labelOption.display===s.OverlayLabelDisplay.Both||this.__labelOption.display===s.OverlayLabelDisplay.Plot)},t.prototype._parent=function(){return r.prototype._parent.call(this)},t.prototype.getColor=function(){return this._parent()._option().style&&this._parent()._option().style.stroke?s._fillColorFromOption(this._parent()._option().style.stroke):this.__series&&this.__series._color()?this.__series._color():this.getDefaultColor()},t.prototype.getStrokeWidth=function(){return this._parent()._option().style&&null!=this._parent()._option().style.strokeWidth?this._parent()._option().style.strokeWidth:this._defaultStyle().strokeWidth},t.prototype.getStrokeDash=function(){return this._parent()._option().style&&this._parent()._option().style.strokeDasharray?this._parent()._option().style.strokeDasharray:this._defaultStyle().strokeDasharray},t.prototype.getSymbol=function(){return new e(this.getStrokeWidth(),this.getStrokeDash(),this.getColor())},t.prototype._defaultStyle=function(){return new s.options._DataPointStyleOption({strokeWidth:1,strokeDasharray:null})},t}(s._OverlayItemView);s._CartesianOverlayReferenceLineItemView=t;var e=function(o){function t(t,e,i){void 0===t&&(t=1),void 0===e&&(e=void 0);var n=o.call(this)||this;return n.__strokeWidth=t,n.__strokeDasharray=e,n.__stroke=i,n}return __extends(t,o),t.prototype.render=function(t,e,i){t.beginTransform(),s._applyDataPointStyle(t,new s.options._DataPointStyleOption({strokeWidth:this.__strokeWidth,strokeDasharray:this.__strokeDasharray})),s._applyStrokeColor(t,this.__stroke),s._applyFillColor(t,this.__stroke),t.drawLine(e.left,e.top+e.height/2,e.right,e.top+e.height/2),t.restoreTransform()},t}(s.models._LegendSymbol);s._OverlayLineSymbol=e}(dv||(dv={})),function(n){"use strict";var t=function(o){function t(t,e,i){var n=o.call(this,[e])||this;return n.__parent=t,n.__textStyle=i,n.__label=e,n.__rotateAngle=0,n}return __extends(t,o),t.prototype._rotateAngle=function(t){return null!=t&&(this.__rotateAngle=t),this.__rotateAngle},t.prototype._wrap=function(){return!1},t.prototype._paddings=function(){return new n.options._PaddingOption(0)},t.prototype._render=function(t,e){o.prototype._render.call(this,t,e)},t.prototype._applyStyle=function(t){n._applyTextStyle(t,this.__parent._parent()._plotView()._plotAreaView()._dvView()._option().textStyle),n._applyTextStyle(t,this.__parent._parent()._plotView()._option().config.textStyle),n._applyTextStyle(t,this.__textStyle)},t.prototype._renderInnerContent=function(t,e,i){t.beginTransform(),this._applyStyle(t),e=this._rectangle(),t.drawStringRotated(this.__label,new n.core.Point(e.left,e.bottom),e.center,this.__rotateAngle),t.restoreTransform()},t}(n._TextView);n._OverlayDataLabelView=t}(dv||(dv={})),function(i){"use strict";var t=function(r){function t(t,e,i,n){var o=r.call(this,t,n)||this;return o.xs=e,o.ys=i,o}return __extends(t,r),t.prototype.render=function(t,e){t.beginTransform(),i._applyDataPointStyle(t,new i.options._DataPointStyleOption({strokeWidth:this.getStrokeWidth(),strokeDasharray:this.getStrokeDash(),stroke:this.getStrokeColor(),opacity:this.getOpacity()})),i._applyFillColor(t,this.getFillColor()),t.drawPolygon(this.xs,this.ys),t.restoreTransform()},t}(i._CartesianOverlayBandItemView);i._CartesianOverlayAreaItemView=t}(dv||(dv={})),function(o){"use strict";var t=function(a){function t(t,e,i,n,o,r){var s=a.call(this,t,r)||this;return s.startAngle=e,s.endAngle=i,s.radius=n,s.innerRadius=o,s}return __extends(t,a),t.prototype.render=function(t,e){t.beginTransform(),o._applyDataPointStyle(t,new o.options._DataPointStyleOption({strokeWidth:this.getStrokeWidth(),strokeDasharray:this.getStrokeDash(),stroke:this.getStrokeColor(),opacity:this.getOpacity()})),o._applyFillColor(t,this.getFillColor());var i=this._parent()._plotView()._cx(),n=this._parent()._plotView()._cy();t.drawDonutSegment(i,n,this.radius,this.innerRadius,this.startAngle,this.endAngle-this.startAngle),t.restoreTransform()},t}(o._CartesianOverlayBandItemView);o._CartesianOverlayCircleAreaItemView=t}(dv||(dv={})),function(y){"use strict";var t=function(n){function t(t,e,i){return void 0===i&&(i=null),n.call(this,t,e,i)||this}return __extends(t,n),t.prototype.quda=function(t,e,i){return i.y-e<0&&0<i.x-t?1:i.y-e<0&&i.x-t<0?2:0<i.y-e&&i.x-t<0?3:0<i.y-e&&0<i.x-t?4:void 0},t.prototype.calcTopAndLeftByPosition=function(t,e,i,n,o,r){var s=this.getStrokeWidth()/2;switch(i){case"TopLeft":n.left=t-n.width-r*s,n.top=e-n.height-o*s;break;case"BottomRight":n.left=t+r*s,n.top=e+o*s;break;case"TopRight":n.left=t+r*s,n.top=e-n.height-o*s;break;case"BottomLeft":n.left=t-n.width-r*s,n.top=e+o*s;break;case"Top":n.left=t-n.width/2,n.top=e-n.height-s;break;case"Bottom":n.left=t-n.width/2,n.top=e+s;break;case"CenterVertical":n.left=t-n.width/2,n.top=e-n.height/2}},t.prototype.layoutDataLabelView=function(t,e){var i=this._parent()._option().axis,n=e.position,o=this.getStrokeWidth(),r=this.__datalabelView._measure(t,null),s=new y.core.Rect(0,0,r.width,r.height),a=this._parent()._plotView();if(i===y.AxisType.Y&&a._option().config.axisMode==y.AxisMode.Polygonal||a._option().config.axisMode==y.AxisMode.Radial){var l=a._getAxisX()._scale(),_=a._cx(),u=a._cy(),h=l.value(l.max()),c=new y.core.Point,p=new y.core.Point;Math.pow(Math.abs(this.ys[0]-u),2)+Math.pow(Math.abs(this.xs[0]-_),2)>Math.pow(Math.abs(this.ys[1]-u),2)+Math.pow(Math.abs(this.xs[1]-_),2)?(c.x=this.xs[1],c.y=this.ys[1],p.x=this.xs[0],p.y=this.ys[0]):(c.x=this.xs[0],c.y=this.ys[0],p.x=this.xs[1],p.y=this.ys[1]);var f=Math.abs((p.x-_)/h),d=Math.abs((p.y-u)/h),g="";switch(this.quda(_,u,p)){case 1:case 3:g=e.position<3?"TopLeft":"BottomRight";break;case 2:case 4:g=e.position<3?"TopRight":"BottomLeft"}switch((h*f<.5*r.width||h*d<r.height)&&(g=(1===e.position||4===e.position)&&h*f<r.width?"CenterVertical":e.position<3?"Top":"Bottom"),n){case y.OverlayLabelPosition.TopCenter:case y.OverlayLabelPosition.BottomCenter:this.calcTopAndLeftByPosition((c.x+p.x)/2,(c.y+p.y)/2,g,s,f,d);break;case y.OverlayLabelPosition.TopLeft:case y.OverlayLabelPosition.BottomLeft:this.calcTopAndLeftByPosition(c.x,c.y,g,s,f,d);break;case y.OverlayLabelPosition.TopRight:case y.OverlayLabelPosition.BottomRight:this.calcTopAndLeftByPosition(p.x,p.y,g,s,f,d)}}else if(i===y.AxisType.Y)switch(n){case y.OverlayLabelPosition.TopCenter:s.left=(this.xs[0]+this.xs[1])/2-s.width/2,s.top=this.ys[1]-o/2-s.height;break;case y.OverlayLabelPosition.BottomCenter:s.left=(this.xs[0]+this.xs[1])/2-s.width/2,s.top=this.ys[1]+o/2;break;case y.OverlayLabelPosition.TopLeft:s.left=this.xs[1],s.top=this.ys[1]-o/2-s.height;break;case y.OverlayLabelPosition.BottomLeft:s.left=this.xs[1],s.top=this.ys[1]+o/2;break;case y.OverlayLabelPosition.TopRight:s.left=this.xs[0]-s.width,s.top=this.ys[1]-o/2-s.height;break;case y.OverlayLabelPosition.BottomRight:s.left=this.xs[0]-s.width,s.top=this.ys[1]+o/2}else if(i===y.AxisType.X)switch(n){case y.OverlayLabelPosition.TopCenter:s.left=this.xs[0]-s.width/2,s.top=this.ys[0];break;case y.OverlayLabelPosition.BottomCenter:s.left=this.xs[0]-s.width/2,s.top=this.ys[1]-s.height;break;case y.OverlayLabelPosition.TopLeft:s.left=this.xs[0]-s.width-o/2,s.top=this.ys[0];break;case y.OverlayLabelPosition.BottomLeft:s.left=this.xs[0]-s.width-o/2,s.top=this.ys[1]-s.height;break;case y.OverlayLabelPosition.TopRight:s.left=this.xs[0]+o/2,s.top=this.ys[0];break;case y.OverlayLabelPosition.BottomRight:s.left=this.xs[0]+o/2,s.top=this.ys[1]-s.height}this.__datalabelView._rectangle(s)},t.prototype.render=function(t,e){t.beginTransform(),y._applyDataPointStyle(t,this._parent()._option().style),y._applyDataPointStyle(t,new y.options._DataPointStyleOption({strokeWidth:this.getStrokeWidth(),strokeDasharray:this.getStrokeDash()})),y._applyStrokeColor(t,this.getColor()),y._applyFillColor(t,this.getColor()),t.drawLine(this.xs[0],this.ys[0],this.xs[1],this.ys[1]),t.restoreTransform()},t.prototype.layout=function(t,e){this.xs=[],this.ys=[];var i=this._parent()._plotView(),n=this._parent()._option(),o=i._getAxisX()._scale(),r=i._getAxisY()._scale(),s=this.__value,a=i._axisMode();if(n.axis==y.AxisType.X)a==y.AxisMode.Polygonal||a==y.AxisMode.Radial||(this.xs[0]=this.xs[1]=o.value(s),this.ys[0]=r.value(r.max()),this.ys[1]=r.value(r.min()));else if(a==y.AxisMode.Polygonal||a==y.AxisMode.Radial){var l=i._cx(),_=i._cy();this.xs[0]=o.value(o.max()),this.ys[0]=Math.sin(r.value(s))*this.xs[0]+_,this.xs[1]=o.value(o.min()),this.ys[1]=Math.sin(r.value(s))*this.xs[1]+_,this.xs[0]=Math.cos(r.value(s))*this.xs[0]+l,this.xs[1]=Math.cos(r.value(s))*this.xs[1]+l}else this.xs[0]=o.value(o.max()),this.xs[1]=o.value(o.min()),this.ys[0]=this.ys[1]=r.value(s)},t}(y._CartesianOverlayReferenceLineItemView);y._CartesianOverlayLineItemView=t}(dv||(dv={})),function(u){"use strict";var t=function(n){function t(t,e,i){return void 0===i&&(i=null),n.call(this,t,e,i)||this}return __extends(t,n),t.prototype.layoutDataLabelView=function(t,e){var i=e.position,n=this.getStrokeWidth(),o=this.__datalabelView._measure(t,null),r=new u.core.Rect(0,0,o.width,o.height),s=this._parent()._plotView(),a=s._cx(),l=s._cy(),_=this.radius;switch(i){case u.OverlayLabelPosition.TopCenter:r.left=a-r.width/2,r.top=l-_-r.height-n/2;break;case u.OverlayLabelPosition.BottomCenter:r.left=a-r.width/2,r.top=l-_+n;break;case u.OverlayLabelPosition.TopLeft:r.left=a-_-n/2-r.width+(r.width-r.height)/2,r.top=l-r.height/2,this.__datalabelView._rotateAngle(270);break;case u.OverlayLabelPosition.BottomLeft:r.left=a-_+n-(r.width-r.height)/2,r.top=l-r.height/2,this.__datalabelView._rotateAngle(270);break;case u.OverlayLabelPosition.TopRight:r.left=a+_+n/2-(r.width-r.height)/2,r.top=l-r.height/2,this.__datalabelView._rotateAngle(90);break;case u.OverlayLabelPosition.BottomRight:r.left=a+_-r.width-n+(r.width-r.height)/2,r.top=l-r.height/2,this.__datalabelView._rotateAngle(90)}this.__datalabelView._rectangle(r)},t.prototype.render=function(t,e){t.beginTransform(),u._applyDataPointStyle(t,this._parent()._option().style),u._applyDataPointStyle(t,new u.options._DataPointStyleOption({strokeWidth:this.getStrokeWidth(),strokeDasharray:this.getStrokeDash()})),u._applyStrokeColor(t,this.getColor()),u._applyFillColor(t,this.getColor());var i=this._parent()._plotView()._cx(),n=this._parent()._plotView()._cy(),o=u.__Constant_Core_Line_ClassName;t.drawPieSegment(i,n,this.radius,this.startAngle,this.endAngle-this.startAngle,o,{fill:"none"}),t.restoreTransform()},t.prototype.layout=function(t,e){var i=this._parent()._plotView(),n=this._parent()._option(),o=i._getAxisX()._scale(),r=this.__value,s=i._axisMode();n.axis==u.AxisType.X&&(s!=u.AxisMode.Polygonal&&s!=u.AxisMode.Radial||(this.startAngle=0,this.endAngle=2*Math.PI,this.radius=o.value(r)))},t}(u._CartesianOverlayReferenceLineItemView);u._CartesianOverlayCircleItemView=t}(dv||(dv={})),function(c){"use strict";var p,t,e=function(){function t(t){this.__option=t}return t.prototype._option=function(){return this.__option},t.prototype._analyse=function(t,e){for(var i=NaN,n=NaN,o=0,r=t;o<r.length;o++){var s=r[o]._option();n=isNaN(n)?s.column:Math.max(n,s.column),i=isNaN(i)?s.row:Math.max(i,s.row)}if(!isNaN(i)&&!isNaN(n)){i++,n++;for(var a=this._calculateLengths(e.width,n,this.__option.columnWidths),l=this._calculateLengths(e.height,i,this.__option.rowHeights),_=function(t){var i=t._option(),n=0;a.forEach(function(t,e){return n+=e<i.column?t:0});var o=0;l.forEach(function(t,e){return o+=e<i.row?t:0}),t._rectangle(new c.core.Rect(e.left+n,e.top+o,a[i.column],l[i.row]))},u=0,h=t;u<h.length;u++){_(h[u])}}},t.prototype._calculateLengths=function(t,e,i){for(var n=[],o=0,r=i;o<r.length;o++){var s=r[o];n.push(this._parseOption(s))}for(var a=[],l=0,_=0,u=0;u<e;u++){var h={value:1,unit:p.Auto};0<u&&u<n.length&&(h=n[u]),h.unit==p.Pixel?(a.push(h.value),l+=h.value):(a.push(NaN),_+=h.value)}var c=(t-l)/_;for(u=0;u<e;u++){h={value:1,unit:p.Auto};0<u&&u<n.length&&(h=n[u]),h.unit==p.Pixel?a[u]=h.value:a[u]=c*h.value}return a},t.prototype._parseOption=function(t){if("string"!=typeof t)return"number"==typeof t?{value:t,unit:p.Pixel}:{value:1,unit:p.Auto};if(0<=t.indexOf("*")){t=t.replace("*","");var e=parseFloat(t);return isNaN(e)?{value:1,unit:p.Auto}:{value:e,unit:p.Star}}e=parseFloat(t);return isNaN(e)?{value:1,unit:p.Auto}:{value:e,unit:p.Pixel}},t}();c._PlotAreaLayout=e,(t=p||(p={}))[t.Auto=0]="Auto",t[t.Pixel=1]="Pixel",t[t.Star=2]="Star"}(dv||(dv={})),function(c){"use strict";var t=function(_){function t(t,e,i){var n=_.call(this)||this;return n.__layoutViews=[],n.__paletteOffset=0,n.__dvView=t,n.__option=e,n.__layoutViews=n._createLayoutViews(i),n}return __extends(t,_),Object.defineProperty(t.prototype,"type",{get:function(){return c.ElementType.PlotArea},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"parent",{get:function(){return this._dvView()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"row",{get:function(){return this._option().row},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"column",{get:function(){return this._option().column},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"legends",{get:function(){for(var t=[],e=0,i=this._legendsViews();e<i.length;e++){var n=i[e];if(null!=n)for(var o=0,r=n._legendViews();o<r.length;o++){var s=r[o];null!=s&&t.push(s)}}return t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"plotsPanes",{get:function(){for(var t=[],e=0,i=this._layoutViews();e<i.length;e++){var n=i[e];t.push.apply(t,n._plotsPaneViews())}return t},enumerable:!0,configurable:!0}),t.prototype._dvView=function(){return this.__dvView},t.prototype._option=function(){return this.__option},t.prototype._paletteOffset=function(t){if(arguments.length<=0)return this.__paletteOffset;null!=t&&(this.__paletteOffset=t)},t.prototype._plotViews=function(){for(var t=[],e=0,i=this._layoutViews();e<i.length;e++){var n=i[e];t.push.apply(t,n._plotViews())}return t},t.prototype._legendManager=function(){return null==this.__legendManager&&(this.__legendManager=new c.models._PlotAreaLegendManager(this)),this.__legendManager},t.prototype._layoutViews=function(){return this.__layoutViews},t.prototype._legendsViews=function(){return[this.__leftLegendsView,this.__rightLegendsView,this.__topLegendsView,this.__bottomLegendsView]},t.prototype._className=function(){return c.__Constant_Core_Plot_Area_ClassName},t.prototype._paddings=function(){return this._option().padding},t.prototype._hasSelection=function(){for(var t=0,e=this._layoutViews();t<e.length;t++)for(var i=0,n=e[t]._plotViews();i<n.length;i++)for(var o=0,r=n[i]._data().points;o<r.length;o++){if(r[o].selected)return!0}return!1},t.prototype._loadData=function(t){this.legendOPtionProvider=new c._LegendOPtionProvider(this._option().legends);for(var e=0,i=this._layoutViews();e<i.length;e++){i[e]._loadData(t)}this.legendOPtionProvider=null;var n=this._createLegendsViews();this.__leftLegendsView=n.left,this.__rightLegendsView=n.right,this.__topLegendsView=n.top,this.__bottomLegendsView=n.bottom},t.prototype._layoutInnerContent=function(t,e,i){t.beginTransform(),this._applyStyle(t),(e=e.clone()).width<0&&(e.width=0),e.height<0&&(e.height=0),e=this._layoutLegendViews(t,e,i);for(var n=0,o=this._layoutViews();n<o.length;n++){o[n]._layout(t,e,i)}t.restoreTransform()},t.prototype._renderInnerContent=function(t,e,i){i.hasSelectionInPlotArea=this._hasSelection(),i.labels=[],t.beginTransform(),this._applyStyle(t);for(var n=0,o=this._legendsViews();n<o.length;n++){var r=o[n];null!=r&&r._render(t,i)}for(var s=0,a=this._layoutViews();s<a.length;s++){a[s]._render(t,i)}t.restoreTransform(),delete i.labels,delete i.hasSelectionInPlotArea},t.prototype._applyStyle=function(t){c._applyGStyle(t,this._option().style),c._applyTextStyle(t,this._option().textStyle)},t.prototype._applyBackgroundStyle=function(t){_.prototype._applyBackgroundStyle.call(this,t),c._applyBackgroundColor(t,this._dvView()._option().style.backgroundColor),c._applyBackgroundColor(t,this._option().style.backgroundColor),c._applyBackgroundColor(t,this._option().backgroundColor)},t.prototype._applyBorderStyle=function(t){_.prototype._applyBorderStyle.call(this,t),c._applyLineStyleFromGStyle(t,this._dvView()._option().style),c._applyLineStyleFromGStyle(t,this._option().style),c._applyLineStyle(t,this._option().borderStyle)},t.prototype._createLayoutViews=function(t){for(var e=[],i=null,n=0,o=t;n<o.length;n++){var r=o[n],s=r.encodings.layout;s.isEmpty()?(null==i&&(i={layoutOption:new c.options._LayoutEncodingOption(null),plotOptions:[]}),i.plotOptions.push(r)):null==i?(i={layoutOption:s,plotOptions:[]}).plotOptions.push(r):i.layoutOption.type==s.type?i.plotOptions.push(r):(e.push(i),(i={layoutOption:s,plotOptions:[]}).plotOptions.push(r))}null!=i&&e.push(i);for(var a=[],l=0,_=e;l<_.length;l++){var u=_[l];if(null==(h=c.plugins._Plugins._layout(u.layoutOption.type,this,u.layoutOption,u.plotOptions)))c.plugins._Plugins._layout("Default",this,u.layoutOption,u.plotOptions);null!=h&&a.push(h)}if(0==a.length){var h=c.plugins._Plugins._layout("Default",this,new c.options._LayoutEncodingOption(null),[new c.options._PlotOption(null)]);a.push(h)}return a},t.prototype._createLegendsViews=function(){for(var t,e,i,n,o=[],r=[],s=[],a=[],l=0,_=this._createLegendViews();l<_.length;l++){var u=_[l];switch(u._position()){case c.Position.Left:o.push(u);break;case c.Position.Top:r.push(u);break;case c.Position.Right:s.push(u);break;case c.Position.Bottom:a.push(u)}}return 0<o.length&&(t=new c._LegendsView(this,o,c.Position.Left)),0<s.length&&(e=new c._LegendsView(this,s,c.Position.Right)),0<r.length&&(i=new c._LegendsView(this,r,c.Position.Top)),0<a.length&&(n=new c._LegendsView(this,a,c.Position.Bottom)),{left:t,right:e,top:i,bottom:n}},t.prototype._createLegendViews=function(){for(var t=[],i=[],e=0,n=this._plotViews();e<n.length;e++)for(var o=function(e){i.some(function(t){return t==e})||i.push(e)},r=0,s=n[e]._legends();r<s.length;r++){o(u=s[r])}var a=this._legendManager()._valuesNameLegend();null!=a&&i.push(a),i.sort(function(t,e){return t._index-e._index});for(var l=0,_=i;l<_.length;l++){var u;(u=_[l])._sortItem(),u instanceof c.models._ItemizedLegend?(u._applyOptions(),t.push(new c._ItemizedLegendView(this,u))):u instanceof c.models._LinearColorPointLegend&&t.push(new c._GradientLegendView(this,u))}return t},t.prototype._layoutLegendViews=function(t,e,i){var n=e.clone(),o=this.__leftLegendsView;o&&(o._layout(t,n,i),n.left+=o._rectangle().width,n.width-=o._rectangle().width);var r=this.__rightLegendsView;r&&(r._layout(t,n,i),n.width-=r._rectangle().width);var s=this.__topLegendsView;s&&(s._layout(t,n,i),n.top+=s._rectangle().height,n.height-=s._rectangle().height);var a=this.__bottomLegendsView;return a&&(a._layout(t,n,i),n.height-=a._rectangle().height),n},t.prototype.__startAnimation=function(t){t.start=Date.now(),null==this.__rootAnimation||this.__rootAnimation.isAniamtionEnd()?(this.__rootAnimation=c.core.cloneDeep(t),c.requestAnimationFrame(this.__animate.bind(this))):this.__rootAnimation.duration+this.__rootAnimation.start<t.duration+t.start&&(this.__rootAnimation.duration=t.start+t.duration-this.__rootAnimation.start)},t.prototype.__animate=function(){null==this.__rootAnimation||this.__rootAnimation.isAniamtionEnd()?(this.__rootAnimation=null,this._dvView().control.invalidate()):(this._dvView().control.invalidate(),c.requestAnimationFrame(this.__animate.bind(this)))},t.prototype._getAxisXOptions=function(){return(this._option().axes||[]).filter(function(t){return t.type===c.AxisType.X}).sort(function(t,e){return t.position-e.position})},t.prototype._getAxisYOptions=function(){return(this._option().axes||[]).filter(function(t){return t.type===c.AxisType.Y}).sort(function(t,e){return t.position-e.position})},t.prototype._hitTest=function(t){var e=this._rectangle();if(null!=e&&e.contains(t)){for(var i=0,n=this._layoutViews().slice().reverse();i<n.length;i++){var o=n[i];if(null!=(a=o&&o._hitTest(t)))return a}for(var r=0,s=this._legendsViews().slice().reverse();r<s.length;r++){var a,l=s[r];if(null!=(a=l&&l._hitTest(t)))return a}return new c.HitTestResult(t,this,this,c.ElementType.PlotArea)}return _.prototype._hitTest.call(this,t)},t.prototype.dispose=function(){for(var t=0,e=this._layoutViews();t<e.length;t++){e[t].dispose()}for(var i=0,n=this._legendsViews();i<n.length;i++){var o=n[i];o&&o.dispose()}},t}(c._RectangleView);c._PlotAreaView=t}(dv||(dv={})),function(s){"use strict";var t=function(r){function t(t,e){var i=r.call(this)||this;return i.__layoutView=t,i.__option=e,i._children=[],i}return __extends(t,r),Object.defineProperty(t.prototype,"name",{get:function(){return this._option().name},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"legends",{get:function(){return this._legends()},enumerable:!0,configurable:!0}),t.prototype._id=function(){if(!this.__id){var t="",e="",i=this._layoutView();i instanceof s._TrellisCellLayoutView&&(t=i._cellView().rowIndex+"",e=i._cellView().columnIndex+"");var n;n=s._Util.HashCode(this.name+""+t+e),this.__id=s._Util.HashCode(n)}return this.__id},t.prototype._layoutView=function(){return this.__layoutView},t.prototype._plotAreaView=function(){return this._layoutView()._plotAreaView()},t.prototype._overlayViews=function(){return null==this.__overlayViews&&(this.__overlayViews=this._createOverlayViews()),this.__overlayViews},t.prototype._option=function(){return this.__option},t.prototype._data=function(){return this.__data},t.prototype._selectionAdorners=function(){for(var t=[],e=0,i=this._children;e<i.length;e++){var n=i[e];n instanceof s._PointView&&n._selected()&&t.push(n._selectionAdorner())}return t},t.prototype._legendManager=function(){if(null==this.__legendManager){var t=this._layoutView();t instanceof s._TrellisCellLayoutView?this.__legendManager=t._cellView()._getPlotLegendManager(this):this.__legendManager=new s.models._PlotLegendManager(this)}return this.__legendManager},t.prototype._coordinateSystemType=function(){return"None"},t.prototype._legendSymbol=function(){return null},t.prototype._legends=function(){var t=[];if(null!=this._data())for(var e=0,i=this._legendManager()._legends();e<i.length;e++){var n=i[e];n instanceof s.models._ItemizedLegend&&0<n._items().length&&t.push(n),n instanceof s.models._LinearColorPointLegend&&null!=n.linearColor&&t.push(n)}return t},t.prototype._connectingLine=function(){var t=this._option().config.text.connectingLine;return null==t&&(t=!1),"boolean"==typeof t?t?new s.options._LineStyleOption({stroke:s.__Constant_Core_Style_Stroke,strokeWidth:1}):new s.options._LineStyleOption({strokeWidth:0}):t},t.prototype._attachCoordinateSystem=function(t){},t.prototype._loadData=function(t){this.__data=this._createData(t);for(var e=0,i=this._overlayViews();e<i.length;e++){i[e].bindData()}},t.prototype._layout=function(t,e,i){this._rectangle(e)},t.prototype._renderDataLabels=function(t,e){var i=this._clipId();null!=i&&t.startGroup(null,i);for(var n=0,o=this._pointViews();n<o.length;n++){var r=o[n]._dataLabelView();null!=r&&r._render(t,e)}null!=i&&t.endGroup()},t.prototype._layoutAnimationViews=function(t){return this._children},t.prototype._relatedPointsFromLegendItem=function(t){return[]},t.prototype._relatedSeriesListFromLegendItem=function(t){return[]},t.prototype._startLoadAnimation=function(){var t=this.__option.config,e=this._fromLoadAnimationOption(t.loadAnimation),i=this._layoutAnimationViews(e);s._LoadingAnimationManager._setAniamtion(i,e)},t.prototype._fromLoadAnimationOption=function(t){return"boolean"==typeof t&&t?new s.options._AnimationOption({mode:s.AnimationMode.Point,duration:1e3,easing:s.AnimationEasing.Linear,startDelay:1e3}):t instanceof s.options._AnimationOption?t:null},t.prototype._tooltipStyle=function(){var t=this._data(),e=null,i=this._layoutView()._plotAreaView()._dvView()._option();return null!=i.style.backgroundColor&&(e=i.style.backgroundColor),t._option().config.tooltip.style.backgroundColor&&(e=t._option().config.tooltip.style.backgroundColor),{backgroundColor:e,borderStyle:s.core.merge(i.style,t._option().config.tooltip.style),textStyle:s.core.merge(i.textStyle,t._option().config.textStyle,t._option().config.tooltip.textStyle)}},t.prototype._createData=function(t){return null},t.prototype._hitTest=function(t){var e=this._rectangle();if(null!=e&&e.contains(t)){for(var i=0,n=this._children;i<n.length;i++){var o=n[i]._hitTest(t);if(null!=o)return o}return r.prototype._hitTest.call(this,t)}return r.prototype._hitTest.call(this,t)},t.prototype._query=function(t){for(var e=[],i=new s.models._VectorConditionalRule(t),n=0,o=this._pointViews();n<o.length;n++){var r=o[n]._data();i.evaluate(r)&&e.push(r)}return e},t.prototype._createOverlayViews=function(){for(var t=[],e=0,i=this._option().config.overlays;e<i.length;e++){var n=i[e],o=this._createOverlayView(n);null!=o&&t.push(o)}return t},t.prototype._createOverlayView=function(t){var e=s.plugins._overlayPlugin(t.type);return null!=e?e.create(this,t):null},t.prototype.__renderChild=function(t,e,i){!i.__preparingAnimation&&i._visible()&&(null==i.animation||i.animation.isAniamtionEnd()?(null!=i.animation&&i.animation.isAniamtionEnd()&&i.animation.state!=s.AnimationState.End&&(i.animation.state=s.AnimationState.End,i.animation.onEndAnimation(t,i),i.animation.__innerAnimationEnd(t,i),i.animation=null),t.beginTransform()):(t.beginTransform(),i.animation.state==s.AnimationState.BeforeStart&&(i.animation.onStartAniamtion(t,i),i.animation.__innerAnimationStart(t,i),i.animation.state=s.AnimationState.Animating),i.animation.applyTransformation(i.animation.scale(Date.now()),t,i)),i._render(t,e),t.restoreTransform())},t.prototype._clipId=function(){return null},t.prototype.__startAnimation=function(t){this._plotAreaView().__startAnimation(t)},t}(s._View);s._PlotView=t}(dv||(dv={})),function(o){"use strict";var t=function(n){function t(t,e){var i=n.call(this)||this;return i.__scale=1,i._selection=new o._RectangleAdorner,i.__plotView=e,i.__data=t,i.__data._view(i),i}return __extends(t,n),t.prototype._plotView=function(){return this.__plotView},t.prototype._dataLabelView=function(){return void 0===this.__dataLabelView&&(this.__dataLabelView=this._createDataLabelView()),this.__dataLabelView},t.prototype._data=function(){return this.__data},t.prototype.scale=function(t){if(arguments.length<=0)return this.__scale;this.__scale!=t&&(this.__scale=t)},t.prototype._selected=function(){return this._data()._selected()},t.prototype._visible=function(t){if(arguments.length<=0)return!this._data()._filtered()&&n.prototype._visible.call(this);n.prototype._visible.call(this,t)},t.prototype._hover=function(t){if(arguments.length<=0)return n.prototype._hover.call(this);var e;n.prototype._hover.call(this)!=t&&(n.prototype._hover.call(this,t),t?(null!=this.animation&&this.animation.Interrupt(this),null!=(e=this._hoverAnimation())&&this.__startAnimation(e)):(null!=this.animation&&this.animation.Interrupt(this),null!=(e=this._reversedHoverAnimation())&&this.__startAnimation(e)))},t.prototype._selectionAdorner=function(){return new o._PointAdorner(this)},t.prototype._hoverAnimation=function(){if(null==this.__hoverAnimation){var t=this._plotView()._option().config.hoverAnimation;"boolean"!=typeof t&&(this.__hoverAnimation=this._createHoverAnimation(t))}return this.__hoverAnimation&&(this.__hoverAnimation.start=0,this.__hoverAnimation.state=o.AnimationState.BeforeStart),this.__hoverAnimation},t.prototype._reversedHoverAnimation=function(){var t=null;return null!=this._hoverAnimation()&&(t=this._hoverAnimation().Reverse()),null!=t&&(t.fillAfter=!1,t.start=0,t.state=o.AnimationState.BeforeStart),t},t.prototype._xs=function(t){if(arguments.length<=0)return this.__xs;this.__xs=t},t.prototype._ys=function(t){if(arguments.length<=0)return this.__ys;this.__ys=t},t.prototype._defaultStyle=function(){return new o.options._DataPointStyleOption({strokeWidth:1,symbolStrokeWidth:1})},t.prototype._hitTest=function(t){var e=this._rectangle();return null!=e&&e.contains(t)?new o.HitTestResult(t,this._data(),this,o.ElementType.DataPoint):n.prototype._hitTest.call(this,t)},t.prototype._createHoverAnimation=function(t){if(null==t)return null;var e=new o._ScaleAnimation(this._rectangle());return e.duration=t.duration,null!=t.scale&&("number"==typeof t.scale?(e.keyframesType=o.AnimationKeyFramesType.Percentage,e.from=1,e.to=t.scale):(e.keyframesType=o.AnimationKeyFramesType.Pixel,e.from=0,e.to=o.core._Parser._parseCssPixel(t.scale))),e.fillAfter=!0,e},t.prototype._createDataLabelView=function(){return null},t.prototype.creteanimation=function(){},Object.defineProperty(t.prototype,"animation",{get:function(){return this.__animation},set:function(t){this.__animation=t},enumerable:!0,configurable:!0}),t.prototype.__startAnimation=function(t){this.__animation=t;var e=this._plotView();null!=e&&e.__startAnimation(t)},t.prototype.__getUpdateAnimation=function(t){return null},t}(o._View);o._PointView=t}(dv||(dv={})),function(t){"use strict";var e=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return __extends(e,t),e}(t._PlotView);t._HierarchicalPlotView=e}(dv||(dv={})),function(t){"use strict";var e=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.children=[],t}return __extends(t,e),t.prototype._data=function(){return e.prototype._data.call(this)},t.prototype._value=function(){return this._data()._value()},t.prototype._color=function(t){return this._data()._color(t)},t}(t._PointView);t._HierarchicalPointView=e}(dv||(dv={})),function(b){"use strict";var t=function(p){function t(t){var e=p.call(this,t._plotAreaView()._dvView().control._layer())||this;return e.__frontOverlayViews=[],e.__backOverlayViews=[],e.__coordinateSystemView=t,e.__plotViews=[],e}return __extends(t,p),t.prototype._plotViews=function(){return this.__plotViews},t.prototype._canScroll=function(){var t=this._coordinateSystemView()._layoutView();if(t instanceof b._TrellisView||t instanceof b._TrellisCellLayoutView)return!1;var e=this._coordinateSystemView();return e instanceof b._CartesianCoordinateSystemView&&(1!==e._xViewSize()||1!==e._yViewSize())},t.prototype._coordinateSystemView=function(){return this.__coordinateSystemView},t.prototype._layoutInnerContent=function(t,e,i){(e=e.clone()).width<0&&(e.width=0),e.height<0&&(e.height=0);var n=e;if("None"!==this._coordinateSystemView().type&&this._canScroll()){var o=this._getLogicSize();(n=e.clone()).width=o.width,n.height=o.height}this.__frontOverlayViews.length=0;for(var r=this.__backOverlayViews.length=0,s=this._plotViews();r<s.length;r++){var a=s[r];a._layout(t,n,i);for(var l=0,_=a._overlayViews();l<_.length;l++){var u=_[l];u._position()===b.OverlayPosition.Back?this.__backOverlayViews.push(u):this.__frontOverlayViews.push(u),u._layout(t,e,i)}}},t.prototype._renderInnerContent=function(t,e,i){if(i.renderLabel){for(var n=0,o=this._plotViews();n<o.length;n++){o[n]._renderDataLabels(t,i)}for(var r=0,s=this.__backOverlayViews;r<s.length;r++){s[r]._render(t,i)}for(var a=0,l=this.__frontOverlayViews;a<l.length;a++){l[a]._render(t,i)}}else{for(var _=0,u=this.__backOverlayViews;_<u.length;_++){u[_]._render(t,i)}for(var h=0,c=this._plotViews();h<c.length;h++){c[h]._render(t,i)}if(this._coordinateSystemView()._layoutView()._plotAreaView()._dvView()._option().selectedStyle.adorners){var p=b.plugins._Plugins._adornerRender("dot");if(null!=p)for(var f=0,d=this._plotViews();f<d.length;f++)for(var g=0,y=d[f]._selectionAdorners();g<y.length;g++){var m=y[g];p.render(t,m.points)}}for(var v=0,w=this.__frontOverlayViews;v<w.length;v++){w[v]._render(t,i)}}},t.prototype._getLogicSize=function(){var t=this._rectangle(),e=1,i=1,n=this._coordinateSystemView();return n instanceof b._CartesianCoordinateSystemView&&(e=n._xViewSize(),i=n._yViewSize()),new b.core.Size(t.width/e,t.height/i)},t.prototype._hitTestContent=function(t){for(var e=0,i=this._plotViews().concat().reverse();e<i.length;e++)for(var n=0,o=i[e]._pointViews().concat().reverse();n<o.length;n++){var r=o[n]._dataLabelView();if(null!=r)if(null!=(c=r._hitTest(t)))return c}for(var s=0,a=this.__frontOverlayViews.slice().reverse();s<a.length;s++){if(null!=(c=a[s]._hitTest(t)))return c}for(var l=0,_=this._plotViews().concat().reverse();l<_.length;l++){if(null!=(c=_[l]._hitTest(t)))return c}for(var u=0,h=this.__backOverlayViews.slice().reverse();u<h.length;u++){var c;if(null!=(c=h[u]._hitTest(t)))return c}return p.prototype._hitTestContent.call(this,t)},t}(b._ScrollableView);b._PlotsView=t}(dv||(dv={})),function(n){"use strict";var t=function(){function t(t){this.__points=[],this.__points=this._createPoints(t)}return Object.defineProperty(t.prototype,"points",{get:function(){return this._points()},enumerable:!0,configurable:!0}),t.prototype._points=function(){return this.__points},t.prototype._createPoints=function(t){var e=[],i=t._rectangle();return i&&((e=[]).push(new n.core.Point(i.left,i.top)),e.push(new n.core.Point(i.right,i.top)),e.push(new n.core.Point(i.right,i.bottom)),e.push(new n.core.Point(i.left,i.bottom))),e},t}();n._PointAdorner=t}(dv||(dv={})),function(p){"use strict";var t=function(r){function t(t,e,i,n){var o=r.call(this)||this;return o.ease=p._AnimationEase.Linear,o.fromXs=[].concat(t),o.fromYs=[].concat(e),o.toXs=[].concat(i),o.toYs=[].concat(n),o}return __extends(t,r),t.prototype.onStartAniamtion=function(t,e){r.prototype.onStartAniamtion.call(this,t,e)},t.prototype.onEndAnimation=function(t,e){r.prototype.onEndAnimation.call(this,t,e)},t.prototype.applyTransformation=function(t,e,i){if(i instanceof p._PointView)for(var n=this.from+(this.to-this.from)*t,o=(Math.max(this.toXs.length,this.toYs.length,this.fromXs.length,this.fromYs.length),Math.min(this.toXs.length,this.toYs.length,this.fromXs.length,this.fromYs.length)),r=Math.min(this.toXs.length,this.toYs.length)/o,s=Math.min(this.fromXs.length,this.fromYs.length)/o,a=0;a<o;++a){var l=Math.floor(a*r),_=Math.floor(a*s),u=(this.toXs[l]-this.fromXs[_])*n,h=(this.toYs[l]-this.fromYs[_])*n;i._xs()[l]=u+this.fromXs[_],i._ys()[l]=h+this.fromYs[_];for(var c=l+1;c<Math.floor((a+1)*r);++c)i._xs()[c]=i._xs()[l],i._ys()[c]=i._ys()[l]}},t}(p.Animation);p._PointComparedAnimation=t}(dv||(dv={})),function(t){"use strict";var e=function(){function t(){this.__points=[]}return Object.defineProperty(t.prototype,"points",{get:function(){return this._points()},enumerable:!0,configurable:!0}),t.prototype._points=function(){return this.__points},t}();t._RectangleAdorner=e}(dv||(dv={})),function(u){"use strict";var t=function(n){function t(t,e){var i=n.call(this)||this;return i.ease=u._AnimationEase.Linear,i.fromRectangle=t.clone(),i.toRectangle=e.clone(),i}return __extends(t,n),t.prototype.onStartAniamtion=function(t,e){n.prototype.onStartAniamtion.call(this,t,e)},t.prototype.onEndAnimation=function(t,e){e._rectangle(this.toRectangle),n.prototype.onEndAnimation.call(this,t,e)},t.prototype.applyTransformation=function(t,e,i){if(i instanceof u._PointView){var n=this.from+(this.to-this.from)*t,o=(this.toRectangle.left-this.fromRectangle.left)*n,r=(this.toRectangle.top-this.fromRectangle.top)*n,s=this.fromRectangle.left+o,a=this.fromRectangle.top+r,l=this.toRectangle.width,_=this.toRectangle.height;i._rectangle(new u.core.Rect(s,a,l,_))}},t}(u.Animation);u._SymbolPointComparedAnimation=t}(dv||(dv={})),function(M){"use strict";var t=function(l){function t(){var t=null!==l&&l.apply(this,arguments)||this;return t.__pointViews=[],t.__labels=[],t.__minWidthInValues=null,t.__clipid=null,t._fitoffset={left:0,top:0,right:0,bottom:0},t}return __extends(t,l),t.prototype.__updateAnimationManager=function(){return this._plotAreaView()._dvView().control.__updateAnimationManager},t.prototype._coordinateSystemType=function(){var t=this._option().config.axisMode;return t==M.AxisMode.Radial?"Radial":t==M.AxisMode.Polygonal?"Polygonal":"Cartesian"},t.prototype._axisMode=function(){return this._option().config.axisMode},t.prototype._data=function(){return l.prototype._data.call(this)},t.prototype._overlayViews=function(){return l.prototype._overlayViews.call(this)},t.prototype._pointViews=function(){return this.__pointViews},Object.defineProperty(t.prototype,"xSite",{get:function(){return null==this.__xSite&&(this.__xSite=this._createXSite(this._data()._items(),0)),this.__xSite},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"ySite",{get:function(){return null==this.__ySite&&(this.__ySite=this._createYSite(this._data()._seriesList(),this._option().config.showNulls)),this.__ySite},enumerable:!0,configurable:!0}),t.prototype._symbols=function(){return this._option().config.symbols},t.prototype._swapAxes=function(){var t=this._option().config.swapAxes;return null!=t&&t},t.prototype._reversed=function(){var t;return null!=(t=this._swapAxes()?this._getAxisX()._scale()._reversed():this._getAxisY()._scale()._reversed())&&t},t.prototype._minDistanceInDimensionValues=function(){return null==this.__minDistanceInDimensionValues&&(this.__minDistanceInDimensionValues=this._calculateMinDistanceInValues()),this.__minDistanceInDimensionValues},t.prototype._attachCoordinateSystem=function(t){var e,i=this._layoutView();if((e=this._option().config.axisMode==M.AxisMode.Radial?i._coordinateSystemView("Radial"):this._option().config.axisMode==M.AxisMode.Polygonal?i._coordinateSystemView("Polygonal"):i._coordinateSystemView("Cartesian"))instanceof M._CartesianCoordinateSystemView){var n=M.core.find(t,function(t){return t.type==M.AxisType.X});null==n?this.__axisX=e._axisX():(this.__axisX=M.core.find(e._axisXViews(),function(t){return t._option()==n}),null!=n.viewSize&&e._xViewSize(n.viewSize),null!=n.scrollbarVisible&&e._xScrollbarVisible(n.scrollbarVisible));var o=M.core.find(t,function(t){return t.type==M.AxisType.Y});null==o?this.__axisY=e._axisY():(this.__axisY=M.core.find(e._axisYViews(),function(t){return t._option()==o}),null!=o.viewSize&&e._yViewSize(o.viewSize),null!=o.scrollbarVisible&&e._yScrollbarVisible(o.scrollbarVisible))}},t.prototype.__addNullDataPoints=function(){if(null!=this._data()._categoriedDimensionDefinition()){var n=this._data()._seriesList();if(!(n.length<=0))for(var a=n[0]._xDimension()._dimensionValues(),t=function(s){for(var t=function(r){var t=null==r._detailDimension()?null:r._detailDimension()._definition()._fieldDefinition()._field()._name(),e=null==r._xDimension()?null:r._xDimension()._definition()._name(),i=r._points();if(!i[s]||i[s]._dimensionValue()!==a[s]){var n=void 0;r instanceof M.models._XyValueSeriesData?n=new M.models._XyValuePointData(r,[],a[s]):r instanceof M.models._XyRangeValueSeriesData&&(n=new M.models._XyRangeValuePointData(r,[],a[s])),n&&(n._internalItems(function(t,e,i){var n={};for(var o in t)n[o]=o==e?r.detail:o==i?a[s]._value():void 0;return n}(o._data().fields,t,e)),i.splice(s,0,n))}},e=0,i=n;e<i.length;e++){t(i[e])}},o=this,e=0;e<a.length;++e)t(e)}},t.prototype._loadData=function(t){if(l.prototype._loadData.call(this,t),this.__addNullDataPoints(),!(this._layoutView()instanceof M._TrellisCellLayoutView)){var e=this._data();new M.models._CartesianLegendGenerator(this._legendManager(),this._plotAreaView()._legendManager())._generate([e],this._overlayViews()),(new M.models._CartesianConditionalFormattingRuleRunner)._apply(e)}this.__minDistanceInDimensionValues=null},t.prototype._layout=function(t,e,i){l.prototype._layout.call(this,t,e,i),this.__labels.length=0,this._children=[],this._pointViews().length=0;var n=this._data()._seriesList();null!=n&&0<n.length&&this._layoutSeriesList(t,e,i);var o=this._option().config.updateAnimation;null!=o&&o?null!=this.__updateAnimationManager()&&(this.__updateAnimationManager()._isEmpty()?this.__updateAnimationManager()._startCompare(this._id(),this._children,null):this.__updateAnimationManager()._startCompare(this._id(),this._children,this._fromLoadAnimationOption(this._option().config.updateAnimation))):this.__updateAnimationManager()._clear();for(var r=0,s=this.__labels;r<s.length;r++){s[r]._layout(t,e,i)}var a=this._rectangle().width<this._rectangle().height?this._rectangle().width/2:this._rectangle().height/2;this.__labels=M.__SmartLabelManager.arountCircle(this.__labels,a,this._cx(),this._cy())},t.prototype._createXSite=function(t,e){var i=this._data(),n=i._categoriedDimensionDefinition();if(null!=n)return this._axisMode()!=M.AxisMode.Polygonal&&this._axisMode()!=M.AxisMode.Radial||!this._swapAxes()?new M.models._XCategorySiteModel(n,t,e):new M.models._RadialXCategorySiteModel(n,t);var o=i._xFieldDefinition();return null!=o?this._axisMode()!=M.AxisMode.Polygonal&&this._axisMode()!=M.AxisMode.Radial||!this._swapAxes()?new M.models._XSiteModel(o,e):new M.models._RadialXSiteModel(o,e):new M.models._EmptySiteModel(e)},t.prototype._createYSite=function(t,e){return null==t||t.length<=0?new M.models._EmptySiteModel(0):new M.models._YSiteModel(t,e)},t.prototype._relatedPointsFromLegendItem=function(t){for(var e=[],i=0,n=this._data()._seriesList();i<n.length;i++)for(var o=0,r=n[i]._points();o<r.length;o++){var s=r[o];null!=t.color&&s._color()!=t.color||(null!=t.shape&&s._shape()!=t.shape||null!=t.size&&s._size()!=t.size||e.push(s))}return e},t.prototype._relatedSeriesListFromLegendItem=function(t){for(var e=[],i=0,n=this._data()._seriesList();i<n.length;i++){var o=n[i];null!=t.color&&o._color()!=t.color||e.push(o)}return e},t.prototype._initAxisScale=function(){this._data();var t=this._swapAxes(),e=this._getAxisX();null==e._scale()?(null!=e.scale&&e.scale.type==M.ValueScaleType.Ordinal?(this.xSite.isOrdinal=!0,e._scale(new M._OrdinalAxisScale)):null!=e.scale&&e.scale.type==M.ValueScaleType.Logarithmic?e._scale(new M._LogAxisScale(e.logBase)):(t?this.ySite.isOrdinal:this.xSite.isOrdinal)?e._scale(new M._OrdinalAxisScale):this.xSite.dataType!=M.core.DataType.Date||t?null!=e._option().min||null!=e._option().max?e._scale(new M._CustomLinearAxisScale(null!=e._option().min,null!=e._option().max)):e._scale(new M._LinearAxisScale):e._scale(new M._TimeAxisScale),e._scale()._padding(e._option().axisPadding)):null!=e.scale&&e.scale.type==M.ValueScaleType.Ordinal&&(this.xSite.isOrdinal=!0);var i=this._getAxisY();null==i._scale()&&(null!=i.scale&&i.scale.type==M.ValueScaleType.Logarithmic?i._scale(new M._LogAxisScale(i.logBase)):(t?this.xSite.isOrdinal:this.ySite.isOrdinal)?i._scale(new M._OrdinalAxisScale):this.xSite.dataType==M.core.DataType.Date&&t?i._scale(new M._TimeAxisScale):null!=i._option().min||null!=i._option().max?i._scale(new M._CustomLinearAxisScale(null!=i._option().min,null!=i._option().max)):i._scale(new M._LinearAxisScale),i._scale()._padding(i._option().axisPadding)),e instanceof M._PolygonalAxisView&&e._addScale(i._scale())},t.prototype._layoutStack=function(){var t=!1,e=this._getAxisY();null!=e.scale&&e.scale.type==M.ValueScaleType.Percentage&&(t=!0),(new M.models._CartesianPlotLayout)._layout(this._data(),t)},t.prototype._createData=function(t){return new e(this,t,this._option())},t.prototype._layoutSeriesList=function(t,e,i){for(var n=this._data(),o=this._getAxisX(),r=this._getAxisY(),s=this._option().config.text,a=0,l=n._seriesList();a<l.length;a++)for(var _=l[a],u=0;u<_._points().length;u++){var h=_._points()[u],c=this._getAxisXValue(h._dimensionValue()),p=h._size();p=null==p?this._option().config.style.symbolSize:this._option().config.style.symbolSize*p;var f=NaN,d=NaN;if(this._swapAxes()?(d=r.convert(c),h instanceof M.models._XyValuePointData?f=o.convert(h._yValue()):h instanceof M.models._XyRangeValuePointData&&(f=o.convert(Math.max(h._yLowerValue(),h._yUpperValue())))):(f=o.convert(c),h instanceof M.models._XyValuePointData?d=r.convert(h._yValue()):h instanceof M.models._XyRangeValuePointData&&(d=r.convert(Math.max(h._yLowerValue(),h._yUpperValue())))),null==d&&this._option().config.showNulls==M.ShowNulls.Zeros&&(d=r.convert(0)),null!=f&&!isNaN(f)&&null!=d&&!isNaN(d)){var g=null;h.style&&h.style.symbolShape&&(g=h.style.symbolShape),null==g&&_._style()&&_._style().symbolShape&&(g=_._style().symbolShape),null==g&&(g=h._shape());var y=M.plugins._Plugins._symbol(g);null==y&&(y=M.plugins._Plugins._symbol("Dot"));var m=new M._CartesianSymbolPointView(h,y,this);if(this._option().config.axisMode==M.AxisMode.Radial||this._option().config.axisMode==M.AxisMode.Polygonal){var v=Math.cos(d)*f+this._cx(),w=Math.sin(d)*f+this._cy();if(m._rectangle(new M.core.Rect(v-p/2,w-p/2,p,p)),s.position===M.TextPosition.Smart){var b=null,x=M.plugins._Plugins._dataContentProvider("Default");if(null!=x&&(b=x.toLines(h._dataLabelContentSite())),null!=b&&0<b.length){var S=isNaN(this._option().config.offset)?0:this._option().config.offset;S=isNaN(h.offset)?S:h.offset;var P=this._cx()+S*Math.cos(d)*f,V=this._cy()+S*Math.sin(d)*f,C=d,A=this._rectangle(),D=(A.width<A.height?A.width/2:A.height/2)+(isNaN(s.offset)?0:s.offset),T=P+Math.cos(C)*f,L=V+Math.sin(C)*f,O=new M._RadialLable(this._cx(),this._cy(),C,D,T,L,b,this);this.__labels.push(O)}}}else m._rectangle(new M.core.Rect(f-p/2,d-p/2,p,p));m._visible(this._symbols()),m.refresh(),this._children.push(m),this._pointViews().push(m)}}},t.prototype._createOverlayView=function(t){var e=l.prototype._createOverlayView.call(this,t);return e instanceof M._CartesianOverlayView?e:null},Object.defineProperty(t.prototype,"clippingMode",{get:function(){return this._option().config.clippingMode},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"showNulls",{get:function(){return this._option().config.showNulls},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"innerRadius",{get:function(){return this._option().config.innerRadius},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"sweep",{get:function(){return this._option().config.sweep},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"startAngle",{get:function(){return this._option().config.startAngle},enumerable:!0,configurable:!0}),t.prototype._calculateMinDistanceInValues=function(){for(var t=null,e=[],i=0,n=this._data()._seriesList();i<n.length;i++)for(var o=0,r=n[i]._points();o<r.length;o++){var s=r[o],a=this._getAxisXValue(s._dimensionValue());if(null!=a){for(var l=!1,_=0,u=e;_<u.length;_++){var h=u[_];if(h==a){l=!0;break}var c=Math.abs(h-a);(null==t||c<t)&&(t=c)}l||e.push(a)}}return t},t.prototype._getAxisXValue=function(t){if(this.xSite.dataType==M.core.DataType.String)return t._index();if(this.xSite.dataType==M.core.DataType.Boolean)return t._index();if(this.xSite.dataType==M.core.DataType.Number){if(this.xSite.isOrdinal)return t._index();if("number"==typeof(e=t._value()))return e}else if(this.xSite.dataType==M.core.DataType.Date){if(this.xSite.isOrdinal)return t._index();var e;if((e=t._value())instanceof Date)return e.valueOf()}else if(null==this.xSite.dataType)return 0;return null},t.prototype._getAxisX=function(){return this.__axisX},t.prototype._getAxisY=function(){return this.__axisY},t.prototype._clipId=function(){return this.__clipid},t.prototype._cx=function(){return this._rectangle().left+this._rectangle().width/2},t.prototype._cy=function(){return this._rectangle().top+this._rectangle().height/2},t.prototype._hitTest=function(t){var e=this._rectangle();if(null!=e&&e.contains(t))for(var i=this._children.length-1;0<=i;--i){var n=this._children[i]._hitTest(t);if(null!=n)return n}return l.prototype._hitTest.call(this,t)},t.prototype.__getOverlayRange=function(){for(var t=void 0,e=void 0,i=void 0,n=void 0,o=0,r=this._overlayViews();o<r.length;o++){var s=r[o];s._prepareOverlay(),null==s._maxx()||isNaN(s._maxx())||(null==t&&(t=s._maxx()),s._maxx()>t&&(t=s._maxx())),null==s._maxy()||isNaN(s._maxy())||(null==e&&(e=s._maxy()),s._maxy()>e&&(e=s._maxy())),null==s._minx()||isNaN(s._minx())||(null==i&&(i=s._minx()),s._minx()<i&&(i=s._minx())),null==s._miny()||isNaN(s._miny())||(null==n&&(n=s._miny()),s._miny()<n&&(n=s._miny()))}return{maxx:t,minx:i,maxy:e,miny:n}},t.prototype._initAxis=function(t,e){this._data();var i=this._getAxisX(),n=this._getAxisY(),o=this.__getOverlayRange();if(this._swapAxes()){var r=this.xSite.max,s=this.xSite.min,a=this.ySite.min,l=this.ySite.max;if(this.xSite.padding()>n._scale()._padding()&&n._scale()._padding(this.xSite.padding()),this.ySite.padding()>i._scale()._padding()&&i._scale()._padding(this.ySite.padding()),null!=o.maxx&&o.maxx>r&&(r=o.maxx),null!=o.maxy&&o.maxy>l&&(l=o.maxy),null!=o.minx&&o.minx<s&&(s=o.minx),null!=o.miny&&o.miny<a&&(a=o.miny),2<=(p=n._scale()._domain()).length&&(null!=p[0]&&(p[0]<s||null==s)&&(s=p[0]),null!=p[1]&&(p[1]>r||null==r)&&(r=p[1])),2<=(f=i._scale()._domain()).length&&(null!=f[0]&&(f[0]<a||null==a)&&(a=f[0]),null!=f[1]&&(f[1]>l||null==l)&&(l=f[1])),this._option().config.axisMode==M.AxisMode.Polygonal||this._option().config.axisMode==M.AxisMode.Radial){var _=this.innerRadius,u=e.width<e.height?e.width/2:e.height/2,h=this.startAngle*Math.PI*2/360,c=(this.sweep+this.startAngle)*Math.PI*2/360;null!=a&&null!=l&&i._scale()._domain([a,l]),i._scale()._range([h,c]),null!=s&&null!=r&&n._scale()._domain([s,r]),n._scale()._range([_,u]),i._startAngleDegree(this.startAngle),i.sweep=this.sweep*Math.PI/180,i.innerRadius=this.innerRadius,n._startAngleDegree(this.startAngle),n.sweep=this.sweep*Math.PI/180,n.innerRadius=this.innerRadius}else null!=a&&null!=l&&i._scale()._domain([a,l]),i._scale()._range([e.left,e.right]),null!=s&&null!=r&&n._scale()._domain([s,r]),n._scale()._range([e.bottom,e.top])}else{var p,f;r=this.xSite.max,s=this.xSite.min,a=this.ySite.min,l=this.ySite.max;if(this.ySite.padding()>n._scale()._padding()&&n._scale()._padding(this.ySite.padding()),this.xSite.padding()>i._scale()._padding()&&i._scale()._padding(this.xSite.padding()),n._scale()instanceof M._LogAxisScale&&this.ySite instanceof M.models._YSiteModel&&(a=this.ySite.__minValue),null!=o.maxx&&o.maxx>r&&(r=o.maxx),null!=o.maxy&&o.maxy>l&&(l=o.maxy),null!=o.minx&&o.minx<s&&(s=o.minx),null!=o.miny&&o.miny<a&&(a=o.miny),2<=(p=i._scale()._domain()).length&&(null!=p[0]&&(p[0]<s||null==s)&&(s=p[0]),null!=p[1]&&(p[1]>r||null==r)&&(r=p[1])),2<=(f=n._scale()._domain()).length&&(null!=f[0]&&(f[0]<a||null==a)&&(a=f[0]),null!=f[1]&&(f[1]>l||null==l)&&(l=f[1])),this._option().config.axisMode==M.AxisMode.Polygonal||this._option().config.axisMode==M.AxisMode.Radial){_=this.innerRadius,u=e.width<e.height?e.width/2:e.height/2,h=this.startAngle*Math.PI*2/360,c=(this.sweep+this.startAngle)*Math.PI*2/360;null!=s&&null!=r&&i._scale()._domain([s,r]),i._scale()._range([_,u]),null!=a&&null!=l&&n._scale()._domain([a,l]),n._scale()._range([h,c]),i._startAngleDegree(this.startAngle),i.sweep=this.sweep*Math.PI/180,i.innerRadius=this.innerRadius,n._startAngleDegree(this.startAngle),n.sweep=this.sweep*Math.PI/180,n.innerRadius=this.innerRadius}else null!=s&&null!=r&&i._scale()._domain([s,r]),i._scale()._range([e.left,e.right]),n._scale()instanceof M._LogAxisScale&&(this.ySite,M.models._YSiteModel),null!=a&&null!=l&&n._scale()._domain([a,l]),n._scale()._range([e.bottom,e.top])}if(i._updateActualLimits(this._swapAxes()?this.ySite:this.xSite),n._updateActualLimits(this._swapAxes()?this.xSite:this.ySite),this.clippingMode===M.ClippingMode.Fit){this instanceof M._ScatterPlotView?this._analysisFitInfo(t,e):this instanceof M._LinePlotView&&this._symbols()&&this._analysisFitInfo(t,e)}},t.prototype._layoutAnimationViews=function(t){var i=this,e=l.prototype._layoutAnimationViews.call(this,t).filter(function(t){return t instanceof M._PointView||t instanceof M._CartesianSeriesView});return null!=t&&t.mode==M.AnimationMode.Point&&e.sort(function(t,e){return i._swapAxes()?i._reversed()?t._rectangle().bottom<e._rectangle().bottom?1:t._rectangle().bottom>e._rectangle().bottom?-1:t._rectangle().left<e._rectangle().left?1:-1:t._rectangle().top>e._rectangle().top?1:t._rectangle().top<e._rectangle().top?-1:t._rectangle().left>e._rectangle().left?1:-1:t._rectangle().left>e._rectangle().left?1:t._rectangle().left<e._rectangle().left?-1:i._reversed()?t._rectangle().bottom>e._rectangle().bottom?1:-1:t._rectangle().bottom<e._rectangle().bottom?1:-1}),e},t.prototype._renderContent=function(t,e){if(this.clippingMode===M.ClippingMode.Clip){var i=this._getAxisX(),n=this._getAxisY();this.__clipid="cartesianClip"+(1e5*Math.random()).toFixed();var o=new M.core.Rect(i._rectangle().left,n._rectangle().top,i._rectangle().width,n._rectangle().height);t.addClipRect(o,this.__clipid),t.startGroup(null,this.__clipid)}var r=this._children,s=this._plotAreaView()._dvView()._option().selectionMode,a=null!=this._data()._detailDefinitions()&&0<this._data()._detailDefinitions().length?this._data()._detailDefinitions()[0]._group():null;(null!=s&&s!=M.SelectionMode.None||null!=a&&a==M.Group.Stack)&&r.sort(function(t,e){return t==e?0:t instanceof M._CartesianSeriesView&&e instanceof M._CartesianPointView?-1:t instanceof M._CartesianPointView&&e instanceof M._CartesianSeriesView?1:t instanceof M._CartesianSeriesView&&e instanceof M._CartesianSeriesView?t._selected()&&!e._selected()?1:!t._selected()&&e._selected()?-1:t._data()._index()-e._data()._index():t instanceof M._CartesianPointView&&e instanceof M._CartesianPointView?t._selected()&&!e._selected()?1:!t._selected()&&e._selected()?-1:t._data()._series()._index()==e._data()._series()._index()?t._data()._index()-e._data()._index():t._data()._series()._index()-e._data()._series()._index():t instanceof M._CartesianSeriesView&&e instanceof M._BarLineView?-1:e instanceof M._CartesianSeriesView&&t instanceof M._BarLineView?1:t instanceof M._CartesianPointView&&e instanceof M._BarLineView?-1:e instanceof M._CartesianPointView&&t instanceof M._BarLineView?1:t instanceof M._BarLineView&&e instanceof M._BarLineView?t._startView()._data()._series()._index()==e._startView()._data()._series()._index()?t._startView()._data()._index()-e._startView()._data()._index():t._startView()._data()._series()._index()-e._startView()._data()._series()._index():0});for(var l=0;l<r.length;++l){var _=r[l];this.__renderChild(t,e,_)}this.clippingMode===M.ClippingMode.Clip&&t.endGroup();for(var u=0,h=this.__labels;u<h.length;u++){h[u]._render(t,e)}},t.prototype._renderDataLabels=function(t,e){if(this.clippingMode==M.ClippingMode.Clip){var i=this._getAxisX(),n=this._getAxisY(),o=new M.core.Rect(i._rectangle().left,n._rectangle().top,i._rectangle().width,n._rectangle().height);return e.DataLabelClipRectangle=o.clone(),l.prototype._renderDataLabels.call(this,t,e),void delete e.DataLabelClipRectangle}l.prototype._renderDataLabels.call(this,t,e)},t.prototype._analysisFitInfo=function(t,e){for(var i=0,n=0,o=0,r=0,s=this._data(),a=this._getAxisX(),l=this._getAxisY(),_=0;_<s._seriesList().length;++_)for(var u=s._seriesList()[_],h=0;h<u._points().length;h++){var c=u._points()[h],p=c._size();if(null!=c){var f=a._scale().value(this._getAxisXValue(c._dimensionValue()))-p,d=f+2*p,g=NaN;c instanceof M.models._XyValuePointData?g=l._scale().value(c._yValue())-p:c instanceof M.models._XyRangeValuePointData&&(g=l._scale().value(Math.max(c._yLowerValue(),c._yUpperValue()))-p);var y=g+2*p;f<i&&(i=f),n<d&&(n=d),g<o&&(o=g),r<y&&(r=y)}}var m=a._scale().value(this.xSite.min),v=a._scale().value(this.xSite.max),w=l._scale().value(this.ySite.max),b=l._scale().value(this.ySite.min);this._fitoffset={left:0<m-i?m-i:0,top:0<w-o?w-o:0,right:0<n-v?n-v:0,bottom:0<r-b?r-b:0},a.offset=this._fitoffset,l.offset=this._fitoffset},t.prototype.fittingLabels=function(t,e){t.left<e.left&&(t.top=(t.bottom-this._cy())*(e.left-this._cx())/(t.left-this._cx())+this._cy()+t.height,t.left=e.left),t.right>e.right&&(t.top=(t.bottom-this._cy())*(e.right-this._cx())/(t.right-this._cx())+this._cy()+t.height,t.left=e.right-t.width),t.top-t.height<e.top&&(t.left=(t.left-this._cx())*(e.top-this._cy())/(t.top-this._cy())+this._cx(),t.top=e.top+t.height),t.bottom>e.bottom&&(t.left=(t.left-this._cx())*(e.bottom-this._cy())/(t.bottom-this._cy())+this._cx(),t.top=e.bottom)},t}(M._PlotView);M._CartesianPlotView=t;var e=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return __extends(e,t),e.prototype._createSeries=function(t,e,i,n){return null},e}(M.models._CartesianPlotData)}(dv||(dv={})),function(r){"use strict";var t=function(i){function t(t,e){return i.call(this,t,e)||this}return __extends(t,i),t.prototype._plotView=function(){return i.prototype._plotView.call(this)},t.prototype._data=function(){return i.prototype._data.call(this)},t.prototype._reversed=function(){var t=!1;return null!=(t=this._plotView()._swapAxes()?this._plotView()._getAxisX()._scale()._reversed():this._plotView()._getAxisY()._scale()._reversed())&&t},t.prototype._calculateColor=function(){var t=this._data(),e=t._color();return null==e&&(e=t._series()._color()),null==e&&(e=this._plotView()._plotAreaView()._dvView()._colorProvider().getColor(0)),e},Object.defineProperty(t.prototype,"id",{get:function(){if(null==this.__id){var t=this._data(),e="",i="",n=this._plotView()._layoutView();n instanceof r._TrellisCellLayoutView&&(e=n._cellView().rowIndex+"",i=n._cellView().columnIndex+"");var o;o=r._Util.HashCode(t._dimensionValue()._value()+""+t._series().detail+t._series()._valueDefinition().name+e+i),this.__id=r._Util.HashCode(o)}return this.__id},enumerable:!0,configurable:!0}),t.prototype.__getUpdateAnimation=function(t){if(null!=t&&t instanceof r._PointView){var e=new r._PointComparedAnimation(t._xs(),t._ys(),this._xs(),this._ys());return e.duration=1e3,e.from=0,e.to=1,e}return null},t}(r._PointView);r._CartesianPointView=t}(dv||(dv={})),function(r){"use strict";var t=function(n){function t(t,e){var i=n.call(this)||this;return i.__plotView=t,i.__data=e,i.__data._view(i),i}return __extends(t,n),t.prototype._visible=function(t){if(arguments.length<=0)return!this._data()._filtered()&&n.prototype._visible.call(this);n.prototype._visible.call(this,t)},t.prototype._selected=function(){return this._data()._selected()},t.prototype._data=function(){return this.__data},t.prototype._plotView=function(){return this.__plotView},Object.defineProperty(t.prototype,"animation",{get:function(){return this.__animation},set:function(t){this.__animation=t},enumerable:!0,configurable:!0}),t.prototype.__startAnimation=function(t){this.__animation=t,null!=this.__plotView&&this.__plotView.__startAnimation(t)},Object.defineProperty(t.prototype,"id",{get:function(){if(null==this.__id){var t=this._data(),e="",i="",n=this._plotView()._layoutView();n instanceof r._TrellisCellLayoutView&&(e=n._cellView().rowIndex+"",i=n._cellView().columnIndex+"");var o;o=r._Util.HashCode(t.detail+""+t._valueDefinition().name+e+i),this.__id=r._Util.HashCode(o)}return this.__id},enumerable:!0,configurable:!0}),t.prototype.__getUpdateAnimation=function(t){return null},t}(r._View);r._CartesianSeriesView=t}(dv||(dv={})),function(f){"use strict";var t=function(i){function t(t,e){return i.call(this,t,e)||this}return __extends(t,i),t.prototype._startPoint=function(){return this.__startPoint},t.prototype._endPoint=function(){return this.__endPoint},t.prototype._pointView=function(){return i.prototype._pointView.call(this)},t.prototype._layout=function(t,e,i){var n=this._pointView(),o=n._plotView(),r=!0,s=n._data();s instanceof f.models._XyValuePointData?s._yValue()<0&&(r=!1):s instanceof f.models._XyRangeValuePointData&&s._yUpperValue()<0&&(r=!1);var a=f.TextPosition.Auto;null!=o._option().config.text.position&&(a=o._option().config.text.position);var l=f.Position.None;o._swapAxes()?r?a==f.TextPosition.Center||(l=n._reversed()?f.Position.Left:f.Position.Right):a==f.TextPosition.Center||(l=n._reversed()?f.Position.Right:f.Position.Left):r?a==f.TextPosition.Center||(l=n._reversed()?f.Position.Bottom:f.Position.Top):a==f.TextPosition.Center||(l=n._reversed()?f.Position.Top:f.Position.Bottom),e=n._rectangle();var _=o._layoutView()._dataLabelsRectangle(),u=this._measure(t,new f.core.Size(Number.MAX_VALUE,Number.MAX_VALUE)),h=o._option().config.text.offset,c=e.center.clone(),p=null;l==f.Position.Top?a==f.TextPosition.Inside?(c.y=e.bottom,p=c.clone(),null!=h&&(p.y+=h),p.y+u.height>_.bottom&&(p.y=_.bottom-u.height),this._rotatedRectangle(new f.models._RotatedRectangle(p.x,p.y+u.height/2,u.width,u.height,0))):(c.y=e.top,p=c.clone(),null!=h&&(p.y-=h),p.y-u.height<_.top&&(p.y=_.top+u.height),this._rotatedRectangle(new f.models._RotatedRectangle(p.x,p.y-u.height/2,u.width,u.height,0))):l==f.Position.Bottom?a==f.TextPosition.Inside?(c.y=e.top,p=c.clone(),null!=h&&(p.y-=h),p.y-u.height<_.top&&(p.y=_.top+u.height),this._rotatedRectangle(new f.models._RotatedRectangle(p.x,p.y-u.height/2,u.width,u.height,0))):(c.y=e.bottom,p=c.clone(),null!=h&&(p.y+=h),p.y+u.height>_.bottom&&(p.y=_.bottom-u.height),this._rotatedRectangle(new f.models._RotatedRectangle(p.x,p.y+u.height/2,u.width,u.height,0))):l==f.Position.Left?a==f.TextPosition.Inside?(c.x=e.right,p=c.clone(),null!=h&&(p.x+=h),p.x+u.width>_.right&&(p.x=_.right-u.width),this._rotatedRectangle(new f.models._RotatedRectangle(p.x+u.width/2,p.y,u.width,u.height,0))):(c.x=e.left,p=c.clone(),null!=h&&(p.x-=h),p.x-u.width<_.left&&(p.x=_.left+u.width),this._rotatedRectangle(new f.models._RotatedRectangle(p.x-u.width/2,p.y,u.width,u.height,0))):l==f.Position.Right?a==f.TextPosition.Inside?(c.x=e.left,p=c.clone(),null!=h&&(p.x-=h),p.x-u.width<_.left&&(p.x=_.left+u.width),this._rotatedRectangle(new f.models._RotatedRectangle(p.x-u.width/2,p.y,u.width,u.height,0))):(c.x=e.right,p=c.clone(),null!=h&&(p.x+=h),p.x+u.width>_.right&&(p.x=_.right-u.width),this._rotatedRectangle(new f.models._RotatedRectangle(p.x+u.width/2,p.y,u.width,u.height,0))):(p=c.clone(),this._rotatedRectangle(new f.models._RotatedRectangle(p.x,p.y,u.width,u.height,0)),p.x+u.width/2>_.right&&this._rotatedRectangle(new f.models._RotatedRectangle(_.right-u.width/2,p.y,u.width,u.height,0)),p.x-u.width/2<_.left&&this._rotatedRectangle(new f.models._RotatedRectangle(_.left+u.width/2,p.y,u.width,u.height,0))),this.__startPoint=c,this.__endPoint=p},t}(f._DataLabelView);f._CartesianSymbolDataLabelView=t}(dv||(dv={})),function(r){"use strict";var t=function(o){function i(t,e,i){var n=o.call(this,t,i)||this;return n.label="",n.labelrect=new r.core.Rect(0,0,0,0),n.hidelabel=!0,n.symbol=e,n}return __extends(i,o),i.prototype._dataLabelView=function(){return o.prototype._dataLabelView.call(this)},i.prototype.refresh=function(){o.prototype._rectangle.call(this);var t=r._Util.createPtsFromRect(this._rectangle(),20);this._xs(t.xs),this._ys(t.ys)},i.prototype._renderContent=function(t,e){var i=this._calculateColor(),n=this._calculateStyle(e.hasSelectionInPlotArea);t.beginTransform();var o=this._rectangle();this._hover()&&(r._applyDataPointStyle(t,this._plotView()._option().config.hoverStyle),o=r._Util.scale(this._rectangle().clone(),this.scale())),this.__animation instanceof r._PointComparedAnimation&&null!=this._xs()&&null!=this._ys()?(n.stroke||(n.stroke=i),n.fill||(n.fill=i),r._applyNewStyle(t,n),t.drawPolygon(this._xs(),this._ys())):(this.symbol.color=i,this.symbol.render(t,o,n)),!this.hidelabel&&this.label&&t.drawString(this.label,new r.core.Point(this.labelrect.left,this.labelrect.top),r.__Constant_Core_Label_ClassName,this.labelstyle),t.restoreTransform()},i.prototype._createDataLabelView=function(){var t=[],e=r.plugins._Plugins._dataContentProvider("Default");if(null!=e&&(t=e.toLines(this._data()._dataLabelContentSite())),null!=t&&0<t.length){this._rectangle();var i=this._plotView()._option().config.axisMode;return i==r.AxisMode.Radial?new r._RadialSymbolDataLabelView(this,t):i==r.AxisMode.Polygonal?new r._RadialSymbolDataLabelView(this,t):new r._CartesianSymbolDataLabelView(this,t)}return null},i.prototype._calculateStyle=function(t){var e=this._data(),i=new r._Style;return i._mergeDataPointSymbolStyle(this._defaultStyle()),i._mergeGStyle(this._plotView()._plotAreaView()._dvView()._option().style),i._mergeDataPointSymbolStyle(e._series()._style()),i._mergeDataPointSymbolStyle(e._style()),t&&(e._selected()?(i._mergeDataPointSymbolStyle(this._plotView()._plotAreaView()._dvView()._option().selectedStyle),i._mergeDataPointSymbolStyle(this._plotView()._option().config.selectedStyle)):(i._mergeDataPointSymbolStyle(this._plotView()._plotAreaView()._dvView()._option().unselectedStyle),i._mergeDataPointSymbolStyle(this._plotView()._option().config.unselectedStyle))),this._hover()&&i._mergeDataPointSymbolStyle(this._plotView()._option().config.hoverStyle),i},i.prototype.__getUpdateAnimation=function(t){if(null!=t&&t instanceof i&&t._data()._shape()==this._data()._shape()){var e=new r._SymbolPointComparedAnimation(t._rectangle(),this._rectangle());return e.duration=1e3,e.from=0,e.to=1,e}return o.prototype.__getUpdateAnimation.call(this,t)},i}(r._CartesianPointView);r._CartesianSymbolPointView=t}(dv||(dv={})),function(t){"use strict";var e=function(i){function t(){var t=i.call(this)||this;return t._oldOpacity=null,t}return __extends(t,i),t.prototype.onStartAniamtion=function(t,e){i.prototype.onStartAniamtion.call(this,t,e),this._oldOpacity=e.opacity},t.prototype.onEndAnimation=function(t,e){i.prototype.onEndAnimation.call(this,t,e),this.fillAfter||(e.opacity=this._oldOpacity)},t.prototype.applyTransformation=function(t,e,i){var n=this.from+(this.to-this.from)*t;i.opacity=n},t}(t.Animation);t._OpacityAnimation=e}(dv||(dv={})),function(p){"use strict";var t=function(i){function t(t,e){return i.call(this,t,e)||this}return __extends(t,i),t.prototype._startPoint=function(){return this.__startPoint},t.prototype._endPoint=function(){return this.__endPoint},t.prototype._pointView=function(){return i.prototype._pointView.call(this)},t.prototype._layout=function(t,e,i){var n=this._pointView(),o=n._plotView(),r=p.TextPosition.Auto;null!=o._option().config.text.position&&(r=o._option().config.text.position),e=n._rectangle();var s=o._layoutView()._dataLabelsRectangle(),a=this._measure(t,new p.core.Size(Number.MAX_VALUE,Number.MAX_VALUE)),l=o._option().config.text.offset,_=e.center.clone(),u=null;if(r==p.TextPosition.Center||null==l)u=_.clone(),this._rotatedRectangle(new p.models._RotatedRectangle(u.x,u.y,a.width,a.height,0));else{var h=this._calculateRadialCenter(),c=this._calculateRadialAngle();r==p.TextPosition.Inside?(u=new p.core.Point(_.x-Math.cos(c)*l,_.y-Math.sin(c)*l)).x>h.x?(u.x+a.width>s.right&&(u.x=s.right-a.width),u.y>h.y?(u.y+a.height>s.bottom&&(u.y=s.bottom-a.height),this._rotatedRectangle(new p.models._RotatedRectangle(u.x-a.width/2,u.y-a.height/2,a.width,a.height,0))):u.y<h.y?(u.y-a.height<s.top&&(u.y=s.top+a.height),this._rotatedRectangle(new p.models._RotatedRectangle(u.x-a.width/2,u.y+a.height/2,a.width,a.height,0))):this._rotatedRectangle(new p.models._RotatedRectangle(u.x-a.width/2,u.y,a.width,a.height,0))):u.x<h.x?(u.x-a.width<s.left&&(u.x=s.left+a.width),u.y>h.y?(u.y+a.height>s.bottom&&(u.y=s.bottom-a.height),this._rotatedRectangle(new p.models._RotatedRectangle(u.x+a.width/2,u.y-a.height/2,a.width,a.height,0))):u.y<h.y?(u.y-a.height<s.top&&(u.y=s.top+a.height),this._rotatedRectangle(new p.models._RotatedRectangle(u.x+a.width/2,u.y+a.height/2,a.width,a.height,0))):this._rotatedRectangle(new p.models._RotatedRectangle(u.x+a.width/2,u.y,a.width,a.height,0))):u.y>h.y?(u.y+a.height>s.bottom&&(u.y=s.bottom-a.height),this._rotatedRectangle(new p.models._RotatedRectangle(u.x,u.y-a.height/2,a.width,a.height,0))):u.y<h.y?(u.y-a.height<s.top&&(u.y=s.top+a.height),this._rotatedRectangle(new p.models._RotatedRectangle(u.x,u.y+a.height/2,a.width,a.height,0))):this._rotatedRectangle(new p.models._RotatedRectangle(u.x,u.y,a.width,a.height,0)):(u=new p.core.Point(_.x+Math.cos(c)*l,_.y+Math.sin(c)*l)).x>h.x?(u.x+a.width>s.right&&(u.x=s.right-a.width),u.y>h.y?(u.y+a.height>s.bottom&&(u.y=s.bottom-a.height),this._rotatedRectangle(new p.models._RotatedRectangle(u.x+a.width/2,u.y+a.height/2,a.width,a.height,0))):u.y<h.y?(u.y-a.height<s.top&&(u.y=s.top+a.height),this._rotatedRectangle(new p.models._RotatedRectangle(u.x+a.width/2,u.y-a.height/2,a.width,a.height,0))):this._rotatedRectangle(new p.models._RotatedRectangle(u.x+a.width/2,u.y,a.width,a.height,0))):u.x<h.x?(u.x-a.width<s.left&&(u.x=s.left+a.width),u.y>h.y?(u.y+a.height>s.bottom&&(u.y=s.bottom-a.height),this._rotatedRectangle(new p.models._RotatedRectangle(u.x-a.width/2,u.y+a.height/2,a.width,a.height,0))):u.y<h.y?(u.y-a.height<s.top&&(u.y=s.top+a.height),this._rotatedRectangle(new p.models._RotatedRectangle(u.x-a.width/2,u.y-a.height/2,a.width,a.height,0))):this._rotatedRectangle(new p.models._RotatedRectangle(u.x-a.width/2,u.y,a.width,a.height,0))):u.y>h.y?(u.y+a.height>s.bottom&&(u.y=s.bottom-a.height),this._rotatedRectangle(new p.models._RotatedRectangle(u.x,u.y+a.height/2,a.width,a.height,0))):u.y<h.y?(u.y-a.height<s.top&&(u.y=s.top+a.height),this._rotatedRectangle(new p.models._RotatedRectangle(u.x,u.y-a.height/2,a.width,a.height,0))):this._rotatedRectangle(new p.models._RotatedRectangle(u.x,u.y,a.width,a.height,0))}this.__startPoint=_,this.__endPoint=u},t.prototype._calculateRadialAngle=function(){var t=this._pointView()._plotView(),e=this._pointView()._data();if(t._swapAxes()){if(e instanceof p.models._XyValuePointData)return t._getAxisX()._scale().value(e._yValue());if(e instanceof p.models._XyRangeValuePointData)return t._getAxisX()._scale().value(e._yUpperValue())}else{if(e instanceof p.models._XyValuePointData)return t._getAxisY()._scale().value(e._yValue());if(e instanceof p.models._XyRangeValuePointData)return t._getAxisY()._scale().value(e._yUpperValue())}return null},t.prototype._calculateRadialCenter=function(){var t=this._pointView()._rectangle();return new p.core.Point(t.left+t.width/2,t.top+t.height/2)},t}(p._DataLabelView);p._RadialSymbolDataLabelView=t}(dv||(dv={})),function(t){"use strict";var e;(e=t.AnimationFlags||(t.AnimationFlags={}))[e.Update=0]="Update",e[e.Add=1]="Add",e[e.Remove=2]="Remove";var i=function(){this._flags=[]};t._ShapeAnimationBuilder=i}(dv||(dv={})),function(r){"use strict";var t=function(o){function t(t,e,i){var n=o.call(this)||this;return n.__shapes=t.map(function(t){return t.clone()}),n.__swapAxes=e,n.__mode=i,n}return __extends(t,o),t.prototype.onStartAniamtion=function(t,e){o.prototype.onStartAniamtion.call(this,t,e)},t.prototype.onEndAnimation=function(t,e){o.prototype.onEndAnimation.call(this,t,e),e instanceof r._AreaSeriesView&&e._seriesShapes(this.__shapes)},t.prototype.applyTransformation=function(t,e,i){var n,_=this,u=this.from+(this.to-this.from)*t;i instanceof r._AreaSeriesView&&(this.__mode===r.AnimationMode.All||this.__mode===r.AnimationMode.Group?(n=this.__shapes.map(function(t){return t.clone()})).forEach(function(i){i._upperLine().forEach(function(t,e){_.__swapAxes?i._lowerLine().length==i._upperLine().length?t.x=(t.x-i._lowerLine()[e].x)*u+i._lowerLine()[e].x:t.x=(t.x-i._lowerLine()[0].x)*u+i._lowerLine()[0].x:i._lowerLine().length==i._upperLine().length?t.y=(t.y-i._lowerLine()[e].y)*u+i._lowerLine()[e].y:t.y=(t.y-i._lowerLine()[0].y)*u+i._lowerLine()[0].y})}):(n=this.__shapes.map(function(t){return t.clone()})).forEach(function(t){var e=Math.floor(u*t._upperLine().length),i=Math.floor(u*t._lowerLine().length);if(i=i<1?1:i,(e=e<1?1:e)<t._upperLine().length&&i<t._lowerLine().length){var n=u*t._upperLine().length-e;n=n<0?0:n;var o=t._upperLine()[e-1],r=t._upperLine()[e];r.x=o.x+n*(r.x-o.x),r.y=o.y+n*(r.y-o.y),t._upperLine().splice(e),t._upperLine().push(r);var s=t._lowerLine()[i];if(t._lowerLine().splice(i),_.__swapAxes){var a=r.clone();if(t._lowerLine().length==t._upperLine().length){var l=t._lowerLine()[i-1];a.x=l.x+n*(s.x-l.x)}else a.x=t._lowerLine()[0].x;t._lowerLine().push(a)}else{a=r.clone();if(t._lowerLine().length==t._upperLine().length){l=t._lowerLine()[i-1];a.y=l.y+n*(s.y-l.y)}else a.y=t._lowerLine()[0].y;t._lowerLine().push(a)}}else t._upperLine().splice(e),t._lowerLine().splice(i)}),i._seriesShapes(n))},t}(r.Animation);r._AreaSeriesLoadAnimation=t}(dv||(dv={})),function(r){"use strict";var t=function(o){function t(t){void 0===t&&(t=!1);var e=o.call(this)||this;return e.__symbols=t,e}return __extends(t,o),t.prototype._showSymbol=function(){return this.__symbols},t.prototype.render=function(t,e,i){var n=e.width<e.height?e.width:e.height;this._showSymbol()?o.prototype.render.call(this,t,e,i):(t.beginTransform(),r._applyFillColor(t,this.color),r._applyStrokeColor(t,this.color),r._applyDataPointStyle(t,new r.options._DataPointStyleOption({strokeWidth:1})),r._applyDataPointStyle(t,this._style()),t.drawRect((e.right+e.left)/2-n/2,e.top,n,n),t.restoreTransform())},t}(r.models._LegendSymbol);r._AreaLegendSymbol=t}(dv||(dv={})),function(N){"use strict";var t=function(s){function t(){var t=null!==s&&s.apply(this,arguments)||this;return t.__seriesViews=[],t}return __extends(t,s),t.prototype._layoutStack=function(){var t=!1,e=this._getAxisY();null!=e.scale&&e.scale.type==N.ValueScaleType.Percentage&&(t=!0);var i=!1;null!=this._data()._categoriedDimensionDefinition()&&(i=!0),(new N.models._CartesianPlotLayout)._layout(this._data(),t,i)},Object.defineProperty(t.prototype,"lineAspect",{get:function(){return this._option().config.lineAspect},enumerable:!0,configurable:!0}),t.prototype._legendSymbol=function(){return new N._AreaLegendSymbol(this._option().config.symbols)},t.prototype._createData=function(t){return new e(this,t,this._option())},t.prototype._createSeriesView=function(t){return 0<t._points().length?new N._AreaSeriesView(this,t):null},t.prototype._layoutSeriesList=function(t,e,i){this.__seriesViews=[];for(var n=this._data(),o=this._getAxisX(),r=this._getAxisY(),s=this._option().config.text,a=0,l=n._seriesList();a<l.length;a++){var _=l[a];null!=(R=this._createSeriesView(_))&&(this.__seriesViews.push(R),this._children.push(R));for(var u=0;u<_._points().length;u++){var h=_._points()[u],c=this._getAxisXValue(h._dimensionValue()),p=h._size();p=null==p?this._option().config.style.symbolSize:this._option().config.style.symbolSize*p;var f=NaN,d=NaN;if(this._swapAxes()?(d=r.convert(c),h instanceof N.models._XyValuePointData?f=o.convert(h._yValue()):h instanceof N.models._XyRangeValuePointData&&(f=o.convert(Math.max(h._yLowerValue(),h._yUpperValue())))):(f=o.convert(c),h instanceof N.models._XyValuePointData?d=r.convert(h._yValue()):h instanceof N.models._XyRangeValuePointData&&(d=r.convert(Math.max(h._yLowerValue(),h._yUpperValue())))),null!=f&&!isNaN(f)&&null!=d&&!isNaN(d)){var g=null;if(null!=h._shape()){null==(y=N.plugins._Plugins._symbol(h._shape()))&&null!=this._option().config.style.symbolShape&&(y=N.plugins._Plugins._symbol(this._option().config.style.symbolShape)),null==y&&(y=N.plugins._Plugins._symbol("Dot")),g=new N._CartesianSymbolPointView(h,y,this)}else{var y=null;null!=this._option().config.style.symbolShape&&(y=N.plugins._Plugins._symbol(this._option().config.style.symbolShape)),null==y&&(y=N.plugins._Plugins._symbol("Dot")),g=new N._CartesianSymbolPointView(h,y,this)}if(this._option().config.axisMode==N.AxisMode.Radial||this._option().config.axisMode==N.AxisMode.Polygonal){var m=Math.cos(d)*f+this._cx(),v=Math.sin(d)*f+this._cy();if(g._rectangle(new N.core.Rect(m-p/2,v-p/2,p,p)),s.position===N.TextPosition.Smart){var w=null,b=N.plugins._Plugins._dataContentProvider("Default");if(null!=b&&(w=b.toLines(h._dataLabelContentSite())),null!=w&&0<w.length){var x=isNaN(this._option().config.offset)?0:this._option().config.offset;x=isNaN(h.offset)?x:h.offset;var S=this._cx()+x*Math.cos(d)*f,P=this._cy()+x*Math.sin(d)*f,V=d,C=this._rectangle(),A=(C.width<C.height?C.width/2:C.height/2)+(isNaN(s.offset)?0:s.offset),D=S+Math.cos(V)*f,T=P+Math.sin(V)*f,L=new N._RadialLable(this._cx(),this._cy(),V,A,D,T,w,this);this.__labels.push(L)}}}else g._rectangle(new N.core.Rect(f-p/2,d-p/2,p,p));g._visible(this._symbols()),g.refresh(),this._children.push(g),this._pointViews().push(g)}}}var O=this._swapAxes()?Math.max(this._getAxisX()._scale().min(),0):Math.max(this._getAxisY()._scale().min(),0);i.areaBaseLine=new N._BaseLine(O);for(var M=0,k=this.__seriesViews;M<k.length;M++){var R;(R=k[M])._data()._points().sort(function(t,e){var i=t._dimensionValue()._index(),n=e._dimensionValue()._index();return i!=n?i-n:t.value-e.value}),R._layout(t,e,i)}delete i.areaBaseLine},t.prototype._createXSite=function(t,e){var i=this._data(),n=i._categoriedDimensionDefinition();if(null!=n){if(this._option().config.axisMode==N.AxisMode.Polygonal&&this._swapAxes()){var o=n._categoryFieldDefinitions()[0];if(o instanceof N.models._StringFieldDefinition||o instanceof N.models._BooleanFieldDefinition)return s.prototype._createXSite.call(this,t,.5)}return s.prototype._createXSite.call(this,t,e)}var r=i._xFieldDefinition();if(null!=r){if(this._axisMode()!=N.AxisMode.Polygonal&&this._axisMode()!=N.AxisMode.Radial||!this._swapAxes())return new a(r,e);s.prototype._createXSite.call(this,t,e)}return s.prototype._createXSite.call(this,t,e)},t}(N._CartesianPlotView);N._AreaPlotView=t;var e=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return __extends(e,t),e.prototype._createSeries=function(t,e,i,n){return e instanceof N.models._AggregateCartesianValueDefinition?new N.models._XyValueSeriesData(this,e,i,n,t):e instanceof N.models._AggregateNumberRangeCartesianValueDefinition?new N.models._XyRangeValueSeriesData(this,e,i,n,t):e instanceof N.models._AggregateDateRangeCartesianValueDefinition?new N.models._XyRangeValueSeriesData(this,e,i,n,t):null},e}(N.models._CartesianPlotData);N._AreaPlotData=e;var a=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return __extends(e,t),e.prototype.padding=function(){return this.isOrdinal?0:t.prototype.padding.call(this)},e}(N.models._XSiteModel)}(dv||(dv={})),function(o){"use strict";var t=function(n){function t(t,e){var i=n.call(this)||this;return i._targetShape=e.map(function(t){return t.clone()}),i._shapeAnimationBuilders=t,i}return __extends(t,n),t.prototype.onStartAniamtion=function(t,e){n.prototype.onStartAniamtion.call(this,t,e)},t.prototype.onEndAnimation=function(t,e){n.prototype.onEndAnimation.call(this,t,e),e instanceof o._AreaSeriesView&&e._seriesShapes(this._targetShape)},t.prototype.applyTransformation=function(t,e,i){if(i instanceof o._AreaSeriesView){var n=this.from+(this.to-this.from)*t;i._seriesShapes(this._shapeAnimationBuilders.map(function(t){return t.getAreaShape(n)}))}},t}(o.Animation);o._AreaSeriesComparedAnimation=t}(dv||(dv={})),function(S){"use strict";var t=function(r){function n(t,e){var i=r.call(this,t,e)||this;return i.__seriesShapes=[],i}return __extends(n,r),n.prototype._swapAxes=function(){return this._plotView()._swapAxes()},n.prototype._defaultStyle=function(){return new S.options._DataPointStyleOption({opacity:null,strokeOpacity:null,fill:S.__Constant_Core_Style_Stroke,stroke:S.__Constant_Core_Style_Stroke,strokeWidth:1,strokeDasharray:null,symbolShape:null,symbolOpacity:null,symbolStrokeOpacity:null,symbolFill:null,symbolStroke:null,symbolStrokeWidth:1,symbolStrokeDasharray:null})},n.prototype._plotView=function(){return r.prototype._plotView.call(this)},n.prototype._seriesShapes=function(t){if(arguments.length<=0)return this.__seriesShapes;this.__seriesShapes=t.map(function(t){if(t instanceof S._AreaShape)return t})},n.prototype._layout=function(t,e,i){this._rectangle(e.clone()),this.__seriesShapes=this._createAreaShapes(this._data());var n=i.areaBaseLine;this._layoutAreaShapes(this._data(),n)},n.prototype._renderContent=function(i,t){var n=this._data();i.beginTransform(),S._applyDataPointStyle(i,this._defaultStyle());var e=this._plotView()._plotAreaView()._dvView()._colorProvider().getColor(0);null!=e&&(i.fill=e,i.stroke=e);var o=n._color();if(null!=o&&(i.fill=o,i.stroke=o),null!=n._gradientColorScale()){var r=Number.MIN_VALUE,s=Number.MAX_VALUE,a=this._plotView()._option().config.showNulls;n.points.forEach(function(t){null==t.value&&a!=S.ShowNulls.Zeros||(t.value>r&&(r=t.value),t.value<s&&(s=t.value))}),i.fill=new S.models.LinearGradientColor(180,n._gradientColorScale()._getAreaGradientArray(this._plotView()._getAxisY()._scale().min(),r))}S._applyGStyle(i,this._plotView()._plotAreaView()._dvView()._option().style),S._applyDataPointStyle(i,n._style()),t.hasSelectionInPlotArea&&(n._selected()?(S._applyDataPointStyle(i,this._plotView()._plotAreaView()._dvView()._option().selectedStyle),S._applyDataPointStyle(i,this._plotView()._option().config.selectedStyle),t.apiSelectedStyle&&S._applyDataPointStyle(i,t.apiSelectedStyle)):(S._applyDataPointStyle(i,this._plotView()._plotAreaView()._dvView()._option().unselectedStyle),S._applyDataPointStyle(i,this._plotView()._option().config.unselectedStyle))),this._hover()&&S._applyDataPointStyle(i,this._plotView()._option().config.hoverStyle),this.__seriesShapes.forEach(function(t){var e=i.strokeWidth;i.strokeWidth=0,i.drawPolygon(t._xs(),t._ys()),0<e&&(i.strokeWidth=e,n instanceof S.models._XyRangeValueSeriesData?(i.drawLines(t.upperXs(),t.upperYs()),i.drawLines(t.lowerXs(),t.lowerYs())):n instanceof S.models._XyValueSeriesData&&i.drawLines(t.upperXs(),t.upperYs()))}),i.restoreTransform()},n.prototype._hitTest=function(t){var e=this._rectangle();if(null!=e&&e.contains(t))for(var i=0,n=this.__seriesShapes;i<n.length;i++){var o=n[i];if(S._Util.IsPointInPolygon2(t,o._xs(),o._ys()))return new S.HitTestResult(t,this._data(),this,S.ElementType.Series)}return r.prototype._hitTest.call(this,t)},n.prototype.__getUpdateAnimation=function(t){if(null!=t&&t instanceof n){var e=S._AreaShapeAnimationBuilder.analyseShapes(t._createAreaShapeAnimation(t._data()),this._createAreaShapeAnimation(this._data())),i=new S._AreaSeriesComparedAnimation(e,this._seriesShapes());return i.duration=1e3,i.from=0,i.to=1,i}return null},n.prototype._createAreaShapes=function(t){if(null==t._points()||t._points().length<=0)return null;this._plotView()._swapAxes();var e=this._plotView()._option().config.axisMode,i=this._plotView()._option().config.lineAspect,n=this._plotView()._option().config.showNulls,o=t._xDimension()instanceof S.models._XCategoriedDimension,r=this._plotView()._getAxisX(),s=this._plotView()._getAxisY(),a=r._scale(),l=s._scale(),_=(a.max()-a.min())/(a.endPosition-a.startPosition),u=(l.max()-l.min())/(l.endPosition-l.startPosition);isNaN(_)&&(_=1),isNaN(u)&&(u=1);for(var h=[],c=[],p=[],f=0,d=t._points();f<d.length;f++){var g=d[f],y=this._plotView()._getAxisXValue(g._dimensionValue());if(null!=y)if(g instanceof S.models._XyValuePointData)if(n==S.ShowNulls.Gaps)if(null==g._yValue()){var m=this._convertByLineAspect(c);i==S.LineAspect.Spline&&(m=this._convertBySpline(c,Math.abs(_),Math.abs(u))),h.push(new S._AreaShape([],m)),c=[]}else c.push(new S.core.Point(y,g._yValue()));else n==S.ShowNulls.Zeros?c.push(new S.core.Point(y,null==g._yValue()?0:g._yValue())):null!=g._yValue()&&c.push(new S.core.Point(y,g._yValue()));else if(g instanceof S.models._XyRangeValuePointData)if(n==S.ShowNulls.Gaps)if(null==g._yUpperValue()&&null==g._yLowerValue()){var v=this._convertByLineAspect(p),w=this._convertByLineAspect(c);i==S.LineAspect.Spline&&(v=this._convertBySpline(p,Math.abs(_),Math.abs(u)),w=this._convertBySpline(c,Math.abs(_),Math.abs(u))),h.push(new S._AreaShape(v,w)),c=[],p=[]}else c.push(new S.core.Point(y,null==g._yUpperValue()?0:g._yUpperValue())),p.push(new S.core.Point(y,null==g._yLowerValue()?0:g._yLowerValue()));else n==S.ShowNulls.Zeros?(c.push(new S.core.Point(y,null==g._yUpperValue()?0:g._yUpperValue())),p.push(new S.core.Point(y,null==g._yLowerValue()?0:g._yLowerValue()))):null!=g._yUpperValue()&&null!=g._yLowerValue()&&(c.push(new S.core.Point(y,g._yUpperValue())),p.push(new S.core.Point(y,g._yLowerValue())))}e!=S.AxisMode.Cartesian&&o&&(0<p.length&&p.push(p[0].clone()),0<c.length&&c.push(c[0].clone()));var b=this._convertByLineAspect(p),x=this._convertByLineAspect(c);return i==S.LineAspect.Spline&&(b=this._convertBySpline(p,Math.abs(_),Math.abs(u)),x=this._convertBySpline(c,Math.abs(_),Math.abs(u))),h.push(new S._AreaShape(b,x)),h},n.prototype._createAreaShapeAnimation=function(t){if(null==t._points()||t._points().length<=0)return null;for(var e=this._plotView()._option().config.axisMode,i=this._plotView()._option().config.showNulls,n=t._xDimension()instanceof S.models._XCategoriedDimension,o=[],r=[],s=0,a=0,l=t._points();a<l.length;a++){var _=l[a];null!=this._plotView()._getAxisXValue(_._dimensionValue())&&(_ instanceof S.models._XyValuePointData?i==S.ShowNulls.Gaps?null==_._yValue()?(o.push(new S._AreaShapeAnimation(this.__seriesShapes[s]._lowerLine(),this.__seriesShapes[s]._upperLine(),r)),r=[],s++):r.push(_):i==S.ShowNulls.Zeros?r.push(_):null!=_._yValue()&&r.push(_):_ instanceof S.models._XyRangeValuePointData&&(i==S.ShowNulls.Gaps?null==_._yUpperValue()&&null==_._yLowerValue()?(o.push(new S._AreaShapeAnimation(this.__seriesShapes[s]._lowerLine(),this.__seriesShapes[s]._upperLine(),r)),r=[],s++):r.push(_):i==S.ShowNulls.Zeros?r.push(_):null!=_._yUpperValue()&&null!=_._yLowerValue()&&r.push(_)))}return e!=S.AxisMode.Cartesian&&n&&0<r.length&&r.push(r[0]),o.push(new S._AreaShapeAnimation(this.__seriesShapes[s]._lowerLine(),this.__seriesShapes[s]._upperLine(),r)),o},n.prototype._layoutAreaShapes=function(s,a){var l=this,t=this.__seriesShapes,_=this._plotView()._swapAxes(),u=this._plotView()._option().config.axisMode,h=(this._plotView()._option().config.lineAspect,this._plotView()._option().config.showNulls,s._xDimension()instanceof S.models._XCategoriedDimension),c=this._plotView()._getAxisX(),p=this._plotView()._getAxisY();t.forEach(function(t){if(0<t._upperLine().length&&0==t._lowerLine().length){for(var e=0,i=a._takeSegment(t.upperXs()[0],t.upperXs()[t.upperXs().length-1]);e<i.length;e++){var n=i[e];t._lowerLine().push(n)}u!=S.AxisMode.Cartesian&&h&&0<t._lowerLine().length&&t._lowerLine().push(t._lowerLine()[0].clone());var o=s._detailDimension();null!=o&&o._definition()._group()==S.Group.Stack&&a._mergeSegment(t._upperLine().map(function(t){return t.clone()}))}var r=function(t){var e,i;i=_?(e=c.convert(t.y),p.convert(t.x)):(e=c.convert(t.x),p.convert(t.y)),u==S.AxisMode.Polygonal||u==S.AxisMode.Radial?(t.x=Math.cos(i)*e+l._plotView()._cx(),t.y=Math.sin(i)*e+l._plotView()._cy()):(t.x=e,t.y=i)};t._upperLine().forEach(r),t._lowerLine().forEach(r)})},n.prototype._convertByLineAspect=function(t){var e=this._plotView()._option().config.lineAspect;return new S._LineAspectConverter(!1,e).convert(t)},n.prototype._convertBySpline=function(t,e,i){var n=new S._Spline(t.map(function(t){return t.x}),t.map(function(t){return t.y})).calculate(e,i);t=[];for(var o=0;o<Math.min(n.xs.length,n.ys.length);o++)t.push(new S.core.Point(n.xs[o],n.ys[o]));return t},n}(S._CartesianSeriesView);S._AreaSeriesView=t}(dv||(dv={})),function(t){"use strict";var e=function(n){function a(t,e){var i=n.call(this)||this;return i.__lowerLine=t,i.__upperLine=e,i}return __extends(a,n),a.prototype._xs=function(){return this.__upperLine.map(function(t){return t.x}).concat(this.__lowerLine.map(function(t){return t.x}).reverse())},a.prototype._ys=function(){return this.__upperLine.map(function(t){return t.y}).concat(this.__lowerLine.map(function(t){return t.y}).reverse())},a.prototype.upperXs=function(){return this.__upperLine.map(function(t){return t.x})},a.prototype.upperYs=function(){return this.__upperLine.map(function(t){return t.y})},a.prototype.lowerXs=function(){return this.__lowerLine.map(function(t){return t.x})},a.prototype.lowerYs=function(){return this.__lowerLine.map(function(t){return t.y})},a.prototype._lowerLine=function(){return this.__lowerLine},a.prototype._upperLine=function(){return this.__upperLine},a.prototype.clone=function(){for(var t=[],e=0,i=this._lowerLine();e<i.length;e++){var n=i[e];t.push(n.clone())}for(var o=[],r=0,s=this._upperLine();r<s.length;r++){n=s[r];o.push(n.clone())}return new a(t,o)},a.prototype._equals=function(t){if(this==t)return!0;if(t instanceof a){if(this._lowerLine().length==t._lowerLine().length)for(var e=0;e<this._lowerLine().length;e++)if(!this._lowerLine()[e].equals(t._lowerLine()[e]))return!1;if(this._upperLine().length==t._upperLine().length)for(e=0;e<this._upperLine().length;e++)if(!this._upperLine()[e].equals(t._upperLine()[e]))return!1;return!0}return!1},a}(t._BaseShape);t._AreaShape=e}(dv||(dv={})),function(t){"use strict";var e=function(o){function t(t,e,i){void 0===i&&(i=null);var n=o.call(this,t,e)||this;return n.__data=i,n}return __extends(t,o),t.prototype._data=function(){return this.__data},t}(t._AreaShape);t._AreaShapeAnimation=e}(dv||(dv={})),function(d){"use strict";var t=function(r){function f(t,e,i,n){var o=r.call(this)||this;return o._lowerFromPoints=[],o._lowerToPoints=[],o._upperFromPoints=[],o._upperToPoints=[],o._lowerFromPoints=t,o._lowerToPoints=e,o._upperFromPoints=i,o._upperToPoints=n,o}return __extends(f,r),f.prototype.getAreaShape=function(o){var r=this,t=this._lowerToPoints.map(function(t){return null!=t?t.clone():null}),e=this._upperToPoints.map(function(t){return null!=t?t.clone():null});return new d._AreaShape(t.map(function(t,e){if(e<r._lowerFromPoints.length){var i=(t.x-r._lowerFromPoints[e].x)*o,n=(t.y-r._lowerFromPoints[e].y)*o;t.x=r._lowerFromPoints[e].x+i,t.y=r._lowerFromPoints[e].y+n}return t}),e.map(function(t,e){if(e<r._upperFromPoints.length){var i=(t.x-r._upperFromPoints[e].x)*o,n=(t.y-r._upperFromPoints[e].y)*o;t.x=r._upperFromPoints[e].x+i,t.y=r._upperFromPoints[e].y+n}return t}))},f.analyseShapes=function(h,t){var c=[],p=function(t,e){return t instanceof d.models._XyRangeValuePointData&&e instanceof d.models._XyRangeValuePointData?null!=t&&null!=e&&t._yLowerValue()==e._yLowerValue()&&t._yUpperValue()==e._yUpperValue()&&t.dimension==e.dimension:null!=t&&null!=e&&t.value==e.value&&t.dimension==e.dimension};return t.forEach(function(t){for(var e=0;e<h.length;e++){var i=h[e],n=d._Util.findMaxSameArrayOf(i._data(),t._data(),p);if(null!=n){for(var o=[],r=[],s=[],a=[],l=i._lowerLine().length==i._upperLine().length&&t._lowerLine().length==t._upperLine().length,_=0;_<i._upperLine().length;_++)_<n.arrayStart&&(o.push(i._upperLine()[_]),r.push(t._upperLine()[n.otherStart]));if(l)for(_=0;_<i._lowerLine().length;_++)_<n.arrayStart&&(s.push(i._lowerLine()[_]),a.push(t._lowerLine()[n.otherStart]));for(_=0;_<t._upperLine().length;_++)_<n.otherStart&&(o.push(i._upperLine()[n.arrayStart]),r.push(t._upperLine()[_]));if(l)for(_=0;_<i._lowerLine().length;_++)_<n.otherStart&&(s.push(i._lowerLine()[n.arrayStart]),a.push(t._lowerLine()[_]));for(_=0;_<i._upperLine().length;_++)_>=n.arrayStart&&_<=n.arrayEnd&&o.push(i._upperLine()[_]);if(l)for(_=0;_<i._lowerLine().length;_++)_>=n.arrayStart&&_<=n.arrayEnd&&s.push(i._lowerLine()[_]);for(_=0;_<t._upperLine().length;_++)_>=n.otherStart&&_<=n.otherEnd&&r.push(t._upperLine()[_]);if(l)for(_=0;_<t._lowerLine().length;_++)_>=n.otherStart&&_<=n.otherEnd&&a.push(t._lowerLine()[_]);for(_=0;_<t._upperLine().length;_++)_>n.otherEnd&&(o.push(i._upperLine()[n.arrayEnd]),r.push(t._upperLine()[_]));if(l)for(_=0;_<t._lowerLine().length;_++)_>n.otherEnd&&(s.push(i._lowerLine()[n.arrayEnd]),a.push(t._lowerLine()[_]));for(_=0;_<i._upperLine().length;_++)_>n.arrayEnd&&(o.push(i._upperLine()[_]),r.push(t._upperLine()[n.otherEnd]));if(l)for(_=0;_<i._lowerLine().length;_++)_>n.arrayEnd&&(s.push(i._lowerLine()[_]),a.push(t._lowerLine()[n.otherEnd]));l||(s=i._lowerLine(),a=t._lowerLine());var u=new f(s,a,o,r);c.push(u);break}}}),c},f}(d._ShapeAnimationBuilder);d._AreaShapeAnimationBuilder=t}(dv||(dv={})),function(h){"use strict";var t=function(){function t(t){this.__points=[new h.core.Point(-Number.MAX_VALUE,t),new h.core.Point(Number.MAX_VALUE,t)]}return t.prototype._points=function(){return this.__points},t.prototype._takeSegment=function(s,a){var l=this._points(),_=[],u=!1;return l.forEach(function(t,e){if(u);else if(t.x<s);else if(t.x==s){var i=null;e<l.length-1&&(i=l[e+1]),(null==i||i.x>s)&&_.push(t.clone())}else if(s<t.x&&t.x<a){if(_.length<=0){var n=null;0<e&&(n=l[e-1]),null!=n&&n.x<s?_.push(new h.core.Point(s,(t.y-n.y)/(t.x-n.x)*(s-n.x)+n.y)):h._assertDebug(function(){return 0<l.length})}_.push(t.clone())}else if(t.x==a){if(_.length<=0){var o=null;0<e&&(o=l[e-1]),null!=o&&o.x<s?_.push(new h.core.Point(s,(t.y-o.y)/(t.x-o.x)*(s-o.x)+o.y)):h._assertDebug(function(){return 0<l.length})}n=null;0<e&&(n=l[e-1]),(null==n||n.x<a)&&(_.push(t.clone()),u=!0)}else if(a<t.x){if(_.length<=0){var r=null;0<e&&(r=l[e-1]),null!=r&&r.x<s?_.push(new h.core.Point(s,(t.y-r.y)/(t.x-r.x)*(s-r.x)+r.y)):h._assertDebug(function(){return 0<l.length})}n=null;0<e&&(n=l[e-1]),null!=n&&n.x<a?(_.push(new h.core.Point(a,(t.y-n.y)/(t.x-n.x)*(a-n.x)+n.y)),u=!0):h._assertDebug(function(){return 0<l.length})}}),_},t.prototype._mergeSegment=function(o){if(!(o.length<=0)){var r=[],s=this._points(),a=!1,l=!0,_=o[0],u=o[o.length-1];s.forEach(function(t,e){if(t.x<_.x)r.push(t.clone());else if(t.x==_.x)a||(t.y!=_.y&&r.push(t.clone()),r.push.apply(r,o),a=!0);else if(!a&&_.x<t.x){var i=null;0<e&&(i=s[e-1]),null!=i&&i.x<_.x&&r.push(new h.core.Point(_.x,(t.y-i.y)/(t.x-i.x)*(_.x-i.x)+i.y)),r.push.apply(r,o),a=!0}if(a&&t.x==u.x){if(l){var n=null;e<s.length-1&&(n=s[e+1]),null!=n&&n.x!=u.x&&(t.y!=u.y&&r.push(t.clone()),l=!1)}}else if(a&&u.x<t.x){if(l){i=null;0<e&&(i=s[e-1]),null!=i&&i.x<u.x&&r.push(new h.core.Point(u.x,(t.y-i.y)/(t.x-i.x)*(u.x-i.x)+i.y)),l=!1}r.push(t.clone())}}),this.__points=r}},t}();h._BaseLine=t}(dv||(dv={})),function(l){"use strict";var t=function(n){function t(t,e){var i=n.call(this)||this;return i.rect=t.clone(),i.swapAxes=e,i.from=1,i.to=1.05,i}return __extends(t,n),t.prototype.onStartAniamtion=function(t,e){n.prototype.onStartAniamtion.call(this,t,e)},t.prototype.onEndAnimation=function(t,e){n.prototype.onEndAnimation.call(this,t,e),this.fillAfter||null!=this.rect&&e._rectangle(this.rect.clone())},t.prototype.applyTransformation=function(t,e,i){if(this.keyframesType===l.AnimationKeyFramesType.Percentage){var n=this.from+(this.to-this.from)*t,o=this.rect.clone();this.swapAxes?(i._rectangle().top=o.top+(1-n)*o.height/2,i._rectangle().height=n*o.height):(i._rectangle().left=o.left+(1-n)*o.width/2,i._rectangle().width=n*o.width)}else{o=this.rect;var r=this.from+(this.to-this.from)*t;if(this.swapAxes){var s=this.rect.height+r;i._rectangle().top=o.top-(s-o.height)/2,i._rectangle().height=s}else{var a=this.rect.width+r;i._rectangle().left=o.left-(a-o.width)/2,i._rectangle().width=a}}},t}(l.Animation);l._BarHoverAnimation=t}(dv||(dv={})),function(o){"use strict";var t=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return __extends(e,t),e.prototype.render=function(t,e,i){var n=e.width<e.height?e.width:e.height;t.beginTransform(),o._applyFillColor(t,this.color),o._applyStrokeColor(t,this.color),o._applyDataPointStyle(t,new o.options._DataPointStyleOption({strokeWidth:1})),o._applyDataPointStyle(t,this._style()),t.drawRect((e.right+e.left)/2-n/2,e.top,n,n),t.restoreTransform()},e}(o.models._LegendSymbol);o._BarLegendSymbol=t}(dv||(dv={})),function(i){"use strict";var t=function(r){function t(t,e,i,n){var o=r.call(this)||this;return o.__start=t,o.__end=e,o.__startView=i,o.__endView=n,o}return __extends(t,r),t.prototype._start=function(){return this.__start},t.prototype._end=function(){return this.__end},t.prototype._startView=function(){return this.__startView},t.prototype._endView=function(){return this.__endView},t.prototype._renderContent=function(t,e){t.drawLine(this._start().x,this._start().y,this._end().x,this._end().y,null,{stroke:i.__Constant_Core_Bar_Lines_Color,strokeWidth:1})},t}(i._View);i._BarLineView=t}(dv||(dv={})),function(t){"use strict";var e=function(o){function t(t,e,i){var n=o.call(this)||this;return n.rect=t.clone(),n.swapAxes=e,n.reversed=i,n}return __extends(t,o),t.prototype.onStartAniamtion=function(t,e){o.prototype.onStartAniamtion.call(this,t,e)},t.prototype.onEndAnimation=function(t,e){o.prototype.onEndAnimation.call(this,t,e),e._rectangle(this.rect.clone())},t.prototype.applyTransformation=function(t,e,i){var n=this.from+(this.to-this.from)*t,o=this.rect.clone();this.swapAxes?(this.reversed&&(o.left=this.rect.left+(this.rect.width-this.rect.width*n)),o.width=this.rect.width*n):(this.reversed||(o.top=this.rect.top+this.rect.height-this.rect.height*n),o.height=this.rect.height*n),i._rectangle(o)},t}(t.Animation);t._BarLoadAnimation=e}(dv||(dv={})),function(c){"use strict";var t=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return __extends(e,t),e.prototype._stack=function(t){for(var e={},i={},n=0,o=t;n<o.length;n++)for(var r=0,s=o[n]._points();r<s.length;r++){var a=s[r];if(!a._filtered()){var l=a._dimensionValue()._index();if(a instanceof c.models._XyValuePointData){a._resetLayout();var _=a._yValue();if(null==_||isNaN(_));else if(0<=_){null!=(u=e[l])&&a._yPreviousValue(u),null==e[l]?e[l]=_:e[l]+=_,a._yValue(e[l])}else{null!=(u=i[l])&&a._yPreviousValue(u),null==i[l]?i[l]=_:i[l]+=_,a._yValue(i[l])}}else if(a instanceof c.models._XyRangeValuePointData){a._resetLayout();var u,h=null;if(null==a._yLowerValue()&&null==a._yUpperValue())continue;if(0<=(h=a._yLowerValue()<0&&a._yUpperValue()<0?a._yLowerValue()-a._yUpperValue():a._yUpperValue()-a._yLowerValue()))null!=(u=e[l])&&a._yLowerValue(u),null==e[l]?e[l]=a._yLowerValue()+h:e[l]+=h,a._yUpperValue(e[l]);else null!=(u=i[l])&&a._yUpperValue(u),null==i[l]?i[l]=a._yUpperValue()+h:i[l]+=h,a._yLowerValue(e[l])}}}},e}(c.models._CartesianPlotLayout);c._BarPlotLayout=t}(dv||(dv={})),function(G){"use strict";var n=function(s){function t(){var t=null!==s&&s.apply(this,arguments)||this;return t.__barIndexInCluster=0,t}return __extends(t,s),t.prototype._data=function(){return s.prototype._data.call(this)},t.prototype._symbols=function(){return!1},t.prototype._legendSymbol=function(){return new G._BarLegendSymbol},t.prototype._offset=function(){return this._option().config.offset},t.prototype._barLines=function(){return this._option().config.barLines},t.prototype._barWidth=function(){var t=NaN;return null==(t=isNaN(this._layoutView()._plotAreaView()._dvView()._option().bar.width)?Math.max(this._barBottom(),this._barTop()):Math.max(this._layoutView()._plotAreaView()._dvView()._option().bar.width,Math.max(this._barBottom(),this._barTop())))?.7:(1<t&&(t=1),t<0&&(t=0),t)},t.prototype._barBottom=function(){var t=NaN;return null==(t=isNaN(this._layoutView()._plotAreaView()._dvView()._option().bar.bottomWidth)?this._layoutView()._plotAreaView()._dvView()._option().bar.width:this._layoutView()._plotAreaView()._dvView()._option().bar.bottomWidth)?.7:(1<t&&(t=1),t<0&&(t=0),t)},t.prototype._barTop=function(){var t=NaN;return null==(t=isNaN(this._layoutView()._plotAreaView()._dvView()._option().bar.topWidth)?this._layoutView()._plotAreaView()._dvView()._option().bar.width:this._layoutView()._plotAreaView()._dvView()._option().bar.topWidth)?.7:(1<t&&(t=1),t<0&&(t=0),t)},t.prototype._barOverlap=function(){var t=this._layoutView()._plotAreaView()._dvView()._option().bar.overlap;return null==t?0:(1<t&&(t=1),t<-1&&(t=-1),t)},t.prototype._clusterCount=function(){for(var t=[],i=0,e=function(e){if(e._valueDefinition()._excludeNulls()&&e._isNulls())return"continue";t.some(function(t){return e._valueDefinition()._equals(t)})?null!=e._detailDimension()&&e._detailDimension()._definition()._group()!=G.Group.Cluster||i++:(t.push(e._valueDefinition()),i++)},n=0,o=this._data()._seriesList();n<o.length;n++){e(o[n])}return i},t.prototype._loadData=function(t){s.prototype._loadData.call(this,t)},t.prototype._createXSite=function(t,e){var i=this._data();if(null!=i._categoriedDimensionDefinition())return s.prototype._createXSite.call(this,t,.5);var n=i._xFieldDefinition();if(null!=n){var o=n._field();if(this._axisMode()!=G.AxisMode.Polygonal&&this._axisMode()!=G.AxisMode.Radial||!this._swapAxes()){if(o instanceof G.models._NumberFieldInfo||o instanceof G.models._DateFieldInfo){var r=this._minDistanceInDimensionValues();return new a(n,null==r?.5:.5*r)}return new a(n,e)}s.prototype._createXSite.call(this,t,e)}return s.prototype._createXSite.call(this,t,.5)},t.prototype._layout=function(t,e,i){s.prototype._layout.call(this,t,e,i);for(var n=0,o=this.__labels;n<o.length;n++){o[n]._layout(t,e,i)}var r=(e=this._rectangle()).width<e.height?e.width/2:e.height/2;this.__labels=G.__SmartLabelManager.arountCircle(this.__labels,r,this._cx(),this._cy())},t.prototype._layoutAnimationViews=function(t){return s.prototype._layoutAnimationViews.call(this,t)},t.prototype._layoutStack=function(){var t=!1,e=this._getAxisY();if(null!=e.scale&&e.scale.type==G.ValueScaleType.Percentage&&(t=!0),(new G._BarPlotLayout)._layout(this._data(),t),t){var i=this.ySite;null!=i&&i instanceof G.models._YSiteModel&&(0<i.min&&(i.__min=0),i.max<0&&(i.__max=0))}},t.prototype._createData=function(t){return new e(this,t,this._option())},t.prototype._createSeriesView=function(){return null},t.prototype._layoutSeriesList=function(t,e,i){this._children.length=0;for(var r=this.__barIndexInCluster-1,s=[],a=[],l={},n=function(e){if(e._valueDefinition()._excludeNulls()&&e._isNulls())return"continue";s.some(function(t){return e._valueDefinition()._equals(t)})?null!=e._detailDimension()&&e._detailDimension()._definition()._group()!=G.Group.Cluster||r++:(s.push(e._valueDefinition()),r++),null!=e&&0<e._points().length&&o.addStackedValues(e._points(),r,l)},o=this,_=0,u=this._data()._seriesList();_<u.length;_++){n(u[_])}r=this.__barIndexInCluster-1,s=[];for(var h=function(e){if(e._valueDefinition()._excludeNulls()&&e._isNulls())return"continue";if(s.some(function(t){return e._valueDefinition()._equals(t)})?null!=e._detailDimension()&&e._detailDimension()._definition()._group()!=G.Group.Cluster||r++:(s.push(e._valueDefinition()),r++),null!=e&&0<e._points().length)for(var t=0;t<e._points().length;t++){var i=e._points()[t],n=i._dimensionValue()._index();if(0!=i._items().length){var o=c.createDataViewModel(i,n,r,l[n][r]);o.isSeriesEnd=t==e._points().length-1,a.push(o),null!=o.view&&(c._children.push(o.view),o.isAdd2PlotView&&c._pointViews().push(o.view)),o.isSeriesEnd&&(c._option().config.axisMode!=G.AxisMode.Polygonal&&c._option().config.axisMode!=G.AxisMode.Radial||c._pointViews().sort(function(t,e){return null!=t._dataLabelView()&&null!=e._dataLabelView()?t._sweep()-e._sweep():0}))}}},c=this,p=0,f=this._data()._seriesList();p<f.length;p++){h(f[p])}if(this._barLines())for(var d=0;d<a.length-1;d++){var g=a[d],y=a[d].view,m=null==a[d+1]?null:a[d+1].view;if(!g.isSeriesEnd)if((y instanceof G._BarPointView||y instanceof G._FunnelPointView)&&(m instanceof G._BarPointView||m instanceof G._FunnelPointView)){var v=new G._BarLineView(g.boundaryPoints[1],a[d+1].boundaryPoints[0],y,m);this._children.push(v)}else if(y instanceof G._RadialBarPointView&&m instanceof G._RadialBarPointView){var w=Math.cos(y._startAngle()+y._sweep())*y._radius()+y._center().x,b=Math.sin(y._startAngle()+y._sweep())*y._radius()+y._center().y,x=Math.cos(m._startAngle()+m._sweep())*m._innerRadius()+m._center().x,S=Math.sin(m._startAngle()+m._sweep())*m._innerRadius()+m._center().y;v=new G._BarLineView(new G.core.Point(w,b),new G.core.Point(x,S),y,m);this._children.push(v)}}},t.prototype.addStackedValues=function(t,e,i){for(var n=0;n<t.length;n++){var o=t[n],r=o._dimensionValue()._index();null==i[r]&&(i[r]={}),null==i[r][e]&&(i[r][e]=[]),o instanceof G.models._XyValuePointData?i[r][e].push(o._yValue()):o instanceof G.models._XyRangeValuePointData&&i[r][e].push(o._yUpperValue()-o._yLowerValue())}},t.prototype.createDataViewModel=function(t,e,i,n){var o={dataPoint:t,view:null,boundaryPoints:[],isAdd2PlotView:!1,isSeriesEnd:!1},r=this._option().config.text,s=W._barExtension(this._layoutView()._coordinateSystemView(this._coordinateSystemType())),a=this.getwidth(s);if(a){var l=a.width,_=a.radialwidth,u=this._layoutView()._plotAreaView()._dvView()._option().bar,h=this._minDistanceInDimensionValues(),c=0;if(1<s._clusterCount())if(null==h){var p=(1*this._barWidth()-l*s._clusterCount())/(s._clusterCount()-1);c=.5*(l-1*this._barWidth())+(l+p)*i}else{p=(h*this._barWidth()-l*s._clusterCount())/(s._clusterCount()-1);c=.5*(l-h*this._barWidth())+(l+p)*i}var f=this._getAxisXValue(t._dimensionValue()),d=isNaN(this._offset())?0:this._offset();d=isNaN(t.offset)?d:t.offset;var g=u.neckHeight,y=NaN,m=NaN,v=!1;this._option().config.axisMode==G.AxisMode.Polygonal||this._option().config.axisMode==G.AxisMode.Radial?(y=f+c-.5*_,m=f+c+.5*(l-(_-l)),v=!0):(y=f+c-.5*l,m=f+c+.5*l);var w=this.createFunnel(t,y,m,g,this._barWidth(),v?1:this._barBottom()/this._barWidth(),v?1:this._barTop()/this._barWidth(),n);if(null!=w){for(var b=[],x=[],S=0,P=w;S<P.length;S++){var V=P[S];b.push(V.x),x.push(V.y)}var C=null,A=Math.min(Math.min(w[0].x,w[1].x),Math.min(w[2].x,w[3].x)),D=Math.max(Math.max(w[0].x,w[1].x),Math.max(w[2].x,w[3].x)),T=Math.min(Math.min(w[0].y,w[1].y),Math.min(w[2].y,w[3].y)),L=Math.max(Math.max(w[0].y,w[1].y),Math.max(w[2].y,w[3].y)),O=D-A,M=L-T;if(this._swapAxes()&&!v?M<1&&(M=1):O<1&&(O=1),!(null==A||null==D||null==T||null==L||isNaN(A)||isNaN(D)||isNaN(T)||isNaN(L)))if(v){var k=this._cx()+d*Math.cos(T+M/2)*O,R=this._cy()+d*Math.sin(T+M/2)*O;if((C=new G._RadialBarPointView(t,new G.core.Point(k,R),A+O,A,T,M,this)).refresh(),o.view=C,o.isAdd2PlotView=r.position!=G.TextPosition.Smart,!o.isAdd2PlotView){var N=null,E=G.plugins._Plugins._dataContentProvider("Default");if(null!=E&&(N=E.toLines(t._dataLabelContentSite())),null!=N&&0<N.length){var I=C._startAngle()+C._sweep()/2,F=this._rectangle(),j=(F.width<F.height?F.width/2:F.height/2)+(isNaN(r.offset)?0:r.offset),z=k+Math.cos(I)*C._radius(),B=R+Math.sin(I)*C._radius(),H=new G._RadialLable(this._cx(),this._cy(),I,j,z,B,N,this);this.__labels.push(H)}}}else isNaN(u.topWidth)&&isNaN(u.bottomWidth)||this._barBottom()==this._barTop()?((C=new G._BarPointView(t,this))._rectangle(new G.core.Rect(A,T,O,M)),C.refresh(),G._Util.translateRect(C._rectangle(),d*(this._swapAxes()?0:C._rectangle().width),d*(this._swapAxes()?C._rectangle().height:0)),this._swapAxes()?o.boundaryPoints.push(new G.core.Point(C._rectangle().right,C._rectangle().bottom),new G.core.Point(C._rectangle().right,C._rectangle().top)):o.boundaryPoints.push(C._rectangle().location,new G.core.Point(C._rectangle().right,C._rectangle().top))):(C=new G._FunnelPointView(t,b,x,this),this._swapAxes()?o.boundaryPoints.push(w[2],w[1]):o.boundaryPoints.push(w[0],w[1])),o.view=C,o.isAdd2PlotView=!0}return o}},t.prototype._resetClusterCount=function(t){return(this.__barIndexInCluster=t)+this._clusterCount()},t.prototype.getwidth=function(t,e){if(null!=t&&t._resetClusterCount(),!(null==this._data()._seriesList()||this._data()._seriesList().length<=0)){isNaN(e)&&(e=this._barWidth());var i=this._minDistanceInDimensionValues();if(null==i){var n=e/t._clusterCount(),o=1/t._clusterCount();return 0<this._barOverlap()?(n+=n*(t._clusterCount()-1)*this._barOverlap(),o+=o*(t._clusterCount()-1)*this._barOverlap()):this._barOverlap()<0&&(n+=n*this._barOverlap()*.5,o+=o*this._barOverlap()*.5),{width:n,radialwidth:o}}n=i*e/t._clusterCount(),o=i/t._clusterCount();return 0<this._barOverlap()?(n+=n*(t._clusterCount()-1)*this._barOverlap(),o+=o*(t._clusterCount()-1)*this._barOverlap()):this._barOverlap()<0&&(n+=n*this._barOverlap()*.5,o+=o*this._barOverlap()*.5),{width:n,radialwidth:o}}},t.prototype._initAxis=function(t,e){s.prototype._initAxis.call(this,t,e);var i=W._barExtension(this._layoutView()._coordinateSystemView(this._coordinateSystemType())),n=this.getwidth(i);if(n){var o=n.width,r=n.radialwidth;if((this._option().config.axisMode==G.AxisMode.Polygonal||this._option().config.axisMode==G.AxisMode.Radial)&&!this._swapAxes())this._getAxisX()._radiusOffset((o-r)/2)}},t.prototype._renderContent=function(t,e){s.prototype._renderContent.call(this,t,e);for(var i=0,n=this.__labels;i<n.length;i++){n[i]._render(t,e)}},t.prototype._getAxisXValue=function(t){if(this._getAxisX()._option().scale.type==G.ValueScaleType.Ordinal||null!=this._data()._categoriedDimensionDefinition())return t._index();var e=t._value();return"string"==typeof e?t._index():"boolean"==typeof e?t._index():"number"==typeof e?e:e instanceof Date?e.valueOf():null},t.prototype.createFunnel=function(t,e,i,n,o,r,s,a){var l=this._getAxisX(),_=this._getAxisY(),u=this._swapAxes()?_:l,h=this._swapAxes()?l:_,c=this.getValues(t,h),p=this.getValueRange(t,h,c.y2>=c.y1?Math.max.apply(null,a):Math.min.apply(null,a));if(null==p.bottom||null==p.top||isNaN(p.bottom)||isNaN(p.top))return null;var f=u._scale().value(e),d=u._scale().value(i),g=f+(d-f)/2,y=d-f,m=isNaN(r)?y:y*r,v=isNaN(s)?y:y*s,w=(p.top-p.bottom)*n+p.bottom,b=h._scale().value(w),x=this.getOffsetsByValue(p.bottom,w,p.top,c.y1,h,m,v),S=this.getOffsetsByValue(p.bottom,w,p.top,c.y2,h,m,v),P=h._scale().value(c.y1),V=h._scale().value(c.y2);if(null==P||null==V||isNaN(P)||isNaN(V))return null;var C=g+x[0],A=g+x[1],D=g+S[0],T=g+S[1],L=w>Math.min(c.y1,c.y2)&&w<Math.max(c.y1,c.y2),O=[];return this._swapAxes()?(O.push(new G.core.Point(V,D)),O.push(new G.core.Point(V,T)),L&&O.push(new G.core.Point(b,A)),O.push(new G.core.Point(P,A)),O.push(new G.core.Point(P,C)),L&&O.push(new G.core.Point(b,C))):(O.push(new G.core.Point(D,V)),O.push(new G.core.Point(T,V)),L&&O.push(new G.core.Point(A,b)),O.push(new G.core.Point(A,P)),O.push(new G.core.Point(C,P)),L&&O.push(new G.core.Point(C,b))),O},t.prototype.getOffsetsByValue=function(t,e,i,n,o,r,s){var a=[],l=NaN;return l=n>Math.min(e,i)&&n<Math.max(e,i)?(s-r)/(i-e)*(n-e)+r:Math.abs(n-e)<=Math.abs(n-i)?r:s,a.push(0-l/2),a.push(l/2),a},t.prototype.getValueRange=function(t,e,i){var n={top:NaN,bottom:NaN};return t instanceof G.models._XyValuePointData?(isNaN(i)?n.top=t._yValue():n.top=i,e._scale().max()<0?n.bottom=e._scale().max():0<e._scale().min()?n.bottom=e._scale().min():n.bottom=0):t instanceof G.models._XyRangeValuePointData&&(n.top=e._option().reversed?t._yLowerValue():t._yUpperValue(),n.bottom=e._option().reversed?t._yUpperValue():t._yLowerValue()),n},t.prototype.getValues=function(t,e){var i={y1:NaN,y2:NaN};return t instanceof G.models._XyValuePointData?(null==t._yPreviousValue()||isNaN(t._yPreviousValue())?e._scale().max()<0?i.y1=e._scale().max():0<e._scale().min()?i.y1=e._scale().min():i.y1=0:i.y1=t._yPreviousValue(),i.y2=t._yValue()):t instanceof G.models._XyRangeValuePointData&&(i.y1=t._yLowerValue(),i.y2=t._yUpperValue()),i},t}(G._CartesianPlotView);G._BarPlotView=n;var W=function(){function i(t){this.__clusterCount=0,this.__ownerView=t}return i._barExtension=function(t){if(null==t)return null;var e=t._barExtension;return null==e&&(t._barExtension=e=new i(t)),e},i.prototype._clusterCount=function(){return this.__clusterCount},i.prototype._resetClusterCount=function(){for(var t=this.__clusterCount=0,e=this.__ownerView._plotViews();t<e.length;t++){var i=e[t];i instanceof n&&(this.__clusterCount=i._resetClusterCount(this.__clusterCount))}},i}(),e=function(n){function t(t,e,i){return n.call(this,t,e,i)||this}return __extends(t,n),t.prototype._createSeries=function(t,e,i,n){return e instanceof G.models._AggregateCartesianValueDefinition?new G.models._XyValueSeriesData(this,e,i,n,t):e instanceof G.models._AggregateNumberRangeCartesianValueDefinition?new G.models._XyRangeValueSeriesData(this,e,i,n,t):e instanceof G.models._AggregateDateRangeCartesianValueDefinition?new G.models._XyRangeValueSeriesData(this,e,i,n,t):null},t}(G.models._CartesianPlotData);G._BarPlot=e;var a=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return __extends(e,t),e.prototype.padding=function(){return this.isOrdinal?.5:t.prototype.padding.call(this)},e}(G.models._XSiteModel)}(dv||(dv={})),function(r){"use strict";var t=function(i){function t(t,e){return i.call(this,t,e)||this}return __extends(t,i),t.prototype._plotView=function(){return i.prototype._plotView.call(this)},t.prototype.refresh=function(){var t=r._Util.createPtsFromRect(this._rectangle(),200);this._xs(t.xs),this._ys(t.ys)},t.prototype._renderContent=function(t,e){var i=this._calculateColor(),n=this._data();if(t.beginTransform(),r._applyDataPointStyle(t,this._defaultStyle()),t.fill=i,t.stroke=i,null!=this._data()._series()._gradientColorScale()&&this._data()instanceof r.models._XyRangeValuePointData){var o=this._data();t.fill=new r.models.LinearGradientColor(180,this._data()._series()._gradientColorScale()._getAreaGradientArray(o._yLowerValue(),o._yUpperValue()))}r._applyGStyle(t,this._plotView()._plotAreaView()._dvView()._option().style),r._applyDataPointStyle(t,n._series()._style()),r._applyDataPointStyle(t,n._style()),e.hasSelectionInPlotArea&&(n._selected()?(r._applyDataPointStyle(t,this._plotView()._plotAreaView()._dvView()._option().selectedStyle),r._applyDataPointStyle(t,this._plotView()._option().config.selectedStyle),e.apiSelectedStyle&&r._applyDataPointStyle(t,e.apiSelectedStyle)):(r._applyDataPointStyle(t,this._plotView()._plotAreaView()._dvView()._option().unselectedStyle),r._applyDataPointStyle(t,this._plotView()._option().config.unselectedStyle))),this._hover()&&r._applyDataPointStyle(t,this._plotView()._option().config.hoverStyle),this.__animation instanceof r._PointComparedAnimation&&null!=this._xs()&&null!=this._ys()?t.drawPolygon(this._xs(),this._ys()):t.drawRect(this._rectangle().left,this._rectangle().top,this._rectangle().width,this._rectangle().height),t.restoreTransform()},t.prototype._createDataLabelView=function(){var t=[],e=r.plugins._Plugins._dataContentProvider("Default");return null!=e&&(t=e.toLines(this._data()._dataLabelContentSite())),null!=t&&0<t.length?new r._CartesianBarDataLabelView(this,t):null},t.prototype._createHoverAnimation=function(t){if(null==t)return null;var e=new r._BarHoverAnimation(this._rectangle(),this._plotView()._swapAxes());return e.duration=t.duration,null!=t.scale&&("number"==typeof t.scale?(e.keyframesType=r.AnimationKeyFramesType.Percentage,e.from=1,e.to=t.scale):(e.keyframesType=r.AnimationKeyFramesType.Pixel,e.from=0,e.to=r.core._Parser._parseCssPixel(t.scale))),e.fillAfter=!0,e},t.prototype._applyStyle=function(t,e){if(null!=e){var i;if(null!=e.fill&&(t.fill=r._fillColorFromOption(e.fill)),null!=e.opacity&&"string"==typeof t.fill&&"none"!=t.fill&&"transparent"!=t.fill)(i=r.core._Color.fromCss(t.fill)).alpha=i.alpha*e.opacity,t.fill=i.toCss();if(null!=e.stroke&&(t.stroke=r._fillColorFromOption(e.stroke)),null!=e.strokeOpacity&&"string"==typeof t.stroke&&"none"!=t.stroke&&"transparent"!=t.stroke)(i=r.core._Color.fromCss(t.stroke)).alpha=i.alpha*e.strokeOpacity,t.stroke=i.toCss();null!=e.strokeWidth&&(t.strokeWidth=e.strokeWidth),null!=e.strokeDasharray&&(t.strokeDasharray=e.strokeDasharray)}},t}(r._CartesianPointView);r._BarPointView=t}(dv||(dv={})),function(t){"use strict";var e=function(n){function t(t,e){return n.call(this,t,e)||this}return __extends(t,n),t.prototype._layout=function(t,e,i){n.prototype._layout.call(this,t,e,i)},t}(t._CartesianSeriesView);t._BarSeriesView=e}(dv||(dv={})),function(f){"use strict";var t=function(i){function t(t,e){return i.call(this,t,e)||this}return __extends(t,i),t.prototype._startPoint=function(){return this.__startPoint},t.prototype._endPoint=function(){return this.__endPoint},t.prototype._pointView=function(){return i.prototype._pointView.call(this)},t.prototype._layout=function(t,e,i){var n=this._pointView(),o=n._plotView(),r=!0,s=n._data();s instanceof f.models._XyValuePointData?s._yValue()<0&&(r=!1):s instanceof f.models._XyRangeValuePointData&&s._yUpperValue()<0&&(r=!1);var a=f.TextPosition.Auto;null!=o._option().config.text.position&&(a=o._option().config.text.position);var l=f.Position.None;o._swapAxes()?r?a==f.TextPosition.Center||(l=n._reversed()?f.Position.Left:f.Position.Right):a==f.TextPosition.Center||(l=n._reversed()?f.Position.Right:f.Position.Left):r?a==f.TextPosition.Center||(l=n._reversed()?f.Position.Bottom:f.Position.Top):a==f.TextPosition.Center||(l=n._reversed()?f.Position.Top:f.Position.Bottom),e=n._rectangle();var _=o._layoutView()._dataLabelsRectangle(),u=this._measure(t,new f.core.Size(Number.MAX_VALUE,Number.MAX_VALUE)),h=o._option().config.text.offset,c=e.center.clone(),p=null;l==f.Position.Top?(c.y=e.top,p=c.clone(),a==f.TextPosition.Inside?(null!=h&&(p.y+=h),p.y+u.height>_.bottom&&(p.y=_.bottom-u.height),this._rotatedRectangle(new f.models._RotatedRectangle(p.x,p.y+u.height/2,u.width,u.height,0))):(null!=h&&(p.y-=h),p.y-u.height<_.top&&(p.y=_.top+u.height),this._rotatedRectangle(new f.models._RotatedRectangle(p.x,p.y-u.height/2,u.width,u.height,0)))):l==f.Position.Bottom?(c.y=e.bottom,p=c.clone(),a==f.TextPosition.Inside?(null!=h&&(p.y-=h),p.y-u.height<_.top&&(p.y=_.top+u.height),this._rotatedRectangle(new f.models._RotatedRectangle(p.x,p.y-u.height/2,u.width,u.height,0))):(null!=h&&(p.y+=h),p.y+u.height>_.bottom&&(p.y=_.bottom-u.height),this._rotatedRectangle(new f.models._RotatedRectangle(p.x,p.y+u.height/2,u.width,u.height,0)))):l==f.Position.Left?(c.x=e.left,p=c.clone(),a==f.TextPosition.Inside?(null!=h&&(p.x+=h),p.x+u.width>_.right&&(p.x=_.right-u.width),this._rotatedRectangle(new f.models._RotatedRectangle(p.x+u.width/2,p.y,u.width,u.height,0))):(null!=h&&(p.x-=h),p.x-u.width<_.left&&(p.x=_.left+u.width),this._rotatedRectangle(new f.models._RotatedRectangle(p.x-u.width/2,p.y,u.width,u.height,0)))):l==f.Position.Right?(c.x=e.right,p=c.clone(),a==f.TextPosition.Inside?(null!=h&&(p.x-=h),p.x-u.width<_.left&&(p.x=_.left+u.width),this._rotatedRectangle(new f.models._RotatedRectangle(p.x-u.width/2,p.y,u.width,u.height,0))):(null!=h&&(p.x+=h),p.x+u.width>_.right&&(p.x=_.right-u.width),this._rotatedRectangle(new f.models._RotatedRectangle(p.x+u.width/2,p.y,u.width,u.height,0)))):(p=c.clone(),this._rotatedRectangle(new f.models._RotatedRectangle(p.x,p.y,u.width,u.height,0)),p.x+u.width/2>_.right&&this._rotatedRectangle(new f.models._RotatedRectangle(_.right-u.width/2,p.y,u.width,u.height,0)),p.x-u.width/2<_.left&&this._rotatedRectangle(new f.models._RotatedRectangle(_.left+u.width/2,p.y,u.width,u.height,0))),this.__startPoint=c,this.__endPoint=p},t}(f._DataLabelView);f._CartesianBarDataLabelView=t}(dv||(dv={})),function(f){"use strict";var t=function(i){function t(t,e){return i.call(this,t,e)||this}return __extends(t,i),t.prototype._startPoint=function(){return this.__startPoint},t.prototype._endPoint=function(){return this.__endPoint},t.prototype._pointView=function(){return i.prototype._pointView.call(this)},t.prototype._layout=function(t,e,i){var n=this._pointView(),o=n._plotView(),r=!0,s=n._data();s instanceof f.models._XyValuePointData?s._yValue()<0&&(r=!1):s instanceof f.models._XyRangeValuePointData&&s._yUpperValue()<0&&(r=!1);var a=f.TextPosition.Auto;null!=o._option().config.text.position&&(a=o._option().config.text.position);var l=f.Position.None;o._swapAxes()?r?a==f.TextPosition.Center||(l=n._reversed()?f.Position.Left:f.Position.Right):a==f.TextPosition.Center||(l=n._reversed()?f.Position.Right:f.Position.Left):r?a==f.TextPosition.Center||(l=n._reversed()?f.Position.Bottom:f.Position.Top):a==f.TextPosition.Center||(l=n._reversed()?f.Position.Top:f.Position.Bottom),e=n._rectangle();var _=o._layoutView()._dataLabelsRectangle(),u=this._measure(t,new f.core.Size(Number.MAX_VALUE,Number.MAX_VALUE)),h=o._option().config.text.offset,c=e.center.clone(),p=null;l==f.Position.Top?(c.y=e.top,p=c.clone(),a==f.TextPosition.Inside?(null!=h&&(p.y+=h),p.y+u.height>_.bottom&&(p.y=_.bottom-u.height),this._rotatedRectangle(new f.models._RotatedRectangle(p.x,p.y+u.height/2,u.width,u.height,0))):(null!=h&&(p.y-=h),p.y-u.height<_.top&&(p.y=_.top+u.height),this._rotatedRectangle(new f.models._RotatedRectangle(p.x,p.y-u.height/2,u.width,u.height,0)))):l==f.Position.Bottom?(c.y=e.bottom,p=c.clone(),a==f.TextPosition.Inside?(null!=h&&(p.y-=h),p.y-u.height<_.top&&(p.y=_.top+u.height),this._rotatedRectangle(new f.models._RotatedRectangle(p.x,p.y-u.height/2,u.width,u.height,0))):(null!=h&&(p.y+=h),p.y+u.height>_.bottom&&(p.y=_.bottom-u.height),this._rotatedRectangle(new f.models._RotatedRectangle(p.x,p.y+u.height/2,u.width,u.height,0)))):l==f.Position.Left?(c.x=e.left,p=c.clone(),a==f.TextPosition.Inside?(null!=h&&(p.x+=h),p.x+u.width>_.right&&(p.x=_.right-u.width),this._rotatedRectangle(new f.models._RotatedRectangle(p.x+u.width/2,p.y,u.width,u.height,0))):(null!=h&&(p.x-=h),p.x-u.width<_.left&&(p.x=_.left+u.width),this._rotatedRectangle(new f.models._RotatedRectangle(p.x-u.width/2,p.y,u.width,u.height,0)))):l==f.Position.Right?(c.x=e.right,p=c.clone(),a==f.TextPosition.Inside?(null!=h&&(p.x-=h),p.x-u.width<_.left&&(p.x=_.left+u.width),this._rotatedRectangle(new f.models._RotatedRectangle(p.x-u.width/2,p.y,u.width,u.height,0))):(null!=h&&(p.x+=h),p.x+u.width>_.right&&(p.x=_.right-u.width),this._rotatedRectangle(new f.models._RotatedRectangle(p.x+u.width/2,p.y,u.width,u.height,0)))):(p=c.clone(),this._rotatedRectangle(new f.models._RotatedRectangle(p.x,p.y,u.width,u.height,0)),p.x+u.width/2>_.right&&this._rotatedRectangle(new f.models._RotatedRectangle(_.right-u.width/2,p.y,u.width,u.height,0)),p.x-u.width/2<_.left&&this._rotatedRectangle(new f.models._RotatedRectangle(_.left+u.width/2,p.y,u.width,u.height,0))),this.__startPoint=c,this.__endPoint=p},t}(f._DataLabelView);f._FunnelBarDataLabelView=t}(dv||(dv={})),function(s){"use strict";var t=function(i){function t(t){var e=i.call(this)||this;return e.ys=[].concat(t),e.max=Math.max.apply(Math,e.ys),e}return __extends(t,i),t.prototype.onStartAniamtion=function(t,e){i.prototype.onStartAniamtion.call(this,t,e)},t.prototype.onEndAnimation=function(t,e){i.prototype.onEndAnimation.call(this,t,e),e instanceof s._FunnelPointView&&e._ys([].concat(this.ys))},t.prototype.applyTransformation=function(t,e,i){var n=this,o=this.from+(this.to-this.from)*t;if(i instanceof s._FunnelPointView){var r=[].concat(this.ys).map(function(t){return(n.max-t)*(1-o)+t});i._ys(r)}},t}(s.Animation);s._FunnelLoadAnimation=t}(dv||(dv={})),function(a){"use strict";var t=function(e){function t(t){return e.call(this,t)||this}return __extends(t,e),t.prototype._createPoints=function(t){for(var i=[],n=t._xs(),o=t._ys(),e=Math.min(n.length,o.length),r=function(t){var e=new a.core.Point(n[t],o[t]);i.some(function(t){return t.x==e.x&&t.y==e.y})||i.push(e)},s=0;s<e;s++)r(s);return i},t}(a._PointAdorner);a._FunnelPointAdorner=t}(dv||(dv={})),function(s){"use strict";var t=function(r){function t(t,e,i,n){var o=r.call(this,t,n)||this;return o._xs(e),o._ys(i),o._rectangle(new s.core.Rect(Math.min.apply(Math,e),Math.min.apply(Math,i),Math.max.apply(Math,e)-Math.min.apply(Math,e),Math.max.apply(Math,i)-Math.min.apply(Math,i))),o}return __extends(t,r),t.prototype._selectionAdorner=function(){return new s._FunnelPointAdorner(this)},t.prototype._renderContent=function(t,e){var i=this._calculateColor(),n=this._data();if(t.beginTransform(),s._applyDataPointStyle(t,this._defaultStyle()),t.fill=i,t.stroke=i,null!=this._data()._series()._gradientColorScale()&&this._data()instanceof s.models._XyRangeValuePointData){var o=this._data();t.fill=new s.models.LinearGradientColor(180,this._data()._series()._gradientColorScale()._getAreaGradientArray(o._yLowerValue(),o._yUpperValue()))}s._applyGStyle(t,this._plotView()._plotAreaView()._dvView()._option().style),s._applyDataPointStyle(t,n._series()._style()),s._applyDataPointStyle(t,n._style()),e.hasSelectionInPlotArea&&(n._selected()?(s._applyDataPointStyle(t,this._plotView()._plotAreaView()._dvView()._option().selectedStyle),s._applyDataPointStyle(t,this._plotView()._option().config.selectedStyle),e.apiSelectedStyle&&s._applyDataPointStyle(t,e.apiSelectedStyle)):(s._applyDataPointStyle(t,this._plotView()._plotAreaView()._dvView()._option().unselectedStyle),s._applyDataPointStyle(t,this._plotView()._option().config.unselectedStyle))),this._hover()&&s._applyDataPointStyle(t,this._plotView()._option().config.hoverStyle),t.drawPolygon(this._xs(),this._ys()),t.restoreTransform()},t.prototype._createDataLabelView=function(){var t=[],e=s.plugins._Plugins._dataContentProvider("Default");if(null!=e&&(t=e.toLines(this._data()._dataLabelContentSite())),null!=t&&0<t.length){var i=this._xs(),n=this._ys();Math.min.apply(Math,i),Math.min.apply(Math,n),Math.max.apply(Math,i),Math.min.apply(Math,i),Math.max.apply(Math,n),Math.min.apply(Math,n);return new s._FunnelBarDataLabelView(this,t)}return null},t.prototype._applyStyle=function(t,e){if(null!=e){var i;if(null!=e.fill&&(t.fill=s._fillColorFromOption(e.fill)),null!=e.opacity&&"string"==typeof t.fill&&"none"!=t.fill&&"transparent"!=t.fill)(i=s.core._Color.fromCss(t.fill)).alpha=i.alpha*e.opacity,t.fill=i.toCss();if(null!=e.stroke&&(t.stroke=s._fillColorFromOption(e.stroke)),null!=e.strokeOpacity&&"string"==typeof t.stroke&&"none"!=t.stroke&&"transparent"!=t.stroke)(i=s.core._Color.fromCss(t.stroke)).alpha=i.alpha*e.strokeOpacity,t.stroke=i.toCss();null!=e.strokeWidth&&(t.strokeWidth=e.strokeWidth),null!=e.strokeDasharray&&(t.strokeDasharray=e.strokeDasharray)}},t.prototype._hitTest=function(t){return s._Util.IsPointInPolygon2(t,this._xs(),this._ys())?new s.HitTestResult(t,this._data(),this,s.ElementType.DataPoint):r.prototype._hitTest.call(this,t)},t}(s._CartesianPointView);s._FunnelPointView=t}(dv||(dv={})),function(s){"use strict";var t=function(i){function t(t){var e=i.call(this)||this;return e.sweep=t,e}return __extends(t,i),t.prototype.onStartAniamtion=function(t,e){i.prototype.onStartAniamtion.call(this,t,e)},t.prototype.onEndAnimation=function(t,e){i.prototype.onEndAnimation.call(this,t,e),e instanceof s._RadialBarPointView&&e._sweep(this.sweep)},t.prototype.applyTransformation=function(t,e,i){var n=this.from+(this.to-this.from)*t;if(i instanceof s._RadialBarPointView){var o=this.sweep*n;i._sweep(o)}},t}(s.Animation);s._RadialBarSweepLoadAnimation=t;var e=function(n){function t(t,e){var i=n.call(this)||this;return i.innerRadius=e,i.radius=t,i}return __extends(t,n),t.prototype.onStartAniamtion=function(t,e){n.prototype.onStartAniamtion.call(this,t,e)},t.prototype.onEndAnimation=function(t,e){n.prototype.onEndAnimation.call(this,t,e),e instanceof s._RadialBarPointView&&e._radius(this.radius)},t.prototype.applyTransformation=function(t,e,i){var n=this.from+(this.to-this.from)*t;if(i instanceof s._RadialBarPointView){var o=(this.radius-this.innerRadius)*n+this.innerRadius;i._radius(o)}},t}(s.Animation);s._RadialBarRadiusLoadAnimation=e;var i=function(o){function t(t,e,i){var n=o.call(this)||this;return n.sweep=t,n.radius=e,n.innerRadius=i,n.from=1,n.to=1.05,n}return __extends(t,o),t.prototype.onStartAniamtion=function(t,e){o.prototype.onStartAniamtion.call(this,t,e)},t.prototype.onEndAnimation=function(t,e){o.prototype.onEndAnimation.call(this,t,e),this.fillAfter||e instanceof s._RadialBarPointView&&(e._radius(this.radius),e._innerRadius(this.innerRadius),e._sweep(this.sweep))},t.prototype.applyTransformation=function(t,e,i){if(i instanceof s._RadialBarPointView)if(this.keyframesType===s.AnimationKeyFramesType.Percentage){var n=this.from+(this.to-this.from)*t,o=this.radius-this.innerRadius;this.sweep;i._radius(o*n+this.innerRadius)}else{var r=this.from+(this.to-this.from)*t;i._radius(this.radius+r)}},t}(s.Animation);s._RadialBarHoverAnimation=i}(dv||(dv={})),function(u){"use strict";var t=function(h){function t(t,e,i,n,o,r,s,a,l,_){var u=h.call(this)||this;return u.fromcenter=t.clone(),u.fromradius=e,u.frominnerradius=i,u.fromstartangle=n,u.fromsweep=o,u.tocenter=r.clone(),u.toradius=s,u.toinnerradius=a,u.tostartangle=l,u.tosweep=_,u}return __extends(t,h),t.prototype.onEndAnimation=function(t,e){h.prototype.onEndAnimation.call(this,t,e),e instanceof u._RadialBarPointView&&(e._center(this.tocenter.clone()),e._startAngle(this.tostartangle),e._sweep(this.tosweep),e._innerRadius(this.toinnerradius),e._radius(this.toradius))},t.prototype.applyTransformation=function(t,e,i){if(i instanceof u._RadialBarPointView){var n=this.from+(this.to-this.from)*t,o=(this.tocenter.x-this.fromcenter.x)*n,r=(this.tocenter.y-this.fromcenter.y)*n,s=(this.tostartangle-this.fromstartangle)*n,a=(this.tosweep-this.fromsweep)*n,l=(this.toradius-this.fromradius)*n,_=(this.toinnerradius-this.frominnerradius)*n;i._center(new u.core.Point(this.fromcenter.x+o,this.fromcenter.y+r)),i._startAngle(this.fromstartangle+s),i._sweep(this.fromsweep+a),i._innerRadius(this.frominnerradius+_),i._radius(this.fromradius+l)}},t}(u.Animation);u._RadialBarComparedAnimation=t}(dv||(dv={})),function(f){"use strict";var t=function(i){function t(t,e){return i.call(this,t,e)||this}return __extends(t,i),t.prototype._startPoint=function(){return this.__startPoint},t.prototype._endPoint=function(){return this.__endPoint},t.prototype._pointView=function(){return i.prototype._pointView.call(this)},t.prototype._layout=function(t,e,i){var n=this._pointView(),o=n._plotView(),r=f.TextPosition.Auto;null!=o._option().config.text.position&&(r=o._option().config.text.position),n._rectangle();var s=o._layoutView()._dataLabelsRectangle(),a=this._measure(t,new f.core.Size(Number.MAX_VALUE,Number.MAX_VALUE)),l=o._option().config.text.offset,_=null,u=null,h=n._center(),c=n._startAngle()+n._sweep()/2;if(r==f.TextPosition.Center){var p=n._innerRadius()+(n._radius()-n._innerRadius())/2;u=(_=new f.core.Point(h.x+Math.cos(c)*p,h.y+Math.sin(c)*p)).clone(),this._rotatedRectangle(new f.models._RotatedRectangle(u.x,u.y,a.width,a.height,c))}else{p=n._radius();_=new f.core.Point(h.x+Math.cos(c)*p,h.y+Math.sin(c)*p),r==f.TextPosition.Inside?(null!=l&&(p-=l),(u=new f.core.Point(h.x+Math.cos(c)*p,h.y+Math.sin(c)*p)).x>h.x?(u.x+a.width>s.right&&(u.x=s.right-a.width),u.y>h.y?(u.y+a.height>s.bottom&&(u.y=s.bottom-a.height),this._rotatedRectangle(new f.models._RotatedRectangle(u.x-a.width/2,u.y-a.height/2,a.width,a.height,0))):u.y<h.y?(u.y-a.height<s.top&&(u.y=s.top+a.height),this._rotatedRectangle(new f.models._RotatedRectangle(u.x-a.width/2,u.y+a.height/2,a.width,a.height,0))):this._rotatedRectangle(new f.models._RotatedRectangle(u.x-a.width/2,u.y,a.width,a.height,0))):u.x<h.x?(u.x-a.width<s.left&&(u.x=s.left+a.width),u.y>h.y?(u.y+a.height>s.bottom&&(u.y=s.bottom-a.height),this._rotatedRectangle(new f.models._RotatedRectangle(u.x+a.width/2,u.y-a.height/2,a.width,a.height,0))):u.y<h.y?(u.y-a.height<s.top&&(u.y=s.top+a.height),this._rotatedRectangle(new f.models._RotatedRectangle(u.x+a.width/2,u.y+a.height/2,a.width,a.height,0))):this._rotatedRectangle(new f.models._RotatedRectangle(u.x+a.width/2,u.y,a.width,a.height,0))):u.y>h.y?(u.y+a.height>s.bottom&&(u.y=s.bottom-a.height),this._rotatedRectangle(new f.models._RotatedRectangle(u.x,u.y-a.height/2,a.width,a.height,0))):u.y<h.y?(u.y-a.height<s.top&&(u.y=s.top+a.height),this._rotatedRectangle(new f.models._RotatedRectangle(u.x,u.y+a.height/2,a.width,a.height,0))):this._rotatedRectangle(new f.models._RotatedRectangle(u.x,u.y,a.width,a.height,0))):(null!=l&&(p+=l),(u=new f.core.Point(h.x+Math.cos(c)*p,h.y+Math.sin(c)*p)).x>h.x?(u.x+a.width>s.right&&(u.x=s.right-a.width),u.y>h.y?(u.y+a.height>s.bottom&&(u.y=s.bottom-a.height),this._rotatedRectangle(new f.models._RotatedRectangle(u.x+a.width/2,u.y+a.height/2,a.width,a.height,0))):u.y<h.y?(u.y-a.height<s.top&&(u.y=s.top+a.height),this._rotatedRectangle(new f.models._RotatedRectangle(u.x+a.width/2,u.y-a.height/2,a.width,a.height,0))):this._rotatedRectangle(new f.models._RotatedRectangle(u.x+a.width/2,u.y,a.width,a.height,0))):u.x<h.x?(u.x-a.width<s.left&&(u.x=s.left+a.width),u.y>h.y?(u.y+a.height>s.bottom&&(u.y=s.bottom-a.height),this._rotatedRectangle(new f.models._RotatedRectangle(u.x-a.width/2,u.y+a.height/2,a.width,a.height,0))):u.y<h.y?(u.y-a.height<s.top&&(u.y=s.top+a.height),this._rotatedRectangle(new f.models._RotatedRectangle(u.x-a.width/2,u.y-a.height/2,a.width,a.height,0))):this._rotatedRectangle(new f.models._RotatedRectangle(u.x-a.width/2,u.y,a.width,a.height,0))):u.y>h.y?(u.y+a.height>s.bottom&&(u.y=s.bottom-a.height),this._rotatedRectangle(new f.models._RotatedRectangle(u.x,u.y+a.height/2,a.width,a.height,0))):u.y<h.y?(u.y-a.height<s.top&&(u.y=s.top+a.height),this._rotatedRectangle(new f.models._RotatedRectangle(u.x,u.y-a.height/2,a.width,a.height,0))):this._rotatedRectangle(new f.models._RotatedRectangle(u.x,u.y,a.width,a.height,0)))}this.__startPoint=_,this.__endPoint=u},t}(f._DataLabelView);f._RadialBarDataLabelView=t}(dv||(dv={})),function(_){"use strict";var t=function(e){function t(t){return e.call(this,t)||this}return __extends(t,e),t.prototype._createPoints=function(t){var e=[],i=t._startAngle(),n=t._sweep();0==n&&(n=1);var o=1;4<n?o=3:2<n&&(o=2);for(var r=t._center(),s=t._radius(),a=0;a<=o;a++){var l=i+a/o*n;e.push(new _.core.Point(r.x+Math.cos(l)*s,r.y+Math.sin(l)*s))}if(0===(s=t._innerRadius()))e.push(t._center().clone());else for(a=0;a<=o;a++){l=i+a/o*n;e.push(new _.core.Point(r.x+Math.cos(l)*s,r.y+Math.sin(l)*s))}return e},t}(_._PointAdorner);_._RadialBarPointAdorner=t}(dv||(dv={})),function(c){"use strict";var t=function(h){function i(t,e,i,n,o,r,s){var a=h.call(this,t,s)||this;return a.__center=e,a.__radius=i,a._innerRadius(n),a.__startAngle=o,a.__sweep=r,a}return __extends(i,h),i.prototype._selectionAdorner=function(){return new c._RadialBarPointAdorner(this)},i.prototype._center=function(t){if(null==t)return this.__center;this.__center=t.clone()},i.prototype._radius=function(t){if(null==t)return this.__radius;this.__radius=t},i.prototype._innerRadius=function(t){if(null==t)return this.__innerRadius;t<0&&(t=0),this.__innerRadius=t},i.prototype._startAngle=function(t){if(null==t)return this.__startAngle;this.__startAngle=t},i.prototype._sweep=function(t){if(null==t)return this.__sweep;this.__sweep=t},i.prototype._renderContent=function(t,e){var i=this._calculateColor(),n=this._data();if(t.beginTransform(),c._applyDataPointStyle(t,this._defaultStyle()),t.fill=i,t.stroke=i,null!=this._data()._series()._gradientColorScale()&&this._data()instanceof c.models._XyRangeValuePointData){this._data();t.fill=this._data()._series()._gradientColorScale()._scale(this._data().value).color}c._applyGStyle(t,this._plotView()._plotAreaView()._dvView()._option().style),c._applyDataPointStyle(t,n._series()._style()),c._applyDataPointStyle(t,n._style()),e.hasSelectionInPlotArea&&(n._selected()?(c._applyDataPointStyle(t,this._plotView()._plotAreaView()._dvView()._option().selectedStyle),c._applyDataPointStyle(t,this._plotView()._option().config.selectedStyle),e.apiSelectedStyle&&c._applyDataPointStyle(t,e.apiSelectedStyle)):(c._applyDataPointStyle(t,this._plotView()._plotAreaView()._dvView()._option().unselectedStyle),c._applyDataPointStyle(t,this._plotView()._option().config.unselectedStyle))),this._hover()&&c._applyDataPointStyle(t,this._plotView()._option().config.hoverStyle),this.__animation instanceof c._PointComparedAnimation&&null!=this._xs()&&null!=this._ys()?t.drawPolygon(this._xs(),this._ys()):t.drawDonutSegment(this._center().x,this._center().y,this._radius()*((this.scale()-1)/2+1),this._innerRadius()*(1-(this.scale()-1)/2),this._startAngle(),this._sweep()),t.restoreTransform()},i.prototype._createDataLabelView=function(){var t=[],e=c.plugins._Plugins._dataContentProvider("Default");return null!=e&&(t=e.toLines(this._data()._dataLabelContentSite())),null!=t&&0<t.length?new c._RadialBarDataLabelView(this,t):null},i.prototype._createHoverAnimation=function(t){if(null==t)return null;var e=new c._RadialBarHoverAnimation(this._sweep(),this._radius(),this._innerRadius());return e.duration=t.duration,null!=t.scale&&("number"==typeof t.scale?(e.keyframesType=c.AnimationKeyFramesType.Percentage,e.from=1,e.to=t.scale):(e.keyframesType=c.AnimationKeyFramesType.Pixel,e.from=0,e.to=c.core._Parser._parseCssPixel(t.scale))),e.fillAfter=!0,e},i.prototype._applyStyle=function(t,e){if(null!=e){var i;if(null!=e.fill&&(t.fill=c._fillColorFromOption(e.fill)),null!=e.opacity&&"string"==typeof t.fill&&"none"!=t.fill&&"transparent"!=t.fill)(i=c.core._Color.fromCss(t.fill)).alpha=i.alpha*e.opacity,t.fill=i.toCss();if(null!=e.stroke&&(t.stroke=c._fillColorFromOption(e.stroke)),null!=e.strokeOpacity&&"string"==typeof t.stroke&&"none"!=t.stroke&&"transparent"!=t.stroke)(i=c.core._Color.fromCss(t.stroke)).alpha=i.alpha*e.strokeOpacity,t.stroke=i.toCss();null!=e.strokeWidth&&(t.strokeWidth=e.strokeWidth),null!=e.strokeDasharray&&(t.strokeDasharray=e.strokeDasharray)}},i.prototype.refresh=function(){var t=c._Util.createPtsFromRadialBar(this.__startAngle,this.__sweep+this.__startAngle,this.__radius,this.__innerRadius,this.__center,200);this._xs(t.xs),this._ys(t.ys)},i.prototype._hitTest=function(t){var e=t.x-this._center().x,i=t.y-this._center().y,n=e*e+i*i,o=this._innerRadius()*this._innerRadius(),r=this._radius()*this._radius();if(o<=n&&n<=r){var s=90*this._sweep()/Math.PI,a=this._clampAngle(180*this._startAngle()/Math.PI+s),l=180*Math.atan2(i,e)/Math.PI,_=this._clampAngle(a-l);if(Math.abs(_)<=s){var u=new c.core.Point;return u.x=this._center().x+Math.cos(this._startAngle()+this._sweep())*this._radius(),u.y=this._center().y+Math.sin(this._startAngle()+this._sweep())*this._radius(),new c.HitTestResult(t,this._data(),this,c.ElementType.DataPoint)}}return h.prototype._hitTest.call(this,t)},i.prototype.__getUpdateAnimation=function(t){if(t instanceof i){var e=new c._RadialBarComparedAnimation(t._center(),t._radius(),t._innerRadius(),t._startAngle(),t._sweep(),this._center(),this._radius(),this._innerRadius(),this._startAngle(),this._sweep());return null!=e&&(e.duration=1e3,e.from=0,e.to=1),e}return h.prototype.__getUpdateAnimation.call(this,t)},i.prototype._clampAngle=function(t){var e=(t+180)%360-180;return e<-180&&(e+=360),e},i}(c._CartesianPointView);c._RadialBarPointView=t}(dv||(dv={})),function(s){"use strict";var t=function(o){function t(t,e,i){var n=o.call(this)||this;return n.__shapes=t.map(function(t){return t.clone()}),n.__swapAxes=e,n.__mode=i,n}return __extends(t,o),t.prototype.onStartAniamtion=function(t,e){o.prototype.onStartAniamtion.call(this,t,e)},t.prototype.onEndAnimation=function(t,e){o.prototype.onEndAnimation.call(this,t,e),e instanceof s._LineSeriesView&&e._seriesShapes(this.__shapes)},t.prototype.applyTransformation=function(t,e,i){var n,o=this,r=this.from+(this.to-this.from)*t;i instanceof s._LineSeriesView&&(this.__mode===s.AnimationMode.All||this.__mode===s.AnimationMode.Group?(n=this.__shapes.map(function(t){return t.clone()})).forEach(function(t){var e=o.__swapAxes?Math.min.apply(Math,t._line().map(function(t){return t.x})):Math.max.apply(Math,t._line().map(function(t){return t.y}));t._line().forEach(function(t){o.__swapAxes?t.x=(e-t.x)*(1-r)+t.x:t.y=(e-t.y)*(1-r)+t.y})}):(n=this.__shapes.map(function(t){return t.clone()})).forEach(function(t){var e=Math.floor(r*t._line().length);if(0<e&&e<t._line().length){var i=r*t._line().length-e,n=t._line()[e-1],o=t._line()[e];o.x=n.x+i*(o.x-n.x),o.y=n.y+i*(o.y-n.y),t._line().splice(e),t._line().push(o)}else t._line().splice(e)}),i._seriesShapes(n))},t}(s.Animation);s._LineSeriesLoadAnimation=t}(dv||(dv={})),function(r){"use strict";var t=function(o){function t(t){var e=o.call(this)||this;return e.__symbols=t,e}return __extends(t,o),t.prototype._showSymbol=function(){return this.__symbols},t.prototype.render=function(t,e,i){var n=this._seriesColor()||this.color;t.beginTransform(),r._applyStrokeColor(t,n),r._applyDataPointStyle(t,new r.options._DataPointStyleOption({strokeWidth:1})),r._applyDataPointStyle(t,this._style()),t.drawLine(e.left,e.top+e.height/2,e.right,e.top+e.height/2),t.restoreTransform(),this._showSymbol()&&o.prototype.render.call(this,t,e,i)},t}(r.models._LegendSymbol);r._LineLegendSymbol=t}(dv||(dv={})),function(r){"use strict";var t=function(s){function t(){var t=null!==s&&s.apply(this,arguments)||this;return t.__seriesViews=[],t}return __extends(t,s),t.prototype._layoutStack=function(){var t=!1,e=this._getAxisY();null!=e.scale&&e.scale.type==r.ValueScaleType.Percentage&&(t=!0);var i=!1;null!=this._data()._categoriedDimensionDefinition()&&(i=!0),(new r.models._CartesianPlotLayout)._layout(this._data(),t,i)},Object.defineProperty(t.prototype,"lineAspect",{get:function(){return this._option().config.lineAspect},enumerable:!0,configurable:!0}),t.prototype._legendSymbol=function(){return new r._LineLegendSymbol(this._option().config.symbols)},t.prototype._createData=function(t){return new e(this,t,this._option())},t.prototype._createSeriesView=function(t){return 0<t._points().length?new r._LineSeriesView(this,t):null},t.prototype._loadData=function(t){s.prototype._loadData.call(this,t),this.__seriesViews=[];for(var e=0,i=this._data()._seriesList();e<i.length;e++){var n=i[e],o=this._createSeriesView(n);null!=o&&this.__seriesViews.push(o)}},t.prototype._layoutSeriesList=function(t,e,i){this._children=[];for(var n=0,o=this.__seriesViews;n<o.length;n++){var r=o[n];r._rectangle(e.clone()),r._layout(t,e,i),this._children.push(r)}s.prototype._layoutSeriesList.call(this,t,e,i)},t.prototype._createXSite=function(t,e){var i=this._data();if(null!=i._categoriedDimensionDefinition())return s.prototype._createXSite.call(this,t,.5);var n=i._xFieldDefinition();if(null!=n){var o=n._field();if(o instanceof r.models._StringFieldInfo||o instanceof r.models._BooleanFieldInfo)return s.prototype._createXSite.call(this,t,.5)}return s.prototype._createXSite.call(this,t,e)},t}(r._CartesianPlotView);r._LinePlotView=t;var e=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return __extends(e,t),e.prototype._createSeries=function(t,e,i,n){return e instanceof r.models._AggregateCartesianValueDefinition?new r.models._XyValueSeriesData(this,e,i,n,t):null},e}(r.models._CartesianPlotData);r._LinePlotData=e}(dv||(dv={})),function(o){"use strict";var t=function(n){function t(t,e){var i=n.call(this)||this;return i._targetShape=e.map(function(t){return t.clone()}),i._shapeAnimationBuilders=t,i}return __extends(t,n),t.prototype.onStartAniamtion=function(t,e){n.prototype.onStartAniamtion.call(this,t,e)},t.prototype.onEndAnimation=function(t,e){n.prototype.onEndAnimation.call(this,t,e),e instanceof o._LineSeriesView&&e._seriesShapes(this._targetShape)},t.prototype.applyTransformation=function(t,e,i){if(i instanceof o._LineSeriesView){var n=this.from+(this.to-this.from)*t;i._seriesShapes(this._shapeAnimationBuilders.map(function(t){return t.getLineShape(n)}))}},t}(o.Animation);o._LineSeriesComparedAnimation=t}(dv||(dv={})),function(m){"use strict";var t=function(s){function a(t,e){var i=s.call(this,t,e)||this;return i.__seriesShapes=[],i}return __extends(a,s),a.prototype._swapAxes=function(){return this._plotView()._swapAxes()},a.prototype._defaultStyle=function(){return new m.options._LineStyleOption({opacity:null,stroke:m.__Constant_Core_Style_Stroke,strokeWidth:1,strokeDasharray:null})},a.prototype._plotView=function(){return s.prototype._plotView.call(this)},a.prototype._seriesShapes=function(t){if(arguments.length<=0)return this.__seriesShapes;this.__seriesShapes=t.map(function(t){if(t instanceof m._LineShape)return t})},a.prototype._layout=function(t,e,i){s.prototype._layout.call(this,t,e,i),this.__seriesShapes=this._createLineShapes(this._data()),this._layoutLineShapes(this._data())},a.prototype._renderContent=function(e,t){var i=this._data();e.beginTransform(),m._applyLineStyle(e,this._defaultStyle());var n=this._plotView()._plotAreaView()._dvView()._colorProvider().getColor(0);null!=n&&(e.stroke=n);var o=i._color();if(null!=o&&(e.stroke=o),null!=i._gradientColorScale()){var r=Number.MIN_VALUE,s=Number.MAX_VALUE,a=this._plotView()._option().config.showNulls;i.points.forEach(function(t){null==t.value&&a!=m.ShowNulls.Zeros||(t.value>r&&(r=t.value),t.value<s&&(s=t.value))}),e.stroke=new m.models.LinearGradientColor(180,this._data()._gradientColorScale()._getGradientArray(s,r))}m._applyGStyle(e,this._plotView()._plotAreaView()._dvView()._option().style),m._applyDataPointStyle(e,i._style()),t.hasSelectionInPlotArea&&(this._data()._selected()?(m._applyDataPointStyle(e,this._data()._plot()._plotView()._plotAreaView()._dvView()._option().selectedStyle),m._applyDataPointStyle(e,this._data()._plot()._plotView()._option().config.selectedStyle),t.apiSelectedStyle&&m._applyDataPointStyle(e,t.apiSelectedStyle)):(m._applyDataPointStyle(e,this._data()._plot()._plotView()._plotAreaView()._dvView()._option().unselectedStyle),m._applyDataPointStyle(e,this._data()._plot()._plotView()._option().config.unselectedStyle))),this._hover()&&m._applyDataPointStyle(e,this._data()._plot()._option().config.hoverStyle),this.__seriesShapes.forEach(function(t){1<t._line().length&&e.drawLines(t._xs(),t._ys())}),e.restoreTransform()},a.prototype._hitTest=function(t){var e=this._rectangle();if(null!=e&&e.contains(t))for(var i=0,n=this.__seriesShapes;i<n.length;i++)for(var o=n[i]._line(),r=0;r<o.length-1;++r)if(m._Util.pointToLine(o[r].x,o[r].y,o[r+1].x,o[r+1].y,t.x,t.y)<a.__PADDING)return new m.HitTestResult(t,this._data(),this,m.ElementType.Series);return s.prototype._hitTest.call(this,t)},a.prototype.__getUpdateAnimation=function(t){if(null!=t&&t instanceof a){this._plotView()._option().config.showNulls;var e=m._LineShapeAnimationBuilder.analyseShapes(t._createLineShapeAnimation(t._data()),this._createLineShapeAnimation(this._data())),i=new m._LineSeriesComparedAnimation(e,this._seriesShapes());return i.duration=1e3,i.from=0,i.to=1,i}return null},a.prototype._createLineShapes=function(t){if(null==t._points()||t._points().length<=0)return null;var e=this._plotView()._option().config.axisMode,i=this._plotView()._option().config.lineAspect,n=this._plotView()._option().config.showNulls,o=t._xDimension()instanceof m.models._XCategoriedDimension,r=this._plotView()._getAxisX(),s=this._plotView()._getAxisY(),a=r._scale(),l=s._scale(),_=(a.max()-a.min())/(a.endPosition-a.startPosition),u=(l.max()-l.min())/(l.endPosition-l.startPosition);isNaN(_)&&(_=1),isNaN(u)&&(u=1);for(var h=[],c=[],p=0,f=t._points();p<f.length;p++){var d=f[p],g=this._plotView()._getAxisXValue(d._dimensionValue());if(null!=g&&d instanceof m.models._XyValuePointData)if(n==m.ShowNulls.Gaps)if(null==d._yValue()){var y=this._convertByLineAspect(c);i==m.LineAspect.Spline&&(y=this._convertBySpline(c,Math.abs(_),Math.abs(u))),h.push(new m._LineShape(y)),c=[]}else c.push(new m.core.Point(g,d._yValue()));else n==m.ShowNulls.Zeros?c.push(new m.core.Point(g,null==d._yValue()?0:d._yValue())):null!=d._yValue()&&c.push(new m.core.Point(g,d._yValue()))}if(e!=m.AxisMode.Cartesian&&o&&0<c.length&&c.push(c[0].clone()),0<c.length){y=this._convertByLineAspect(c);i==m.LineAspect.Spline&&(y=this._convertBySpline(c,Math.abs(_),Math.abs(u))),h.push(new m._LineShape(y))}return h},a.prototype._createLineShapeAnimation=function(t){if(null==t._points()||t._points().length<=0)return null;for(var e=this._plotView()._option().config.axisMode,i=this._plotView()._option().config.showNulls,n=t._xDimension()instanceof m.models._XCategoriedDimension,o=[],r=[],s=0,a=0,l=t._points();a<l.length;a++){var _=l[a];null!=this._plotView()._getAxisXValue(_._dimensionValue())&&(_ instanceof m.models._XyValuePointData&&(i==m.ShowNulls.Gaps?null==_._yValue()?(o.push(new m._LineShapeAnimation(this.__seriesShapes[s]._line(),r)),r=[],s++):r.push(_):i==m.ShowNulls.Zeros?r.push(_):null!=_._yValue()&&r.push(_)))}return e!=m.AxisMode.Cartesian&&n&&0<r.length&&r.push(r[0]),0<r.length&&o.push(new m._LineShapeAnimation(this.__seriesShapes[s]._line(),r)),o},a.prototype._layoutLineShapes=function(t){var n=this,e=this.__seriesShapes,o=this._plotView()._swapAxes(),r=this._plotView()._option().config.axisMode,s=this._plotView()._getAxisX(),a=this._plotView()._getAxisY();e.forEach(function(t){t._line().forEach(function(t){var e,i;i=o?(e=s.convert(t.y),a.convert(t.x)):(e=s.convert(t.x),a.convert(t.y)),r==m.AxisMode.Polygonal||r==m.AxisMode.Radial?(t.x=Math.cos(i)*e+n._plotView()._cx(),t.y=Math.sin(i)*e+n._plotView()._cy()):(t.x=e,t.y=i)})})},a.prototype._convertByLineAspect=function(t){var e=this._plotView()._option().config.lineAspect;return new m._LineAspectConverter(!1,e).convert(t)},a.prototype._convertBySpline=function(t,e,i){var n=new m._Spline(t.map(function(t){return t.x}),t.map(function(t){return t.y})).calculate(e,i);t=[];for(var o=0;o<Math.min(n.xs.length,n.ys.length);o++)t.push(new m.core.Point(n.xs[o],n.ys[o]));return t},a.__PADDING=10,a}(m._CartesianSeriesView);m._LineSeriesView=t}(dv||(dv={})),function(t){"use strict";var e=function(i){function o(t){var e=i.call(this)||this;return e.__line=t,e}return __extends(o,i),o.prototype._line=function(){return this.__line},o.prototype._xs=function(){return this.__line.map(function(t){return t.x})},o.prototype._ys=function(){return this.__line.map(function(t){return t.y})},o.prototype.clone=function(){for(var t=[],e=0,i=this._line();e<i.length;e++){var n=i[e];t.push(n.clone())}return new o(t)},o}(t._BaseShape);t._LineShape=e}(dv||(dv={})),function(t){"use strict";var e=function(n){function t(t,e){void 0===e&&(e=null);var i=n.call(this,t)||this;return i.__data=e,i}return __extends(t,n),t.prototype._data=function(){return this.__data},t}(t._LineShape);t._LineShapeAnimation=e}(dv||(dv={})),function(c){"use strict";var t=function(n){function h(t,e){var i=n.call(this)||this;return i._fromPoints=[],i._toPoints=[],i._fromPoints=t,i._toPoints=e,i}return __extends(h,n),h.prototype.getLineShape=function(o){var r=this,t=this._toPoints.map(function(t){return null!=t?t.clone():null});return new c._LineShape(t.map(function(t,e){if(e<r._fromPoints.length){var i=(t.x-r._fromPoints[e].x)*o,n=(t.y-r._fromPoints[e].y)*o;t.x=r._fromPoints[e].x+i,t.y=r._fromPoints[e].y+n}return t}))},h.analyseShapes=function(l,t){var _=[],u=function(t,e){return null!=t&&null!=e&&t.value==e.value&&t.dimension==e.dimension};return t.forEach(function(t){for(var e=0;e<l.length;e++){var i=l[e],n=c._Util.findMaxSameArrayOf(i._data(),t._data(),u);if(null!=n){for(var o=[],r=[],s=0;s<i._line().length;s++)s<n.arrayStart&&(o.push(i._line()[s]),r.push(t._line()[n.otherStart]));for(s=0;s<t._line().length;s++)s<n.otherStart&&(o.push(i._line()[n.arrayStart]),r.push(t._line()[s]));for(s=0;s<i._line().length;s++)s>=n.arrayStart&&s<=n.arrayEnd&&o.push(i._line()[s]);for(s=0;s<t._line().length;s++)s>=n.otherStart&&s<=n.otherEnd&&r.push(t._line()[s]);for(s=0;s<t._line().length;s++)s>n.otherEnd&&(o.push(i._line()[n.arrayEnd]),r.push(t._line()[s]));for(s=0;s<i._line().length;s++)s>n.arrayEnd&&(o.push(i._line()[s]),r.push(t._line()[n.otherEnd]));var a=new h(o,r);_.push(a);break}}}),_},h}(c._ShapeAnimationBuilder);c._LineShapeAnimationBuilder=t}(dv||(dv={})),function(l){"use strict";var t=function(i){function t(t){var e=i.call(this)||this;return e.rect=t.clone(),e.from=1,e.to=1.05,e}return __extends(t,i),t.prototype.onStartAniamtion=function(t,e){i.prototype.onStartAniamtion.call(this,t,e)},t.prototype.onEndAnimation=function(t,e){i.prototype.onEndAnimation.call(this,t,e),e instanceof l._PointView&&this.keyframesType===l.AnimationKeyFramesType.Percentage&&e.scale(this.to),this.fillAfter||null!=this.rect&&e._rectangle(this.rect.clone())},t.prototype.applyTransformation=function(t,e,i){if(this.keyframesType===l.AnimationKeyFramesType.Percentage){var n=this.from+(this.to-this.from)*t;if(i instanceof l._PointView)i.scale(n);else{var o=this.rect.clone();i._rectangle().left=o.left+(1-n)*o.width/2,i._rectangle().top=o.top+(1-n)*o.height/2,i._rectangle().width=n*o.width,i._rectangle().height=n*o.height}}else{o=this.rect;var r=this.from+(this.to-this.from)*t,s=this.rect.width+r,a=this.rect.height+r;i._rectangle().top=o.top-(a-o.height)/2,i._rectangle().height=a,i._rectangle().left=o.left-(s-o.width)/2,i._rectangle().width=s}},t}(l.Animation);l._ScaleAnimation=t}(dv||(dv={})),function(o){"use strict";var t=function(i){function t(){return null!==i&&i.apply(this,arguments)||this}return __extends(t,i),t.prototype._symbols=function(){return!0},t.prototype._createData=function(t){return new e(this,t,this._option())},t.prototype._createXSite=function(t,e){return null!=this._data()._categoriedDimensionDefinition()?i.prototype._createXSite.call(this,t,.5):i.prototype._createXSite.call(this,t,e)},t}(o._CartesianPlotView);o._ScatterPlotView=t;var e=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return __extends(e,t),e.prototype._createSeries=function(t,e,i,n){return e instanceof o.models._AggregateCartesianValueDefinition?new o.models._XyValueSeriesData(this,e,i,n,t):null},e}(o.models._CartesianPlotData);o._ScatterPlotData=e}(dv||(dv={})),function(g){"use strict";var t=function(d){function t(){var t=null!==d&&d.apply(this,arguments)||this;return t.__seriesViews=[],t}return __extends(t,d),t.prototype._coordinateSystemType=function(){return"TextCategories"},t.prototype._data=function(){return d.prototype._data.call(this)},t.prototype._pointViews=function(){for(var t=[],e=0,i=this._seriesViews();e<i.length;e++){var n=i[e];t.push.apply(t,n._pointViews())}return t},t.prototype._seriesViews=function(){return this.__seriesViews},t.prototype._attachCoordinateSystem=function(t){var e=this._layoutView()._coordinateSystemView(this._coordinateSystemType());if(e instanceof g._TextCategoriesCoordinateSystemView)for(var i=0,n=this._seriesViews();i<n.length;i++){var o=n[i],r=g.core.find(t,function(t){return t.type==g.AxisType.X});o._attachAxisX(e,r)}},t.prototype._loadData=function(t){d.prototype._loadData.call(this,t);var e=this._data();new g.models._CartesianLegendGenerator(this._legendManager(),this._plotAreaView()._legendManager())._generate([e],[]),(new g.models._CartesianConditionalFormattingRuleRunner)._apply(e),this.__seriesViews=this._createSeriesViews(e._seriesList())},t.prototype._layout=function(o,t,r){var e=this._layoutView()._coordinateSystemView(this._coordinateSystemType());if(e instanceof g._TextCategoriesCoordinateSystemView){for(var l=[],i=function(t){var e=t._axisX()._scale(),n=g.core.find(l,function(t){return t.scale==e});if(null==n){var i=g.Group.Cluster,o=t._data()._detailDimension();null!=o&&(i=o._definition()._group()),n={scale:e,minWidthInValues:_._minWidthInValues(e),group:i,dimensionValueWithPoints:[]},l.push(n)}for(var r=function(t){var e=t._data()._dimensionValue(),i=g.core.find(n.dimensionValueWithPoints,function(t){return t.dimensionValue==e});null==i&&(i={dimensionValue:e,pointViews:[t]},n.dimensionValueWithPoints.push(i))},s=0,a=t._pointViews();s<a.length;s++){r(a[s])}},_=this,n=0,s=this._seriesViews();n<s.length;n++){i(s[n])}for(var a=0,u=l;a<u.length;a++)for(var h=u[a],c=function(t){h.minWidthInValues;var n=new g.core.Point(h.scale.value(t.pointViews[0]._getAxisXValue()),e._plotsArea().bottom);t.pointViews.forEach(function(t,e){var i=t._measure(o,new g.core.Size(Number.MAX_VALUE,Number.MAX_VALUE));t._layout(o,new g.core.Rect(n.x-i.width/2,n.y-i.height,i.width,i.height),r),n.y-=i.height})},p=0,f=h.dimensionValueWithPoints;p<f.length;p++){c(f[p])}d.prototype._layout.call(this,o,t,r)}},t.prototype._renderContent=function(t,e){for(var i=0,n=this._seriesViews();i<n.length;i++)for(var o=0,r=n[i]._pointViews();o<r.length;o++){r[o]._render(t,e)}},t.prototype._minWidthInValues=function(t){for(var e=NaN,i=null,n=0,o=this._seriesViews();n<o.length;n++){var r=o[n];if(r._axisX()._scale()==t)for(var s=0,a=r._pointViews();s<a.length;s++){var l=a[s],_=NaN;if(null==i){var u=l._getAxisXValue();u>t.min()&&(_=2*(u-t.min()))}else _=Math.abs(l._getAxisXValue()-i._getAxisXValue());!isNaN(_)&&(isNaN(e)||_<e)&&(e=_),i=l}}return e},t.prototype._createData=function(t){return new g.models._TextPlotData(this,t,this._option())},t.prototype._createSeriesViews=function(t){for(var e=[],i=0,n=t;i<n.length;i++){var o=n[i],r=this._createSeriesView(o);null!=r&&e.push(r)}return e},t.prototype._createSeriesView=function(t){return new g._TextSeriesView(t,this)},t}(g._PlotView);g._TextPlotView=t}(dv||(dv={})),function(o){"use strict";var t=function(n){function t(t,e){var i=n.call(this,e,t._plotView())||this;return i.__seriesView=t,i}return __extends(t,n),t.prototype._data=function(){return n.prototype._data.call(this)},t.prototype._getAxisXValue=function(){var t=this._seriesView()._axisX()._scale();if(t instanceof o._OrdinalAxisScale)return this._data()._dimensionValue()._index();if(t instanceof o._LinearAxisScale||t instanceof o._LogAxisScale){if("number"==typeof(e=this._data()._dimensionValue()._value()))return e}else if(t instanceof o._TimeAxisScale){var e;if((e=this._data()._dimensionValue()._value())instanceof Date)return e.valueOf()}return null},t.prototype._seriesView=function(){return this.__seriesView},t.prototype._format=function(){return null},t.prototype._title=function(){var t=this._data().value;if(null==t)return null;var e=o.plugins._Plugins._stringFormatting("Default");return null!=e?e.format(this._format(),t):t.toString()},t.prototype._measure=function(t,e){t.beginTransform(),this._applyStyle(t);var i=t.measureString(this._title());return t.restoreTransform(),i},t.prototype._layout=function(t,e,i){this._rectangle(e)},t.prototype._renderContent=function(t,e){var i=this._calculateColor();t.beginTransform(),"string"==typeof i?t.textFill=i:i instanceof o.models.LinearGradientColor&&0<i.colors.length&&(t.textFill=i.colors[0].color),i instanceof o.models.RadialGradientColor&&0<i.colors.length&&(t.textFill=i.colors[0].color),t.stroke=i,this._applyStyle(t);var n=this._rectangle();this._hover()&&(n=o._Util.scale(this._rectangle().clone(),this.scale())),t.drawMultipleStrings(this._title(),n,"Center","None"),t.restoreTransform()},t.prototype._calculateColor=function(){var t=this._data(),e=t._color();return null==e&&(e=t._series()._color()),null==e&&(e=o.__Constant_Core_Style_Color),e},t.prototype._calculateStyle=function(t){var e=this._data(),i=this._defaultStyle();return i=o.core.merge(i,e._series()._style()),i=o.core.merge(i,e._style()),t&&(i=e._selected()?o.core.merge(i,this._plotView()._plotAreaView()._dvView()._option().selectedStyle):o.core.merge(i,this._plotView()._plotAreaView()._dvView()._option().unselectedStyle)),this._hover()&&(i=o.core.merge(i,this._plotView()._option().config.hoverStyle)),i},t.prototype._applyStyle=function(t){},t}(o._PointView);o._TextPointView=t}(dv||(dv={})),function(f){"use strict";var t=function(n){function t(t,e){var i=n.call(this,e,t)||this;return i.__pointViews=[],i.__pointViews=i._createPointViews(t._points()),i}return __extends(t,n),t.prototype._pointViews=function(){return this.__pointViews},t.prototype._axisX=function(){return this.__axisX},t.prototype._plotView=function(){return n.prototype._plotView.call(this)},t.prototype._attachAxisX=function(t,e){var i=this._data()._xDimension(),n=null;i instanceof f.models._XCategoriedDimension?n=i._definition()._categoryFieldDefinitions()[0]:i instanceof f.models._XFieldDimension&&(n=i._definition()._fieldDefinition());var o=t._applyAxis(n,e),r=o._scale();if(null==r._domain()||r._domain().length<=0){var s=null;if(s=null!=n?new f.models._XSiteModel(n,0):new f.models._EmptySiteModel(0),o._updateActualLimits(s),r instanceof f._OrdinalAxisScale)r._domain([-.5,i._dimensionValues().length-.5]);else if(r instanceof f._LinearAxisScale||r instanceof f._LogAxisScale){for(var a=NaN,l=NaN,_=0,u=i._dimensionValues();_<u.length;_++){var h=u[_]._value();(isNaN(a)||h<a)&&(a=h),(isNaN(l)||l<h)&&(l=h)}isNaN(a)||isNaN(l)?(a=-.5,l=.5):a==l&&(a-=.5,l+=.5),r._domain([0,i._dimensionValues().length])}else if(r instanceof f._TimeAxisScale){a=NaN,l=NaN;for(var c=0,p=i._dimensionValues();c<p.length;c++){h=p[c]._value().valueOf();(isNaN(a)||h<a)&&(a=h),(isNaN(l)||l<h)&&(l=h)}isNaN(a)||isNaN(l)?(a=-.5,l=.5):a==l&&(a-=.5,l+=.5),r._domain([0,i._dimensionValues().length])}}this.__axisX=o},t.prototype._createPointViews=function(t){for(var e=[],i=0,n=t;i<n.length;i++){var o=n[i],r=this._createPointView(o);null!=r&&e.push(r)}return e},t.prototype._createPointView=function(t){return new f._TextPointView(this,t)},t}(f._CartesianSeriesView);f._TextSeriesView=t}(dv||(dv={})),function(a){"use strict";var t=function(s){function t(){var t=null!==s&&s.apply(this,arguments)||this;return t.__axisViews=[],t.__seriesViews=[],t}return __extends(t,s),t.prototype._axisViews=function(){return this.__axisViews},t.prototype._data=function(){return s.prototype._data.call(this)},t.prototype._seriesViews=function(){return this.__seriesViews},t.prototype._pointViews=function(){for(var t=[],e=0,i=this._seriesViews();e<i.length;e++){var n=i[e];t.push.apply(t,n._pointViews())}return t},t.prototype._attachCoordinateSystem=function(t){this.__axisViews=this._createAxisViews(this._data()._dimensions(),t.filter(function(t){return t.type==a.AxisType.Y}))},t.prototype._loadData=function(t){s.prototype._loadData.call(this,t);var e=this._data();this.__seriesViews=this._createSeriesViews(e._seriesList()),new a.models._ParallelLegendGenerator(this._legendManager(),this._plotAreaView()._legendManager())._generate([e],this._overlayViews())},t.prototype._layout=function(t,e,i){s.prototype._layout.call(this,t,e,i);for(var n=0,o=this._seriesViews();n<o.length;n++){o[n]._layout(t,e,i)}},t.prototype._renderContent=function(t,e){s.prototype._renderContent.call(this,t,e);for(var i=0,n=this._axisViews();i<n.length;i++){n[i]._render(t,e)}for(var o=0,r=this._seriesViews();o<r.length;o++){r[o]._render(t,e)}},t.prototype._createData=function(t){return new a.models._ParallelPlot(this,t,this._option())},t.prototype._createAxisViews=function(t,o){var r=this,s=[];return t.forEach(function(t,e){var i=e<o.length?o[e]:new a.options._AxisOption(null),n=r._createAxisView(t,i);null!=n&&s.push(n)}),s},t.prototype._createAxisView=function(t,e){return new a._ParallelAxisView(this,e,t)},t.prototype._createSeriesViews=function(t){for(var e=[],i=0,n=t;i<n.length;i++){var o=n[i],r=this._createSeriesView(o);null!=r&&e.push(r)}return e},t.prototype._createSeriesView=function(t){return new a._ParallelSeriesView(this,t)},t}(a._PlotView);a._ParallelPlotView=t}(dv||(dv={})),function(y){"use strict";var t=function(g){function t(){return null!==g&&g.apply(this,arguments)||this}return __extends(t,g),t.prototype._axisViews=function(){return g.prototype._axisViews.call(this)},t.prototype._layout=function(t,e,i){var n=this._axisViews();if(1<n.length){for(var o=0,r=[],s=0,a=n;s<a.length;s++){var l=(d=a[s])._measure(t,new y.core.Size(e.width,e.height)).width;r.push({axisView:d,size:l}),o+=l}e.width>o&&(e.width-o)/(n.length-1);for(var _=e.left,u=0,h=r;u<h.length;u++){var c=h[u];c.axisView._layout(t,new y.core.Rect(_,e.top,c.size,e.height),c)}}else for(var p=0,f=n;p<f.length;p++){var d;l=(d=f[p])._measure(t,new y.core.Size(e.width,e.height)).width;d._layout(t,new y.core.Rect(e.left,e.top,l,e.height),i)}g.prototype._layout.call(this,t,e,i)},t.prototype._createAxisView=function(t,e){return new y._LineParallelAxisView(this,e,t)},t}(y._ParallelPlotView);y._LineParallelPlotView=t}(dv||(dv={})),function(t){"use strict";var e=function(n){function t(t,e){var i=n.call(this,e,t._plotView())||this;return i.__seriesView=t,i}return __extends(t,n),t.prototype._seriesView=function(){return this.__seriesView},t.prototype._location=function(){return this.__location},t.prototype._data=function(){return n.prototype._data.call(this)},t.prototype._layout=function(t,e,i){for(var n=this._data(),o=n._dimension(),r=0,s=this._seriesView()._plotView()._axisViews();r<s.length;r++){var a=s[r];if(a._dimension()==o){this.__location=a._toLocation(n._item());break}}},t}(t._PointView);t._ParallelPointView=e}(dv||(dv={})),function(e){"use strict";var t=function(r){function t(t,e){var i=r.call(this)||this;return i.__plotView=t,i.__data=e,i.__pointViews=i._createPointViews(e._points()),i}return __extends(t,r),t.prototype._plotView=function(){return this.__plotView},t.prototype._pointViews=function(){return this.__pointViews},t.prototype._data=function(){return this.__data},t.prototype._style=function(){return null==this.__style&&(this.__style=new e.options._DataPointStyleOption(this._plotView()._option().config.style)),this.__style},t.prototype._layout=function(t,e,i){r.prototype._layout.call(this,t,e,i);for(var n=0,o=this._pointViews();n<o.length;n++){o[n]._layout(t,e,i)}},t.prototype._createPointViews=function(t){for(var e=[],i=0,n=t;i<n.length;i++){var o=n[i],r=this._createPointView(o);null!=r&&e.push(r)}return e},t.prototype._createPointView=function(t){return null!=t.item?new e._ParallelPointView(this,t):null},t}(e._View);e._ParallelSeriesView=t}(dv||(dv={})),function(p){"use strict";var t=function(c){function t(){return null!==c&&c.apply(this,arguments)||this}return __extends(t,c),t.prototype._axisViews=function(){return c.prototype._axisViews.call(this)},t.prototype._layout=function(t,e,i){var n=this._axisViews(),o=new p.core.Point((e.left+e.right)/2,(e.top+e.bottom)/2),r=Math.min(e.width/2,e.height/2),s=new p.core.Rect(o.x-r,o.y-r,2*r,2*r);if(0<n.length)for(var a=360/n.length,l=0,_=0,u=n;_<u.length;_++){var h=u[_];h.center=o,h.radius=r,h.degree=l,h._initScale(),h._layout(t,s,i),l+=a}c.prototype._layout.call(this,t,e,i)},t.prototype._createAxisView=function(t,e){return new p._RadialParallelAxisView(this,e,t)},t}(p._ParallelPlotView);p._RadialParallelPlotView=t}(dv||(dv={})),function(i){"use strict";var t=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return __extends(e,t),e.prototype._legendSymbol=function(){return new i._AreaLegendSymbol},e.prototype._seriesViews=function(){return t.prototype._seriesViews.call(this)},e.prototype._createSeriesView=function(t){return new i._ParallelAreaSeriesView(this,t)},e}(i._LineParallelPlotView);i._LineParallelAreaPlotView=t}(dv||(dv={})),function(n){"use strict";var t=function(s){function t(){return null!==s&&s.apply(this,arguments)||this}return __extends(t,s),t.prototype._layout=function(t,e,i){if(s.prototype._layout.call(this,t,e,i),this.__xs=[],this.__ys=[],0<this._pointViews().length){for(var n=0,o=this._pointViews();n<o.length;n++){var r=o[n]._location();null!=r&&(this.__xs.push(r.x),this.__ys.push(r.y))}this.__xs.push(this.__xs[0]),this.__ys.push(this.__ys[0])}},t.prototype._renderContent=function(t,e){t.beginTransform(),n._applyFillColor(t,this._plotView()._plotAreaView()._dvView()._colorProvider().getColor(0));var i=this._data().color;null!=i&&(t.fill=i),this._applyStyle(t,this._style()),e.hasSelectionInPlotArea&&(this._data()._selected()?(this._applyStyle(t,this._plotView()._plotAreaView()._dvView()._option().selectedStyle),this._applyStyle(t,this._plotView()._option().config.selectedStyle),e.apiSelectedStyle&&n._applyDataPointStyle(t,e.apiSelectedStyle)):(this._applyStyle(t,this._plotView()._plotAreaView()._dvView()._option().unselectedStyle),this._applyStyle(t,this._plotView()._option().config.unselectedStyle))),this._hover()&&this._applyStyle(t,this._plotView()._option().config.hoverStyle),0<this.__xs.length&&0<this.__ys.length&&t.drawPolygon(this.__xs,this.__ys),t.restoreTransform()},t.prototype._applyStyle=function(t,e){if(null!=e){var i;if(null!=e.fill&&(t.fill=n._fillColorFromOption(e.fill)),null!=e.opacity&&"string"==typeof t.fill&&"none"!=t.fill&&"transparent"!=t.fill)(i=n.core._Color.fromCss(t.fill)).alpha=i.alpha*e.opacity,t.fill=i.toCss();if(null!=e.stroke&&(t.stroke=n._fillColorFromOption(e.stroke)),null!=e.strokeOpacity&&"string"==typeof t.stroke&&"none"!=t.stroke&&"transparent"!=t.stroke)(i=n.core._Color.fromCss(t.stroke)).alpha=i.alpha*e.strokeOpacity,t.stroke=i.toCss();null!=e.strokeWidth&&(t.strokeWidth=e.strokeWidth),null!=e.strokeDasharray&&(t.strokeDasharray=e.strokeDasharray)}},t}(n._ParallelSeriesView);n._ParallelAreaSeriesView=t}(dv||(dv={})),function(i){"use strict";var t=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return __extends(e,t),e.prototype._legendSymbol=function(){return new i._AreaLegendSymbol},e.prototype._seriesViews=function(){return t.prototype._seriesViews.call(this)},e.prototype._createSeriesView=function(t){return new i._ParallelAreaSeriesView(this,t)},e}(i._RadialParallelPlotView);i._RadialParallelAreaPlotView=t}(dv||(dv={})),function(i){"use strict";var t=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return __extends(e,t),e.prototype._legendSymbol=function(){return new i._LineLegendSymbol(!1)},e.prototype._seriesViews=function(){return t.prototype._seriesViews.call(this)},e.prototype._createSeriesView=function(t){return new i._ParallelLineSeriesView(this,t)},e}(i._LineParallelPlotView);i._LineParallelLinePlotView=t}(dv||(dv={})),function(o){"use strict";var t=function(s){function t(){return null!==s&&s.apply(this,arguments)||this}return __extends(t,s),t.prototype._defaultStyle=function(){return new o.options._LineStyleOption({opacity:null,stroke:o.__Constant_Core_Style_Stroke,strokeWidth:1,strokeDasharray:null})},t.prototype._layout=function(t,e,i){if(s.prototype._layout.call(this,t,e,i),this.__xs=[],this.__ys=[],0<this._pointViews().length){for(var n=0,o=this._pointViews();n<o.length;n++){var r=o[n]._location();null!=r&&(this.__xs.push(r.x),this.__ys.push(r.y))}this.__xs.push(this.__xs[0]),this.__ys.push(this.__ys[0])}},t.prototype._renderContent=function(t,e){t.beginTransform(),o._applyLineStyle(t,this._defaultStyle());var i=this._plotView()._plotAreaView()._dvView()._colorProvider().getColor(0);null!=i&&(t.stroke=i);var n=this._data().color;null!=n&&(t.stroke=n),this._applyStyle(t,this._style()),e.hasSelectionInPlotArea&&(this._data()._selected()?(this._applyStyle(t,this._plotView()._plotAreaView()._dvView()._option().selectedStyle),this._applyStyle(t,this._plotView()._option().config.selectedStyle),e.apiSelectedStyle&&o._applyDataPointStyle(t,e.apiSelectedStyle)):(this._applyStyle(t,this._plotView()._plotAreaView()._dvView()._option().unselectedStyle),this._applyStyle(t,this._plotView()._option().config.unselectedStyle))),this._hover()&&this._applyStyle(t,this._plotView()._option().config.hoverStyle),0<this.__xs.length&&0<this.__ys.length&&t.drawLines(this.__xs,this.__ys),t.restoreTransform()},t.prototype._applyStyle=function(t,e){if(null!=e){var i;if(null!=e.fill&&(t.fill=o._fillColorFromOption(e.fill)),null!=e.opacity&&"string"==typeof t.fill&&"none"!=t.fill&&"transparent"!=t.fill)(i=o.core._Color.fromCss(t.fill)).alpha=i.alpha*e.opacity,t.fill=i.toCss();if(null!=e.stroke&&(t.stroke=o._fillColorFromOption(e.stroke)),null!=e.strokeOpacity&&"string"==typeof t.stroke&&"none"!=t.stroke&&"transparent"!=t.stroke)(i=o.core._Color.fromCss(t.stroke)).alpha=i.alpha*e.strokeOpacity,t.stroke=i.toCss();null!=e.strokeWidth&&(t.strokeWidth=e.strokeWidth),null!=e.strokeDasharray&&(t.strokeDasharray=e.strokeDasharray)}},t}(o._ParallelSeriesView);o._ParallelLineSeriesView=t}(dv||(dv={})),function(i){"use strict";var t=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return __extends(e,t),e.prototype._legendSymbol=function(){return new i._LineLegendSymbol(!1)},e.prototype._seriesViews=function(){return t.prototype._seriesViews.call(this)},e.prototype._createSeriesView=function(t){return new i._ParallelLineSeriesView(this,t)},e}(i._RadialParallelPlotView);i._RadialParallelLinePlotView=t}(dv||(dv={})),function(a){"use strict";var t=function(o){function t(t,e,i){var n=o.call(this)||this;return n.sweep=t,n.radius=e,n.innerRadius=i,n}return __extends(t,o),t.prototype.onStartAniamtion=function(t,e){o.prototype.onStartAniamtion.call(this,t,e)},t.prototype.onEndAnimation=function(t,e){o.prototype.onEndAnimation.call(this,t,e),this.fillAfter||e instanceof a._SunburstPointView&&(e._radius(this.radius),e._innerRadius(this.innerRadius),e._sweep(this.sweep))},t.prototype.applyTransformation=function(t,e,i){var n=this.from+(this.to-this.from)*t;if(i instanceof a._SunburstPointView){var o=this.radius-this.innerRadius,r=this.sweep;i._radius(o*n+this.innerRadius),i._sweep(r*n)}},t}(a.Animation),e=function(o){function t(t,e,i){var n=o.call(this,t,e,i)||this;return n.from=1,n.to=1.05,n}return __extends(t,o),t.prototype.applyTransformation=function(t,e,i){if(i instanceof a._SunburstPointView)if(this.keyframesType===a.AnimationKeyFramesType.Percentage){var n=this.from+(this.to-this.from)*t,o=this.radius-this.innerRadius,r=this.sweep;i._radius(o*n+this.innerRadius),i._sweep(r)}else{var s=this.from+(this.to-this.from)*t;i._radius(this.radius+s)}},t}(a._SunBurstLoadAnimation=t);a._SunBurstHoverAnimation=e}(dv||(dv={})),function(f){"use strict";var t=function(i){function t(t,e){return i.call(this,t,e)||this}return __extends(t,i),t.prototype._startPoint=function(){return this.__startPoint},t.prototype._endPoint=function(){return this.__endPoint},t.prototype._pointView=function(){return i.prototype._pointView.call(this)},t.prototype._layout=function(t,e,i){var n=this._pointView(),o=n._plotView(),r=f.TextPosition.Auto;null!=o._option().config.text.position&&(r=o._option().config.text.position),n._rectangle();var s=o._layoutView()._dataLabelsRectangle(),a=this._measure(t,new f.core.Size(Number.MAX_VALUE,Number.MAX_VALUE)),l=o._option().config.text.offset,_=null,u=null,h=n._center(),c=n._startAngle()+n._sweep()/2;if(r==f.TextPosition.Center){var p=n._innerRadius()+(n._radius()-n._innerRadius())/2;u=(_=new f.core.Point(h.x+Math.cos(c)*p,h.y+Math.sin(c)*p)).clone(),this._rotatedRectangle(new f.models._RotatedRectangle(u.x,u.y,a.width,a.height,c))}else{p=n._radius();_=new f.core.Point(h.x+Math.cos(c)*p,h.y+Math.sin(c)*p),r==f.TextPosition.Inside?(null!=l&&(p-=l),(u=new f.core.Point(h.x+Math.cos(c)*p,h.y+Math.sin(c)*p)).x>h.x?(u.x+a.width>s.right&&(u.x=s.right-a.width),u.y>h.y?(u.y+a.height>s.bottom&&(u.y=s.bottom-a.height),this._rotatedRectangle(new f.models._RotatedRectangle(u.x-a.width/2,u.y-a.height/2,a.width,a.height,0))):u.y<h.y?(u.y-a.height<s.top&&(u.y=s.top+a.height),this._rotatedRectangle(new f.models._RotatedRectangle(u.x-a.width/2,u.y+a.height/2,a.width,a.height,0))):this._rotatedRectangle(new f.models._RotatedRectangle(u.x-a.width/2,u.y,a.width,a.height,0))):u.x<h.x?(u.x-a.width<s.left&&(u.x=s.left+a.width),u.y>h.y?(u.y+a.height>s.bottom&&(u.y=s.bottom-a.height),this._rotatedRectangle(new f.models._RotatedRectangle(u.x+a.width/2,u.y-a.height/2,a.width,a.height,0))):u.y<h.y?(u.y-a.height<s.top&&(u.y=s.top+a.height),this._rotatedRectangle(new f.models._RotatedRectangle(u.x+a.width/2,u.y+a.height/2,a.width,a.height,0))):this._rotatedRectangle(new f.models._RotatedRectangle(u.x+a.width/2,u.y,a.width,a.height,0))):u.y>h.y?(u.y+a.height>s.bottom&&(u.y=s.bottom-a.height),this._rotatedRectangle(new f.models._RotatedRectangle(u.x,u.y-a.height/2,a.width,a.height,0))):u.y<h.y?(u.y-a.height<s.top&&(u.y=s.top+a.height),this._rotatedRectangle(new f.models._RotatedRectangle(u.x,u.y+a.height/2,a.width,a.height,0))):this._rotatedRectangle(new f.models._RotatedRectangle(u.x,u.y,a.width,a.height,0))):(null!=l&&(p+=l),(u=new f.core.Point(h.x+Math.cos(c)*p,h.y+Math.sin(c)*p)).x>h.x?(u.x+a.width>s.right&&(u.x=s.right-a.width),u.y>h.y?(u.y+a.height>s.bottom&&(u.y=s.bottom-a.height),this._rotatedRectangle(new f.models._RotatedRectangle(u.x+a.width/2,u.y+a.height/2,a.width,a.height,0))):u.y<h.y?(u.y-a.height<s.top&&(u.y=s.top+a.height),this._rotatedRectangle(new f.models._RotatedRectangle(u.x+a.width/2,u.y-a.height/2,a.width,a.height,0))):this._rotatedRectangle(new f.models._RotatedRectangle(u.x+a.width/2,u.y,a.width,a.height,0))):u.x<h.x?(u.x-a.width<s.left&&(u.x=s.left+a.width),u.y>h.y?(u.y+a.height>s.bottom&&(u.y=s.bottom-a.height),this._rotatedRectangle(new f.models._RotatedRectangle(u.x-a.width/2,u.y+a.height/2,a.width,a.height,0))):u.y<h.y?(u.y-a.height<s.top&&(u.y=s.top+a.height),this._rotatedRectangle(new f.models._RotatedRectangle(u.x-a.width/2,u.y-a.height/2,a.width,a.height,0))):this._rotatedRectangle(new f.models._RotatedRectangle(u.x-a.width/2,u.y,a.width,a.height,0))):u.y>h.y?(u.y+a.height>s.bottom&&(u.y=s.bottom-a.height),this._rotatedRectangle(new f.models._RotatedRectangle(u.x,u.y+a.height/2,a.width,a.height,0))):u.y<h.y?(u.y-a.height<s.top&&(u.y=s.top+a.height),this._rotatedRectangle(new f.models._RotatedRectangle(u.x,u.y-a.height/2,a.width,a.height,0))):this._rotatedRectangle(new f.models._RotatedRectangle(u.x,u.y,a.width,a.height,0)))}this.__startPoint=_,this.__endPoint=u},t}(f._DataLabelView);f._SunburstDataLabelView=t}(dv||(dv={})),function(h){"use strict";var t=function(u){function t(){var t=null!==u&&u.apply(this,arguments)||this;return t.__pointViews=[],t}return __extends(t,u),t.prototype._setChildren=function(t){var e;this._children=t,(e=this._pointViews()).push.apply(e,this._children)},t.prototype._createPointView=function(t){return new h._SunburstPointView(t,this)},t.prototype._data=function(){return u.prototype._data.call(this)},t.prototype._pointViews=function(){return this.__pointViews},t.prototype._offset=function(){return this._option().config.offset},t.prototype._innerRadius=function(){return this._option().config.innerRadius},t.prototype._sweep=function(){return this._option().config.sweep*Math.PI/180},t.prototype._startAngle=function(){return this._option().config.startAngle*Math.PI/180+3*Math.PI/2},Object.defineProperty(t.prototype,"name",{get:function(){return"Sunburst"},enumerable:!0,configurable:!0}),t.prototype._hitTest=function(t){var e=this._rectangle();if(null!=e&&e.contains(t))for(var i=0,n=this._children;i<n.length;i++){var o=n[i]._hitTest(t);if(null!=o)return o}return u.prototype._hitTest.call(this,t)},t.prototype._layout=function(t,e,i){this.__layout=new c(this),t.beginTransform(),h._applyStyle(t,this._option().config.style),h._applyTextStyle(t,this._option().config.textStyle);var n=e.left+e.width/2,o=e.top+e.height/2,r=this._startAngle(),s=this._sweep(),a=e.width<e.height?e.width/2:e.height/2,l=this._innerRadius()*a,_=this._offset();this.__layout.covert(this.viewsTree,n,o,r,s,l,a,_,t),t.restoreTransform(),u.prototype._layout.call(this,t,e,i)},t.prototype._renderContent=function(t,e){if(t.beginTransform(),h._applyStyle(t,this._option().config.style),h._applyTextStyle(t,this._option().config.textStyle),this._plotAreaView()){h._Util.sort(this._children,function(t,e){return t!=e&&t._hover()});for(var i=0;i<this._children.length;++i){var n=this._children[i];this.__renderChild(t,e,n)}}t.restoreTransform()},t.prototype._createData=function(t){return new h.models._SunburstPlotData(this,t,this._option())},t.prototype._loadData=function(t){if(u.prototype._loadData.call(this,t),!(this._layoutView()instanceof h._TrellisCellLayoutView)){var e=this._data();new h.models._HierarchicalLegendGenerator(this._legendManager(),this._plotAreaView()._legendManager())._generate([e],this._overlayViews()),(new h.models._HierarchicalConditionalFormattingRuleRunner)._apply(e)}},t}(h._HierarchicalPlotView);h._SunburstPlotView=t;var u=function(){function t(t,e,i,n,o,r,s,a,l){this.vs=t,this.startAngle=n,this.endAngle=o,this.innerRadius=r,this.radius=s,this.sum=a,this.depth=l,this.cx=e,this.cy=i}return Object.defineProperty(t.prototype,"sweep",{get:function(){return this.endAngle-this.startAngle},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"h",{get:function(){return this.radius-this.innerRadius},enumerable:!0,configurable:!0}),t}(),c=function(){function t(t){this.showtitle=!0,this._depth=0,this.offset=.1,this._cx=0,this._cy=0,this._radiusUnit=0,this.__plotView=t}return t.prototype.covert=function(t,e,i,n,o,r,s,a,l){this._layoutList=[],this.calcDeep(t.children),this.offset=a*(s-r),this._radiusUnit=(s-r-this.offset)/(this._depth-1),this._cx=e,this._cy=i;var _=new u(t.children,this._cx,this._cy,n,n+o,r,r+this._radiusUnit,Math.abs(t._value()),0);this.calcSum(_),this._preangle=_.sweep/_.sum,this.layoutItems(_,l)},Object.defineProperty(t.prototype,"layoutList",{get:function(){return this._layoutList},enumerable:!0,configurable:!0}),t.prototype.calcDeep=function(t){this._depth=0,this._depth=this._calcDeep(t)+1},t.prototype._calcDeep=function(t){if(t&&0<t.length){for(var e=0,i=0;i<t.length;i++){var n=this._calcDeep(t[i].children);e<n&&(e=n)}return++e}return 0},t.prototype.layoutItems=function(t,e){for(var i=t.startAngle,n=0;n<t.vs.length;++n){var o=t.vs[n],r=o._value()*this._preangle,s=t.cx,a=t.cy;if(0==t.depth&&(s=t.cx+this.offset*Math.cos(i+r/2),a=t.cy+this.offset*Math.sin(i+r/2)),o.layout(new h.core.Point(s,a),t.radius,t.innerRadius,i,r),o.children&&0<o.children.length){var l=new u(o.children,s,a,i,i+r,t.radius,t.radius+this._radiusUnit,0,t.depth+1);this.calcSum(l),this.layoutItems(l,e)}i+=r}},t.prototype.calcSum=function(t){for(var e=0,i=0;i<t.vs.length;++i)e+=t.vs[i]._value();t.sum=e},t}()}(dv||(dv={})),function(l){"use strict";var t=function(e){function t(t){return e.call(this,t)||this}return __extends(t,e),t.prototype._createPoints=function(t){var e=[],i=t._startAngle(),n=t._sweep();0==n&&(n=1);var o=n;4<n?o=n/3:2<n&&(o=n/2);for(var r=t._center(),s=t._radius(),a=i;a<=i+n;a+=o)e.push(new l.core.Point(r.x+Math.cos(a)*s,r.y+Math.sin(a)*s));if(0===(s=t._innerRadius()))e.push(t._center().clone());else for(a=i;a<=i+n;a+=o)e.push(new l.core.Point(r.x+Math.cos(a)*s,r.y+Math.sin(a)*s));return e},t}(l._PointAdorner);l._SunburstPointAdorner=t}(dv||(dv={})),function(h){"use strict";var c=function(){function t(){}return t.clampAngle=function(t){var e=(t+180)%360-180;return e<-180&&(e+=360),e},t.isRectOverlap=function(t,e){return!(!t||!e)&&!(t.left>e.right||t.top>e.bottom||e.left>t.right||e.top>t.bottom)},t}(),t=function(u){function t(t,e){var i=u.call(this,t,e)||this;return i.children=[],i}return __extends(t,u),t.prototype._plotView=function(){return u.prototype._plotView.call(this)},t.prototype._center=function(t){if(null==t)return this.__center;this.__center=t},t.prototype._radius=function(t){if(null==t)return this.__radius;this.__radius=t},t.prototype._innerRadius=function(t){if(null==t)return this.__innerRadius;this.__innerRadius=t},t.prototype._startAngle=function(t){if(null==t)return this.__startAngle;this.__startAngle=t},t.prototype._sweep=function(t){if(null==t)return this.__sweep;this.__sweep=t},t.prototype._data=function(){return u.prototype._data.call(this)},t.prototype._selectionAdorner=function(){return new h._SunburstPointAdorner(this)},t.prototype.layout=function(t,e,i,n,o){this.__center=t,this.__radius=e,this.__innerRadius=i,this.__startAngle=n,this.__sweep=o},t.prototype._calculateColor=function(){var t=this._data()._color();return null==t&&(t=this._plotView()._plotAreaView()._dvView()._colorProvider().getColor(0)),t},t.prototype._renderContent=function(t,e){var i=this._calculateColor(),n=this._data();t.beginTransform(),h._applyDataPointStyle(t,this._defaultStyle()),t.fill=i,t.stroke=i,h._applyGStyle(t,this._plotView()._plotAreaView()._dvView()._option().style),h._applyDataPointStyle(t,n._style()),e.hasSelectionInPlotArea&&(n._selected()?(h._applyDataPointStyle(t,this._plotView()._plotAreaView()._dvView()._option().selectedStyle),h._applyDataPointStyle(t,this._plotView()._option().config.selectedStyle),e.apiSelectedStyle&&h._applyDataPointStyle(t,e.apiSelectedStyle)):(h._applyDataPointStyle(t,this._plotView()._plotAreaView()._dvView()._option().unselectedStyle),h._applyDataPointStyle(t,this._plotView()._option().config.unselectedStyle))),this._hover()&&h._applyDataPointStyle(t,this._plotView()._option().config.hoverStyle),t.drawDonutSegment(this._center().x,this._center().y,this._radius(),this._innerRadius()*(1-(this.scale()-1)/2),this._startAngle(),this._sweep()),t.restoreTransform()},t.prototype._createDataLabelView=function(){var t=[],e=h.plugins._Plugins._dataContentProvider("Default");return null!=e&&(t=e.toLines(this._data()._dataLabelContentSite())),null!=t&&0<t.length?new h._SunburstDataLabelView(this,t):null},t.prototype._createHoverAnimation=function(t){if(null==t)return null;var e=new h._SunBurstHoverAnimation(this._sweep(),this._radius(),this._innerRadius());return e.duration=t.duration,null!=t.scale&&("number"==typeof t.scale?(e.keyframesType=h.AnimationKeyFramesType.Percentage,e.from=1,e.to=t.scale):(e.keyframesType=h.AnimationKeyFramesType.Pixel,e.from=0,e.to=h.core._Parser._parseCssPixel(t.scale))),e.fillAfter=!0,e},t.prototype._hitTest=function(t){var e=t.x-this._center().x,i=t.y-this._center().y,n=e*e+i*i,o=this._innerRadius()*this._innerRadius(),r=this._radius()*this._radius();if(o<=n&&n<=r){var s=90*this._sweep()/Math.PI,a=c.clampAngle(180*this._startAngle()/Math.PI+s),l=180*Math.atan2(i,e)/Math.PI,_=c.clampAngle(a-l);if(Math.abs(_)<=s)return new h.HitTestResult(t,this._data(),this,h.ElementType.DataPoint)}return u.prototype._hitTest.call(this,t)},t}(h._HierarchicalPointView);h._SunburstPointView=t}(dv||(dv={})),function(t){"use strict";var e=function(i){function t(t){var e=i.call(this)||this;return e.rect=t.clone(),e}return __extends(t,i),t.prototype.onEndAnimation=function(t,e){i.prototype.onEndAnimation.call(this,t,e),e._rectangle(this.rect.clone())},t.prototype.applyTransformation=function(t,e,i){var n=this.from+(this.to-this.from)*t,o=this.rect.clone();o.top=this.rect.top+this.rect.height-this.rect.height*n,o.height=this.rect.height*n,i._rectangle(o)},t}(t.Animation);t._TreeMapLoadAnimation=e}(dv||(dv={})),function(s){"use strict";var t=function(o){function t(t,e,i){var n=o.call(this,t,e)||this;return n.children=[],n.parent=i,n._labelStyle=n.parent._labelStyle,n}return __extends(t,o),t.prototype.layout=function(t,e,i){if(!this.hidden){var n=this.parent._label();this._labelView._label(n);var o=t.measureString(n,null,null,this._labelStyle);o.width>e.width&&(this._labelView._label(s._Util.getTextByMaxLength(t,n,e.width-15,this._labelStyle)),o=t.measureString(this._labelView._label(),null,null,this._labelStyle)),this._rectangle(new s.core.Rect(e.left,e.top,e.width,1.5*o.height));var r=new s.core.Rect(e.left+(this._rectangle().width-o.width)/2,e.top+(this._rectangle().height-o.height)/2,o.width,o.height);return this._labelView.layout(t,r,i),o}},t.prototype._data=function(){return o.prototype._data.call(this)},t.prototype._renderContent=function(t,e){var i=this._data(),n=this._data()._root();if(null!=n){t.beginTransform(),s._applyDataPointStyle(t,this._defaultStyle()),t.fill=i.color,t.stroke=i.color,s._applyGStyle(t,this._plotView()._plotAreaView()._dvView()._option().style),s._applyDataPointStyle(t,this._data()._style()),e.hasSelectionInPlotArea&&(this._data()._selected()?(s._applyDataPointStyle(t,n._plot()._plotView()._plotAreaView()._dvView()._option().selectedStyle),s._applyDataPointStyle(t,n._plot()._plotView()._option().config.selectedStyle),e.apiSelectedStyle&&s._applyDataPointStyle(t,e.apiSelectedStyle)):(s._applyDataPointStyle(t,n._plot()._plotView()._plotAreaView()._dvView()._option().unselectedStyle),s._applyDataPointStyle(t,n._plot()._plotView()._option().config.unselectedStyle)));var o=s._Util.scale(this._rectangle().clone(),this.scale());e.hovered&&s._applyDataPointStyle(t,n._plot()._option().config.hoverStyle),o=this.calcHoverdRect(),t.drawRect(o.left,o.top,o.width,o.height),this.hoverRect=o,this._labelView&&this._labelView.render(t,o,e),t.restoreTransform()}},t.prototype._hitTest=function(t){var e=this.hoverRect;return null!=e&&e.contains(t)?new s.HitTestResult(t,this._data(),this,s.ElementType.DataPoint):null},t.prototype._hover=function(t){if(arguments.length<=0)return o.prototype._hover.call(this);var e;o.prototype._hover.call(this)!=t&&(o.prototype._hover.call(this,t),t?(null!=this.parent.animation&&this.parent.animation.Interrupt(this.parent),null!=(e=this.parent._hoverAnimation())&&this.parent.__startAnimation(e)):(null!=this.parent.animation&&this.parent.animation.Interrupt(this.parent),null!=(e=this.parent._reversedHoverAnimation())&&this.parent.__startAnimation(e)))},t.prototype.calcHoverdRect=function(){var t=this._rectangle().height*this.parent._rectangle().height/this.parent._preRect.height;return new s.core.Rect(this.parent._rectangle().left,this.parent._rectangle().top,this.parent._rectangle().width,t)},t}(s._PointView);s._TreeMapHeaderView=t}(dv||(dv={})),function(a){"use strict";var t=function(i){function t(t){var e=i.call(this)||this;return e.rect=t.clone(),e.from=1,e.to=1.05,e}return __extends(t,i),t.prototype.onEndAnimation=function(t,e){i.prototype.onEndAnimation.call(this,t,e),this.fillAfter||null!=this.rect&&e._rectangle(this.rect.clone())},t.prototype.applyTransformation=function(t,e,i){if(this.keyframesType===a.AnimationKeyFramesType.Percentage){var n=this.from+(this.to-this.from)*t;i.scale(n)}else{var o=this.from+(this.to-this.from)*t,r=this.rect.width+o,s=this.rect.height+o;i.height(s),i.width(r)}},t}(a.Animation);a._TreemapHoverAnimation=t}(dv||(dv={})),function(r){"use strict";var t=function(n){function t(t,e){var i=n.call(this)||this;return i.__label=null,i.__label=e,i.parent=t,i}return __extends(t,n),t.prototype._label=function(t){if(arguments.length<=0)return this.__label;this.__label!=t&&(this.__label=t)},t.prototype.layout=function(t,e,i){this._rectangle(e)},t.prototype.render=function(t,e,i){var n,o;n=this.parent._data(),o=this.parent._plotView(),t.beginTransform(),r._applyTextStyle(t,o._option().config.textStyle),r._applyTextStyle(t,n.text.textStyle),r._applyGStyle(t,n.text.style),this.calcLabelRectByRect(t,e),this.parent instanceof r._TreeMapHeaderView?t.drawString(this._label(),new r.core.Point(this._rectangle().left,this._rectangle().top+this._rectangle().height),r.__Constant_Core_Label_ClassName):this.parent instanceof r._TreeMapPointView&&t.drawString(this._label(),new r.core.Point(this._rectangle().left+r.__Constant_Core_LABEL_PADDING,this._rectangle().top-r.__Constant_Core_LABEL_PADDING),r.__Constant_Core_Label_ClassName),t.restoreTransform()},t.prototype.calcLabelRectByRect=function(t,e){if(this.parent instanceof r._TreeMapHeaderView){var i=t.measureString(this._label(),null,null,this.parent._labelStyle);i.width>e.width&&(this._label(r._Util.getTextByMaxLength(t,this._label(),e.width-15,this.parent._labelStyle)),i=t.measureString(this._label(),null,null,this.parent._labelStyle)),this._rectangle(new r.core.Rect(e.left+(e.width-i.width)/2,e.top+(e.height-i.height)/2,i.width,i.height))}else if(this.parent instanceof r._TreeMapPointView){var n=t.measureString(this._label(),null,null,this.parent._labelStyle);n.width>e.width&&(this._label(r._Util.getTextByMaxLength(t,this._label(),e.width-15,this.parent._labelStyle)),n=t.measureString(this._label(),null,null,this.parent._labelStyle)),this._rectangle(new r.core.Rect(e.left,e.bottom,n.width,n.height))}},t}(r._View);r._TreeMapLabelView=t}(dv||(dv={})),function(r){"use strict";var t=function(n){function t(){var t=null!==n&&n.apply(this,arguments)||this;return t.__pointViews=[],t}return __extends(t,n),Object.defineProperty(t.prototype,"viewsTree",{get:function(){return this.__viewsTree},set:function(t){null!=t&&(this.__viewsTree=t)},enumerable:!0,configurable:!0}),t.prototype._createPointView=function(t,e){var i=new r._TreeMapPointView(t,this);i.children=e;var n=i._label();if(n){var o=new r._TreeMapLabelView(i,n);i.children&&0<i.children.length?(i.header=new r._TreeMapHeaderView(i._data(),i._plotView(),i),o.parent=i.header,i.header._labelView=o):i._labelView=o}return i},Object.defineProperty(t.prototype,"name",{get:function(){return"TreeMap"},enumerable:!0,configurable:!0}),t.prototype._data=function(){return n.prototype._data.call(this)},t.prototype._pointViews=function(){return this.__pointViews},t.prototype._hitTest=function(t){var e=this._rectangle();if(null!=e&&e.contains(t)){var i;if(this.__hoverPointView&&null!=(i=this.__hoverPointView._hitTest(t)))return i;if(null!=(i=this.__viewsTree._hitTest(t)))return i}return n.prototype._hitTest.call(this,t)},t.prototype._loadData=function(t){if(n.prototype._loadData.call(this,t),!(this._layoutView()instanceof r._TrellisCellLayoutView)){var e=this._data();new r.models._HierarchicalLegendGenerator(this._legendManager(),this._plotAreaView()._legendManager())._generate([e],this._overlayViews()),(new r.models._HierarchicalConditionalFormattingRuleRunner)._apply(e)}},t.prototype._layout=function(t,e,i){this.viewsTree&&(this._pointViews().length=0,t.beginTransform(),r._applyStyle(t,this._option().config.style),r._applyTextStyle(t,this._option().config.textStyle),this._children=i.children=[],this.viewsTree.layout(t,e,i),t.restoreTransform(),n.prototype._layout.call(this,t,e,i))},t.prototype._renderContent=function(t,e){if(this.viewsTree){t.beginTransform(),r._applyStyle(t,this._option().config.style),r._applyTextStyle(t,this._option().config.textStyle),this.__renderChild(t,e,this.__viewsTree);var i=e.hoveredPointView;i&&(this.__hoverPointView=i)._render(t,e),delete e.hoveredPointView,t.restoreTransform()}},t.prototype.__renderChild=function(t,e,i){!i.__preparingAnimation&&i._visible()&&(null==i.animation||i.animation.isAniamtionEnd()?(null!=i.animation&&i.animation.isAniamtionEnd()&&i.animation.state!=r.AnimationState.End&&(i.animation.state=r.AnimationState.End,i.animation.onEndAnimation(t,i),i.animation.__innerAnimationEnd(t,i),i.animation=null),t.beginTransform(),i._render(t,e)):(t.beginTransform(),i.animation.state==r.AnimationState.BeforeStart&&(i.animation.onStartAniamtion(t,i),i.animation.__innerAnimationStart(t,i),i.animation.state=r.AnimationState.Animating),i.animation.applyTransformation(i.animation.scale(Date.now()),t,i),(e.animationView=i)._render(t,e),delete e.animationView),t.restoreTransform())},t.prototype._createData=function(t){return new r.models._TreemapPlotData(this,t,this._option())},t}(r._HierarchicalPlotView);r._TreemapPlotView=t}(dv||(dv={})),function(M){"use strict";var t=function(n){function t(t,e){var i=n.call(this,t,e)||this;return i.__title=null,i.children=[],i._labelStyle=new M.options._StyleOption({}),i}return __extends(t,n),t.prototype._plotView=function(){return n.prototype._plotView.call(this)},t.prototype.scale=function(t){return null==t||isNaN(t)||this._rectangle(M._Util.scale(this._preRect.clone(),t)),n.prototype.scale.call(this,t)},t.prototype.width=function(t){isNaN(t)||t<0||(this._rectangle().left=this._rectangle().left-(t-this._rectangle().width)/2,this._rectangle().width=t)},t.prototype.height=function(t){isNaN(t)||t<0||(this._rectangle().top=this._rectangle().top-(t-this._rectangle().height)/2,this._rectangle().height=t)},t.prototype.layout=function(t,e,i){this._rectangle(e.clone()),this._preRect=e.clone();var n=this._data().value;if(!this.hidden){if(i.children.push(this),this.children&&0<this.children.length){this.children.sort(function(t,e){return e._data().value-t._data().value});var o=this._label();if(o&&this.header&&null!=this.header._labelView){var r=this.header.layout(t,e,i);this.header._rectangle().height>e.height?this.header.hidden=!0:(this.header.hidden=!1,r=this.header.layout(t,e,i),e=new M.core.Rect(e.left,e.top+1.5*r.height,e.width,e.height-1.5*r.height))}for(var s=n=0,a=this.children;s<a.length;s++){n+=(h=a[s])._data().value}for(var l=e.height*e.width/n,_=0,u=this.children;_<u.length;_++){var h;(h=u[_]).hidden=!1,h._data().value*l<3&&(h.hidden=!0,n-=h._data().value,l=e.height*e.width/n)}o&&this.header&&(0<n?null!=this._labelView&&(this._labelView.parent=this.header,this.header._labelView=this._labelView,this._labelView=null):(null!=this.header._labelView&&((this.header._labelView.parent=this)._labelView=this.header._labelView,this.header._labelView=null),this.header.hidden=!0))}if(null==this._labelView)for(var c=e.width*e.height/n,p=0;p<this.children.length&&!M._Util.isNil(e);){for(var f=[],d=0,g=0,y=p;y<this.children.length;++y){var m,v=this.children[y]._data(),w=0;if(e.height<e.width){if(m=(d+=Math.abs(v._value()))*c/e.height,w=Math.abs(this.children[p]._data()._value())*c/m,0!=g){var b=m<w?w/m:m/w;if(!(Math.abs(b-1)<Math.abs(g-1)))break;g=b,f.length=0}else g=m<w?w/m:m/w;f.length=0;for(var x=p;x<=y;x++){var S=Math.abs(this.children[x]._data()._value())*c/m;P=x===p?new M.core.Rect(e.left,e.top,m,w):new M.core.Rect(f[x-p-1].left,f[x-p-1].bottom,m,S),f.push(P)}}else{if(w=(d+=Math.abs(v._value()))*c/e.width,m=Math.abs(this.children[p]._data()._value())*c/w,0!=g){b=m<w?w/m:m/w;if(!(Math.abs(b-1)<Math.abs(g-1)))break;g=b,f.length=0}else g=m<w?w/m:m/w;f.length=0;for(x=p;x<=y;x++){var P,V=Math.abs(this.children[x]._data()._value())*c/w;P=x===p?new M.core.Rect(e.left,e.top,m,w):new M.core.Rect(f[x-p-1].right,f[x-p-1].top,V,w),f.push(P)}}}for(var C=0,A=f;C<A.length;C++){var D=A[C];this.children[p].layout(t,D,i),p++}var T=M._Util.mergeRect.apply(this,f);e=this.clipRect(T,e)}else{this._labelView._label(this._label());var L=t.measureString(this._label(),null,null,this._labelStyle);L.width>e.width&&(this._labelView._label(M._Util.getTextByMaxLength(t,this._label(),e.width-15,this._labelStyle)),L=t.measureString(this._labelView._label(),null,null,this._labelStyle));var O=new M.core.Rect(e.left,e.bottom,L.width,L.height);this._labelView.layout(t,O,i)}}},t.prototype.clipRect=function(t,e){return Math.abs(t.width-e.width)<=1e-4?new M.core.Rect(t.left,t.bottom,t.width,e.bottom-t.bottom):new M.core.Rect(t.right,t.top,e.right-t.right,t.height)},t.prototype._label=function(t){if(arguments.length<=0){if(null==this.__title){var e=M.plugins._Plugins._dataContentProvider("Default");null!=e&&(this.__title=e.toLines(this._data()._dataLabelContentSite()).join())}return this.__title}this.__title!=t&&(this.__title=t)},t.prototype._data=function(){return n.prototype._data.call(this)},t.prototype._renderContent=function(t,e){if(!this.hidden){var i=this._data(),n=this._data()._root();if(null!=n){t.beginTransform(),M._applyDataPointStyle(t,this._defaultStyle()),t.fill=i.color,t.stroke=i.color,M._applyGStyle(t,this._plotView()._plotAreaView()._dvView()._option().style),M._applyDataPointStyle(t,this._data()._style()),e.hasSelectionInPlotArea&&(this._data()._selected()?(M._applyDataPointStyle(t,n._plot()._plotView()._plotAreaView()._dvView()._option().selectedStyle),M._applyDataPointStyle(t,n._plot()._plotView()._option().config.selectedStyle),e.apiSelectedStyle&&M._applyDataPointStyle(t,e.apiSelectedStyle)):(M._applyDataPointStyle(t,n._plot()._plotView()._plotAreaView()._dvView()._option().unselectedStyle),M._applyDataPointStyle(t,n._plot()._plotView()._option().config.unselectedStyle)));(e.hovered||this._hover())&&M._applyDataPointStyle(t,n._plot()._option().config.hoverStyle),this._hover()||this.header&&this.header._hover()?(!0,(e.hoveredPointView=this).header&&(e.hovered=!0)):this===this._plotView().viewsTree?!0:this===e.animationView?(e.hovered&&this.animation.Interrupt(this),!0):this._rectangle(this.calcHoverdRect()),this.header&&!this.header.hidden&&this.header._render(t,e);var o=this._rectangle();0===this.children.length&&(t.drawRect(o.left,o.top,o.width,o.height),this._labelView&&this._labelView.render(t,o,e));for(var r=0,s=this.children;r<s.length;r++){var a=s[r];this._plotView().__renderChild(t,e,a)}this.header&&this.header._hover()&&delete e.hovered,t.restoreTransform()}}},t.prototype._hoverAnimation=function(){if(null==this.__pointHoverAnimation){var t=this._plotView()._option().config.hoverAnimation;"boolean"!=typeof t&&(this.__pointHoverAnimation=this._createHoverAnimation(t))}return this.__pointHoverAnimation&&(this.__pointHoverAnimation.start=0,this.__pointHoverAnimation.rect=this._preRect.clone(),this.__pointHoverAnimation.state=M.AnimationState.BeforeStart),this.__pointHoverAnimation},t.prototype._createHoverAnimation=function(t){if(null==t)return null;var e=new M._TreemapHoverAnimation(this._preRect);return e.duration=t.duration,null!=t.scale&&("number"==typeof t.scale?(e.keyframesType=M.AnimationKeyFramesType.Percentage,e.from=1,e.to=t.scale):(e.keyframesType=M.AnimationKeyFramesType.Pixel,e.from=0,e.to=M.core._Parser._parseCssPixel(t.scale))),e.fillAfter=!0,e},t.prototype._hitTest=function(t){var e=this._rectangle();if(!e||!e.contains(t))return null;if(0<this.children.length){var i;if(this.header){if(this.header._hover())return new M.HitTestResult(t,this._data(),this.header,M.ElementType.DataPoint);i=this.header._hitTest(t)}if(null!=i)return i;for(var n=0,o=this.children;n<o.length;n++){if(null!=(i=o[n]._hitTest(t)))return i}}else if(null!=e&&e.contains(t))return new M.HitTestResult(t,this._data(),this,M.ElementType.DataPoint);return null},t.prototype.calcHoverdRect=function(){var t=this.parent._preRect,e=this._preRect.clone(),i=this.parent._rectangle();return e.width=this._preRect.width*i.width/t.width,e.height=this._preRect.height*i.height/t.height,e.top=(this._preRect.top-t.top)*i.height/t.height+i.top,e.left=(this._preRect.left-t.left)*i.width/t.width+i.left,e},t}(M._HierarchicalPointView);M._TreeMapPointView=t}(dv||(dv={})),dv||(dv={}),function(a){"use strict";var t=function(){function t(t,e){this.__dvView=t,this.__scrollbar=new a.Scrollbar(e.host,e.option),this.__xScrollViews=e.xScrollViews||[],this.__yScrollViews=e.yScrollViews||[],this.__xyScrollViews=e.xyScrollViews||[],this.__dvView._scrollableViewManager()._addView(this.__xScrollViews.concat(this.__yScrollViews).concat(this.__xyScrollViews)),this._init()}return t.prototype._init=function(){var o=this,r=o.__dvView._scrollableViewManager(),s=o.__scrollbar;s.on("Scrolled",function(t){if(t.scrollOrientation===a.ScrollOrientation.VerticalScroll){var e=o.__yScrollViews,i=o.__xyScrollViews;e.forEach(function(e){e._scrollTo(0,s.scrollTop()),r._getAboveViews(e).forEach(function(t){t._redraw(a.core.Rect.intersection(t._rectangle(),e._rectangle()))})}),i.forEach(function(e){e._scrollTo(s.scrollLeft(),s.scrollTop()),r._getAboveViews(e).forEach(function(t){t._redraw(a.core.Rect.intersection(t._rectangle(),e._rectangle()))})})}else{var n=o.__xScrollViews;i=o.__xyScrollViews;n.forEach(function(e){e._scrollTo(s.scrollLeft(),0),r._getAboveViews(e).forEach(function(t){t._redraw(a.core.Rect.intersection(t._rectangle(),e._rectangle()))})}),i.forEach(function(e){e._scrollTo(s.scrollLeft(),s.scrollTop()),r._getAboveViews(e).forEach(function(t){t._redraw(a.core.Rect.intersection(t._rectangle(),e._rectangle()))})})}})},t.prototype._addXScrollView=function(t){Array.isArray(t)||(t=[t]),this._addScrollViews(this.__xScrollViews,t)},t.prototype._addYScrollView=function(t){Array.isArray(t)||(t=[t]),this._addScrollViews(this.__yScrollViews,t)},t.prototype._addXYScrollView=function(t){Array.isArray(t)||(t=[t]),this._addScrollViews(this.__xyScrollViews,t)},t.prototype._addScrollViews=function(t,e){for(var i=this.__dvView._scrollableViewManager(),n=0;n<e.length;n++){var o=e[n];-1===t.indexOf(o)&&(t.push(o),i._addView(o))}},t.prototype._update=function(t){this.__scrollbar.update(t)},t.prototype.dispose=function(){var t=this.__xScrollViews.concat(this.__yScrollViews).concat(this.__xyScrollViews);this.__dvView._scrollableViewManager()._removeView(t),this.__scrollbar.dispose(),this.__scrollbar=null},t}();a._DvScrollbar=t}(dv||(dv={})),function(t){"use strict";var e=function(){function t(){this.__scrollableViews=[]}return t.prototype._scrollableViews=function(){return this.__scrollableViews.slice(0)},t.prototype._addView=function(t){Array.isArray(t)||(t=[t]);for(var e=0;e<t.length;e++)-1===this.__scrollableViews.indexOf(t[e])&&this.__scrollableViews.push(t[e])},t.prototype._removeView=function(t){Array.isArray(t)||(t=[t]);for(var e=0;e<t.length;e++){var i=this.__scrollableViews.indexOf(t[e]);0<=i&&this.__scrollableViews.splice(i,1)}},t.prototype._getAboveViews=function(e){return this.__scrollableViews.filter(function(t){return t._zIndex()>e._zIndex()&&t._rectangle().intersectsWith(e._rectangle())}).sort(function(t,e){return t._zIndex()-e._zIndex()})},t}();t._ScrollableViewManager=e}(dv||(dv={})),function(t){"use strict";var e,i,n,o,r,s=("undefined"!=typeof window&&("ontouchstart"in window||window.DocumentTouch&&document instanceof window.DocumentTouch)?(e="touchstart",i="touchmove",n="touchend"):"undefined"!=typeof navigator&&navigator.msMaxTouchPoints&&(window.MSPointerEvent?(e="MSPointerDown",n=i="MSPointerMove"):window.PointerEvent&&(e="pointerdown",i="pointermove",n="pointerup")),{TOUCH_START:e,TOUCH_MOVE:i,TOUCH_END:n}),a="Scrolled";(r=o=t.ScrollOrientation||(t.ScrollOrientation={}))[r.HorizontalScroll=0]="HorizontalScroll",r[r.VerticalScroll=1]="VerticalScroll";var l=function(){function t(t,e){e=e||{},this.__host=t,this.__option=e,this.__event=new h,this.__touchIntervalId=null,this.__observer=null,this.__scrollXTimeoutId=null,this.__scrollYTimeoutId=null,this.__containerLeft=0,this.__containerTop=0,this.__containerWidth=0,this.__containerHeight=0,this.__contentWidth=0,this.__contentHeight=0,this.__scrollLeft=0,this.__scrollTop=0,this.__isScrollXActive=!1,this.__isScrollYActive=!1,this.__thumbXLeft=0,this.__thumbXWidth=0,this.__thumbYTop=0,this.__thumbYHeight=0,this.__trackYMarginHeight=0,this.__trackYHeight=0,this.__trackXMarginWidth=0,this.__trackXWidth=0,this.__scrollbar=this._createElement("div","gcdv-scrollbar",{width:0,height:0,position:"relative"}),this.__trackX=this._createElement("div","gcdv-scrollbar-trackX",{position:"absolute"}),this.__thumbX=this._createElement("div","gcdv-scrollbar-thumbX"),this.__trackX.appendChild(this.__thumbX),this.__trackY=this._createElement("div","gcdv-scrollbar-trackY",{position:"absolute"}),this.__thumbY=this._createElement("div","gcdv-scrollbar-thumbY"),this.__trackY.appendChild(this.__thumbY),this.__scrollbar.appendChild(this.__trackX),this.__scrollbar.appendChild(this.__trackY),this.__host.insertBefore(this.__scrollbar,this.__host.firstChild),this.update(),this._bindEvents()}return t.prototype.scrollLeft=function(){return this.__scrollLeft},t.prototype.scrollTop=function(){return this.__scrollTop},t.prototype.dispose=function(){this.__observer&&this.__observer.disconnect(),this.__event.off(),this.__host.removeChild(this.__scrollbar)},t.prototype.update=function(t){var e,i,n=this.__host;t&&this._extend(this.__option,t),(t=this.__option).containerRect&&(e=t.containerRect,i=t.contentSize),this.__containerHeight=e?(this.__containerLeft=e.left,this.__containerTop=e.top,this.__containerWidth=e.width,e.height):(this.__containerLeft=0,this.__containerTop=0,this.__containerWidth=n.clientWidth,n.clientHeight),this.__contentHeight=i?(this.__contentWidth=i.width,i.height):(this.__contentWidth=n.scrollWidth,n.scrollHeight);var o=this._getStyle(this.__trackX);this.__trackXMarginWidth=this._toInt(o.marginLeft)+this._toInt(o.marginRight),this.__trackXWidth=this.__containerWidth-this.__trackXMarginWidth;var r=this._getStyle(this.__trackY);this.__trackYMarginHeight=this._toInt(r.marginTop)+this._toInt(r.marginBottom),this.__trackYHeight=this.__containerHeight-this.__trackYMarginHeight;var s=!1!==t.xscroll,a=!1!==t.yscroll;s&&this.__contentWidth>this.__containerWidth+.5?(this.__isScrollXActive=!0,this.__trackXWidth=this.__containerWidth-this.__trackXMarginWidth,this.__thumbXWidth=this._getThumbXSize(),this.__scrollbar.classList.add("gcdv-active-x")):(this.__isScrollXActive=!1,this.__trackXWidth=0,this.__thumbXWidth=0,this.__scrollbar.classList.remove("gcdv-active-x")),a&&this.__contentHeight>this.__containerHeight+.5?(this.__isScrollYActive=!0,this.__trackYHeight=this.__containerHeight-this.__trackYMarginHeight,this.__thumbYHeight=this._getThumbYSize(),this.__scrollbar.classList.add("gcdv-active-y")):(this.__isScrollYActive=!1,this.__trackYHeight=0,this.__thumbYHeight=0,this.__scrollbar.classList.remove("gcdv-active-y")),this._updatePosition()},t.prototype._updatePosition=function(){var t=this.__host,e=this.__option;this.__isScrollXActive?this.__thumbXLeft=this.__scrollLeft*(this.__trackXWidth-this.__thumbXWidth)/(this.__contentWidth-this.__containerWidth):this.__thumbXLeft=0,this.__isScrollYActive?this.__thumbYTop=this.__scrollTop*(this.__trackYHeight-this.__thumbYHeight)/(this.__contentHeight-this.__containerHeight):this.__thumbYTop=0,this.__thumbXLeft=Math.min(this.__thumbXLeft,this.__trackXWidth-this.__thumbXWidth),this.__thumbYTop=Math.min(this.__thumbYTop,this.__trackYHeight-this.__thumbYHeight);var i=e.trackXOffset||0,n=e.trackYOffset||0;this._setCss(this.__scrollbar,{left:t.scrollLeft+this.__containerLeft,top:t.scrollTop+this.__containerTop}),this._setCss(this.__trackX,{left:0,top:this.__containerHeight-this.__trackX.offsetHeight+i,width:this.__trackXWidth}),this._setCss(this.__thumbX,{left:this.__thumbXLeft,width:this.__thumbXWidth}),this._setCss(this.__trackY,{left:this.__containerWidth-this.__trackY.offsetWidth+n,top:0,height:this.__trackYHeight}),this._setCss(this.__thumbY,{top:this.__thumbYTop,height:this.__thumbYHeight})},t.prototype.on=function(t,e){this.__event.object(this).on(t,e)},t.prototype.once=function(t,e){this.__event.object(this).once(t,e)},t.prototype.off=function(t){this.__event.object(this).off(t)},t.prototype._fire=function(t,e){this.__event.object(this).fire(t,e)},t.prototype._bindEvents=function(){var e=this,t=this.__event;t.element(window).on("resize",function(t){return e._onWindowResize(t)}),t.element(this.__host.ownerDocument).on("keydown",function(t){return e._onDocumentKeyDown(t)});var i=window.MutationObserver||window.WebKitMutationObserver||window.MozMutationObserver;i&&(this.__observer=new i(function(t){return e._onHostChildrenChange(t)}),this.__observer.observe(this.__host,{subtree:!0,childList:!0}));var n=t.element(this.__host);n.on("scroll",function(t){return e._onHostScroll(t)}),n.on("wheel",function(t){return e._onHostMouseWheel(t)}),n.on(s.TOUCH_START,function(t){return e._onHostTouchStart(t)}),n.on("mouseenter",function(t){return e._onHostMouseEnter(t)}),n.on("mouseleave",function(t){return e._onHostMouseLeave(t)}),n.on("mousemove",function(t){return e._onHostMouseMove(t)}),t.element(this.__trackX).on("mousedown",function(t){return e._onTrackXMouseDown(t)}),t.element(this.__thumbX).on("mousedown",function(t){return e._onThumbXMouseDown(t)}),t.element(this.__trackY).on("mousedown",function(t){return e._onTrackYMouseDown(t)}),t.element(this.__thumbY).on("mousedown",function(t){return e._onThumbYMouseDown(t)}),t.element(this.__scrollbar).on("click mousemove",function(t){return e._cancelEvent(t)})},t.prototype._onHostChildrenChange=function(t){this.update()},t.prototype._onWindowResize=function(t){this.update()},t.prototype._onDocumentKeyDown=function(t){if(!(t.isDefaultPrevented&&t.isDefaultPrevented()||t.defaultPrevented)){var e=Element&&(Element.prototype.matches||Element.prototype.webkitMatchesSelector||Element.prototype.msMatchesSelector),i=e.call(this.__thumbX,":focus")||e.call(this.__thumbY,":focus");if(this.__scrollbar.classList.contains("gcdv-hover")||i){var n=document.activeElement||this.__host.ownerDocument.activeElement;if(!(n&&("IFRAME"===n.tagName&&(n=n.contentDocument.activeElement),e.call(n,"input,[contenteditable]")||e.call(n,"select,[contenteditable]")||e.call(n,"textarea,[contenteditable]")||e.call(n,"button,[contenteditable]")))){var o=0,r=0;switch(t.which){case 37:o=-40;break;case 39:o=40;break;case 38:r=40;break;case 40:r=-40;break;case 33:r=this.__containerHeight;break;case 34:r=-this.__containerHeight;break;case 36:r=this.__contentHeight;break;case 35:r=-this.__contentHeight;break;default:return}var s=this.__scrollTop-r,a=this.__scrollLeft+o,l=!1;this.__isScrollYActive?(this._processYScrolled(s),l=!0):this.__isScrollXActive&&(this._processXScrolled(a),l=!0),l&&this._cancelEvent(t)}}}},t.prototype._onHostScroll=function(t){var e=this.__host;this._isRangeScroll()||(this.__scrollTop=e.scrollTop,this.__scrollLeft=e.scrollLeft),this._updatePosition()},t.prototype._onHostMouseEnter=function(t){this._isRangeScroll()||(this.__scrollbar.classList.add("gcdv-hover"),this._updatePosition())},t.prototype._onHostMouseLeave=function(t){this.__scrollbar.classList.remove("gcdv-hover"),this._updatePosition()},t.prototype._onHostMouseMove=function(t){this._isRangeScroll()&&(this._mouseInContainer(t)?this.__scrollbar.classList.add("gcdv-hover"):this.__scrollbar.classList.remove("gcdv-hover"),this._updatePosition())},t.prototype._onHostMouseWheel=function(t){if(this._mouseInContainer(t)){var e=this._getWheelDelte(t),i=e[0],n=e[1],o=this.__scrollTop-n,r=this.__scrollLeft+i,s=!1;this.__isScrollYActive&&0!==n?(this._processYScrolled(o),s=!0):this.__isScrollXActive&&0!==i&&(this._processXScrolled(r),s=!0),s&&this._cancelEvent(t)}},t.prototype._getWheelDelte=function(t){var e=0,i=0;return"detail"in t&&(i=-1*t.detail),"wheelDelta"in t&&(i=t.wheelDelta),"wheelDeltaY"in t&&(i=t.wheelDeltaY),"wheelDeltaX"in t&&(e=-1*t.wheelDeltaX),"deltaY"in t&&(i=-1*t.deltaY),"deltaX"in t&&(e=t.deltaX),1===t.deltaMode?(e*=10,i*=10):t.deltaMode,[e,i]},t.prototype._mouseInContainer=function(t){if(this._isRangeScroll()){var e=this.__host.getBoundingClientRect(),i=this.__option,n=i.trackXOffset||0,o=i.trackYOffset||0,r=t.pageX-e.left,s=t.pageY-e.top;return this.__containerLeft<=r&&r<this.__containerLeft+this.__containerWidth+o&&this.__containerTop<=s&&s<this.__containerTop+this.__containerHeight+n}return!0},t.prototype._onHostTouchStart=function(t){var u=this;if(u.__touchIntervalId&&clearInterval(u.__touchIntervalId),(this.__isScrollXActive||this.__isScrollYActive)&&this._shouldHandleTouch(t)){var e=t.targetTouches?t.targetTouches[0]:t;if(this._mouseInContainer(e)){var h={},c=(new Date).getTime(),p={};h.pageX=e.pageX,h.pageY=e.pageY;var i=u.__event.element(u.__host);i.off(s.TOUCH_MOVE),i.on(s.TOUCH_MOVE,function(t){if(!u._shouldHandleTouch(t))return;var e=t.targetTouches?t.targetTouches[0]:t,i={pageX:e.pageX,pageY:e.pageY},n=i.pageX-h.pageX,o=i.pageY-h.pageY,r=u.__scrollTop-o,s=u.__scrollLeft-n,a=!1;u.__isScrollYActive?(u._processYScrolled(r),a=!0):u.__isScrollXActive&&(u._processXScrolled(s),a=!0);a&&u._cancelEvent(t);h=i;var l=(new Date).getTime(),_=l-c;0<_&&(p.x=n/_,p.y=o/_,c=l)}),i.off(s.TOUCH_END),i.on(s.TOUCH_END,function(t){i.off(s.TOUCH_MOVE),i.off(s.TOUCH_END),u._cancelEvent(t),clearInterval(u.__touchIntervalId),u.__touchIntervalId=setInterval(function(){if(p.x||p.y)if(Math.abs(p.x)<.01&&Math.abs(p.y)<.01)clearInterval(u.__touchIntervalId);else{var t=u.__scrollTop-30*p.y,e=u.__scrollLeft-30*p.x;u.__isScrollYActive?u._processYScrolled(t):u.__isScrollXActive&&u._processXScrolled(e),p.x*=.8,p.y*=.8}else clearInterval(u.__touchIntervalId)},10)})}}},t.prototype._shouldHandleTouch=function(t){return(!t.pointerType||"pen"!==t.pointerType||0!==t.buttons)&&(!(!t.targetTouches||1!==t.targetTouches.length)||!(!t.pointerType||"mouse"===t.pointerType||t.pointerType===t.MSPOINTER_TYPE_MOUSE))},t.prototype._onTrackXMouseDown=function(t){var e=this.__thumbX.getBoundingClientRect(),i=t.pageX-window.pageXOffset<e.left?-1:1,n=this.__scrollLeft+i*this.__containerWidth;this._processXScrolled(n),this._cancelEvent(t)},t.prototype._onThumbXMouseDown=function(t){var i=this,n=i.__scrollLeft,o=t.pageX,r=(i.__contentWidth-i.__containerWidth)/(i.__trackXWidth-i.__thumbXWidth),e=i.__host.ownerDocument,s=i.__event.element(e);s.on("mousemove",function(t){var e=n+r*(t.pageX-o);i._processXScrolled(e),i.__scrollbar.classList.add("gcdv-scrolling-x"),i._cancelEvent(t)},!0),s.on("mouseup",function(){i.__event.off(e),i.__scrollbar.classList.remove("gcdv-scrolling-x"),i._updatePosition()},!0),i._cancelEvent(t)},t.prototype._onTrackYMouseDown=function(t){var e=this.__thumbY.getBoundingClientRect(),i=t.pageY-window.pageYOffset<e.top?-1:1,n=this.__scrollTop+i*this.__containerHeight;this._processYScrolled(n),this._cancelEvent(t)},t.prototype._onThumbYMouseDown=function(t){var i=this,n=i.__scrollTop,o=t.pageY,r=(i.__contentHeight-i.__containerHeight)/(i.__trackYHeight-i.__thumbYHeight),e=i.__host.ownerDocument,s=i.__event.element(e);s.on("mousemove",function(t){var e=n+r*(t.pageY-o);i._processYScrolled(e),i.__scrollbar.classList.add("gcdv-scrolling-y"),i._cancelEvent(t)},!0),s.on("mouseup",function(){i.__event.off(e),i.__scrollbar.classList.remove("gcdv-scrolling-y"),i._updatePosition()},!0),i._cancelEvent(t)},t.prototype._cancelEvent=function(t){t.preventDefault(),t.stopPropagation()},t.prototype._processXScrolled=function(e){var i=this;i.__scrollXTimeoutId&&window.clearTimeout(i.__scrollXTimeoutId),i.__scrollXTimeoutId=window.setTimeout(function(){if(e=Math.max(0,Math.min(e,i.__contentWidth-i.__containerWidth)),i.__scrollLeft-e){var t=i.__scrollLeft;i.__scrollLeft=e,i._isRangeScroll()||(i.__host.scrollLeft=e),i._fire(a,{scrollOrientation:o.HorizontalScroll,newValue:i.__scrollLeft,oldValue:t})}i._updatePosition(),i.__scrollXTimeoutId=null},10)},t.prototype._processYScrolled=function(e){var i=this;i.__scrollYTimeoutId&&window.clearTimeout(i.__scrollYTimeoutId),i.__scrollYTimeoutId=window.setTimeout(function(){if(e=Math.max(0,Math.min(e,i.__contentHeight-i.__containerHeight)),i.__scrollTop-e){var t=i.__scrollTop;i.__scrollTop=e,i._isRangeScroll()||(i.__host.scrollTop=e),i._fire(a,{scrollOrientation:o.VerticalScroll,newValue:i.__scrollTop,oldValue:t})}i._updatePosition(),i.__scrollYTimeoutId=null},10)},t.prototype._getThumbXSize=function(){return this.__trackXWidth*this.__containerWidth/this.__contentWidth},t.prototype._getThumbYSize=function(){return this.__trackYHeight*this.__containerHeight/this.__contentHeight},t.prototype._createElement=function(t,e,i){var n=document.createElement(t);return n.className=e,i&&this._setCss(n,i),n},t.prototype._getStyle=function(t){return getComputedStyle(t)},t.prototype._getCss=function(t,e){return this._getStyle(t)[e]},t.prototype._setCss=function(t,e){for(var i in e){var n=e[i];"number"==typeof n&&(n+="px"),t.style[i]=n}},t.prototype._isRangeScroll=function(){return!!this.__option.containerRect},t.prototype._toInt=function(t){return parseInt(t,10)||0},t.prototype._extend=function(t,e){for(var i in e)e.hasOwnProperty(i)&&(t[i]=e[i]);return t},t}();t.Scrollbar=l;var _=function(){function t(t){this.__context=t,this.__events={}}return t.prototype.context=function(){return this.__context},t.prototype.on=function(t,e){this._bind(t,e,!1)},t.prototype.once=function(t,e){this._bind(t,e,!0)},t.prototype.off=function(t){var e=this.__events;if(t){if("string"==typeof t)delete e[t];else if("function"==typeof t)for(var i in e)for(var n=e[i]||[],o=0;o<n.length;o++)n[o][0]===t&&n.splice(o--,1)}else this.__events={}},t.prototype.fire=function(t){for(var e=[],i=1;i<arguments.length;i++)e[i-1]=arguments[i];var n=this.__events[t];if(n&&0!==n.length)for(var o=0;o<n.length;o++){var r=n[o];r[0].apply(this.__context,e),r[1]&&n.splice(o--,o)}},t.prototype._bind=function(t,e,i){"string"==typeof t&&"function"==typeof e&&(this.__events[t]||(this.__events[t]=[]),this.__events[t].push([e,i]))},t}(),u=function(){function t(t){this.__element=t,this.__events={}}return t.prototype.context=function(){return this.__element},t.prototype.on=function(t,e,i){if("string"==typeof t&&"function"==typeof e){i=!!i;for(var n=t.split(" ").filter(function(t){return""!==t}),o=0;o<n.length;o++){var r=n[o];this.__events[r]||(this.__events[r]=[]),this.__events[r].push({fn:e,capture:i}),this.__element.addEventListener(r,e,i)}}},t.prototype.off=function(t){var e=this.__events;if(t){if("string"==typeof t){for(n=e[t]||[],o=0;o<n.length;o++)this.__element.removeEventListener(t,n[o].fn,n[o].capture);delete e[t]}else if("function"==typeof t)for(var i in e)for(n=e[i]||[],o=0;o<n.length;o++)n[o]===t&&(this.__element.removeEventListener(i,n[o].fn,n[o].capture),n.splice(o--,1))}else{for(var i in e)for(var n=e[i]||[],o=0;o<n.length;o++)this.__element.removeEventListener(i,n[o].fn,n[o].capture);this.__events={}}},t}(),h=function(){function t(){this.__events=[]}return t.prototype.element=function(e){var t=this.__events.filter(function(t){return t.context()===e})[0];return t||(t=new u(e),this.__events.push(t)),t},t.prototype.object=function(e){var t=this.__events.filter(function(t){return t.context()===e})[0];return t||(t=new _(e),this.__events.push(t)),t},t.prototype.off=function(t){var e=this.__events;if(t)for(var i=0;i<e.length;i++)e[i].context()===t&&(e[i].off(),e.splice(i--,1));else{for(i=0;i<e.length;i++)e[i].off();this.__events=[]}},t}()}(dv||(dv={})),function(y){"use strict";var t=function(){function g(){}return g.arountRect=function(t,e){},g.arountCircle=function(t,e,i,n){for(var o=new y.core.Size(0,0),r=[],s=[],a=[],l=[],_=0,u=t;_<u.length;_++){var h=u[_],c=h._angle();0<c&&c<.5*Math.PI?(h._position(m._RightBottom),l.push(h)):c>=.5*Math.PI&&c<Math.PI?(h._position(m._LeftBottom),a.push(h)):c>=Math.PI&&c<1.5*Math.PI?(h._position(m._LeftTop),r.push(h)):c>=1.5*Math.PI&&c<2*Math.PI&&(h._position(m._RightTop),s.push(h));var p=h._rectangle().size;p.width>o.width&&(o.width=p.width),p.height>o.height&&(o.height=p.height)}var f=Math.sqrt(o.width*o.width-o.height*o.height);g.__fittoLeftTop(r,f),g.__fittoLeftBottom(a,f),g.__fittoRightTop(s,f),g.__fittoRightBottom(l,f);var d=r.concat(a).concat(s).concat(l);return g.__overlap(d),d},g.__overlap=function(t){for(var e=t.length,i=0;i<e;++i){var n=t[i];if(n&&n._visible())for(var o=i;o<e;++o){var r=t[o];if(!r||!y._Util.isMixed(r._rectangle(),n._rectangle()))break;r._visible(!1)}}},g.__shiftUp=function(t,e){for(var i=0,n=t;i<n.length;i++){var o=n[i];if(y._Util.isMixed(o._rectangle(),e._rectangle())){var r=o._rectangle().top-e._rectangle().bottom;if(!e._offsety(r))return!1}}return!0},g.__shiftDown=function(t,e){for(var i=0,n=t;i<n.length;i++){var o=n[i];if(y._Util.isMixed(o._rectangle(),e._rectangle())){var r=o._rectangle().bottom-e._rectangle().top;if(!e._offsety(r))return!1}}return!0},g.__fittoLeftTop=function(t,e){t.sort(function(t,e){return t._angle()-e._angle()});for(var i=t.length,n=0;n<i;n++){var o=t[n];g.__shiftUp(t.slice(0,n),o)||(o._offset(o._offset()+e*Math.abs(Math.sin(o._angle()))),g.__shiftDown(t.slice(0,n),o))}},g.__fittoLeftBottom=function(t,e){t.sort(function(t,e){return e._angle()-t._angle()});for(var i=t.length,n=0;n<i;n++){var o=t[n];g.__shiftDown(t.slice(0,n),o)||(o._offset(o._offset()+e*Math.abs(Math.sin(o._angle()))),g.__shiftUp(t.slice(0,n),o))}},g.__fittoRightBottom=function(t,e){t.sort(function(t,e){return t._angle()-e._angle()});for(var i=t.length,n=0;n<i;n++){var o=t[n];g.__shiftDown(t.slice(0,n),o)||(o._offset(o._offset()+e*Math.abs(Math.sin(o._angle()))),g.__shiftUp(t.slice(0,n),o))}},g.__fittoRightTop=function(t,e){t.sort(function(t,e){return e._angle()-t._angle()});for(var i=t.length,n=0;n<i;n++){var o=t[n];g.__shiftUp(t.slice(0,n),o)||(o._offset(o._offset()+e*Math.abs(Math.sin(o._angle()))),g.__shiftDown(t.slice(0,n),o))}},g}();y.__SmartLabelManager=t;var m=function(_){function l(t,e,i,n,o,r,s,a){var l=_.call(this)||this;return l.__cx=t,l.__cy=e,l.__plotView=a,l.__lines=s,l.__endpoint=new y.core.Point(o,r),l._angle(i%(2*Math.PI)),l._offset(n),l}return __extends(l,_),l.prototype._position=function(t){if(null==t)return this.__position;this.__position=t;var e=this._rectangle();if(t==l._LeftBottom||t==l._LeftTop){if(null!=e&&e.right>this.__cx){var i=this.__cx-e.right;this._offsetx(i)}}else if(null!=e&&e.left<this.__cx){i=this.__cx-e.left;this._offsetx(i)}},l.prototype._offsetx=function(t,e){void 0===e&&(e=!0);var i=this._rectangle();if(i.left+=t,this.__startpoint.x+=t,this.__linerect.left+=t,e&&Math.abs(this.__startpoint.x-this.__cx)<this.__offset){this.__angle=Math.acos((this.__startpoint.x-this.__cx)/this.__offset);var n=this.__startpoint.y;return this.__startpoint.y=Math.sin(this.__angle)*this.__offset+this.__cy,i.top+=this.__startpoint.y-n,this._rectangle(i),this.__linerect.top+=this.__startpoint.y-n,!0}if(e)return i.left-=t,this._rectangle(i),this.__startpoint.x-=t,this.__linerect.left-=t,!1;var o=this.__startpoint.x-this.__cx,r=this.__startpoint.y-this.__cy;return this.__offset=Math.sqrt(o*o+r*r),!0},l.prototype._offsety=function(t,e){void 0===e&&(e=!0);var i=this._rectangle();if(i.top+=t,this.__startpoint.y+=t,this.__linerect.top+=t,e&&Math.abs(this.__startpoint.y-this.__cy)<this.__offset){var n=Math.asin((this.__startpoint.y-this.__cy)/this.__offset);this.__angle>=Math.PI/2&&this.__angle<Math.PI?n=Math.PI-n:this.__angle>=Math.PI&&this.__angle<1.5*Math.PI?n=Math.PI-n:this.__angle>1.5*Math.PI&&this.__angle<2*Math.PI&&(n=2*Math.PI+n),this.__angle=n;var o=this.__startpoint.x;return this.__startpoint.x=Math.cos(this.__angle)*this.__offset+this.__cx,i.left+=this.__startpoint.x-o,this._rectangle(i),this.__linerect.left+=this.__startpoint.x-o,!0}if(e)return i.top-=t,this._rectangle(i),this.__startpoint.y-=t,this.__linerect.top-=t,!1;var r=this.__startpoint.x-this.__cx,s=this.__startpoint.y-this.__cy;return this.__offset=Math.sqrt(r*r+s*s),!0},l.prototype._angle=function(t){if(null==t)return this.__angle;this.__angle=t,this.__caclstartpoint()},l.prototype.__caclstartpoint=function(){if(null!=this.__angle&&!isNaN(this.__angle)&&null!=this.__offset&&!isNaN(this.__offset)){var t=new y.core.Point(Math.cos(this.__angle)*this.__offset+this.__cx,Math.sin(this.__angle)*this.__offset+this.__cy);if(null!=this.__startpoint){var e=t.x-this.__startpoint.x,i=t.y-this.__startpoint.y,n=this._rectangle();n.left+=e,n.top+=i,this._rectangle(n),this.__linerect.left+=e,this.__linerect.top+=i}this.__startpoint=t}},l.prototype._offset=function(t){if(null==t)return this.__offset;this.__offset=t,this.__caclstartpoint()},l.prototype._startpoint=function(){return this.__startpoint},l.prototype._layout=function(t,e,i){this.__linerect=new y.core.Rect(0,0,0,0);var n=new y.core.Size(0,0);t.beginTransform(),this._applyStyle(t,this.__plotView);for(var o=0,r=this.__lines;o<r.length;o++){var s=r[o],a=t.measureString(s);a.width>n.width&&(n.width=a.width),n.height+=a.height}this.__linerect.width=l._LINESZIE,this.__linerect.height=n.height,t.restoreTransform(),e=new y.core.Rect(this._startpoint().x,this._startpoint().y-n.height/2,n.width+this.__linerect.width,n.height),this.__angle>Math.PI/2&&this.__angle<1.5*Math.PI?(e.left-=e.width,this.__linerect.left=this.__startpoint.x-this.__linerect.width):this.__linerect.left=this.__startpoint.x,this.__linerect.top=e.top,this._rectangle(e)},l.prototype._render=function(t,e){var i=this._rectangle();t.beginTransform(),this._applyStyle(t,this.__plotView),t.beginTransform(),this._applyConnectingLineStyle(t,this.__plotView),t.drawLine(this.__startpoint.x,this.__startpoint.y,this.__endpoint.x,this.__endpoint.y),t.drawLine(this.__linerect.left,this.__linerect.top+this.__linerect.height/2,this.__linerect.right,this.__linerect.top+this.__linerect.height/2),t.restoreTransform(),t.beginTransform(),this._applyBorderStyle(t,this.__plotView),this._applyBackgroundStyle(t,this.__plotView);var n=new y.core.Rect(i.left,i.top,i.width-this.__linerect.width,i.height);this.__position!==l._RightBottom&&this.__position!==l._RightTop||(n=new y.core.Rect(this.__linerect.right,i.top,i.width-this.__linerect.width,i.height)),y._fillRectangle(t,n),t.restoreTransform();for(var o=i.top,r=0,s=this.__lines;r<s.length;r++){var a=s[r];o+=t.measureString(a).height,this.__position===l._LeftBottom||this.__position==l._LeftTop?t.drawString(a,new y.core.Point(i.left,o)):t.drawString(a,new y.core.Point(i.left+this.__linerect.width,o))}t.restoreTransform()},l.prototype._applyStyle=function(t,e){y._applyTextStyle(t,e._option().config.textStyle),y._applyGStyle(t,e._option().config.text.style),y._applyTextStyle(t,e._option().config.text.textStyle)},l.prototype._applyBorderStyle=function(t,e){y._applyLineStyle(t,new y.options._LineStyleOption({opacity:null,stroke:y.__Constant_Core_Style_Stroke,strokeWidth:0,strokeDasharray:null})),y._applyLineStyleFromGStyle(t,e._plotAreaView()._dvView()._option().style),y._applyLineStyleFromGStyle(t,e._plotAreaView()._option().style),y._applyLineStyleFromGStyle(t,e._option().config.text.style),y._applyLineStyle(t,e._option().config.text.borderStyle)},l.prototype._applyBackgroundStyle=function(t,e){y._applyBackgroundColor(t,"none"),y._applyBackgroundColor(t,e._plotAreaView()._dvView()._option().style.backgroundColor),y._applyBackgroundColor(t,e._plotAreaView()._option().style.backgroundColor),y._applyBackgroundColor(t,e._option().config.text.style.backgroundColor)},l.prototype._applyConnectingLineStyle=function(t,e){y._applyLineStyle(t,e._connectingLine())},l._LeftTop=1,l._RightTop=2,l._LeftBottom=3,l._RightBottom=4,l._LINESZIE=20,l}(y._View);y._RadialLable=m}(dv||(dv={})),function(e){"use strict";var _,t;(t=_=e.tmInc||(e.tmInc={}))[t.tickf7=-7]="tickf7",t[t.tickf6=-6]="tickf6",t[t.tickf5=-5]="tickf5",t[t.tickf4=-4]="tickf4",t[t.tickf3=-3]="tickf3",t[t.tickf2=-2]="tickf2",t[t.tickf1=-1]="tickf1",t[t.second=1]="second",t[t.minute=60]="minute",t[t.hour=3600]="hour",t[t.day=86400]="day",t[t.week=604800]="week",t[t.month=2678400]="month",t[t.year=31536e3]="year",t[t.maxtime=Number.MAX_VALUE]="maxtime";var s=function(){function e(t){this.ticks=t}return Object.defineProperty(e.prototype,"Ticks",{get:function(){return this.ticks},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"TotalSeconds",{get:function(){return this.ticks/1e7},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"TotalDays",{get:function(){return this.ticks/1e7/86400},enumerable:!0,configurable:!0}),e.fromSeconds=function(t){return new e(1e7*t)},e.fromDays=function(t){return new e(1e7*t*24*60*60)},e.TicksPerSecond=1e7,e}();e._timeSpan=s;var i=function(){function l(t){e.core.isDate(t)?this.init(t):e.core.isNumber(t)&&this.init(new Date(t))}return l.prototype.init=function(t){this.year=t.getFullYear(),this.month=t.getMonth(),this.day=t.getDate(),this.hour=t.getHours(),this.minute=t.getMinutes(),this.second=t.getSeconds()},l.prototype.getTimeAsDateTime=function(){24<=this.hour&&(this.hour-=24,this.day+=1),this.month<0?(-1-this.day,this.month=1):11<this.month&&(this.month-12,this.month=12),this.day<1?(-1-this.day,this.day=1):28<this.day&&2==this.month?(this.day-28,this.day=28):30<this.day&&(4==this.month||4==this.month||6==this.month||9==this.month||11==this.month)?(this.day-30,this.day=30):31<this.day&&(this.day-31,this.day=31),59<this.second&&(this.second-59,this.second=59);return 59<this.minute&&(this.minute-59,this.minute=59),new Date(this.year,this.month,this.day,this.hour,this.minute,this.second)},l.prototype.getTimeAsDouble=function(){return this.getTimeAsDateTime().valueOf()},l.tround=function(t,e,i){var n=t/e*e;return n-=n%1,i&&n!=t&&(n+=e-=e%1),n},l.RoundTime=function(t,e,i){var n=24*e*60*60;if(0<n){var o=new l(t);return n<_.minute?(o.second=this.tround(o.second,n,i),o.getTimeAsDouble()):(o.second=0,n<_.hour?(n/=_.minute,o.minute=this.tround(o.minute,n,i),o.getTimeAsDouble()):(o.minute=0,n<_.day?(n/=_.hour,o.hour=this.tround(o.hour,n,i),o.getTimeAsDouble()):(o.hour=0,n<_.month?(n/=_.day,o.day=this.tround(o.day,n,i),o.getTimeAsDouble()):(o.day=1,n<_.year?(n/=_.month,1!=o.month&&(o.month=this.tround(o.month,n,i))):(o.month=1,n/=_.year,o.year=this.tround(o.year,n,i)),o.getTimeAsDouble()))))}var r=t,s=r-n,a=s/e*e;return i&&a!=s&&(a+=e),r=n+a},l.TimeSpanFromTmInc=function(t){var e=s.fromSeconds(1);if(t!=_.maxtime)if(t>_.tickf1)e=s.fromSeconds(t);else{var i=t,n=1;for(i+=7;0<i;)n*=10,i--;e=new s(n)}return e},l.manualTimeInc=function(t){var e=_.second;if(null==t||0==t.length)return e;var i=t.indexOf("f");if(0<=i){var n=-1;if(0<i&&"%"==t.substr(i-1,1))n=-1;else for(var o=1;o<6&&!(i+o>=t.length);o++){if("f"!=t.substr(i+o,1))break;n--}e=n}else 0<=t.indexOf("s")?e=_.second:0<=t.indexOf("m")?e=_.minute:0<=t.indexOf("h")||t.indexOf("H")?e=_.hour:0<=t.indexOf("d")?e=_.day:0<=t.indexOf("M")?e=_.month:0<=t.indexOf("y")&&(e=_.year);return e},l.getNiceInc=function(t,e,i){for(var n=0;n<t.length;n++){var o=t[n]*i;if(e<=o)return o}return 0},l.NiceTimeSpan=function(t,e){var i=_.second;null!=e&&0<e.length&&(i=l.manualTimeInc(e));var n=0,o=0;if(i<_.second&&t.TotalSeconds<10){for(n=t.Ticks,o=l.TimeSpanFromTmInc(i).Ticks;10*o<n;)o*=10;var r=o;return r<n&&(r*=2),r<n&&(r=5*o),r<n&&(r=10*o),new s(r)}if(0==(n=Math.ceil(t.TotalSeconds)))return l.TimeSpanFromTmInc(i);if(o=1,i<_.minute){if(n<_.minute&&0!=(o=l.getNiceInc([1,2,5,10,15,30],n,i)))return s.fromSeconds(o);i=_.minute}if(i<_.hour){if(n<_.hour&&0!=(o=l.getNiceInc([1,2,5,10,15,30],n,i)))return s.fromSeconds(o);i=_.hour}if(i<_.day){if(n<_.day&&0!=(o=l.getNiceInc([1,3,6,12],n,i)))return s.fromSeconds(o);i=_.day}if(i<_.month){if(n<_.month&&0!=(o=l.getNiceInc([1,2,7,14],n,i)))return s.fromSeconds(o);i=_.month}if(i<_.year){if(n<_.year&&0!=(o=l.getNiceInc([1,2,3,4,6],n,i)))return s.fromSeconds(o);i=_.year}return n<(o=100*_.year)&&0==(o=l.getNiceInc([1,2,5,10,20,50],n,i))&&(o=100*_.year),s.fromSeconds(o)},l.NiceTimeUnit=function(t,e){var i=s.fromDays(t);return(i=l.NiceTimeSpan(i,e)).TotalDays},l.GetTimeDefaultFormat=function(t,e){if(isNaN(t)||isNaN(e))return"";var i="s",n=s.fromSeconds(.001*(t-e)),o=n.TotalSeconds;if(o>=_.year)i="yyyy";else if(o>=_.month)i="MMM yyyy";else if(o>=_.day)i="MMM d";else if(o>=_.hour)i="ddd H:mm";else if(o>=.5*_.hour)i="H:mm";else if(1<=o)i="H:mm:ss";else if(0<o){var r=n.Ticks;for(i="s.";r<s.TicksPerSecond;)r*=10,i+="f"}return i},l.secInYear=86400,l}();e._timeHelper=i}(dv||(dv={})),function(t){"use strict";var e=function(n){function t(t,e,i){return n.call(this,t,e,i)||this}return __extends(t,n),t}(t._LineAxisLabelView);t._TrellisAxisLabelView=e}(dv||(dv={})),function(f){"use strict";var t=function(r){function t(t){return r.call(this,t)||this}return __extends(t,r),t.prototype._vAlign=function(){return this._axisView()._option().type==f.AxisType.Y?f.VAlign.Top:f.VAlign.Bottom},t.prototype._measureInnerContent=function(t,e){var i=this._axisView()._option().type==f.AxisType.Y,n=this._axisView()._coordinateSystemView(),o=n._layoutView();if(i){if(o._getRowView(0)._coordinateSystemView()!=n)return new f.core.Size(0,0)}else if(o._getColumnView(0)._coordinateSystemView()!=n)return new f.core.Size(0,0);return r.prototype._measureInnerContent.call(this,t,e)},t.prototype._layout=function(t,e,i){var n=this._axisView()._option().type==f.AxisType.Y,o=this._axisView()._coordinateSystemView(),r=o._layoutView(),s=this._axisView()._position()==f.AxisPosition.Near,a=this._option().titleStyle.padding,l=new f.core.Rect(0,0,0,0);if(n){if(r._getRowView(0)._coordinateSystemView()===o){var _=r._rowsView()._getTitleRect(this._axisView()._position()),u=this._measure(t,new f.core.Size(_.height,_.width)),h=_.top+(_.height-u.width)/2,c=_.left;l=(c=s?_.width>u.height?_.left+(a.isEmpty()?0:a.left):_.right-u.height-(a.isEmpty()?0:a.right):_.width>u.height?_.right-u.height-(a.isEmpty()?0:a.right):_.left+(a.isEmpty()?0:a.left),new f.core.Rect(c,h,u.height,u.width))}}else if(r._getColumnView(0)._coordinateSystemView()===o){_=r._columnsView()._getTitleRect(this._axisView()._position()),u=this._measure(t,new f.core.Size(_.width,_.height)),c=_.left+(_.width-u.width)/2;var p=_.top;l=(p=s?_.height<u.height?_.top+(a.isEmpty()?0:a.top):_.bottom-u.height-(a.isEmpty()?0:a.bottom):_.height<u.height?_.bottom-u.height-(a.isEmpty()?0:a.bottom):_.top+(a.isEmpty()?0:a.top),new f.core.Rect(c,p,u.width,u.height))}this._rectangle(l)},t}(f._LineAxisTitleView);f._TrellisAxisTitleView=t}(dv||(dv={})),function(o){"use strict";var t=function(n){function t(t,e){var i=n.call(this,t._trellisView()._plotAreaView(),new o.options._LayoutEncodingOption(null),e)||this;return i.__cellView=t,i}return __extends(t,n),t.prototype._cellView=function(){return this.__cellView},t.prototype._trellisView=function(){return this.__cellView._trellisView()},t.prototype._dataLabelsRectangle=function(){return this._cellView()._rectangle()},Object.defineProperty(t.prototype,"parent",{get:function(){return this._cellView()},enumerable:!0,configurable:!0}),t.prototype._renderContent=function(t,e){for(var i=0,n=this._coordinateSystemViews();i<n.length;i++){n[i]._render(t,e)}},t.prototype._createCoordinateSystemView=function(t){return"Cartesian"==t?new o._TrellisCellLineCartesianCoordinateSystemView(this):n.prototype._createCoordinateSystemView.call(this,t)},t.prototype._matchAxisOptionToPlotOptions=function(t,e){return this._cellView()._trellisView()._plotOptionWithAxisOptions()},t}(o._DefaultLayoutView);o._TrellisCellLayoutView=t}(dv||(dv={})),function(n){"use strict";var t=function(e){function t(t){return e.call(this,t)||this}return __extends(t,e),t.prototype._layoutView=function(){return e.prototype._layoutView.call(this)},t.prototype._layout=function(t,e,i){this._layoutPlotViews(t,e,i)},t.prototype._renderAxes=function(t,e){},t.prototype._createAxisView=function(e){if(e.type==n.AxisType.X){var t=this._layoutView()._cellView()._trellisView()._getColumnView(this._layoutView()._cellView().columnIndex);return n.core.find(t._axisViews(),function(t){return t._option()==e})}var i=this._layoutView()._cellView()._trellisView()._getRowView(this._layoutView()._cellView().rowIndex);return n.core.find(i._axisViews(),function(t){return t._option()==e})},t}(n._LineCartesianCoordinateSystemView);n._TrellisCellLineCartesianCoordinateSystemView=t}(dv||(dv={})),function(g){"use strict";var t=function(s){function t(t){var e=s.call(this,t._plotAreaView()._dvView().control._layer())||this;return e.__parent=t,e}return __extends(t,s),t.prototype.parent=function(){return this.__parent},t.prototype._cellViews=function(){return this.__cellViews},t.prototype._columnsWidth=function(){for(var t=0,e=this._cellViews()[0],i=0;i<e.length;i++)t+=e[i]._rectangle().width;return t},t.prototype._rowsHeight=function(){for(var t=0,e=this._cellViews(),i=0;i<e.length;i++)t+=e[i][0]._rectangle().height;return t},t.prototype._className=function(){return g.__Constant_Core_Trellis_Cells_ClassName},t.prototype._getCellView=function(t,e){var i=this._cellViews();return i[t]&&i[t][e]},t.prototype._canScroll=function(){var t=this.parent()._xViewSize(),e=this.parent()._yViewSize();return 1!==t||1!==e},t.prototype._update=function(){for(var t=this.__cellViews=this._createCellViews(),e=0;e<t.length;e++)for(var i=0;i<t[e].length;i++)t[e][i]._updatePlotsData();var n={};for(e=0;e<t.length;e++)for(i=0;i<t[e].length;i++)for(var o=t[e][i]._plotViews(),r=0;r<o.length;r++){var s="";if((f=o[r])instanceof g._CartesianPlotView?s="Cartesian":f instanceof g._TreemapPlotView?s="Treemap":f instanceof g._SunburstPlotView&&(s="Sunburst"),(h=n[s])||(h=n[s]={plotLegendManagers:[],plotDatas:[],plotViews:[]}),s){var a=f._legendManager(),l=h.plotLegendManagers.indexOf(a);if(0<=l)h.plotDatas[l].push(f._data());else{h.plotLegendManagers.push(a);var _=[];_.push(f._data()),h.plotDatas.push(_)}}h.plotViews.push(f)}var u=this.parent()._plotAreaView()._legendManager();for(var s in n){var h,c=(h=n[s]).plotLegendManagers;for(r=0;r<c.length;r++){if("Cartesian"===s)new g.models._CartesianLegendGenerator(c[r],u)._generate(h.plotDatas[r],[]);else if("Treemap"===s||"Sunburst"===s){new g.models._TrellisHierarchicalLegendGenerator(c[r],u)._generate(h.plotDatas[r],[])}}var p=h.plotViews;if("Cartesian"===s){for(r=0;r<p.length;r++)p[r]._layoutStack();for(r=0;r<p.length;r++){var f=p[r];(new g.models._CartesianConditionalFormattingRuleRunner)._apply(f._data()),f._initAxisScale()}}else if("Treemap"===s||"Sunburst"===s){var d=h.plotViews;for(r=0;r<d.length;r++)(new g.models._HierarchicalConditionalFormattingRuleRunner)._apply(d[r]._data())}}},t.prototype._measureInnerContent=function(t,e){for(var i=this.parent()._columnsView()._getColumnWidths(e.width),n=this.parent()._rowsView()._getRowHeights(e.height),o=this._cellViews(),r=0;r<o.length;r++)for(var s=o[r],a=n[r],l=0;l<s.length;l++){var _=s[l],u=i[l];_._measure(t,new g.core.Rect(0,0,u,a))}return new g.core.Size(e.width,e.height)},t.prototype._layoutInnerContent=function(t,e,i){(e=e.clone()).width<0&&(e.width=0),e.height<0&&(e.height=0);for(var n=e.left,o=e.top,r=this._cellViews(),s=0;s<r.length;s++){var a=r[s];n=e.left;for(var l=0;l<a.length;l++){var _=a[l],u=_._measureSize;_._layout(t,new g.core.Rect(n,o,u.width,u.height),i),n+=_._rectangle().width}o+=a[0]._rectangle().height}},t.prototype._getLogicSize=function(){return new g.core.Size(this._columnsWidth(),this._rowsHeight())},t.prototype._renderInnerContent=function(t,e,i){for(var n=this._cellViews(),o=0;o<n.length;o++)for(var r=n[o],s=0;s<r.length;s++)r[s]._render(t,i)},t.prototype._createCellViews=function(){for(var r=[],s=this.__parent,t=s._rowCount(),a=s._columnCount(),e=function(t){for(var e=s._getRowData(t)._items(),i=[],n=0;n<a;n++){var o=s._getColumnData(n)._items().filter(function(t){return 0<=e.indexOf(t)});i.push(new g._TrellisCellView(l,new g._TrellisCellData(t,n,o)))}r.push(i)},l=this,i=0;i<t;i++)e(i);return r},t.prototype._hitTestContent=function(t){for(var e=this._cellViews(),i=0;i<e.length;i++)for(var n=e[i],o=0;o<n.length;o++){var r=n[o]._hitTest(t);if(r)return r}s.prototype._hitTestContent.call(this,t)},t}(g._ScrollableView);g._TrellisCellsView=t}(dv||(dv={})),function(o){"use strict";var t=function(n){function t(t,e){var i=n.call(this)||this;return i.__cellsView=t,i.__dataModel=e,i.__layoutView=new o._TrellisCellLayoutView(i,i._trellisView()._plotOptions()),i}return __extends(t,n),Object.defineProperty(t.prototype,"type",{get:function(){return o.ElementType.TrellisCell},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"parent",{get:function(){return this._trellisView()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"rowIndex",{get:function(){return this.__dataModel._row()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"columnIndex",{get:function(){return this.__dataModel._column()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"plots",{get:function(){return this._plotViews().map(function(t){return t._data()})},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"items",{get:function(){return this.__dataModel._items()},enumerable:!0,configurable:!0}),t.prototype._layoutView=function(){return this.__layoutView},t.prototype._cellsView=function(){return this.__cellsView},t.prototype._trellisView=function(){return this.__cellsView.parent()},t.prototype._dvView=function(){return this._plotAreaView()._dvView()},t.prototype._plotAreaView=function(){return this._trellisView()._plotAreaView()},t.prototype._option=function(){return this._trellisView()._plotAreaView()._option()},t.prototype._legendManager=function(){return this._plotAreaView()._legendManager()},t.prototype._plotViews=function(){return this.__layoutView._plotViews()},t.prototype._className=function(){return o.__Constant_Core_Trellis_Cell_ClassName+"-"+this.rowIndex+"-"+this.columnIndex},t.prototype._paddings=function(){return this._trellisView()._config().padding},t.prototype._getPlotLegendManager=function(t){return this._trellisView()._getPlotLegendManager(t)},t.prototype._measureInnerContent=function(t,e){var i=new o.core.Size(e.width,e.height),n=this._paddings();return this._measureSize=new o.core.Size(i.width+n.left+n.right,i.height+n.top+n.bottom),i},t.prototype._layoutInnerContent=function(t,e,i){(e=e.clone()).width<0&&(e.width=0),e.height<0&&(e.height=0),this.__layoutView._layout(t,e,i)},t.prototype._renderInnerContent=function(t,e,i){this.__layoutView._render(t,i)},t.prototype._updatePlotsData=function(){var t=this._trellisView()._createDataSource(this.items);this.__layoutView._loadData(t)},t.prototype._hitTest=function(t){var e=this._rectangle();if(null!=e&&e.contains(t)){var i=this.__layoutView._hitTest(t);return null!=i?i:new o.HitTestResult(t,this,this,o.ElementType.TrellisCell)}return n.prototype._hitTest.call(this,t)},t}(o._RectangleView);o._TrellisCellView=t;var e=function(){function t(t,e,i){this.__row=t,this.__column=e,this.__items=i}return t.prototype._row=function(){return this.__row},t.prototype._column=function(){return this.__column},t.prototype._items=function(){return this.__items},t}();o._TrellisCellData=e}(dv||(dv={})),function(o){"use strict";var t=function(n){function t(t,e){var i=n.call(this)||this;return i.__parent=t,i.__dataModel=e,i}return __extends(t,n),Object.defineProperty(t.prototype,"type",{get:function(){return o.ElementType.TrellisColumnHeader},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"parent",{get:function(){var t=this.__dataModel.level;if(0===t)return this._trellisView();for(var e=this._trellisView().columnHeaders[t-1],i=0;i<e.length;i++){var n=e[i];if(n.columnIndex<=this.columnIndex&&this.columnIndex+this.columnSpan<=n.columnIndex+n.columnSpan)return n}return this._trellisView()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"columnHeaders",{get:function(){var t=this._trellisView().columnHeaders,e=this.__dataModel.level;if(e===t.length-1)return null;for(var i=[],n=t[e+1],o=0;o<n.length;o++){var r=n[o];this.columnIndex<=r.columnIndex&&r.columnIndex+r.columnSpan<=this.columnIndex+this.columnSpan&&i.push(r)}return i},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"columnIndex",{get:function(){return this.__dataModel.group._start},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"columnSpan",{get:function(){return this.__dataModel.nodes.length},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"text",{get:function(){return""+this.__dataModel.group._value},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"textStyle",{get:function(){return this.__textStyle},set:function(t){this.__textStyle=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"selected",{get:function(){for(var t=0,e=this.relatedPlots();t<e.length;t++)for(var i=0,n=e[t].points;i<n.length;i++){if(0==n[i].selected)return!1}return!0},set:function(t){for(var e=0,i=this.relatedPlots();e<i.length;e++)for(var n=0,o=i[e].points;n<o.length;n++){o[n].selected=t}},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"hover",{get:function(){return this._hover()},set:function(t){this._hover(t)},enumerable:!0,configurable:!0}),t.prototype._trellisView=function(){return this._columnsView().parent()},t.prototype._columnsView=function(){return this.__parent},t.prototype._paddings=function(){return new o.options._PaddingOption({left:0,top:3,right:0,bottom:3})},t.prototype.relatedPlots=function(){for(var t=[],e=this._columnsView()._columnViews(),i=this.columnIndex;i<this.columnIndex+this.columnSpan;i++)for(var n=0,o=e[i].cells;n<o.length;n++){var r=o[n];t.push.apply(t,r.plots)}return t},t.prototype._measureInnerContent=function(t,e){t.beginTransform(),o._applyTextStyle(t,this._trellisView()._config().textStyle),o._applyTextStyle(t,this.textStyle);var i=t.measureString(this.text);t.restoreTransform();var n=this._paddings();return this._measureSize=new o.core.Size(i.width+n.left+n.right,i.height+n.top+n.bottom),i},t.prototype._renderInnerContent=function(t,e,i){t.beginTransform(),o._applyTextStyle(t,this._trellisView()._config().textStyle),this._hover()&&o._applyTextStyle(t,this._trellisView()._config().hoverStyle);var n=this._rectangle();o._RenderUtils.renderText(t,this.text,new o.core.Point(n.left+n.width/2,n.top+n.height/2),1,1),t.restoreTransform()},t.prototype._hitTest=function(t){var e=this._rectangle();return null!=e&&e.contains(t)?new o.HitTestResult(t,this,this,o.ElementType.TrellisColumnHeader):n.prototype._hitTest.call(this,t)},t}(o._RectangleView);o._TrellisColumnHeaderCellView=t}(dv||(dv={})),function(A){"use strict";var t=function(a){function t(t){var e=a.call(this,t._plotAreaView()._dvView().control._layer())||this;return e.__parent=t,e}return __extends(t,a),t.prototype.parent=function(){return this.__parent},t.prototype._dataModel=function(){return this.__parent._dataModel()._columnsData()},t.prototype._items=function(){for(var t=[],e=this._dataModel()._nodes(),i=0;i<e.length;i++)t.push.apply(t,e[i]._items());return t},t.prototype._columnCount=function(){return this._dataModel()._columnCount()},t.prototype._columnViews=function(){return this.__columnViews},t.prototype._headerCellViews=function(){return this.__headerCellViews},t.prototype._headerHeight=function(){for(var t=0,e=this._headerCellViews(),i=0;i<e.length;i++)t+=e[i][0]._measureSize.height;return t},t.prototype._axisNearHeight=function(){for(var t=0,e=this._columnViews(),i=0;i<e.length;i++)for(var n=e[i]._axisViews(),o=0;o<n.length;o++)n[o]._position()===A.AxisPosition.Near&&(t=Math.max(t,n[o]._measureSize.height));return t},t.prototype._axisFarHeight=function(){for(var t=0,e=this._columnViews(),i=0;i<e.length;i++)for(var n=e[i]._axisViews(),o=0;o<n.length;o++)n[o]._position()===A.AxisPosition.Far&&(t=Math.max(t,n[o]._measureSize.height));return t},t.prototype._columnsWidth=function(){for(var t=0,e=this._columnViews(),i=0;i<e.length;i++)t+=e[i]._rectangle().width;return t},t.prototype._className=function(){return A.__Constant_Core_Trellis_Columns_ClassName},t.prototype._getTitleRect=function(t){for(var e,i=this._columnViews(),n=0;n<i.length;n++)for(var o=i[n]._axisViews(),r=0;r<o.length;r++)o[r]._position()===t&&(e=e?A.core.Rect.union(e,o[r]._rectangle()):o[r]._rectangle().clone());return t===A.AxisPosition.Far?e&&new A.core.Rect(e.left,this._rectangle().top,e.width,e.height):e},t.prototype._getTitleHeight=function(t,e,i){for(var n,o=this._columnViews()[0]._axisViews(),r=0;r<o.length;r++)if(o[r]._position()===e){n=o[r];break}return n?n._titleView()._getTitleHeight(t,null,i):0},t.prototype._canScroll=function(){var t=this.parent()._xViewSize(),e=this.parent()._yViewSize();return 1!==t||1!==e},t.prototype._getColumnView=function(t){return this._columnViews()[t]},t.prototype._getColumnData=function(t){return this._dataModel()._nodes()[t]},t.prototype._update=function(){this.__columnViews=this._createColumnViews(),this.__headerCellViews=this._createHeaderCellViews()},t.prototype._getColumnWidths=function(t){for(var e=[],i=this._columnViews(),n=[],o=0,r=0;r<i.length;r++){var s=i[r]._getBarCount();o+=n[r]=s}var a=this.parent()._xViewSize(),l=this.parent()._config().padding,_=l.left+l.right,u=(t-_*i.length)/o;for(r=0;r<i.length;r++)e.push(n[r]*u/a+_);return e},t.prototype._measureInnerContent=function(t,e){for(var i=this._headerCellViews(),n=0;n<i.length;n++){for(var o=i[n],r=0,s=0;s<o.length;s++){var a=o[s]._measure(t,e);r=Math.max(r,a.height)}for(s=0;s<o.length;s++){o[s]._measureSize.height=r}}var l=this._getColumnWidths(e.width),_=this._columnViews(),u=0;for(s=_.length-1;0<=s;s--){if(u+=l[s],0==s)for(var h=_[s]._axisViews(),c=0;c<h.length;c++){h[c]._titleSuggestSize(new A.core.Size(u,e.height))}if(_[s]._measure(t,new A.core.Size(l[s],e.height)),0==s)for(h=_[s]._axisViews(),c=0;c<h.length;c++){h[c]._titleSuggestSize(null)}}return new A.core.Size(e.width,e.height)},t.prototype._layoutInnerContent=function(t,e,i){(e=e.clone()).width<0&&(e.width=0),e.height<0&&(e.height=0);for(var n,o=this.parent()._getCellViews()[0].map(function(t){return t._measureSize.width}),r=this._getTitleHeight(t,A.AxisPosition.Far,new A.core.Size(e.width,e.height)),s=e.top+r,a=this._headerCellViews(),l=0;l<a.length;l++){var _=a[l],u=_[0]._measureSize.height;n=e.left;for(var h=0;h<_.length;h++){var c=_[h],p=o.slice(c.columnIndex,c.columnIndex+c.columnSpan).reduce(function(t,e){return t+e},0);c._layout(t,new A.core.Rect(n,s,p,u),i),n+=p}s+=u}s-=r,n=e.left;var f=e.height-this._headerHeight(),d=this._columnViews(),g=0;for(h=0;h<d.length;h++)n+=o[h],g+=o[h];for(h=d.length-1;0<=h;h--){if(n-=o[h],0==h)for(var y=d[h]._axisViews(),m=0;m<y.length;m++){(C=y[m])._titleSuggestSize(new A.core.Size(g,f))}if(d[h]._layout(t,new A.core.Rect(n,s,o[h],f),i),0==h)for(y=d[h]._axisViews(),m=0;m<y.length;m++){(C=y[m])._titleSuggestSize(null)}}var v=[],w=[],b=0,x=0;for(h=0;h<d.length;h++)for(y=d[h]._axisViews(),m=0;m<y.length;m++){(C=y[m])._position()===A.AxisPosition.Near?(v.push(C),b=Math.max(b,C._rectangle().height)):C._position()===A.AxisPosition.Far&&(w.push(C),x=Math.max(x,C._rectangle().height))}for(m=0;m<v.length;m++){var S=(C=v[m])._rectangle(),P=C._plotrect,V=b-S.height;i.LineCartesianCoordinateSystemContent=new A.core.Rect(P.left,P.top,P.width,P.height-V),C._layout(t,new A.core.Rect(S.left,S.top-V,S.width,b),i),delete i.LineCartesianCoordinateSystemContent}for(m=0;m<w.length;m++){var C;S=(C=w[m])._rectangle(),P=C._plotrect,V=x-S.height;i.LineCartesianCoordinateSystemContent=new A.core.Rect(P.left,P.top+V,P.width,P.height-V),C._layout(t,new A.core.Rect(S.left,S.top,S.width,x),i),delete i.LineCartesianCoordinateSystemContent}},t.prototype._getLogicSize=function(){var t=this._rectangle();return new A.core.Size(this._columnsWidth(),t.height)},t.prototype._renderInnerContent=function(t,e,i){if(!i.renderLabel){t.startGroup(A.__Constant_Core_Trellis_Columns_Gridline_ClassName),t.beginTransform();var n=new A._Style;n.stroke=A.__Constant_Core_Style_Stroke,n.strokeWidth=1,n._mergeLineStyle(this.parent()._config().style),A._applyNewStyle(t,n);for(var o=this._headerCellViews(),r=0;r<o.length;r++)for(var s=o[r],a=0;a<s.length;a++){var l=s[a]._rectangle(),_=0===a?l.left+.5:l.left;t.drawLine(_,l.top,_,l.bottom),a===s.length-1&&t.drawLine(l.right-.5,l.top,l.right-.5,l.bottom)}var u=this._getTitleHeight(t,A.AxisPosition.Near,new A.core.Size(e.width,e.height)),h=this._getTitleHeight(t,A.AxisPosition.Far,new A.core.Size(e.width,e.height)),c=this._columnViews();for(a=0;a<c.length;a++){l=c[a]._rectangle();var p=0<o.length?l.top:l.top+h,f=l.bottom-u;_=0===a?l.left+.5:l.left;t.drawLine(_,p,_,f),a===c.length-1&&t.drawLine(l.right-.5,p,l.right-.5,f)}t.restoreTransform(),t.endGroup(),t.startGroup(A.__Constant_Core_Trellis_Columns_Header_ClassName);for(r=0;r<o.length;r++)for(s=o[r],a=0;a<s.length;a++)s[a]._render(t,i);t.endGroup()}var d=this._columnViews();for(a=0;a<d.length;a++)d[a]._render(t,i)},t.prototype._createColumnViews=function(){for(var t=[],e=this._columnCount(),i=0;i<e;i++)t.push(new A._TrellisColumnView(this,this._getColumnData(i)));return t},t.prototype._createHeaderCellViews=function(){for(var t=[],e=this._dataModel(),i=e._groups(),n=e._nodes(),o=i.slice();0<o.length;){var r=t.length,s=[];t.push(s);for(var a=o.length;0<a;){var l=o.shift();s.push(new A._TrellisColumnHeaderCellView(this,{group:l,level:r,nodes:n.slice(l._start,l._end+1)}));var _=l._children;_&&0<_.length&&o.push.apply(o,_),a--}}return t},t.prototype._hitTestContent=function(t){for(var e=this._headerCellViews(),i=0;i<e.length;i++)for(var n=e[i],o=0;o<n.length;o++){if(s=n[o]._hitTest(t))return s}var r=this._columnViews();for(o=0;o<r.length;o++){var s;if(s=r[o]._hitTest(t))return s}return a.prototype._hitTestContent.call(this,t)},t}(A._ScrollableView);A._TrellisColumnsView=t}(dv||(dv={})),function(r){"use strict";var t=function(o){function t(t,e){var i=o.call(this)||this;return i.__parent=t,i.__dataModel=e,i._prepareCoordinateSystems(),i}return __extends(t,o),Object.defineProperty(t.prototype,"type",{get:function(){return r.ElementType.TrellisColumn},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"parent",{get:function(){return this._trellisView()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"columnIndex",{get:function(){return this.__dataModel._index()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"columnHeader",{get:function(){var t=this._trellisView().columnHeaders;return t[t.length-1][this.columnIndex]},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"cells",{get:function(){for(var t=this._trellisView()._getCellViews(),e=[],i=0;i<t.length;i++)e.push(t[i][this.columnIndex]);return e},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"items",{get:function(){return this.__dataModel._items()},enumerable:!0,configurable:!0}),t.prototype._trellisView=function(){return this.__parent.parent()},t.prototype._plotAreaView=function(){return this._trellisView()._plotAreaView()},t.prototype._coordinateSystemView=function(){return this.__coordinateSystemView},t.prototype._axisViews=function(){var t=this._coordinateSystemView();return t?t._axisXViews():[]},t.prototype._dataSource=function(){return this.__dataSource||(this.__dataSource=this._trellisView()._createDataSource(this.items)),this.__dataSource},t.prototype._className=function(){return r.__Constant_Core_Trellis_Column_ClassName+"-"+this.columnIndex},t.prototype._paddings=function(){var t=this._trellisView()._config().padding;return new r.options._PaddingOption({left:t.left,top:0,right:t.right,bottom:0})},t.prototype._prepareCoordinateSystems=function(){for(var e,t=this._trellisView()._plotOptionWithAxisOptions(),i=0;i<t.length;i++){"Cartesian"===this.__parent.parent()._getPlotCoordinateSystemType(t[i].plotOption)&&(e=e||[]).push.apply(e,t[i].axisOptions.filter(function(t){return t.type==r.AxisType.X&&-1==e.indexOf(t)}))}if(e){var n=new r._TrellisLineCartesianCoordinateSystemView(this._trellisView(),this);n._axisYViews().splice(0),this.__coordinateSystemView=n}},t.prototype._getBarCount=function(){var t=1,e=this._coordinateSystemView();if(e)for(var i=e._axisXViews(),n=0;n<i.length;n++){var o=i[n]._site();o&&o.valueCount>t&&!(o instanceof r.models._YSiteModel)&&(t=o.valueCount)}return t},t.prototype._measureInnerContent=function(t,e){for(var i=this._axisViews(),n=0;n<i.length;n++)i[n]._applyOptionToScale(i[n]._option(),i[n]._scale()),i[n]._measure(t,new r.core.Size(e.width,e.height));return new r.core.Size(e.width,e.height)},t.prototype._layoutInnerContent=function(t,e,i){(e=e.clone()).width<0&&(e.width=0),e.height<0&&(e.height=0);var n=this._coordinateSystemView();n&&n._layout(t,e,i)},t.prototype._renderInnerContent=function(t,e,i){var n=this._coordinateSystemView();n&&n._render(t,i)},t.prototype._hitTest=function(t){var e=this._rectangle();if(null!=e&&e.contains(t)){var i=this._coordinateSystemView();if(null!=i){var n=i._hitTest(t);if(null!=n)return n}return new r.HitTestResult(t,this,this,r.ElementType.TrellisColumn)}return o.prototype._hitTest.call(this,t)},t}(r._RectangleView);r._TrellisColumnView=t}(dv||(dv={})),function(e){"use strict";var t=function(i){function t(t){var e=i.call(this)||this;return e.__parent=t,e}return __extends(t,i),Object.defineProperty(t.prototype,"type",{get:function(){return e.ElementType.TrellisCorner},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"parent",{get:function(){return this.__parent},enumerable:!0,configurable:!0}),t.prototype._measure=function(t,e){},t.prototype._layout=function(t,e,i){this._rectangle(e)},t}(e._View);e._TrellisCornerView=t}(dv||(dv={})),function(s){"use strict";var t=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return __extends(t,e),t.prototype._createTitleView=function(){return new s._TrellisAxisTitleView(this)},t.prototype._createLabelView=function(t,e){return new s._TrellisAxisLabelView(this,t,e)},t.prototype._titleSuggestSize=function(t){if(arguments.length<=0)return this._suggestTitleSize;this._suggestTitleSize=t},t.prototype._updateActualLimits=function(t){(!this._site()||this._site()instanceof s.models._EmptySiteModel)&&e.prototype._updateActualLimits.call(this,t)},t.prototype._getClipRectangle=function(){var t=this._coordinateSystemView(),e=t._layoutView(),i=this._rectangle().clone();if(this._option().type==s.AxisType.X){var n=this._annoSize.width;if(this._getCorrectAngle()?(i.left-=n,i.width+=2*n):(i.left-=n/2,i.width+=n),e._getColumnView(0)._coordinateSystemView()===t){var o=e._columnsView()._getTitleRect(this._position());i=s.core.Rect.union(i,o)}}else if(this._option().type==s.AxisType.Y){var r=this._annoSize.height;if(this._getCorrectAngle()?(i.top-=r,i.height+=2*r):(i.top-=r/2,i.height+=r),e._getRowView(0)._coordinateSystemView()===t){o=e._rowsView()._getTitleRect(this._position());i=s.core.Rect.union(i,o)}}return i},t}(s._LineAxisView);s._TrellisLineAxisView=t}(dv||(dv={})),function(s){"use strict";var t=function(n){function t(t,e){var i=n.call(this,t)||this;return i.__parent=e,i}return __extends(t,n),t.prototype._plotViews=function(){for(var t=[],e=0,i=this.__parent.cells;e<i.length;e++)for(var n=0,o=i[e]._plotViews();n<o.length;n++){var r=o[n];r instanceof s._CartesianPlotView&&t.push(r)}return t},t.prototype._initPlotViews=function(t,e,i){},t.prototype._createAxisView=function(t){return new s._TrellisLineAxisView(this,t)},t.prototype._calcAxisRange=function(t,e){var i=t._site()instanceof s.models._YSiteModel;return t._option().type==s.AxisType.X?i?[0,e-.5*t._annoSize.width]:[0,e]:t._option().type==s.AxisType.Y&&i?[.5*t._annoSize.height,e]:[0,e]},t}(s._LineCartesianCoordinateSystemView);s._TrellisLineCartesianCoordinateSystemView=t}(dv||(dv={})),function(t){"use strict";var e=function(n){function t(t,e){var i=n.call(this,t)||this;return i.__trellisView=e,i}return __extends(t,n),t.prototype._relatedPointsFromLegendItem=function(t){for(var e=[],i=this.__trellisView._plotViews(),n=0;n<i.length;n++)e.push.apply(e,i[n]._relatedPointsFromLegendItem(t));return e},t}(t.models._PlotLegendManager);t._TrellisPlotLegendManager=e}(dv||(dv={})),function(o){"use strict";var t=function(n){function t(t,e){var i=n.call(this)||this;return i.__parent=t,i.__dataModel=e,i}return __extends(t,n),Object.defineProperty(t.prototype,"type",{get:function(){return o.ElementType.TrellisRowHeader},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"parent",{get:function(){var t=this.__dataModel.level;if(0===t)return this._trellisView();for(var e=this._trellisView().rowHeaders[t-1],i=0;i<e.length;i++){var n=e[i];if(n.rowIndex<=this.rowIndex&&this.rowIndex+this.rowSpan<=n.rowIndex+n.rowSpan)return n}return this._trellisView()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"rowHeaders",{get:function(){var t=this._trellisView().rowHeaders,e=this.__dataModel.level;if(e===t.length-1)return null;for(var i=[],n=t[e+1],o=0;o<n.length;o++){var r=n[o];this.rowIndex<=r.rowIndex&&r.rowIndex+r.rowSpan<=this.rowIndex+this.rowSpan&&i.push(r)}return i},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"rowIndex",{get:function(){return this.__dataModel.group._start},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"rowSpan",{get:function(){return this.__dataModel.nodes.length},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"text",{get:function(){return""+this.__dataModel.group._value},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"textStyle",{get:function(){return this.__textStyle},set:function(t){this.__textStyle=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"selected",{get:function(){for(var t=0,e=this.relatedPlots();t<e.length;t++)for(var i=0,n=e[t].points;i<n.length;i++){if(0==n[i].selected)return!1}return!0},set:function(t){for(var e=0,i=this.relatedPlots();e<i.length;e++)for(var n=0,o=i[e].points;n<o.length;n++){o[n].selected=t}},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"hover",{get:function(){return this._hover()},set:function(t){this._hover(t)},enumerable:!0,configurable:!0}),t.prototype._trellisView=function(){return this._rowsView().parent()},t.prototype._rowsView=function(){return this.__parent},t.prototype._paddings=function(){return new o.options._PaddingOption({left:3,top:0,right:3,bottom:0})},t.prototype.relatedPlots=function(){for(var t=[],e=this._rowsView()._rowViews(),i=this.rowIndex;i<this.rowIndex+this.rowSpan;i++)for(var n=0,o=e[i].cells;n<o.length;n++){var r=o[n];t.push.apply(t,r.plots)}return t},t.prototype._measureInnerContent=function(t,e){t.beginTransform(),o._applyTextStyle(t,this._trellisView()._config().textStyle),o._applyTextStyle(t,this.textStyle);var i=t.measureString(this.text);t.restoreTransform();var n=this._paddings();return this._measureSize=new o.core.Size(i.width+n.left+n.right,i.height+n.top+n.bottom),i},t.prototype._renderInnerContent=function(t,e,i){t.beginTransform(),o._applyTextStyle(t,this._trellisView()._config().textStyle),this._hover()&&o._applyTextStyle(t,this._trellisView()._config().hoverStyle);var n=this._rectangle();o._RenderUtils.renderText(t,this.text,new o.core.Point(n.left+n.width/2,n.top+n.height/2),1,1),t.restoreTransform()},t.prototype._hitTest=function(t){var e=this._rectangle();return null!=e&&e.contains(t)?new o.HitTestResult(t,this,this,o.ElementType.TrellisRowHeader):n.prototype._hitTest.call(this,t)},t}(o._RectangleView);o._TrellisRowHeaderCellView=t}(dv||(dv={})),function(A){"use strict";var t=function(l){function t(t){var e=l.call(this,t._plotAreaView()._dvView().control._layer())||this;return e.__parent=t,e}return __extends(t,l),t.prototype.parent=function(){return this.__parent},t.prototype._dataModel=function(){return this.parent()._dataModel()._rowsData()},t.prototype._rowCount=function(){return this._dataModel()._rowCount()},t.prototype._rowViews=function(){return this.__rowViews},t.prototype._headerCellViews=function(){return this.__headerCellViews},t.prototype._headerWidth=function(){for(var t=0,e=this._headerCellViews(),i=0;i<e.length;i++)t+=e[i][0]._measureSize.width;return t},t.prototype._axisNearWidth=function(){for(var t=0,e=this._rowViews(),i=0;i<e.length;i++)for(var n=e[i]._axisViews(),o=0;o<n.length;o++)n[o]._position()===A.AxisPosition.Near&&(t=Math.max(t,n[o]._measureSize.height));return t},t.prototype._axisFarWidth=function(){for(var t=0,e=this._rowViews(),i=0;i<e.length;i++)for(var n=e[i]._axisViews(),o=0;o<n.length;o++)n[o]._position()===A.AxisPosition.Far&&(t=Math.max(t,n[o]._measureSize.height));return t},t.prototype._rowsHeight=function(){for(var t=0,e=this._rowViews(),i=0;i<e.length;i++)t+=e[i]._rectangle().height;return t},t.prototype._className=function(){return A.__Constant_Core_Trellis_Rows_ClassName},t.prototype._getTitleRect=function(t){for(var e,i=this._rowViews(),n=0;n<i.length;n++)for(var o=i[n]._axisViews(),r=0;r<o.length;r++)o[r]._position()===t&&(e=e?A.core.Rect.union(e,o[r]._rectangle()):o[r]._rectangle().clone());return t===A.AxisPosition.Near?e&&new A.core.Rect(this._rectangle().left,e.top,e.width,e.height):e},t.prototype._getTitleHeight=function(t,e,i){for(var n,o=this._rowViews()[0]._axisViews(),r=0;r<o.length;r++)if(o[r]._position()===e){n=o[r];break}return n?n._titleView()._getTitleHeight(t,null,i):0},t.prototype._canScroll=function(){var t=this.parent()._xViewSize(),e=this.parent()._yViewSize();return 1!==t||1!==e},t.prototype._getRowView=function(t){return this._rowViews()[t]},t.prototype._getRowData=function(t){return this._dataModel()._nodes()[t]},t.prototype._update=function(){this.__rowViews=this._createRowViews(),this.__headerCellViews=this._createHeaderCellViews()},t.prototype._getRowHeights=function(t){for(var e=[],i=this._rowViews(),n=[],o=0,r=0;r<i.length;r++){var s=i[r]._getBarCount();o+=n[r]=s}var a=this.parent()._yViewSize(),l=this.parent()._config().padding,_=l.top+l.bottom,u=(t-_*i.length)/o;for(r=0;r<i.length;r++)e.push(n[r]*u/a+_);return e},t.prototype._measureInnerContent=function(t,e){for(var i=this._headerCellViews(),n=0;n<i.length;n++){for(var o=i[n],r=0,s=0;s<o.length;s++){var a=o[s]._measure(t,e);r=Math.max(r,a.width)}for(s=0;s<o.length;s++){o[s]._measureSize.width=r}}var l=this._rowViews(),_=this._getRowHeights(e.height),u=0;for(s=l.length-1;0<=s;s--){if(u+=_[s],0==s)for(var h=l[s]._axisViews(),c=0;c<h.length;c++){h[c]._titleSuggestSize(new A.core.Size(e.width,u))}if(l[s]._measure(t,new A.core.Size(e.width,_[s])),0==s)for(h=l[s]._axisViews(),c=0;c<h.length;c++){h[c]._titleSuggestSize(null)}}return new A.core.Size(e.width,e.height)},t.prototype._layoutInnerContent=function(t,e,i){(e=e.clone()).width<0&&(e.width=0),e.height<0&&(e.height=0);for(var n=this.parent()._getCellViews().map(function(t){return t[0]._measureSize.height}),o=this._getTitleHeight(t,A.AxisPosition.Near,new A.core.Size(e.height,e.width)),r=e.left+o,s=0,a=this._headerCellViews(),l=0;l<a.length;l++){var _=a[l],u=_[0]._measureSize.width;s=e.top;for(var h=0;h<_.length;h++){var c=_[h],p=n.slice(c.rowIndex,c.rowIndex+c.rowSpan).reduce(function(t,e){return t+e},0);c._layout(t,new A.core.Rect(r,s,u,p),i),s+=p}r+=u}r-=o,s=e.top;var f=this._rowViews(),d=e.width-this._headerWidth(),g=0;for(h=0;h<f.length;h++)s+=n[h],g+=n[h];for(h=f.length-1;0<=h;h--){if(s-=n[h],0==h)for(var y=f[h]._axisViews(),m=0;m<y.length;m++){(C=y[m])._titleSuggestSize(new A.core.Size(d,g))}if(f[h]._layout(t,new A.core.Rect(r,s,d,n[h]),i),0==h)for(y=f[h]._axisViews(),m=0;m<y.length;m++){(C=y[m])._titleSuggestSize(null)}}var v=[],w=[],b=0,x=0;for(h=0;h<f.length;h++)for(y=f[h]._axisViews(),m=0;m<y.length;m++){(C=y[m])._position()===A.AxisPosition.Near?(v.push(C),b=Math.max(b,C._rectangle().width)):C._position()===A.AxisPosition.Far&&(w.push(C),x=Math.max(x,C._rectangle().width))}for(m=0;m<v.length;m++){var S=(C=v[m])._rectangle(),P=C._plotrect,V=b-S.width;i.LineCartesianCoordinateSystemContent=new A.core.Rect(P.left+V,P.top,P.width-V,P.height),C._layout(t,new A.core.Rect(S.left,S.top,S.height,b),i),delete i.LineCartesianCoordinateSystemContent}for(m=0;m<w.length;m++){var C;S=(C=w[m])._rectangle(),P=C._plotrect,V=x-S.width;i.LineCartesianCoordinateSystemContent=new A.core.Rect(P.left,P.top,P.width-V,P.height),C._layout(t,new A.core.Rect(S.left-V,S.top,S.height,x),i),delete i.LineCartesianCoordinateSystemContent}},t.prototype._getLogicSize=function(){var t=this._rectangle();return new A.core.Size(t.width,this._rowsHeight())},t.prototype._renderInnerContent=function(t,e,i){if(!i.renderLabel){t.startGroup(A.__Constant_Core_Trellis_Rows_Gridline_ClassName),t.beginTransform();var n=new A._Style;n.stroke=A.__Constant_Core_Style_Stroke,n.strokeWidth=1,n._mergeLineStyle(this.parent()._config().style),A._applyNewStyle(t,n);for(var o=this._headerCellViews(),r=0;r<o.length;r++)for(var s=o[r],a=0;a<s.length;a++){var l=s[a]._rectangle(),_=0===a?l.top+.5:l.top;t.drawLine(l.left,_,l.right,_),a===s.length-1&&t.drawLine(l.left,l.bottom-.5,l.right,l.bottom-.5)}var u=this._getTitleHeight(t,A.AxisPosition.Near,new A.core.Size(e.height,e.width)),h=this._getTitleHeight(t,A.AxisPosition.Far,new A.core.Size(e.height,e.width)),c=this._rowViews();for(a=0;a<c.length;a++){l=c[a]._rectangle();var p=0<o.length?l.left:l.left+u,f=l.right-h,d=0===a?l.top+.5:l.top;t.drawLine(p,d,f,d),a===c.length-1&&t.drawLine(p,l.bottom-.5,f,l.bottom-.5)}t.restoreTransform(),t.endGroup(),t.startGroup(A.__Constant_Core_Trellis_Rows_Header_ClassName);for(r=0;r<o.length;r++)for(s=o[r],a=0;a<s.length;a++)s[a]._render(t,i);t.endGroup()}var g=this._rowViews();for(a=0;a<g.length;a++)g[a]._render(t,i)},t.prototype._createRowViews=function(){for(var t=[],e=this._rowCount(),i=0;i<e;i++)t.push(new A._TrellisRowView(this,this._getRowData(i)));return t},t.prototype._createHeaderCellViews=function(){for(var t=[],e=this._dataModel(),i=e._groups(),n=e._nodes(),o=i.slice();0<o.length;){var r=t.length,s=[];t.push(s);for(var a=o.length;0<a;){var l=o.shift();s.push(new A._TrellisRowHeaderCellView(this,{group:l,level:r,nodes:n.slice(l._start,l._end+1)}));var _=l._children;_&&0<_.length&&o.push.apply(o,_),a--}}return t},t.prototype._hitTestContent=function(t){for(var e=this._headerCellViews(),i=0;i<e.length;i++)for(var n=e[i],o=0;o<n.length;o++){if(a=n[o]._hitTest(t))return a}for(var r=this._rowViews(),s=0;s<r.length;s++){var a;if(a=r[s]._hitTest(t))return a}return l.prototype._hitTestContent.call(this,t)},t}(A._ScrollableView);A._TrellisRowsView=t}(dv||(dv={})),function(r){"use strict";var t=function(o){function t(t,e){var i=o.call(this)||this;return i.__parent=t,i.__dataModel=e,i._prepareCoordinateSystems(),i}return __extends(t,o),Object.defineProperty(t.prototype,"type",{get:function(){return r.ElementType.TrellisRow},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"parent",{get:function(){return this._trellisView()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"rowIndex",{get:function(){return this.__dataModel._index()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"rowHeader",{get:function(){var t=this._trellisView().rowHeaders;return t[t.length-1][this.rowIndex]},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"cells",{get:function(){return this._trellisView()._getCellViews()[this.rowIndex]},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"items",{get:function(){return this.__dataModel._items()},enumerable:!0,configurable:!0}),t.prototype._trellisView=function(){return this.__parent.parent()},t.prototype._plotAreaView=function(){return this._trellisView()._plotAreaView()},t.prototype._coordinateSystemView=function(){return this.__coordinateSystemView},t.prototype._axisViews=function(){var t=this._coordinateSystemView();return t?t._axisYViews():[]},t.prototype._dataSource=function(){return this.__dataSource||(this.__dataSource=this.__parent.parent()._createDataSource(this.items)),this.__dataSource},t.prototype._className=function(){return r.__Constant_Core_Trellis_Row_ClassName+"-"+this.rowIndex},t.prototype._paddings=function(){var t=this._trellisView()._config().padding;return new r.options._PaddingOption({left:0,top:t.top,right:0,bottom:t.bottom})},t.prototype._prepareCoordinateSystems=function(){for(var e,t=this.__parent.parent()._plotOptionWithAxisOptions(),i=0;i<t.length;i++){"Cartesian"===this.__parent.parent()._getPlotCoordinateSystemType(t[i].plotOption)&&(e=e||[]).push.apply(e,t[i].axisOptions.filter(function(t){return t.type===r.AxisType.Y&&-1===e.indexOf(t)}))}if(e){var n=new r._TrellisLineCartesianCoordinateSystemView(this._trellisView(),this);n._axisXViews().splice(0),this.__coordinateSystemView=n}},t.prototype._getBarCount=function(){var t=1,e=this._coordinateSystemView();if(e)for(var i=e._axisYViews(),n=0;n<i.length;n++){var o=i[n]._site();o&&o.valueCount>t&&!(o instanceof r.models._YSiteModel)&&(t=o.valueCount)}return t},t.prototype._measureInnerContent=function(t,e){for(var i=this._axisViews(),n=0;n<i.length;n++)i[n]._applyOptionToScale(i[n]._option(),i[n]._scale()),i[n]._measure(t,new r.core.Size(e.height,e.width));return new r.core.Size(e.width,e.height)},t.prototype._layoutInnerContent=function(t,e,i){(e=e.clone()).width<0&&(e.width=0),e.height<0&&(e.height=0);var n=this._coordinateSystemView();n&&n._layout(t,e,i)},t.prototype._renderInnerContent=function(t,e,i){var n=this._coordinateSystemView();n&&n._render(t,i)},t.prototype._hitTest=function(t){var e=this._rectangle();if(null!=e&&e.contains(t)){var i=this._coordinateSystemView();if(null!=i){var n=i._hitTest(t);if(null!=n)return n}return new r.HitTestResult(t,this,this,r.ElementType.TrellisRow)}return o.prototype._hitTest.call(this,t)},t}(r._RectangleView);r._TrellisRowView=t}(dv||(dv={})),function(p){"use strict";var t=function(o){function t(t,e,i){var n=o.call(this,e,i)||this;return n.__plotLegendManagers=[],n.__plotAreaView=t,n.__plotOptionWithAxisOptions=n._matchAxisOptionToPlotOptions(i,n._plotAreaView()._option().axes),n.__cornerView=n._createCornerView(),n.__rowsView=n._createRowsView(),n.__columnsView=n._createColumnsView(),n.__cellsView=n._createCellsView(),n}return __extends(t,o),t.prototype._plotOptionWithAxisOptions=function(){return this.__plotOptionWithAxisOptions},Object.defineProperty(t.prototype,"type",{get:function(){return p.ElementType.Trellis},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"parent",{get:function(){return this._plotAreaView()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"corner",{get:function(){return this.__cornerView},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"columnHeaders",{get:function(){return this.__columnsView._headerCellViews()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"rowHeaders",{get:function(){return this.__rowsView._headerCellViews()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"columns",{get:function(){return this.__columnsView._columnViews()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"rows",{get:function(){return this.__rowsView._rowViews()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"cells",{get:function(){return this._getCellViews()},enumerable:!0,configurable:!0}),t.prototype._dataSource=function(){return this.__dataSource},t.prototype._config=function(){return this._plotOptions()[0].config.trellis},t.prototype._dataModel=function(){return this.__dataModel},t.prototype._plotAreaView=function(){return this.__plotAreaView},t.prototype._rowsView=function(){return this.__rowsView},t.prototype._columnsView=function(){return this.__columnsView},t.prototype._rowCount=function(){return this.__rowsView._rowCount()},t.prototype._getRowView=function(t){return this.__rowsView._getRowView(t)},t.prototype._getRowData=function(t){return this.__rowsView._getRowData(t)},t.prototype._columnCount=function(){return this.__columnsView._columnCount()},t.prototype._getColumnView=function(t){return this.__columnsView._getColumnView(t)},t.prototype._getColumnData=function(t){return this.__columnsView._getColumnData(t)},t.prototype._getCellViews=function(){return this.__cellsView._cellViews()},t.prototype._getCellView=function(t,e){return this.__cellsView._getCellView(t,e)},t.prototype._plotViews=function(){for(var t=[],e=this._getCellViews(),i=0;i<e.length;i++)for(var n=0;n<e[i].length;n++)t.push.apply(t,e[i][n]._plotViews());return t},t.prototype._plotsPaneViews=function(){for(var t=[],e=0,i=this._getCellViews();e<i.length;e++)for(var n=0,o=i[e];n<o.length;n++){var r=o[n];t.push.apply(t,r._layoutView()._plotsPaneViews())}return t},t.prototype._getPlotAxisOptions=function(t){for(var e=this._plotOptionWithAxisOptions(),i=0;i<e.length;i++)if(e[i].plotOption===t)return e[i].axisOptions;return[]},t.prototype._getPlotCoordinateSystemType=function(t){var e=new p._DefaultLayoutView(this._plotAreaView(),new p.options._LayoutEncodingOption(null),[new p.options._PlotOption(null)]),i=p.plugins._Plugins._plot(t.type,e,t);if(i)return i._coordinateSystemType()},t.prototype._getPlotViews=function(t){for(var e=[],i=this._plotViews(),n=0;n<i.length;n++)i[n]._option()===t&&e.push(i[n]);return e},t.prototype._getPlotDataPoints=function(t){for(var e=[],i=this._getPlotViews(t),n=0;n<i.length;n++)e.push.apply(e,i[n]._data().points);return e},t.prototype._getPlotLegendManager=function(t){for(var e,i=this.__plotLegendManagers,n=0;n<i.length;n++)if(i[n]._plotView()._data()._option()===t._option()){e=i[n];break}return e||(e=new p._TrellisPlotLegendManager(t,this),i.push(e)),e},t.prototype._createDataSource=function(t){return new p.models._TrellisCellDataSource(t,this._dataSource()._option(),this._dataSource()._transformOptions(),this._dataSource()._fields())},t.prototype._loadData=function(t){this.__dataSource=t,this.__dataModel=p.models._TrellisData._create(t._items(),p.models._TrellisLayoutDefinition._parse(this._option(),t._fields())),this._update()},t.prototype._update=function(){this.__rowsView._update(),this.__columnsView._update(),this.__cellsView._update()},t.prototype._layout=function(t,e,i){this._rectangle(e);for(var n=0,o=this._plotViews();n<o.length;n++){var r=o[n];"Cartesian"===r._coordinateSystemType()&&r._initAxis(t,e)}t.beginTransform(),this.__cornerView._measure(t,e),this.__rowsView._measure(t,e);var s=this.__rowsView._headerWidth(),a=this.__rowsView._axisNearWidth(),l=this.__rowsView._axisFarWidth();this.__columnsView._measure(t,new p.core.Rect(0,0,e.width-s-a-l,e.height));var _=this.__columnsView._headerHeight(),u=this.__columnsView._axisNearHeight(),h=this.__columnsView._axisFarHeight();(0<u||0<h)&&(this.__rowsView._measure(t,new p.core.Rect(0,0,e.width,e.height-_-h-u)),s=this.__rowsView._headerWidth(),a=this.__rowsView._axisNearWidth(),l=this.__rowsView._axisFarWidth(),this.__columnsView._measure(t,new p.core.Rect(0,0,e.width-s-a-l,e.height)),_=this.__columnsView._headerHeight(),u=this.__columnsView._axisNearHeight(),h=this.__columnsView._axisFarHeight()),this.__cellsView._measure(t,new p.core.Rect(0,0,e.width-s-a-l,e.height-_-h-u));var c=new p.core.Rect(e.left+s+a,e.top+_+h,e.width-s-a-l,e.height-_-h-u);this.__cornerView._layout(t,new p.core.Rect(e.left,e.top,s+a,_+h),i),this.__columnsView._layout(t,new p.core.Rect(c.left,e.top,c.width,e.height),i),this.__rowsView._layout(t,new p.core.Rect(e.left,e.top+_+h,e.width,c.height),i),this.__cellsView._layout(t,c,i),t.restoreTransform(),this._addScrollbar()||this._destoryScrollbar()},t.prototype._renderContent=function(t,e){t.startGroup(p.__Constant_Core_Trellis_ClassName),t.beginTransform(),e.renderLabel=!1,this.__cornerView._render(t,e),this.__rowsView._render(t,e),this.__columnsView._render(t,e),this.__cellsView._render(t,e),e.renderLabel=!0,this.__rowsView._render(t,e),this.__columnsView._render(t,e),this.__cellsView._render(t,e),delete e.renderLabel,t.restoreTransform(),t.endGroup()},t.prototype._addScrollbar=function(){var t=this._xScrollbarVisible(),e=this._yScrollbarVisible();if(!t&&!e)return!1;var i=this._plotAreaView()._dvView(),n=this.__cellsView,o=this.__columnsView,r=this.__rowsView;return!!(n._canScroll()||o._canScroll()||r._canScroll())&&(this.__scrollbar?this.__scrollbar._update({containerRect:n._rectangle(),contentSize:{width:o._columnsWidth(),height:r._rowsHeight()},trackXOffset:o._axisNearHeight(),xscroll:t,yscroll:e}):this.__scrollbar=new p._DvScrollbar(i,{host:i.control.hostElement,option:{containerRect:n._rectangle(),contentSize:{width:o._columnsWidth(),height:r._rowsHeight()},trackXOffset:o._axisNearHeight(),xscroll:t,yscroll:e},xScrollViews:[o],yScrollViews:[r],xyScrollViews:[n]}),!0)},t.prototype._destoryScrollbar=function(){this.__scrollbar&&this.__scrollbar.dispose(),this.__scrollbar=null},t.prototype._xViewSize=function(){for(var t=this._getCoordinateSystems(),e=0;e<t.length;e++){var i=t[e]._xViewSize();if(1!==i)return i}return 1},t.prototype._yViewSize=function(){for(var t=this._getCoordinateSystems(),e=0;e<t.length;e++){var i=t[e]._yViewSize();if(1!==i)return i}return 1},t.prototype._xScrollbarVisible=function(){for(var t=this._getCoordinateSystems(),e=0;e<t.length;e++){if(!1===t[e]._xScrollbarVisible())return!1}return!0},t.prototype._yScrollbarVisible=function(){for(var t=this._getCoordinateSystems(),e=0;e<t.length;e++){if(!1===t[e]._yScrollbarVisible())return!1}return!0},t.prototype._getCoordinateSystems=function(){for(var t=[],e=this._getCellView(0,0)._plotViews(),i=0;i<e.length;i++){var n=e[i],o=n._layoutView()._coordinateSystemView(n._coordinateSystemType());o instanceof p._CartesianCoordinateSystemView&&-1===t.indexOf(o)&&t.push(o)}return t},t.prototype._createCornerView=function(){return new p._TrellisCornerView(this)},t.prototype._createRowsView=function(){return new p._TrellisRowsView(this)},t.prototype._createColumnsView=function(){return new p._TrellisColumnsView(this)},t.prototype._createCellsView=function(){return new p._TrellisCellsView(this)},t.prototype._hitTest=function(t){var e=this._rectangle();if(null!=e&&e.contains(t)){var i=this.__cellsView._hitTest(t);return null!=i?i:null!=(i=this.__columnsView._hitTest(t))?i:null!=(i=this.__rowsView._hitTest(t))?i:new p.HitTestResult(t,this,this,p.ElementType.Trellis)}return o.prototype._hitTest.call(this,t)},t.prototype.dispose=function(){this._destoryScrollbar()},t}(p._LayoutView);p._TrellisView=t}(dv||(dv={})),function(C){"use strict";var t=function(i){function t(t,e){return i.call(this,t,e)||this}return __extends(t,i),t.prototype._layoutView=function(){return this._plotView()._layoutView()},t.prototype._dataPoints=function(){var t,e=[],i=this._layoutView()._trellisView(),n=this._option().detailLevel,o=this._option(),r=this._plotView()._data()._valueDefinitions();if(n==C.DetailLevel.Trellis){for(var s=this._plotView()._data()._seriesList(),a=[],l=0;l<s.length;l++)a.push.apply(a,s[l]._points());for(var _=0,u=r;_<u.length;_++){var h=u[_];if(null==o.field||o.field===h.name){for(var c=[],p=0,f=a;p<f.length;p++){(V=f[p]).valueDefinition===h.name&&c.push(V)}0<c.length&&e.push(c)}}}else if(n==C.DetailLevel.Group){var d=i._getPlotViews(this._plotView()._option());for(l=0;l<d.length;l++){s=d[l]._data()._seriesList();for(var g=0;g<s.length;g++)if(null==o.field||s[g].valueDefinition===o.field){for(var y=s[g]._detailDimension(),m=(h=s[g].valueDefinition,-1),v=0;v<e.length;v++){var w=e[v][0]._series()._detailDimension();if(h===e[v][0]._series().valueDefinition&&(!y&&!w||y&&w&&y._equals(w))){m=v;break}}0<=m?(t=e[m]).push.apply(t,s[g]._points()):e.push([].concat(s[g]._points()))}}}else for(var b=0,x=r;b<x.length;b++){h=x[b];if(null==o.field||o.field===h.name){c=[];for(var S=0,P=a=i._getPlotDataPoints(this._plotView()._option());S<P.length;S++){var V;(V=P[S]).valueDefinition===h.name&&c.push(V)}0<c.length&&e.push(c)}}return e},t}(C._CartesianReferenceLineOverlayView);C._TrellisCartesianReferenceLineOverlayView=t}(dv||(dv={})),function(t){"use strict";var e=function(n){function t(){return null!==n&&n.apply(this,arguments)||this}return __extends(t,n),t.prototype._createXDimension=function(t,e){var i=this._plotView();return n.prototype._createXDimension.call(this,t,i._coerceXItems(e))},t}(t.models._CartesianPlotData);t._TrellisCartesianPlotData=e}(dv||(dv={})),function(s){"use strict";var t=function(r){function t(){return null!==r&&r.apply(this,arguments)||this}return __extends(t,r),t.prototype._coerceXItems=function(t){var e=this._layoutView();if(this._axisMode()!==s.AxisMode.Cartesian)return this._swapAxes()?e._trellisView()._dataSource()._items():t;var i=e._cellView(),n=e._trellisView();return this._swapAxes()?n._getRowData(i.rowIndex)._items():n._getColumnData(i.columnIndex)._items()},t.prototype._createYSite=function(t,e){var i=this._getAxisY();if(i.scale.type===s.ValueScaleType.Percentage)return r.prototype._createYSite.call(this,t,e);var n=[],o=this._axisMode();return this._layoutView()._trellisView()._plotViews().forEach(function(t){t instanceof s._CartesianPlotView&&t._axisMode()===o&&t._getAxisY()._position()===i._position()&&n.push.apply(n,t._data()._seriesList())}),r.prototype._createYSite.call(this,n,e)},t}(s._CartesianPlotView);s._TrellisCartesianPlotView=t}(dv||(dv={})),function(t){"use strict";var e=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return __extends(e,t),e}(t._AreaPlotData);t._TrellisAreaPlotData=e,t._Util.applyMixins(e,[t._TrellisCartesianPlotData])}(dv||(dv={})),function(e){"use strict";var t=function(i){function t(t,e){return i.call(this,t,e)||this}return __extends(t,i),t.prototype._layoutView=function(){return i.prototype._layoutView.call(this)},t.prototype._createData=function(t){return new e._TrellisAreaPlotData(this,t,this._option())},t.prototype._createXSite=function(t,e){return i.prototype._createXSite.call(this,this._coerceXItems(t),e)},t}(e._AreaPlotView);e._TrellisAreaPlotView=t,e._Util.applyMixins(t,[e._TrellisCartesianPlotView])}(dv||(dv={})),function(t){"use strict";var e=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return __extends(e,t),e}(t._BarPlot);t._TrellisBarPlotData=e,t._Util.applyMixins(e,[t._TrellisCartesianPlotData])}(dv||(dv={})),function(u){"use strict";var t=function(i){function t(t,e){return i.call(this,t,e)||this}return __extends(t,i),t.prototype._layoutView=function(){return i.prototype._layoutView.call(this)},t.prototype._createData=function(t){return new u._TrellisBarPlotData(this,t,this._option())},t.prototype._createXSite=function(t,e){return i.prototype._createXSite.call(this,this._coerceXItems(t),e)},t.prototype._clusterCount=function(){for(var t=0,e=this._layoutView()._trellisView()._plotViews(),i=this._option(),n=0;n<e.length;n++){var o=e[n];if(o._option()===i){for(var r=0,s=[],a=function(e){s.some(function(t){return e._valueDefinition()._equals(t)})?null!=e._detailDimension()&&e._detailDimension()._definition()._group()!=u.Group.Cluster||r++:(s.push(e._valueDefinition()),r++)},l=0,_=o._data()._seriesList();l<_.length;l++){a(_[l])}t<r&&(t=r)}}return t},t.prototype._calculateMinDistanceInValues=function(){for(var t=null,e=[],i=0,n=this._layoutView()._trellisView()._getPlotDataPoints(this._option());i<n.length;i++){var o=n[i],r=this._getAxisXValue(o._dimensionValue());if(null!=r){for(var s=!1,a=0,l=e;a<l.length;a++){var _=l[a];if(_==r){s=!0;break}var u=Math.abs(_-r);(null==t||u<t)&&(t=u)}s||e.push(r)}}return t},t}(u._BarPlotView);u._TrellisBarPlotView=t,u._Util.applyMixins(t,[u._TrellisCartesianPlotView])}(dv||(dv={})),function(t){"use strict";var e=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return __extends(e,t),e}(t._LinePlotData);t._TrellisLinePlotData=e,t._Util.applyMixins(e,[t._TrellisCartesianPlotData])}(dv||(dv={})),function(e){"use strict";var t=function(i){function t(t,e){return i.call(this,t,e)||this}return __extends(t,i),t.prototype._layoutView=function(){return i.prototype._layoutView.call(this)},t.prototype._createData=function(t){return new e._TrellisLinePlotData(this,t,this._option())},t.prototype._createXSite=function(t,e){return i.prototype._createXSite.call(this,this._coerceXItems(t),e)},t}(e._LinePlotView);e._TrellisLinePlotView=t,e._Util.applyMixins(t,[e._TrellisCartesianPlotView])}(dv||(dv={})),function(t){"use strict";var e=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return __extends(e,t),e}(t._ScatterPlotData);t._TrellisScatterPlotData=e,t._Util.applyMixins(e,[t._TrellisCartesianPlotData])}(dv||(dv={})),function(e){"use strict";var t=function(i){function t(t,e){return i.call(this,t,e)||this}return __extends(t,i),t.prototype._layoutView=function(){return i.prototype._layoutView.call(this)},t.prototype._createData=function(t){return new e._TrellisScatterPlotData(this,t,this._option())},t.prototype._createXSite=function(t,e){return i.prototype._createXSite.call(this,this._coerceXItems(t),e)},t}(e._ScatterPlotView);e._TrellisScatterPlotView=t,e._Util.applyMixins(t,[e._TrellisCartesianPlotView])}(dv||(dv={})),function(t){!function(t){"use strict";var e=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return __extends(e,t),e.prototype._generate=function(t,e){for(var i=0,n=t;i<n.length;i++){var o=n[i];this._generateColor(o)}},e}(t._HierarchicalLegendGenerator);t._TrellisHierarchicalLegendGenerator=e}(t.models||(t.models={}))}(dv||(dv={})),function(t){!function(t){"use strict";t.registerAdornerRender("dot",new t._DotAdornerRenderPlugin),t.registerConditionalFormattingRule("Cartesian",new t._CartesianConditionalFormattingRulePlugin),t.registerConditionalFormattingRule("Hierarchical",new t._HierarchicalConditionalFormattingRulePlugin),t.registerCoordinateSystem("Cartesian",new t._LineCartesianCoordinateSystemPlugin),t.registerCoordinateSystem("Radial",new t._RadialCartesianCoordinateSystemPlugin),t.registerCoordinateSystem("Polygonal",new t._PolygonalCartesianCoordinateSystemPlugin),t.registerCoordinateSystem("TextCategories",new t._TextCategoriesCoordinateSystemPlugin),t.registerClickInteraction("PointSelection",new t._PointSelectionInteractionPlugin),t.registerClickInteraction("SeriesSelection",new t._SeriesSelectionInteractionPlugin),t.registerClickInteraction("LegendSelection",new t._LegendSelectionInteractionPlugin),t.registerClickInteraction("CategorySelection",new t._CategorySelectionInteractionPlugin),t.registerClickInteraction("TrellisColumnHeaderSelection",new t._TrellisColumnHeaderSelectionInteractionPlugin),t.registerClickInteraction("TrellisRowHeaderSelection",new t._TrellisRowHeaderSelectionInteractionPlugin),t.registerClickInteraction("CancelSelection",new t._CancelSelectionInteractionPlugin),t.registerClickInteraction("AxisLabelSelection",new t._AxisLabelSelectionInteractionPlugin),t.registerDataContentProvider("Default",new t._DataContentProviderPlugin),t.registerDateParser("Default",new t._DateParserPlugin),t.registerHoverInteraction("ToolTipHover",new t._ToolTipHoverInteractionPlugin),t.registerHoverInteraction("PointHover",new t._PointHoverInteractionPlugin),t.registerHoverInteraction("SeriesHover",new t._SeriesHoverInteractionPlugin),t.registerHoverInteraction("LegendHover",new t._LegendHoverInteractionPlugin),t.registerHoverInteraction("TrellisColumnHeaderHover",new t._TrellisColumnHeaderHoverInteractionPlugin),t.registerHoverInteraction("TrellisRowHeaderHover",new t._TrellisRowHeaderHoverInteractionPlugin),t.registerHoverInteraction("AxisLabelHover",new t._AxisLabelHoverInteractionPlugin),t.registerLayout("Default",new t._DefaultLayoutPlugin),t.registerPlot("CartesianBar",new t._BarPlotPlugin),t.registerPlot("CartesianLine",new t._LinePlotPlugin),t.registerPlot("CartesianArea",new t._AreaPlotPlugin),t.registerPlot("CartesianScatter",new t._ScatterPlotPlugin),t.registerPlot("CartesianText",new t._TextPlotPlugin),t.registerPlot("TreeMap",new t._TreeMapPlotPlugin),t.registerPlot("Sunburst",new t._SunburstPlotPlugin),t.registerPlot("ParallelLine",new t._ParallelLinePlotPlugin),t.registerPlot("ParallelArea",new t._ParallelAreaPlotPlugin),t.registerRenderEngine("SVG",new t._SvgRenderEnginePlugin),t.registerRenderEngine("Canvas",new t._CanvasRenderEnginePlugin),t.registerStringFormatting("Default",new t._StringFormattingPlugin),t.registerSymbol("Dot",new t._DotSymbolPlugin),t.registerSymbol("Box",new t._BoxSymbolPlugin),t.registerSymbol("Diamond",new t._DiamondSymbolPlugin),t.registerSymbol("Triangle",new t._TriangleSymbolPlugin),t.registerSymbol("X",new t._XSymbolPlugin),t.registerSymbol("Dash",new t._DashSymbolPlugin),t.registerSymbol("Plus",new t._PlusSymbolPlugin),t.registerOverlay("ReferenceLine",new t._ReferenceLineOverlayPlugin),t.registerOverlay("ReferenceBand",new t._ReferenceBandOverlayPlugin),t.registerFilter("ValueEncodingExcludeNulls",new t._ValueEncodingExcludeNullsFilterPlugin),t.registerFilter("CategoryEncodingExcludeNulls",new t._CategoryEncodingExcludeNullsFilterPlugin),t.registerLayout("Trellis",new t._TrellisLayoutPlugin),t.registerPlot("TrellisCartesianBar",new t._TrellisBarPlotPlugin),t.registerPlot("TrellisCartesianLine",new t._TrellisLinePlotPlugin),t.registerPlot("TrellisCartesianArea",new t._TrellisAreaPlotPlugin),t.registerPlot("TrellisCartesianScatter",new t._TrellisScatterPlotPlugin),t.registerPlot("TrellisSunburst",new t._TrellisSunburstPlotPlugin)}(t.plugins||(t.plugins={}))}(dv||(dv={}));
	module.exports = dv;

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

	var dv = __webpack_require__(1),__extends=this&&this.__extends||function(){var i=function(t,e){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(t,e)};return function(t,e){function n(){this.constructor=t}i(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}}();!function(t){!function(t){"use strict";t.__Constant_Candle_Stick_Style_Stroke="#666666",t.__Constant_Hloc_Style_Stroke="green"}(t.financial||(t.financial={}))}(dv||(dv={})),function(n){var t;(function(t){"use strict";var e=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return __extends(e,t),e}(n.models._CartesianValueDefinition);t._StockValueDefinition=e})((t=n.financial||(n.financial={})).models||(t.models={}))}(dv||(dv={})),function(p){var f;(function(t){"use strict";var e=function(a){function h(t,e,n,i,o,l){var r=a.call(this,t,l)||this;return r._highFieldDefinition=e,r._lowFieldDefinition=n,r._openFieldDefinition=i,r._closeFieldDefinition=o,r}return __extends(h,a),h._parse=function(t,e,n){if("object"==typeof t.field){var i=new f.options._StockValueEncodingOption(t.field),o=p.models._NumberFieldDefinition._parse(i.high,e),l=p.models._NumberFieldDefinition._parse(i.low,e),r=p.models._NumberFieldDefinition._parse(i.open,e),a=p.models._NumberFieldDefinition._parse(i.close,e),s=p.models._DateFieldDefinition._parse(i.x,e);if(null!=n)return new h(n,o,l,r,a,null!=t.excludeNulls&&t.excludeNulls);if(null!=s)return new h(new p.models._FieldDimensionDefinition(s),o,l,r,a,null!=t.excludeNulls&&t.excludeNulls)}else if("string"==typeof t.field){a=r=l=o=s=null;for(var _=0,u=t.field.split(",");_<u.length;_++){var c=u[_];null==s&&null!=(s=p.models._DateFieldDefinition._parse(c,e))||null==o&&null!=(o=p.models._NumberFieldDefinition._parse(c,e))||null==l&&null!=(l=p.models._NumberFieldDefinition._parse(c,e))||null==r&&null!=(r=p.models._NumberFieldDefinition._parse(c,e))||null!=a||(a=p.models._NumberFieldDefinition._parse(c,e))}if(null!=o&&null!=l){if(null!=n)return new h(n,o,l,r,a,null!=t.excludeNulls&&t.excludeNulls);if(null!=s)return new h(new p.models._FieldDimensionDefinition(s),o,l,r,a,null!=t.excludeNulls&&t.excludeNulls)}}return null},Object.defineProperty(h.prototype,"name",{get:function(){if(null==this.__name){var t=[];null!=this._highFieldDefinition&&t.push(this._highFieldDefinition._field()._name()),null!=this._lowFieldDefinition&&t.push(this._lowFieldDefinition._field()._name()),null!=this._openFieldDefinition&&t.push(this._openFieldDefinition._field()._name()),null!=this._closeFieldDefinition&&t.push(this._closeFieldDefinition._field()._name()),this.__name=t.join("-")}return this.__name},enumerable:!0,configurable:!0}),h.prototype._toItem=function(t){for(var e=NaN,n=NaN,i=NaN,o=NaN,l=0,r=t;l<r.length;l++){var a=r[l];if(null!=this._openFieldDefinition){var s=p.core.asNumber(a[this._openFieldDefinition._field()._name()],null);isNaN(i)&&null!=s&&(i=s)}null!=this._closeFieldDefinition&&null!=(s=p.core.asNumber(a[this._closeFieldDefinition._field()._name()],null))&&(o=s),null!=this._highFieldDefinition&&null!=(s=p.core.asNumber(a[this._highFieldDefinition._field()._name()],null))&&(isNaN(e)||e<s)&&(e=s),null!=this._lowFieldDefinition&&null!=(s=p.core.asNumber(a[this._lowFieldDefinition._field()._name()],null))&&(isNaN(n)||s<n)&&(n=s)}return{high:e,low:n,open:i,close:o}},h.prototype._toValue=function(t){var e=this._toItem(t);return isNaN(e.high)||isNaN(e.low)?null:e.high-e.low},h.prototype._equals=function(t){return t instanceof h&&this._highFieldDefinition==t._highFieldDefinition&&this._lowFieldDefinition==t._lowFieldDefinition&&this._openFieldDefinition==t._openFieldDefinition&&this._closeFieldDefinition==t._closeFieldDefinition},h.prototype._max=function(){var t=NaN;return null!=this._highFieldDefinition&&(isNaN(t)||t<this._highFieldDefinition._field()._maximum())&&(t=this._highFieldDefinition._field()._maximum()),null!=this._lowFieldDefinition&&(isNaN(t)||t<this._lowFieldDefinition._field()._maximum())&&(t=this._lowFieldDefinition._field()._maximum()),null!=this._openFieldDefinition&&(isNaN(t)||t<this._openFieldDefinition._field()._maximum())&&(t=this._openFieldDefinition._field()._maximum()),null!=this._closeFieldDefinition&&(isNaN(t)||t<this._closeFieldDefinition._field()._maximum())&&(t=this._closeFieldDefinition._field()._maximum()),t},h.prototype._min=function(){var t=NaN;return null!=this._highFieldDefinition&&(isNaN(t)||t>this._highFieldDefinition._field()._minimum())&&(t=this._highFieldDefinition._field()._minimum()),null!=this._lowFieldDefinition&&(isNaN(t)||t>this._lowFieldDefinition._field()._minimum())&&(t=this._lowFieldDefinition._field()._minimum()),null!=this._openFieldDefinition&&(isNaN(t)||t>this._openFieldDefinition._field()._minimum())&&(t=this._openFieldDefinition._field()._minimum()),null!=this._closeFieldDefinition&&(isNaN(t)||t>this._closeFieldDefinition._field()._minimum())&&(t=this._closeFieldDefinition._field()._minimum()),t},h}(t._StockValueDefinition);t._HlocStockValueDefinition=e})((f=p.financial||(p.financial={})).models||(f.models={}))}(dv||(dv={})),function(_){var t;(function(t){"use strict";var e=function(o){function s(t,e,n){var i=o.call(this,t,n)||this;return i.__transactionFieldDefinition=e,i}return __extends(s,o),s._parse=function(t,e,n){if("string"==typeof t.field){for(var i=null,o=null,l=0,r=t.field.split(",");l<r.length;l++){var a=r[l];null==i&&null!=(i=_.models._DateFieldDefinition._parse(a,e))||null!=o||(o=_.models._NumberFieldDefinition._parse(a,e))}if(null!=o){if(null!=n)return new s(n,o,null!=t.excludeNulls&&t.excludeNulls);if(null!=i)return new s(new _.models._FieldDimensionDefinition(i),o,null!=t.excludeNulls&&t.excludeNulls)}}return null},Object.defineProperty(s.prototype,"name",{get:function(){return this.__transactionFieldDefinition._field()._name()},enumerable:!0,configurable:!0}),s.prototype._toItem=function(t){for(var e=NaN,n=NaN,i=NaN,o=NaN,l=0,r=t;l<r.length;l++){var a=r[l];if(null!=this.__transactionFieldDefinition){var s=_.core.asNumber(a[this.__transactionFieldDefinition._field()._name()],null);isNaN(i)&&null!=s&&(i=s),null!=s&&(o=s),null!=s&&(isNaN(e)||e<s)&&(e=s),null!=s&&(isNaN(n)||s<n)&&(n=s)}}return{high:e,low:n,open:i,close:o}},s.prototype._toValue=function(t){var e=this._toItem(t);return isNaN(e.high)||isNaN(e.low)?null:e.high-e.low},s.prototype._equals=function(t){return t instanceof s&&this.__transactionFieldDefinition==t.__transactionFieldDefinition},s.prototype._max=function(){return this.__transactionFieldDefinition._field()._maximum()},s.prototype._min=function(){return this.__transactionFieldDefinition._field()._minimum()},s}(t._StockValueDefinition);t._TransactionStockValueDefinition=e})((t=_.financial||(_.financial={})).models||(t.models={}))}(dv||(dv={})),function(n){var t;(function(o){"use strict";var t=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return __extends(e,t),e.prototype._dateFieldDefinition=function(){return null!=this._categoriedDimensionDefinition()?this._categoriedDimensionDefinition()._categoryFieldDefinitions()[0]:this._xFieldDefinition()},e.prototype._createEncodingsAnalyser=function(t){return new o._StockEncodingsAnalyser(t)},e.prototype._createYSite=function(t){return null==t||t.length<=0?new n.models._EmptySiteModel(0):t[0].ySite},e.prototype._createSeries=function(t,e,n,i){if(null!=e&&null!=this._dateFieldDefinition()){if(e instanceof o._HlocStockValueDefinition)return new o._StockSeries(this,e,n,i,t,"Day");if(e instanceof o._TransactionStockValueDefinition)return new o._StockSeries(this,e,n,i,t,"Day")}return null},e.prototype._getLegendModel=function(t){return null},e}(n.models._CartesianPlotData);o._StockPlot=t})((t=n.financial||(n.financial={})).models||(t.models={}))}(dv||(dv={})),function(a){var t;(function(t){"use strict";var e=function(){function t(t){a._assertDebug(function(){return null!=t}),this.__point=t}return Object.defineProperty(t.prototype,"template",{get:function(){var t=this._contentDefinitions();if(t&&0<t.length){var e=this._customTemplate();return null==e&&(e=this._defaultTemplate()),e}return null},enumerable:!0,configurable:!0}),t.prototype._point=function(){return this.__point},t.prototype.defaultProperty=function(t){return"value"},t.prototype.defaultFormat=function(t){return null},t.prototype.fromToken=function(t,e){if("date"==t)return{name:"date",value:this._point().date.toLocaleDateString(),aggregate:null};if("high"==t)return{name:"high",value:this._point().high,aggregate:null};if("low"==t)return{name:"low",value:this._point().low,aggregate:null};if("open"==t)return{name:"open",value:this._point().open,aggregate:null};if("close"==t)return{name:"close",value:this._point().close,aggregate:null};if("xField"==t){if(null!=(n=this._point()._series()._valueDefinition()._dimensionDefinition()))return{name:n._name(),value:this._point()._dimensionValue()._value(),aggregate:null}}else if("categoryField"==t){var n;if(null!=(n=this._point()._series()._valueDefinition()._dimensionDefinition())&&n instanceof a.models._CategoriedDimensionDefinition){var i=n._categoryFieldDefinitions();if(null==e&&(e=0),null!=i&&0<=e&&e<i.length)return{name:i[e]._field()._name(),value:i[e]._field()._toItem(this._point()._items()),aggregate:null}}}else for(var o=0,l=this._contentDefinitions();o<l.length;o++){var r=l[o];if(r._fieldDefinition()._field()._name()==t)return this._fromContentDefinition(r)}return{name:null,value:null,aggregate:null}},t.prototype._fromContentDefinition=function(t){return{name:t._fieldDefinition()._field()._name(),value:t._toItem(this._point()._items()),aggregate:a.Aggregate[t._aggregate()]}},t}();t._StockContentSite=e})((t=a.financial||(a.financial={})).models||(t.models={}))}(dv||(dv={})),function(l){var t;(function(o){"use strict";var t=function(n){function t(){return null!==n&&n.apply(this,arguments)||this}return __extends(t,n),t.prototype._createCategoriedDimensionDefinition=function(t){var e=n.prototype._createCategoriedDimensionDefinition.call(this,t);return null==e?null:e._categoryFieldDefinitions()[0]instanceof l.models._DateFieldDefinition?e:void 0},t.prototype._createValueDefinition=function(t,e,n){var i=l.financial.models._HlocStockValueDefinition._parse(t,this._fields(),e);return null!=i?i:o._TransactionStockValueDefinition._parse(t,this._fields(),e)},t.prototype._createDetailDefinitions=function(t){return[]},t.prototype._createColorDefinition=function(t,e){return l.models._ValuesNameLegendDefinition._parse(t,this._fields())},t.prototype._createShapeDefinition=function(t){return null},t.prototype._createSizeDefinition=function(t){return null},t.prototype._createTextDefinition=function(t){return l.models._ContentDefinition._parse(t,this._fields())},t.prototype._createTooltipDefinition=function(t){return null},t}(l.models._CartesianEncodingsAnalyser);o._StockEncodingsAnalyser=t})((t=l.financial||(l.financial={})).models||(t.models={}))}(dv||(dv={})),function(n){var t;(function(e){"use strict";var t=function(o){function t(t,e,n){var i=o.call(this,t,e,n)||this;return i.__date=n._value(),i._assign(t._valueDefinition()._toItem(i._items())),i.open<i.close&&(i.style.fill="none"),i}return __extends(t,o),Object.defineProperty(t.prototype,"date",{get:function(){return this.__date},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"high",{get:function(){return this.item.high},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"low",{get:function(){return this.item.low},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"open",{get:function(){return this.item.open},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"close",{get:function(){return this.item.close},enumerable:!0,configurable:!0}),t.prototype._tooltipContentSite=function(){return new e._TooltipStockContentSite(this)},t.prototype._stack=function(t){return t},Object.defineProperty(t.prototype,"xValue",{get:function(){return this.date.valueOf()},enumerable:!0,configurable:!0}),t}(n.models._CartesianPointData);e._StockPoint=t})((t=n.financial||(n.financial={})).models||(t.models={}))}(dv||(dv={})),function(d){var t;(function(f){"use strict";var t=function(a){function t(t,e,n,i,o,l){var r=a.call(this,t,e,n,i,o)||this;return r.__dateUnit=l,r}return __extends(t,a),Object.defineProperty(t.prototype,"ySite",{get:function(){return null==this.__ySite&&(this.__ySite=new e(this._valueDefinition())),this.__ySite},enumerable:!0,configurable:!0}),t.prototype._plot=function(){return a.prototype._plot.call(this)},t.prototype._valueDefinition=function(){return a.prototype._valueDefinition.call(this)},t.prototype._createPoints=function(){for(var t=[],e=0,n=this._items();e<n.length;e++){var i=n[e],o=i[this._plot()._dateFieldDefinition()._field()._name()],l=this._plot()._dateFieldDefinition()._field()._parse(o);l&&"Day"==this.__dateUnit&&t.push({date:new Date(l.getFullYear(),l.getMonth(),l.getDate()),item:i})}var r=new d.core.collections.CollectionView(t),a=new d.core.collections.PropertyGroupDescription("date");r.groupDescriptions.push(a);for(var s=[],_=0,u=function(t){var e=t.items[0].date,n=[];t.items.forEach(function(t){n.push(t.item)}),s.push(c._createPoint(n,new f._DateFieldDimensionValue(c._plot()._dateFieldDefinition(),e,_))),_++},c=this,h=0,p=r.groups;h<p.length;h++)u(p[h]);return s},t.prototype._createPoint=function(t,e){return new f._StockPoint(this,t,e)},t.prototype._applyDataPointConditionFormattingRules=function(t){var e=this._points();null!=e&&e.forEach(function(e){t.forEach(function(t){t.evaluate(e)})})},t}(d.models._CartesianSeriesData);f._StockSeries=t;var e=function(){function t(t){this.valueCount=NaN,this.groups=null,this.groupLevels=0,this.__valueFields=t}return Object.defineProperty(t.prototype,"name",{get:function(){return""},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"min",{get:function(){return this.__valueFields._min()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"max",{get:function(){return this.__valueFields._max()},enumerable:!0,configurable:!0}),t.prototype.padding=function(){return 0},Object.defineProperty(t.prototype,"dataType",{get:function(){return d.core.DataType.Number},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"isOrdinal",{get:function(){return!1},enumerable:!0,configurable:!0}),t.prototype.labelFromValue=function(t,e){var n=d.plugins._Plugins._stringFormatting("Default");return null!=n?n.format(e,t):null},t.prototype.itemValue=function(t){return t},t}()})((t=d.financial||(d.financial={})).models||(t.models={}))}(dv||(dv={})),function(o){var t;(function(t){"use strict";var e=function(){function t(t){this.__isOrdinal=!1,this.__dates=null,this.__min=NaN,this.__max=NaN,this.__padding=.5,this.groupLevels=0,this.groups=[],this.__min=NaN;var e=this.__max=NaN;this.__dates=[];for(var n=0,i=t;n<i.length;n++)for(var o=NaN,l=0,r=i[n]._points();l<r.length;l++){var a=r[l].date.valueOf();-1==this.__dates.indexOf(a)&&((isNaN(this.__min)||this.__min>a)&&(this.__min=a),(isNaN(this.__max)||this.__max<a)&&(this.__max=a),this.__dates.push(a)),isNaN(o)||(isNaN(e)||a-o<e)&&(e=a-o),o=a}isNaN(e)||(this.__padding=.5*e)}return Object.defineProperty(t.prototype,"name",{get:function(){return"date"},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"min",{get:function(){return this.__min},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"max",{get:function(){return this.__max},enumerable:!0,configurable:!0}),t.prototype.padding=function(){return this.__padding},Object.defineProperty(t.prototype,"dataType",{get:function(){return o.core.DataType.Date},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"isOrdinal",{get:function(){return this.__isOrdinal},set:function(t){this.__isOrdinal!=t&&(this.__isOrdinal=t)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"valueCount",{get:function(){return this.__dates.length},enumerable:!0,configurable:!0}),t.prototype.labelFromValue=function(t,e){var n=new Date(t),i=o.plugins._Plugins._stringFormatting("Default");return null!=i?null==e?i.format(i.defaultFormat(o.core.DataType.Date,!1),n):i.format(e,n):n.toString()},t.prototype.itemValue=function(t){return t},t}();t._XStockSiteModel=e})((t=o.financial||(o.financial={})).models||(t.models={}))}(dv||(dv={})),function(t){var e;(function(t){"use strict";var e=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return __extends(e,t),e.prototype._contentDefinitions=function(){return this._point()._series()._plot()._tooltipDefinitions()},e.prototype._customTemplate=function(){var t=this._point()._tooltip();return t&&t.template?t.template:null},e.prototype._defaultTemplate=function(){var i=[],o=[];i.push("{date.name}: {date.value}");for(var t=function(t){var e=t._fieldDefinition()._field()._name();if(!o.some(function(t){return t==e})){var n=t._fieldDefinition()._format();n?i.push("{"+e+".name}: {"+e+".value:"+n+"}"):i.push("{"+e+".name}: {"+e+".value}"),o.push(e)}},e=0,n=this._contentDefinitions();e<n.length;e++)t(n[e]);return i.join("\n")},e}(t._StockContentSite);t._TooltipStockContentSite=e})((e=t.financial||(t.financial={})).models||(e.models={}))}(dv||(dv={})),function(n){var t;(function(t){"use strict";var e=function(i){function t(t,e,n){return i.call(this,t,e,n)||this}return __extends(t,i),t.prototype._value=function(){return i.prototype._value.call(this)},t}(n.models._FieldDimensionValue);t._DateFieldDimensionValue=e})((t=n.financial||(n.financial={})).models||(t.models={}))}(dv||(dv={})),function(t){var e;(e=t.financial||(t.financial={})).models||(e.models={})}(dv||(dv={})),function(t){var e;(e=t.financial||(t.financial={})).models||(e.models={})}(dv||(dv={})),function(n){var t;(function(t){"use strict";var e=function(n){function t(t){var e=n.call(this,t)||this;return e.high=e._option().high,e.low=e._option().low,e.open=e._option().open,e.close=e._option().close,e.x=e._option().x,e}return __extends(t,n),Object.defineProperty(t.prototype,"high",{get:function(){return this.__high},set:function(t){null!=t&&"string"!=typeof t||this.__high!=t&&(this.__high=t)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"low",{get:function(){return this.__low},set:function(t){null!=t&&"string"!=typeof t||this.__low!=t&&(this.__low=t)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"open",{get:function(){return this.__open},set:function(t){null!=t&&"string"!=typeof t||this.__open!=t&&(this.__open=t)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"close",{get:function(){return this.__close},set:function(t){null!=t&&"string"!=typeof t||this.__close!=t&&(this.__close=t)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"x",{get:function(){return this.__x},set:function(t){null!=t&&"string"!=typeof t||this.__x!=t&&(this.__x=t)},enumerable:!0,configurable:!0}),t}(n.options._Option);t._StockValueEncodingOption=e})((t=n.financial||(n.financial={})).options||(t.options={}))}(dv||(dv={})),function(t){var e;(e=t.financial||(t.financial={})).options||(e.options={})}(dv||(dv={})),function(t){var n;(function(t){"use strict";var e=function(){function t(){}return Object.defineProperty(t.prototype,"chartType",{get:function(){return"Candlestick"},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"priority",{get:function(){return 0},enumerable:!0,configurable:!0}),t.prototype.create=function(t,e){return null!=e&&null!=t?new n._CandleStickPlotView(t,e):null},t}();t._CandleStickPlotPlugin=e})((n=t.financial||(t.financial={})).plugins||(n.plugins={}))}(dv||(dv={})),function(t){var n;(function(t){"use strict";var e=function(){function t(){}return Object.defineProperty(t.prototype,"chartType",{get:function(){return"HighLowOpenClose"},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"priority",{get:function(){return 0},enumerable:!0,configurable:!0}),t.prototype.create=function(t,e){return null!=e&&null!=t?new n._HlocPlotView(t,e):null},t}();t._HlocPlotPlugin=e})((n=t.financial||(t.financial={})).plugins||(n.plugins={}))}(dv||(dv={})),function(e){!function(n){"use strict";var t=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return __extends(e,t),e.prototype._coordinateSystemType=function(){return"Cartesian"},e.prototype._data=function(){return t.prototype._data.call(this)},Object.defineProperty(e.prototype,"radial",{get:function(){return!1},enumerable:!0,configurable:!0}),e.prototype._barWidth=function(){var t=this._plotAreaView()._dvView()._option().bar.width;return null==t?.7:(1<t&&(t=1),t<0&&(t=0),t)},e.prototype._createXSite=function(t,e){return new n.models._XStockSiteModel(this._data()._seriesList())},e}(e._CartesianPlotView);n._StockPlotView=t}(e.financial||(e.financial={}))}(dv||(dv={})),function(h){!function(t){"use strict";var e=function(n){function t(t,e){return n.call(this,t,e)||this}return __extends(t,n),t.prototype._startPoint=function(){return this.__startPoint},t.prototype._endPoint=function(){return this.__endPoint},t.prototype._pointView=function(){return n.prototype._pointView.call(this)},t.prototype._layout=function(t,e,n){var i=this._pointView()._topLineStart(),o=this._pointView()._plotView();e=this._pointView()._rectangle();var l=h.TextPosition.Auto;null!=o._option().config.text.position&&(l=o._option().config.text.position);var r=o._layoutView()._dataLabelsRectangle(),a=this._measure(t,null),s=o._option().config.text.offset,_=i.clone(),u=i.clone();if(l==h.TextPosition.Center)_=u=e.center.clone(),this._rotatedRectangle(new h.models._RotatedRectangle(e.center.x,e.center.y,a.width,a.height,0)),u.x+a.width/2>r.right&&this._rotatedRectangle(new h.models._RotatedRectangle(r.right-a.width/2,e.center.y,a.width,a.height,0)),u.x-a.width/2<r.left&&this._rotatedRectangle(new h.models._RotatedRectangle(r.left+a.width/2,e.center.y,a.width,a.height,0));else if(l==h.TextPosition.Inside&&0<=s||l==h.TextPosition.Outside&&s<0){s<0&&(s=-s),u.y=i.y+s,(c=i.y+s)>r.bottom&&(c=r.bottom-a.height,u.y=c),this._rotatedRectangle(new h.models._RotatedRectangle(e.center.x,c+a.height/2,a.width,a.height,0))}else{var c;s<0&&(s=-s),u.y=i.y-s,(c=i.y-s-a.height)<r.top&&(c=r.top,u.y=r.top+a.height),this._rotatedRectangle(new h.models._RotatedRectangle(e.center.x,c+a.height/2,a.width,a.height,0))}this.__startPoint=_,this.__endPoint=u},t}(h._DataLabelView);t._CandleStickDataLabelView=e}(h.financial||(h.financial={}))}(dv||(dv={})),function(y){!function(d){"use strict";var t=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return __extends(e,t),e.prototype._legendSymbol=function(){return new n},e.prototype._createData=function(t){return new d.models._StockPlot(this,t,this._option())},e.prototype._layoutSeriesList=function(t,e,n){for(var i=0,o=this._data()._seriesList();i<o.length;i++)for(var l=0,r=o[i]._points();l<r.length;l++){var a=r[l];this.layoutCandlestick(t,a)}},e.prototype.layoutCandlestick=function(t,e){var n=this._getAxisX(),i=this._getAxisY(),o=this._minDistanceInDimensionValues();null==o&&(o=1);var l=e.xValue-.5*o*this._barWidth(),r=l+o*this._barWidth(),a=((l=n._scale().value(l))+(r=n._scale().value(r)))/2,s=i._scale().value(e.high),_=i._scale().value(e.low),u=i._scale().value(e.open),c=i._scale().value(e.close),h=new d._CandleStickPointView(e,this),p=l<r?l:r,f=e.open>e.close?u:c;h._topLineStart(new y.core.Point(a,s)),h._topLineEnd(new y.core.Point(a,f)),h._bottomLineStart(new y.core.Point(a,_)),h._bottomLineEnd(new y.core.Point(a,f+Math.abs(c-u))),h._rectangle(new y.core.Rect(p,f,Math.abs(r-l),Math.abs(c-u))),h.refresh(),this._children.push(h),this._pointViews().push(h)},e}(d._StockPlotView);d._CandleStickPlotView=t;var n=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return __extends(e,t),e.prototype.render=function(t,e){var n=this._seriesColor()||this.color;t.beginTransform();var i=new y._Style;i.stroke=n,i.strokeWidth=1,i._mergeDataPointStyle(this._style()),y._applyNewStyle(t,i),t.drawLine(e.left,e.top+e.height/2,e.right,e.top+e.height/2),t.restoreTransform()},e}(y.models._LegendSymbol)}(y.financial||(y.financial={}))}(dv||(dv={})),function(_){!function(t){"use strict";var e=function(e){function t(t){return e.call(this,t)||this}return __extends(t,e),t.prototype._createPoints=function(t){var e=[],n=t._data().additionalKind,i=t._rectangle();if(i){var o=t._data();null!=n&&"open"!=n||(o.open>o.close?(e.push(new _.core.Point(i.left,i.top)),e.push(new _.core.Point(i.right,i.top))):(e.push(new _.core.Point(i.right,i.bottom)),e.push(new _.core.Point(i.left,i.bottom)))),null!=n&&"close"!=n||(o.open>o.close?(e.push(new _.core.Point(i.right,i.bottom)),e.push(new _.core.Point(i.left,i.bottom))):(e.push(new _.core.Point(i.left,i.top)),e.push(new _.core.Point(i.right,i.top))))}var l=t._topLineStart(),r=t._topLineEnd();null!=l&&null!=r&&(null!=n&&"high"!=n||e.push(l.clone()));var a=t._bottomLineStart(),s=t._bottomLineEnd();return null!=a&&null!=s&&(null!=n&&"low"!=n||e.push(a.clone())),e},t}(_._PointAdorner);t._CandleStickPointAdorner=e}(_.financial||(_.financial={}))}(dv||(dv={})),function(r){!function(n){"use strict";var t=function(l){function t(t,e){var n=l.call(this,t,e)||this;return n.__hittestRects=[],n}return __extends(t,l),t.prototype._data=function(){return l.prototype._data.call(this)},t.prototype._selectionAdorner=function(){return new n._CandleStickPointAdorner(this)},t.prototype._topLineStart=function(t){if(arguments.length<=0)return this.__topLineStart;this.__topLineStart=t.clone()},t.prototype._topLineEnd=function(t){if(arguments.length<=0)return this.__topLineEndLocation;this.__topLineEndLocation=t.clone()},t.prototype._bottomLineStart=function(t){if(arguments.length<=0)return this.__bottomLineStartLocation;this.__bottomLineStartLocation=t.clone()},t.prototype._bottomLineEnd=function(t){if(arguments.length<=0)return this.__bottomLineEndLocation;this.__bottomLineEndLocation=t.clone()},t.prototype._defaultStyle=function(){return new r.options._DataPointStyleOption({opacity:null,strokeOpacity:null,fill:"none",stroke:n.__Constant_Candle_Stick_Style_Stroke,strokeWidth:1,strokeDasharray:null,symbolShape:null,symbolOpacity:null,symbolStrokeOpacity:null,symbolFill:null,symbolStroke:null,symbolStrokeWidth:null,symbolStrokeDasharray:null})},t.prototype._renderContent=function(t,e){t.beginTransform(),r._applyDataPointStyle(t,this._defaultStyle()),null!=this._data()._series().color&&(t.fill=this._data()._series().color,t.stroke=this._data()._series().color),null!=this._data()._color()&&(t.fill=this._data()._color(),t.stroke=this._data()._color()),r._applyDataPointStyle(t,this._data()._series().style),r._applyDataPointStyle(t,this._data().style),e.hasSelectionInPlotArea&&(this._data()._selected()?(r._applyDataPointStyle(t,this._data()._series()._plot()._plotView()._plotAreaView()._dvView()._option().selectedStyle),r._applyDataPointStyle(t,this._data()._series()._plot()._plotView()._option().config.selectedStyle),e.apiSelectedStyle&&r._applyDataPointStyle(t,e.apiSelectedStyle)):(r._applyDataPointStyle(t,this._data()._series()._plot()._plotView()._plotAreaView()._dvView()._option().unselectedStyle),r._applyDataPointStyle(t,this._data()._series()._plot()._plotView()._option().config.unselectedStyle))),this._hover()&&r._applyDataPointStyle(t,this._data()._series()._plot()._option().config.hoverStyle),null!=this.__topLineStart&&null!=this.__topLineEndLocation&&(this.__topLineStart.equals(this.__topLineEndLocation)||t.drawLine(this.__topLineStart.x,this.__topLineStart.y,this.__topLineEndLocation.x,this.__topLineEndLocation.y)),null!=this.__bottomLineStartLocation&&null!=this.__bottomLineEndLocation&&(this.__bottomLineStartLocation.equals(this.__bottomLineEndLocation)||t.drawLine(this.__bottomLineStartLocation.x,this.__bottomLineStartLocation.y,this.__bottomLineEndLocation.x,this.__bottomLineEndLocation.y)),t.drawRect(this._rectangle().left,this._rectangle().top,this._rectangle().width,this._rectangle().height),t.restoreTransform()},t.prototype._hitTest=function(t){for(var e=0;e<this.__hittestRects.length;++e){var n=this.__hittestRects[e];if(null!=n&&n.contains(t)){var i=this._data().item.open>this._data().item.close,o=void 0;switch(e){case 0:o="high";break;case 1:o=i?"open":"close";break;case 2:o=i?"close":"open";break;case 3:o="low"}return new r.HitTestResult(t,this._data(),this,r.ElementType.DataPoint,o)}}return l.prototype._hitTest.call(this,t)},t.prototype._createDataLabelView=function(){var t=[],e=r.plugins._Plugins._dataContentProvider("Default");return null!=e&&(t=e.toLines(this._data()._dataLabelContentSite())),null!=t&&0<t.length?new n._CandleStickDataLabelView(this,t):null},t.prototype.refresh=function(){this.__hittestRects=[this._rectangle().clone(),this._rectangle().clone(),this._rectangle().clone(),this._rectangle().clone()];var t=this._rectangle().top,e=this._rectangle().bottom,n=t,i=this._rectangle().top+this._rectangle().height/2,o=this._rectangle().bottom;null!=this.__topLineStart&&null!=this.__topLineEndLocation&&(t=this.__topLineStart.y-10,n=this.__topLineEndLocation.y-(this.__topLineEndLocation.y-this.__topLineStart.y)/2),null!=this.__bottomLineStartLocation&&null!=this.__bottomLineEndLocation&&(o=this._rectangle().bottom+Math.abs(this.__bottomLineEndLocation.y-this.__bottomLineStartLocation.y)/2,e=this._rectangle().bottom+Math.abs(this.__bottomLineEndLocation.y-this.__bottomLineStartLocation.y)+10),this.__hittestRects[0].top=t,this.__hittestRects[0].height=n-t,this.__hittestRects[1].top=n,this.__hittestRects[1].height=i-n,this.__hittestRects[2].top=i,this.__hittestRects[2].height=o-i,this.__hittestRects[3].top=o,this.__hittestRects[3].height=e-o},t}(r._CartesianPointView);n._CandleStickPointView=t}(r.financial||(r.financial={}))}(dv||(dv={})),function(p){!function(t){"use strict";var e=function(n){function t(t,e){return n.call(this,t,e)||this}return __extends(t,n),t.prototype._startPoint=function(){return this.__startPoint},t.prototype._endPoint=function(){return this.__endPoint},t.prototype._pointView=function(){return n.prototype._pointView.call(this)},t.prototype._center=function(){var t=this._pointView(),e=t._highLowStart().clone(),n=Math.max(t._openStartPt.y,t._closeStartPt.y),i=Math.min(t._openStartPt.y,t._closeStartPt.y);return e.y=i+(n-i)/2,e},t.prototype._layout=function(t,e,n){var i=this._pointView()._plotView(),o=this._pointView()._highLowStart(),l=p.TextPosition.Auto;null!=i._option().config.text.position&&(l=i._option().config.text.position);var r=i._layoutView()._dataLabelsRectangle(),a=this._measure(t,null),s=i._option().config.text.offset,_=o.clone(),u=o.clone();if(l==p.TextPosition.Center){var c=this._center();this._rotatedRectangle(new p.models._RotatedRectangle(_.x,c.y,a.width,a.height,0)),u.x+a.width/2>r.right&&this._rotatedRectangle(new p.models._RotatedRectangle(r.right-a.width/2,c.y,a.width,a.height,0)),u.x-a.width/2<r.left&&this._rotatedRectangle(new p.models._RotatedRectangle(r.left+a.width/2,c.y,a.width,a.height,0))}else if(l==p.TextPosition.Inside&&0<=s||l==p.TextPosition.Outside&&s<0){s<0&&(s=-s),u.y=o.y+s,(h=o.y+s)>r.bottom&&(h=r.bottom-a.height,u.y=h),this._rotatedRectangle(new p.models._RotatedRectangle(_.x,h+a.height/2,a.width,a.height,0))}else{var h;s<0&&(s=-s),u.y=o.y-s,(h=o.y-s-a.height)<r.top&&(h=r.top,u.y=r.top+a.height),this._rotatedRectangle(new p.models._RotatedRectangle(_.x,h+a.height/2,a.width,a.height,0))}this.__startPoint=_,this.__endPoint=u},t}(p._DataLabelView);t._HlocDataLabelView=e}(p.financial||(p.financial={}))}(dv||(dv={})),function(g){!function(m){"use strict";var t=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return __extends(e,t),e.prototype._legendSymbol=function(){return new n},e.prototype._createData=function(t){return new m.models._StockPlot(this,t,this._option())},e.prototype._layoutSeriesList=function(t,e,n){for(var i=0,o=this._data()._seriesList();i<o.length;i++)for(var l=0,r=o[i]._points();l<r.length;l++){var a=r[l];this.layoutHloc(t,a)}},e.prototype.layoutHloc=function(t,e){var n=e.high,i=e.low,o=e.open,l=e.close,r=this._minDistanceInDimensionValues();null==r&&(r=1);var a=this._getAxisX(),s=this._getAxisY(),_=e.xValue-.5*r*this._barWidth(),u=_+r*this._barWidth(),c=((_=a._scale().value(_))+(u=a._scale().value(u)))/2,h=s._scale().value(n),p=s._scale().value(i),f=s._scale().value(o),d=s._scale().value(l),y=new m._HlocPointView(e,this);null==c||isNaN(c)||null==h||isNaN(h)||null==p||isNaN(p)||(y.hlLineStart=new g.core.Point(c,h),y.hlLineEnd=new g.core.Point(c,p));null==c||isNaN(c)||null==f||isNaN(f)||null==u||isNaN(u)||null==_||isNaN(_)||(y.openLineStart=new g.core.Point(c-Math.abs(u-_)/2,f),y.openLineEnd=new g.core.Point(c,f)),null==c||isNaN(c)||null==d||isNaN(d)||null==u||isNaN(u)||null==_||isNaN(_)||(y.closeLineStart=new g.core.Point(c,d),y.closeLineEnd=new g.core.Point(c+Math.abs(u-_)/2,d)),y.refresh(),this._children.push(y),this._pointViews().push(y)},e}(m._StockPlotView);m._HlocPlotView=t;var n=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return __extends(e,t),e.prototype.render=function(t,e){var n=this._seriesColor()||this.color;t.beginTransform();var i=new g._Style;i.stroke=n,i.strokeWidth=1,i._mergeDataPointStyle(this._style()),g._applyNewStyle(t,i),t.drawLine(e.left,e.top+e.height/2,e.right,e.top+e.height/2),t.restoreTransform()},e}(g.models._LegendSymbol)}(g.financial||(g.financial={}))}(dv||(dv={})),function(n){!function(t){"use strict";var e=function(e){function t(t){return e.call(this,t)||this}return __extends(t,e),t.prototype._createPoints=function(t){var e=[];return null!=t.__highLowStart&&e.push(t.__highLowStart.clone()),null!=t._openStartPt&&e.push(t._openStartPt.clone()),null!=t._closeEndPt&&e.push(t._closeEndPt.clone()),null!=t._hlEndPt&&e.push(t._hlEndPt.clone()),e},t}(n._PointAdorner);t._HlocPointAdorner=e}(n.financial||(n.financial={}))}(dv||(dv={})),function(l){!function(n){"use strict";var t=function(o){function t(){return null!==o&&o.apply(this,arguments)||this}return __extends(t,o),t.prototype._data=function(){return o.prototype._data.call(this)},t.prototype._selectionAdorner=function(){return new n._HlocPointAdorner(this)},t.prototype._highLowStart=function(t){if(arguments.length<=0)return this.__highLowStart;this.__highLowStart=t},Object.defineProperty(t.prototype,"hlLineStart",{set:function(t){this.__highLowStart=t.clone()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"hlLineEnd",{set:function(t){this._hlEndPt=t.clone()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"openLineStart",{set:function(t){this._openStartPt=t.clone()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"openLineEnd",{set:function(t){this._openEndPt=t.clone()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"closeLineStart",{set:function(t){this._closeStartPt=t.clone()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"closeLineEnd",{set:function(t){this._closeEndPt=t.clone()},enumerable:!0,configurable:!0}),t.prototype._defaultStyle=function(){return new l.options._DataPointStyleOption({opacity:null,strokeOpacity:null,fill:null,stroke:n.__Constant_Hloc_Style_Stroke,strokeWidth:1,strokeDasharray:null,symbolShape:null,symbolOpacity:null,symbolStrokeOpacity:null,symbolFill:null,symbolStroke:null,symbolStrokeWidth:null,symbolStrokeDasharray:null})},t.prototype._renderContent=function(t,e){t.beginTransform(),l._applyDataPointStyle(t,this._defaultStyle()),null!=this._data()._series().color&&(t.fill=this._data()._series().color,t.stroke=this._data()._series().color),null!=this._data()._color()&&(t.fill=this._data()._color(),t.stroke=this._data()._color()),l._applyDataPointStyle(t,this._data()._series().style),l._applyDataPointStyle(t,this._data().style),e.hasSelectionInPlotArea&&(this._data()._selected()?(l._applyDataPointStyle(t,this._plotView()._plotAreaView()._dvView()._option().selectedStyle),l._applyDataPointStyle(t,this._plotView()._option().config.selectedStyle),e.apiSelectedStyle&&l._applyDataPointStyle(t,e.apiSelectedStyle)):(l._applyDataPointStyle(t,this._plotView()._plotAreaView()._dvView()._option().unselectedStyle),l._applyDataPointStyle(t,this._plotView()._option().config.unselectedStyle))),this._hover()&&l._applyDataPointStyle(t,this._plotView()._option().config.hoverStyle);var n=this._highLowStart();null!=n&&null!=this._hlEndPt&&t.drawLine(n.x,n.y,this._hlEndPt.x,this._hlEndPt.y),null!=this._openStartPt&&null!=this._openEndPt&&(this._openStartPt.equals(this._openEndPt)||t.drawLine(this._openStartPt.x,this._openStartPt.y,this._openEndPt.x,this._openEndPt.y)),null!=this._closeStartPt&&null!=this._closeEndPt&&(this._closeStartPt.equals(this._closeEndPt)||t.drawLine(this._closeStartPt.x,this._closeStartPt.y,this._closeEndPt.x,this._closeEndPt.y)),t.restoreTransform()},t.prototype._hitTest=function(t){for(var e=0;e<this.__hittestRects.length;++e){var n=this.__hittestRects[e];if(null!=n&&n.contains(t)){var i=void 0;switch(e){case 0:i="high";break;case 1:i="open";break;case 2:i="close";break;case 3:i="low";break;case 4:i=null}return new l.HitTestResult(t,this._data(),this,l.ElementType.DataPoint,i)}}return o.prototype._hitTest.call(this,t)},t.prototype._createDataLabelView=function(){var t=[],e=l.plugins._Plugins._dataContentProvider("Default");return null!=e&&(t=e.toLines(this._data()._dataLabelContentSite())),null!=t&&0<t.length?new n._HlocDataLabelView(this,t):null},t.prototype.refresh=function(){var t=Math.min(null!=this.__highLowStart?this.__highLowStart.x:null,null!=this._hlEndPt?this._hlEndPt.x:null,null!=this._openEndPt?this._openEndPt.x:null,null!=this._openStartPt?this._openStartPt.x:null,null!=this._closeEndPt?this._closeEndPt.x:null,null!=this._closeStartPt?this._closeStartPt.x:null),e=Math.min(null!=this.__highLowStart?this.__highLowStart.y:null,null!=this._hlEndPt?this._hlEndPt.y:null,null!=this._openEndPt?this._openEndPt.y:null,null!=this._openStartPt?this._openStartPt.y:null,null!=this._closeEndPt?this._closeEndPt.y:null,null!=this._closeStartPt?this._closeStartPt.y:null),n=Math.max(null!=this.__highLowStart?this.__highLowStart.x:null,null!=this._hlEndPt?this._hlEndPt.x:null,null!=this._openEndPt?this._openEndPt.x:null,null!=this._openStartPt?this._openStartPt.x:null,null!=this._closeEndPt?this._closeEndPt.x:null,null!=this._closeStartPt?this._closeStartPt.x:null),i=Math.max(null!=this.__highLowStart?this.__highLowStart.y:null,null!=this._hlEndPt?this._hlEndPt.y:null,null!=this._openEndPt?this._openEndPt.y:null,null!=this._openStartPt?this._openStartPt.y:null,null!=this._closeEndPt?this._closeEndPt.y:null,null!=this._closeStartPt?this._closeStartPt.y:null);this._rectangle(new l.core.Rect(t,e,n-t,i-e)),this.__hittestRects=[];var o=this._highLowStart();null!=o&&(this.__hittestRects[0]=new l.core.Rect(o.x-10,o.y-10,20,20)),null!=this._openStartPt&&(this.__hittestRects[1]=new l.core.Rect(this._openStartPt.x,this._openStartPt.y-10,this._rectangle().width/2,20)),null!=this._closeEndPt&&(this.__hittestRects[2]=new l.core.Rect(this._closeEndPt.x-this._rectangle().width/2,this._closeEndPt.y-10,this._rectangle().width/2,20)),null!=this._hlEndPt&&(this.__hittestRects[3]=new l.core.Rect(this._hlEndPt.x-10,this._hlEndPt.y-10,20,20)),this.__hittestRects[4]=new l.core.Rect(this.__highLowStart.x-10,this.__highLowStart.y-10,20,this._hlEndPt.y-this.__highLowStart.y+20)},t}(l._CartesianPointView);n._HlocPointView=t}(l.financial||(l.financial={}))}(dv||(dv={})),function(e){var t;(function(t){"use strict";e.plugins.registerPlot("CartesianCandlestick",new t._CandleStickPlotPlugin),e.plugins.registerPlot("CartesianHighLowOpenClose",new t._HlocPlotPlugin)})((t=e.financial||(e.financial={})).plugins||(t.plugins={}))}(dv||(dv={}));
	module.exports = dv;


/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

	(function () {
	    'use strict';
	
	    var Charts = {};
	    var Drawing = __webpack_require__(4).Drawing;
	    for (var p in Drawing) {
	        if (Drawing.hasOwnProperty(p)) {
	            Charts[p] = Drawing[p];
	        }
	    }
	    module.exports = Charts;
	}());

/***/ }),
/* 4 */
/***/ (function(module, exports) {

	module.exports = GC.Spread.Sheets.FloatingObjects;

/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

	(function () {
	    'use strict';
	
	    var Charts = __webpack_require__(3);
	    var $ = __webpack_require__(6).GC$,
	        $_inherit = $.inherit,
	        COMMON_MODULE = Charts,
	        UnitHelper = COMMON_MODULE.UnitHelper,
	        defineProperty = COMMON_MODULE.ChartUtility.defineProperty,
	        isNullOrUndefined = COMMON_MODULE.UnitHelper.isNullOrUndefined,
	        ChartElementBase = COMMON_MODULE.ChartElementBase,
	        ChartFormat = __webpack_require__(7).ChartFormat,
	        ChartUtility = COMMON_MODULE.ChartUtility,
	        IsSunburstOrTreemapChart = ChartUtility.IsSunburstOrTreemapChart;
	    var keyword_null = null;
	
	    var ChartTitleBase = (function (_super) {
	        $_inherit(ChartTitleBase, _super);
	        function ChartTitleBase(chart) {
	            var _this = _super.call(this) || this;
	            _this._includeInLayout = true;
	            _this._chartText = keyword_null;
	
	            _this._ooTitle = keyword_null;
	            _this._chart = chart;
	            _this._chartText = _this.GetDefaultChartText();
	            return _this;
	        }
	
	        var ChartTitleBase_prototype = ChartTitleBase.prototype;
	        ChartTitleBase_prototype.GetChartTextInternal = function () {
	            return this._chartText;
	        };
	        defineProperty(ChartTitleBase_prototype, "Font", {
	            get: function () {
	                var _this = this;
	                if (isNullOrUndefined(_this._chartText)) {
	                    _this._chartText = _this.GetDefaultChartText();
	                }
	                return _this._chartText.Font;
	            }
	        });
	        defineProperty(ChartTitleBase_prototype, "Format", {
	            get: function () {
	                return this.ChartFormat;
	            }
	        });
	        defineProperty(ChartTitleBase_prototype, "Formula", {
	            get: function () {
	                return !isNullOrUndefined(this._chartText) ? this._chartText.Formula : keyword_null;
	            },
	            set: function (value) {
	                var _this = this;
	                if (isNullOrUndefined(_this._chartText)) {
	                    _this._chartText = _this.GetDefaultChartText();
	                }
	                _this._chartText.Formula = value;
	            }
	        });
	        defineProperty(ChartTitleBase_prototype, "FormulaR1C1", {
	            get: function () {
	                return !isNullOrUndefined(this._chartText) ? this._chartText.FormulaR1C1 : keyword_null;
	            },
	            set: function (value) {
	                var _this = this;
	                if (isNullOrUndefined(_this._chartText)) {
	                    _this._chartText = _this.GetDefaultChartText();
	                }
	                _this._chartText.FormulaR1C1 = value;
	            }
	        });
	        defineProperty(ChartTitleBase_prototype, "IncludeInLayout", {
	            get: function () {
	                return this._includeInLayout;
	            },
	            set: function (value) {
	                this._includeInLayout = value;
	            }
	        });
	        defineProperty(ChartTitleBase_prototype, "Parent", {
	            get: function () {
	                return this._chart;
	            }
	        });
	        defineProperty(ChartTitleBase_prototype, "Text", {
	            get: function () {
	                return !isNullOrUndefined(this._chartText) ? this._chartText.Text : keyword_null;
	            },
	            set: function (value) {
	                var _this = this;
	                if (isNullOrUndefined(_this._chartText)) {
	                    _this._chartText = _this.GetDefaultChartText();
	                }
	                _this._chartText.Text = value;
	            }
	        });
	        defineProperty(ChartTitleBase_prototype, "DefaultText", {
	            get: function () {
	                return keyword_null;
	            }
	        });
	        defineProperty(ChartTitleBase_prototype, "DefaultFontSize", {
	            get: function () {
	                return 0;
	            }
	        });
	        defineProperty(ChartTitleBase_prototype, "Worksheet", {
	            get: function () {
	                return this._chart.Parent.sheet();
	            }
	        });
	        ChartTitleBase_prototype.GetTextList = function (range) {
	            var textList = [];
	            var sheet = this.Worksheet._GetSheet(range.WorksheetName);
	            for (var row = range.Row; row <= range.LastRow; row++) {
	                for (var col = range.Column; col <= range.LastColumn; col++) {
	                    var txt = sheet._GetRange(row, col).Text;
	                    textList.push(!isNullOrUndefined(txt) ? txt : "");
	                }
	            }
	            return textList;
	        };
	        ChartTitleBase_prototype.GetDefaultChartText = function () {
	            var chartText = new Charts.DrawingText(this._chart.Parent, this._chart.ChartArea.Font, keyword_null, keyword_null);
	            chartText.Font.Size = this.DefaultFontSize;
	            return chartText;
	        };
	        ChartTitleBase_prototype.CreateFormat = function () {
	            var format = new ChartFormat(this._chart);
	            format.Fill.Color.ColorType = 0 ;
	            format.Line.Color.ColorType = 0 ;
	            return format;
	        };
	        ChartTitleBase_prototype.FromOOModel = function (title ) {
	            var _this = this;
	            _this._ooTitle = title;
	            if (title) {
	                if (!isNullOrUndefined(title.tx)) {
	                    if (!isNullOrUndefined(title.tx.strRef) && !isNullOrUndefined(title.txPr)) {
	                        title.tx.rich = title.txPr;
	                    } else if (!isNullOrUndefined(title.txPr) && !isNullOrUndefined(title.tx.txData)) {
	                        title.tx.rich = title.txPr;
	                    }
	                    _this._chartText.FromOOModel(title.tx);
	                } else if (!isNullOrUndefined(title.txPr)) {
	                    var tx = {};
	                    tx.rich = title.txPr;
	                    _this._chartText.FromOOModel(tx);
	                } else {
	                    _this._chartText = _this.GetDefaultChartText();
	                }
	                if (!isNullOrUndefined(title.overlay)) {
	                    _this._includeInLayout = !title.overlay;
	                }
	                _super.prototype.FromShapeProperties.call(_this, title.spPr);
	            }
	        };
	        ChartTitleBase_prototype.ToOOModel = function () {
	            var _this = this;
	            var ooTitle = !isNullOrUndefined(_this._ooTitle) ? _this._ooTitle : {};
	            if (!isNullOrUndefined(_this._chartText)) {
	                var tx = _this._chartText.ToOOModel();
	                ooTitle.tx = {};
	                if (!isNullOrUndefined(_this._chartText.TextRefer)) {
	                    ooTitle.tx.strRef = tx.strRef;
	                    ooTitle.txPr = tx.rich;
	                } else if (_this._chartText.Text) {
	                    delete ooTitle.tx.strRef;
	                    ooTitle.tx = tx;
	                } else {
	                    delete ooTitle.tx;
	                    ooTitle.txPr = tx.rich;
	                   
	                    if (IsSunburstOrTreemapChart(this._chart.ChartType) && ooTitle.txPr.p.length > 0 && ooTitle.txPr.p[0].elements && ooTitle.txPr.p[0].elements.length > 0) {
	                        ooTitle.txPr.p[0].elements[0].t = _this.DefaultText;
	                    }
	                }
	            } else {
	                delete ooTitle.tx;
	                delete ooTitle.txPr;
	            }
	            ooTitle.overlay = !_this._includeInLayout;
	            ooTitle.spPr = _super.prototype.ToShapeProperties.call(_this);
	            return ooTitle;
	        };
	        return ChartTitleBase;
	    }(ChartElementBase));
	    Charts.ChartTitleBase = ChartTitleBase;
	    var ChartTitle = (function (_super) {
	        $_inherit(ChartTitle, _super);
	        function ChartTitle(chart) {
	            return _super.call(this, chart) || this;
	        }
	
	        var ChartTitle_prototype = ChartTitle.prototype;
	        defineProperty(ChartTitle_prototype, "DefaultText", {
	            get: function () {
	                return "Chart Title";
	            }
	        });
	        defineProperty(ChartTitle_prototype, "DefaultFontSize", {
	            get: function () {
	                return UnitHelper.pointToPixel(14);
	            }
	        });
	        ChartTitle_prototype.Delete = function () {
	            this._chart.HasTitle = false;
	        };
	        ChartTitle_prototype.ToOOModel = function (is2016Chart) {
	            var ooTitle = _super.prototype.ToOOModel.call(this);
	           
	           
	           
	           
	            if (isNullOrUndefined(ooTitle.tx) && isNullOrUndefined(ooTitle.txPr) && !is2016Chart) {
	                var txPr = ooTitle.txPr = {p: []} ;
	                var defaultOOPModel = {elements: []} ;
	                defaultOOPModel.pPr = {} ;
	                defaultOOPModel.pPr.defRPr = {b: false} ;
	                txPr.p.push(defaultOOPModel);
	                if (isNullOrUndefined(txPr.bodyPr)) {
	                    txPr.bodyPr = {} ;
	                }
	                if (isNullOrUndefined(txPr.lstStyle)) {
	                    txPr.lstStyle = {} ;
	                }
	            }
	            this.CorrectChartTitleOOModel(ooTitle);
	           
	            return ooTitle;
	        };
	        ChartTitle_prototype.CorrectChartTitleOOModel = function (titleModel ) {
	            if (titleModel) {
	                var txPr = titleModel.txPr, tx = titleModel.tx, size = this.Font.Size, defRPr;
	                if (txPr && txPr.p && txPr.p.length > 0 &&
	                    txPr.p[0].pPr) {
	                    defRPr = txPr.p[0].pPr.defRPr;
	                    if (defRPr) {
	                        defRPr.sz = size;
	                    }
	                } else if (tx && tx.rich && tx.rich.p && tx.rich.p.length > 0 &&
	                    tx.rich.p[0].pPr) {
	                    defRPr = tx.rich.p[0].pPr.defRPr;
	                    if (defRPr) {
	                        defRPr.sz = size;
	                    }
	                }
	            }
	        };
	        return ChartTitle;
	    }(ChartTitleBase));
	    Charts.ChartTitle = ChartTitle;
	
	    module.exports = Charts;
	}());

/***/ }),
/* 6 */
/***/ (function(module, exports) {

	module.exports = GC.Spread.Sheets;

/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

	(function () {
	    'use strict';
	
	    var Charts = __webpack_require__(3);
	    var $ = __webpack_require__(6).GC$,
	        COMMON_MODULE = Charts,
	        isNullOrUndefined = COMMON_MODULE.UnitHelper.isNullOrUndefined,
	        ChartUtility = COMMON_MODULE.ChartUtility,
	        defineProperty = ChartUtility.defineProperty,
	        deleteFillItems = ChartUtility._deleteFillItems,
	        FillFormat = Charts.FillFormat,
	        LineFormat = Charts.LineFormat,
	        ColorFormat = Charts.ColorFormat,
	        ThreeDFormat = Charts.ThreeDFormat,
	        EFFECT_MODULE = Charts,
	        ShadowFormat = EFFECT_MODULE.ShadowFormat,
	        GlowFormat = EFFECT_MODULE.GlowFormat,
	        SoftEdgeFormat = EFFECT_MODULE.SoftEdgeFormat,
	        ReflectionFormat = EFFECT_MODULE.ReflectionFormat,
	        ARGBColor = Charts.ARGBColor,
	        StatefullBase = Charts.StatefullBase;
	    var keyword_null = null, keyword_undefined = void 0;
	
	    Charts.ChartFormatStates = {
	        Fill: 1,
	        Glow: 2,
	        Line: 4,
	        PictureFormat: 8,
	        Shadow: 16,
	        SoftEdge: 32,
	        ThreeD: 64
	    };
	
	    var ChartFormat = (function (_super) {
	        $.inherit(ChartFormat, _super);
	        function ChartFormat(chart, parent, autoFillColorFormat, autoLineColorFormat) {
	            if (parent === keyword_undefined) {
	                parent = keyword_null;
	            }
	            var _this = _super.call(this, parent) || this;
	            _this._oomodel = keyword_null;
	            _this._chart = chart;
	            _this._parentChartFormat = parent;
	            _this._autoFillColorFormat = autoFillColorFormat || _this._getAutoFillColorFormat.bind(_this);
	            _this._autoLineColorFormat = autoLineColorFormat || _this._getAutoLineColorFormat.bind(_this);
	            return _this;
	        }
	
	        var ChartFormat_prototype = ChartFormat.prototype;
	        ChartFormat_prototype._getAutoFillColorFormat = function() {
	            var parent = this._parentChartFormat;
	            var colorFormat = new ColorFormat(this._chart, parent && parent.FillInternal);
	            colorFormat.RGB = ARGBColor.FromRgb(255, 255, 255); 
	            return colorFormat;
	        };
	        ChartFormat_prototype._getAutoLineColorFormat = function () {
	            var parent = this._parentChartFormat;
	            var colorFormat = new ColorFormat(this._chart, parent && parent.FillInternal);
	            colorFormat.RGB = ARGBColor.FromRgb(0, 0, 0); 
	            return colorFormat;
	        };
	        defineProperty(ChartFormat_prototype, "Fill", {
	            get: function () {
	                return this.FillInternal;
	            }
	        });
	        defineProperty(ChartFormat_prototype, "Line", {
	            get: function () {
	                return this.LineInternal;
	            }
	        });
	        defineProperty(ChartFormat_prototype, "ThreeD", {
	            get: function () {
	                return this.ThreedInternal;
	            }
	        });
	        ChartFormat_prototype.FromOOModel = function (t ) {
	            var _this = this;
	            _this._oomodel = t;
	            if (isNullOrUndefined(t)) {
	                return;
	            }
	            if (!isNullOrUndefined(t.solidFill)) {
	                _this.FillInternal.FromOOModel(t.solidFill, 0 );
	            } else if (!isNullOrUndefined(t.noFill)) {
	                _this.FillInternal.Color.ColorType = 0;
	            } else if (!isNullOrUndefined(t.blipFill)) {
	                _this.FillInternal.FromOOModel(t.blipFill, 3 );
	            } else if (!isNullOrUndefined(t.gradFill)) {
	                _this.FillInternal.FromOOModel(t.gradFill, 2 );
	            } else if (!isNullOrUndefined(t.pattFill)) {
	                _this.FillInternal.FromOOModel(t.pattFill, 1 );
	            }
	            if (!isNullOrUndefined(t.ln)) {
	                _this.LineInternal.FromOOModel(t.ln);
	            }
	            if (!isNullOrUndefined(t.scene3d) || !isNullOrUndefined(t.sp3d)) {
	                _this.ThreedInternal.FromOOModel({Scene3D: t.scene3d, Shape3D: t.sp3d});
	            }
	            _this.FromCT_EffectList(t.effectLst);
	        };
	        ChartFormat_prototype.ToOOModel = function () {
	            return this.ToCT_ShapeProperties();
	        };
	        ChartFormat_prototype.ToCT_ShapeProperties = function () {
	            var _this = this;
	            var shapeProp = !isNullOrUndefined(_this._oomodel) ? _this._oomodel : {};
	            deleteFillItems(shapeProp);
	            if (!isNullOrUndefined(_this._fill)) {
	                var fill = _this._fill.ToOOModel();
	                if (fill.colorFillType === 0 ) {
	                    shapeProp.solidFill = fill;
	                } else if (fill.colorFillType === 1 ) {
	                    shapeProp.pattFill = fill;
	                } else if (fill.colorFillType === 2 ) {
	                    shapeProp.gradFill = fill;
	                } else if (fill.colorFillType === 3 ) {
	                    shapeProp.blipFill = fill;
	                } else if (fill.colorFillType === 5 ) {
	                    shapeProp.noFill = true;
	                }
	                delete fill.colorFillType;
	            }
	            if (!isNullOrUndefined(_this._line)) {
	                shapeProp.ln = _this._line.ToOOModel();
	            } else {
	                delete shapeProp.ln;
	            }
	            if (!isNullOrUndefined(_this._threeDFormat) && _this._threeDFormat.IsDirtyIncludingParent()) {
	                var threeDModel = _this._threeDFormat.ToOOModel();
	                shapeProp.scene3d = threeDModel.Scene3D;
	                shapeProp.sp3d = threeDModel.Shape3D;
	            }
	            shapeProp.effectLst = _this.ToCT_EffectList();
	            return shapeProp;
	        };
	        ChartFormat_prototype.Clone = function () {
	            var _this = this;
	            var format = new ChartFormat(_this._chart);
	            if (!isNullOrUndefined(_this._fill)) {
	                format._fill = _this._fill.Clone();
	            }
	            if (!isNullOrUndefined(_this._line)) {
	                format._line = _this._line.Clone();
	            } else {
	                format._line = keyword_null;
	            }
	            if (!isNullOrUndefined(_this._threeDFormat)) {
	                format._threeDFormat = _this._threeDFormat.Clone();
	            }
	            format._states = _this._states;
	            format._parentChartFormat = _this._parentChartFormat;
	            return format;
	        };
	        ChartFormat_prototype.IsDirtyIncludingParent = function (includingParent) {
	            var _this = this;
	            if (includingParent === keyword_undefined) {
	                includingParent = false;
	            }
	            if (!isNullOrUndefined(_this._fill) && _this._fill.IsDirtyIncludingParent()) {
	                return true;
	            }
	            if (!isNullOrUndefined(_this._line) && _this._line.IsDirtyIncludingParent()) {
	                return true;
	            }
	            if (!isNullOrUndefined(_this._threeDFormat) && _this._threeDFormat.IsDirtyIncludingParent()) {
	                return true;
	            }
	            return _super.prototype.IsDirtyIncludingParent.call(_this, includingParent);
	        };
	        ChartFormat_prototype.OnParentChanged = function (newParent) {
	            var _this = this;
	            _this._parentChartFormat = newParent;
	            if (!isNullOrUndefined(_this._parentChartFormat)) {
	                if (!isNullOrUndefined(_this._fill)) {
	                    _this._fill.ParentStateful = _this._parentChartFormat.Fill;
	                }
	                if (!isNullOrUndefined(_this._line)) {
	                    _this._line.ParentStateful = _this._parentChartFormat.Line;
	                }
	                if (!isNullOrUndefined(_this._threeDFormat)) {
	                    _this._threeDFormat.ParentStateful = _this._parentChartFormat.ThreeD;
	                }
	                if (!isNullOrUndefined(_this._glow)) {
	                    _this._glow.ParentStateful = _this._parentChartFormat.GlowFormatInternal;
	                }
	                if (!isNullOrUndefined(_this._shadow)) {
	                    _this._shadow.ParentStateful = _this._parentChartFormat.ShadowFormatInternal;
	                }
	                if (!isNullOrUndefined(_this._softEdge)) {
	                    _this._softEdge.ParentStateful = _this._parentChartFormat.SoftEdgeFormatInternal;
	                }
	                if (!isNullOrUndefined(_this._relfection)) {
	                    _this._relfection.ParentStateful = _this._parentChartFormat.ReflectionFormatInternal;
	                }
	            } else {
	                if (!isNullOrUndefined(_this._fill)) {
	                    _this._fill.ParentStateful = keyword_null;
	                }
	                if (!isNullOrUndefined(_this._line)) {
	                    _this._line.ParentStateful = keyword_null;
	                }
	                if (!isNullOrUndefined(_this._threeDFormat)) {
	                    _this._threeDFormat.ParentStateful = keyword_null;
	                }
	                if (!isNullOrUndefined(_this._glow)) {
	                    _this._glow.ParentStateful = keyword_null;
	                }
	                if (!isNullOrUndefined(_this._shadow)) {
	                    _this._shadow.ParentStateful = keyword_null;
	                }
	                if (!isNullOrUndefined(_this._softEdge)) {
	                    _this._softEdge.ParentStateful = keyword_null;
	                }
	                if (!isNullOrUndefined(_this._relfection)) {
	                    _this._relfection.ParentStateful = keyword_null;
	                }
	            }
	        };
	        ChartFormat_prototype.FromCT_EffectList = function (effect ) {
	            var _this = this;
	            if (isNullOrUndefined(effect)) {
	                _this.SetShadowField(keyword_null);
	                _this.SetGlowField(keyword_null);
	                _this.SetSoftEdgeField(keyword_null);
	                _this.SetReflectionField(keyword_null);
	                return;
	            }
	            if (!isNullOrUndefined(effect.innerShdw)) {
	                _this.ShadowFormatInternal.FromOOModel(effect.innerShdw);
	            } else if (!isNullOrUndefined(effect.outerShdw)) {
	                _this.ShadowFormatInternal.FromOOModel(effect.outerShdw);
	            } else if (!isNullOrUndefined(effect.prstShdw)) {
	                _this.ShadowFormatInternal.FromOOModel(effect.prstShdw);
	            } else {
	                _this.SetShadowField(keyword_null);
	            }
	            if (!isNullOrUndefined(effect.glow)) {
	                _this.GlowFormatInternal.FromOOModel(effect.glow);
	            } else {
	                _this.SetGlowField(keyword_null);
	            }
	            if (!isNullOrUndefined(effect.softEdge)) {
	                _this.SoftEdgeFormatInternal.FromOOModel(effect.softEdge);
	            } else {
	                _this.SetSoftEdgeField(keyword_null);
	            }
	            if (!isNullOrUndefined(effect.reflection)) {
	                _this.ReflectionFormatInternal.FromOOModel(effect.reflection);
	            } else {
	                _this.SetReflectionField(keyword_null);
	            }
	        };
	        ChartFormat_prototype.ToCT_EffectList = function () {
	            var _this = this;
	            var effect = !isNullOrUndefined(_this._oomodel) && !isNullOrUndefined(_this._oomodel.effectLst) ? _this._oomodel.effectLst : {} ;
	            delete effect.outerShdw;
	            delete effect.innerShdw;
	            delete effect.prstShdw;
	            if (!isNullOrUndefined(_this._shadow)) {
	                var shadowEffect = _this._shadow.ToOOModel();
	                if (shadowEffect) {
	                    var shadowEffectType = shadowEffect.shadowEffectType;
	                    if (shadowEffectType === 0 ) {
	                        effect.outerShdw = shadowEffect ;
	                    } else if (shadowEffectType === 1 ) {
	                        effect.innerShdw = shadowEffect ;
	                    } else if (shadowEffectType === 2 ) {
	                        effect.prstShdw = shadowEffect ;
	                    }
	                }
	            }
	            delete effect.glow;
	            if (!isNullOrUndefined(_this._glow)) {
	                effect.glow = _this._glow.ToOOModel();
	            }
	            delete effect.softEdge;
	            if (!isNullOrUndefined(_this._softEdge)) {
	                effect.softEdge = _this._softEdge.ToOOModel();
	            }
	            delete effect.reflection;
	            if (!isNullOrUndefined(_this._relfection)) {
	                effect.reflection = _this._relfection.ToOOModel();
	            }
	            if (_this.IsEffectListDirty(effect)) {
	                return effect;
	            }
	            return {} ;
	        };
	        defineProperty(ChartFormat_prototype, "FillInternal", {
	            get: function () {
	                var _this = this;
	                if (isNullOrUndefined(_this._fill)) {
	                    _this._fill = new FillFormat(_this._chart, !isNullOrUndefined(_this._parentChartFormat) ? _this._parentChartFormat.FillInternal : keyword_null, _this._autoFillColorFormat, _this._chart.Parent);
	                }
	                return _this._fill;
	            }
	        });
	        defineProperty(ChartFormat_prototype, "LineInternal", {
	            get: function () {
	                var _this = this;
	                if (isNullOrUndefined(_this._line)) {
	                    _this._line = new LineFormat(_this._chart, !isNullOrUndefined(_this._parentChartFormat) ? _this._parentChartFormat.LineInternal : keyword_null, _this._autoLineColorFormat);
	                }
	                return _this._line;
	            }
	        });
	        defineProperty(ChartFormat_prototype, "ThreedInternal", {
	            get: function () {
	                var _this = this;
	                if (isNullOrUndefined(_this._threeDFormat)) {
	                    _this._threeDFormat = new ThreeDFormat(_this._chart, !isNullOrUndefined(_this._parentChartFormat) ? _this._parentChartFormat.ThreedInternal : keyword_null);
	                }
	                return _this._threeDFormat;
	            }
	        });
	        defineProperty(ChartFormat_prototype, "ShadowFormatInternal", {
	            get: function () {
	                var _this = this;
	                if (isNullOrUndefined(_this._shadow)) {
	                    _this._shadow = new ShadowFormat(_this._chart, !isNullOrUndefined(_this._parentChartFormat) ? _this._parentChartFormat.ShadowFormatInternal : keyword_null);
	                }
	                return _this._shadow;
	            }
	        });
	        defineProperty(ChartFormat_prototype, "GlowFormatInternal", {
	            get: function () {
	                var _this = this;
	                if (isNullOrUndefined(_this._glow)) {
	                    _this._glow = new GlowFormat(_this._chart, !isNullOrUndefined(_this._parentChartFormat) ? _this._parentChartFormat.GlowFormatInternal : keyword_null);
	                }
	                return _this._glow;
	            }
	        });
	        defineProperty(ChartFormat_prototype, "SoftEdgeFormatInternal", {
	            get: function () {
	                if (isNullOrUndefined(this._softEdge)) {
	                    this._softEdge = new SoftEdgeFormat();
	                }
	                return this._softEdge;
	            }
	        });
	        defineProperty(ChartFormat_prototype, "ReflectionFormatInternal", {
	            get: function () {
	                var _this = this;
	                if (isNullOrUndefined(_this._relfection)) {
	                    _this._relfection = new ReflectionFormat(_this._chart, !isNullOrUndefined(_this._parentChartFormat) ? _this._parentChartFormat.ReflectionFormatInternal : keyword_null);
	                }
	                return _this._relfection;
	            }
	        });
	        ChartFormat_prototype.AdjustStateful = function (currentValue, newValue) {
	            if (!isNullOrUndefined(currentValue)) {
	                currentValue.SetParentForChildren(newValue);
	                if (!isNullOrUndefined(newValue)) {
	                    newValue.ParentStateful = currentValue.ParentStateful;
	                }
	                currentValue.ParentStateful = keyword_null;
	            }
	        };
	        ChartFormat_prototype.SetFillField = function (value) {
	            this.AdjustStateful(this._fill, value);
	            this._fill = value;
	        };
	        ChartFormat_prototype.SetLineField = function (value) {
	            this.AdjustStateful(this._line, value);
	            this._line = value;
	        };
	        ChartFormat_prototype.SetThreeDField = function (value) {
	            this.AdjustStateful(this._threeDFormat, value);
	            this._threeDFormat = value;
	        };
	        ChartFormat_prototype.SetShadowField = function (value) {
	            this.AdjustStateful(this._shadow, value);
	            this._shadow = value;
	        };
	        ChartFormat_prototype.SetGlowField = function (value) {
	            this.AdjustStateful(this._glow, value);
	            this._glow = value;
	        };
	        ChartFormat_prototype.SetReflectionField = function (value) {
	            this.AdjustStateful(this._relfection, value);
	            this._relfection = value;
	        };
	        ChartFormat_prototype.SetSoftEdgeField = function (value) {
	            this.AdjustStateful(this._softEdge, value);
	            this._softEdge = value;
	        };
	        ChartFormat_prototype.IsEffectListDirty = function (effect ) {
	            return !isNullOrUndefined(effect.blur) || !isNullOrUndefined(effect.fillOverlay) || !isNullOrUndefined(effect.glow) || !isNullOrUndefined(effect.innerShdw) || !isNullOrUndefined(effect.outerShdw) || !isNullOrUndefined(effect.prstShdw) || !isNullOrUndefined(effect.reflection) || !isNullOrUndefined(effect.softEdge);
	        };
	        return ChartFormat;
	    }(StatefullBase));
	    Charts.ChartFormat = ChartFormat;
	
	    module.exports = Charts;
	}());


/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

	(function () {
	    'use strict';
	
	    var Charts = __webpack_require__(3);
	    var $ = __webpack_require__(6).GC$,
	        $_inherit = $.inherit,
	        COMMON_MODULE = Charts,
	        UnitHelper = COMMON_MODULE.UnitHelper,
	        isNullOrUndefined = UnitHelper.isNullOrUndefined,
	        ChartUtility = COMMON_MODULE.ChartUtility,
	        ChartConstants = COMMON_MODULE.ChartConstants,
	        AxisUtility = COMMON_MODULE.AxisUtility,
	        DateTimeExtension = COMMON_MODULE.DateTimeExtension,
	        ChartElementBase = COMMON_MODULE.ChartElementBase,
	        defineProperty = ChartUtility.defineProperty,
	        ChartFormat = __webpack_require__(7).ChartFormat,
	        ColorFormat = Charts.ColorFormat,
	        CHART_TITLE_MODULE = __webpack_require__(5),
	        DrawingText = Charts.DrawingText,
	        ChartTitleBase = CHART_TITLE_MODULE.ChartTitleBase;
	    var ONE_WEEK = 7, ONE_MONTH = 4 * ONE_WEEK, keyword_null = null, keyword_undefined = void 0, Math_abs = Math.abs, Math_ceil = Math.ceil;
	
	    var AxisTitle = (function (_super) {
	        $_inherit(AxisTitle, _super);
	        function AxisTitle(chart, axisGroup, type) {
	            var _this = _super.call(this, chart) || this;
	            _this._axisGroup = axisGroup;
	            _this._type = type;
	            return _this;
	        }
	
	        var AxisTitle_prototype = AxisTitle.prototype;
	        defineProperty(AxisTitle_prototype, "DefaultText", {
	            get: function () {
	                return "Axis Title";
	            }
	        });
	        defineProperty(AxisTitle_prototype, "DefaultFontSize", {
	            get: function () {
	                return UnitHelper.pointToPixel(10);
	            }
	        });
	        AxisTitle_prototype.Delete = function () {
	            this._chart.Axes.Item(this._type, this._axisGroup).HasTitle = false;
	        };
	        return AxisTitle;
	    }(ChartTitleBase));
	    Charts.AxisTitle = AxisTitle;
	
	
	
	    var DisplayUnitLabel = (function (_super) {
	        $_inherit(DisplayUnitLabel, _super);
	        function DisplayUnitLabel(axis) {
	            var _this = _super.call(this) || this;
	            _this._ooDisplUnits = keyword_null;
	           
	            _this._axis = axis;
	            _this._chartText = _this.GetDefaultChartText();
	            return _this;
	        }
	
	        var DisplayUnitLabel_prototype = DisplayUnitLabel.prototype;
	        DisplayUnitLabel_prototype.GetDefaultChartText = function () {
	            var chart = this._axis.Parent.Parent;
	            return new DrawingText(chart.Parent, chart.ChartArea.Font);
	        };
	        defineProperty(DisplayUnitLabel_prototype, "Parent", {
	            get: function () {
	                return this._axis;
	            }
	        });
	        defineProperty(DisplayUnitLabel_prototype, "Font", {
	           
	           
	           
	            get: function () {
	               
	                return this._chartText.Font;
	            }
	        });
	        defineProperty(DisplayUnitLabel_prototype, "Format", {
	           
	           
	           
	           
	           
	           
	            get: function () {
	                return this.ChartFormat;
	            }
	        });
	        defineProperty(DisplayUnitLabel_prototype, "Text", {
	           
	           
	           
	            get: function () {
	                if (!this._chartText.Text) {
	                    return this.GetAutoText();
	                }
	                return this._chartText.Text;
	            },
	            set: function (value) {
	                this._chartText.Text = value;
	            }
	        });
	       
	       
	        DisplayUnitLabel_prototype.Delete = function () {
	            this._axis.HasDisplayUnitLabel = false;
	        };
	        DisplayUnitLabel_prototype.GetAutoText = function () {
	            var axis = this._axis;
	            var displayUnit = axis.DisplayUnit;
	            var dict = {
	                8: "Trillions",
	                7: "Billions",
	                4: "Millions",
	                1: "Thousands",
	                0: "Hundreds"
	            };
	            return dict[displayUnit] || ("x" + axis.GetValuesFromDispUnit(displayUnit));
	        };
	        DisplayUnitLabel_prototype.FromOOModel = function (t ) {
	            this._ooDisplUnits = t;
	            if (!t) {
	                return;
	            }
	            if (!isNullOrUndefined(t.builtInUnit)) {
	                this._axis.DisplayUnit = t.builtInUnit;
	            } else if (!isNullOrUndefined(t.custUnit)) {
	                this._axis.DisplayUnitCustom = t.custUnit;
	            }
	            this.FromCT_DispUnitsLbl(t.dispUnitsLbl);
	        };
	        DisplayUnitLabel_prototype.ToOOModel = function () {
	            var _this = this;
	            var ooDisplUnits = _this._ooDisplUnits;
	            var ctDispUnits = ooDisplUnits || {} ;
	            if (_this._axis.DisplayUnit === 10) {
	                ctDispUnits.custUnit = _this._axis.DisplayUnitCustom;
	            } else {
	                ctDispUnits.builtInUnit = _this._axis.DisplayUnit;
	            }
	            ctDispUnits.dispUnitsLbl = _this.ToCT_DispUnitsLbl();
	            return ctDispUnits;
	        };
	        DisplayUnitLabel_prototype.From2016ChartOOModel = function (t ) {
	            this._ooDisplUnits = t;
	            if (!t) {
	                return;
	            }
	            if (!isNullOrUndefined(t.unit))  {
	                this._axis.DisplayUnit = t.unit;
	            }
	            this.FromCT_DispUnitsLbl(t.unitsLabel);
	        };
	        DisplayUnitLabel_prototype.To2016ChartOOModel = function () {
	            var _this = this;
	            var ooDisplUnits = _this._ooDisplUnits;
	            var ctDispUnits = ooDisplUnits || {} ;
	            if (_this._axis.DisplayUnit === 10) {
	                ctDispUnits.custUnit = _this._axis.DisplayUnitCustom;
	            } else {
	                ctDispUnits.builtInUnit = _this._axis.DisplayUnit;
	            }
	            ctDispUnits.unitsLabel = _this.ToCT_DispUnitsLbl();
	            return ctDispUnits;
	        };
	        DisplayUnitLabel_prototype.ToCT_DispUnitsLbl = function () {
	            var _this = this;
	            if (_this._axis.HasDisplayUnitLabel) {
	                var ooDisplUnits = _this._ooDisplUnits;
	                var unitLabel = ooDisplUnits && ooDisplUnits.dispUnitsLbl || {} ;
	                unitLabel.spPr = _this.ToShapeProperties();
	                var tx = _this._chartText.ToOOModel();
	                if (!_this._chartText.Text) {
	                    unitLabel.txPr = tx.rich;
	                    unitLabel.tx = keyword_null;
	                } else {
	                    if (!isNullOrUndefined(_this._chartText.TextRefer)) {
	                        unitLabel.tx = {strRef: tx.strRef};
	                    } else {
	                        unitLabel.tx = tx;
	                    }
	                    unitLabel.txPr = keyword_null;
	                }
	                return unitLabel;
	            }
	            return keyword_null;
	        };
	        DisplayUnitLabel_prototype.FromCT_DispUnitsLbl = function (ooUnitLabel ) {
	            var _this = this;
	            if (isNullOrUndefined(ooUnitLabel)) {
	                _this._axis.HasDisplayUnitLabel = false;
	                _this.FromShapeProperties(keyword_null);
	                return;
	            }
	            _this.FromShapeProperties(ooUnitLabel.spPr);
	            _this._axis.HasDisplayUnitLabel = true;
	            var ctTx = ooUnitLabel.tx;
	            if (!ctTx) {
	                ctTx = {rich: ooUnitLabel.txPr};
	            }
	            _this._chartText.FromOOModel(ctTx);
	        };
	        DisplayUnitLabel_prototype.CreateFormat = function () {
	            return new ChartFormat(this._axis.Parent.Parent);
	        };
	        return DisplayUnitLabel;
	    }(ChartElementBase));
	    Charts.DisplayUnitLabel = DisplayUnitLabel;
	
	
	
	    var Gridlines = (function (_super) {
	        $_inherit(Gridlines, _super);
	        function Gridlines(axis) {
	            var _this = _super.call(this) || this;
	            _this._axis = axis;
	            return _this;
	        }
	
	        var Gridlines_prototype = Gridlines.prototype;
	        defineProperty(Gridlines_prototype, "Parent", {
	           
	           
	           
	            get: function () {
	                return this._axis;
	            }
	        });
	        defineProperty(Gridlines_prototype, "Format", {
	           
	           
	           
	           
	           
	           
	            get: function () {
	                return this.ChartFormat;
	            }
	        });
	        Gridlines_prototype.FromOOModel = function (t ) {
	            this._ooGridlines = t;
	            if (t) {
	                this.FromShapeProperties(t.spPr);
	            }
	        };
	        Gridlines_prototype.ToOOModel = function () {
	            var gridlines = this._ooGridlines || {} ;
	            gridlines.spPr = this.ToShapeProperties();
	            return gridlines;
	        };
	        Gridlines_prototype.CreateFormat = function () {
	            return new ChartFormat(this._axis.Parent.Parent);
	        };
	        return Gridlines;
	    }(ChartElementBase));
	    Charts.Gridlines = Gridlines;
	
	
	
	    var TickLabels = (function () {
	        function TickLabels(axis) {
	            var _this = this;
	            _this._numberFormatLinked = true;
	            _this._orientation = 0;
	            _this._axis = axis;
	            var chart = _this._axis.Parent.Parent;
	            _this._chartText = new DrawingText(chart.Parent, chart.ChartArea.Font);
	            _this._chartText.Font.Size = UnitHelper.pointToPixel(9);
	            _this._offset = 0;
	        }
	
	        var TickLabels_prototype = TickLabels.prototype;
	        defineProperty(TickLabels_prototype, "Font", {
	           
	           
	           
	           
	            get: function () {
	                return this._chartText.Font;
	            }
	        });
	        defineProperty(TickLabels_prototype, "NumberFormat", {
	           
	           
	           
	            get: function () {
	                return this.GetNumberFormat();
	            },
	            set: function (value) {
	                this._numberFormat = value;
	                this._numberFormatLinked = false;
	            }
	        });
	        defineProperty(TickLabels_prototype, "NumberFormatLinked", {
	           
	           
	           
	           
	            get: function () {
	                return this._numberFormatLinked;
	            },
	            set: function (value) {
	                if (value) {
	                    this._numberFormat = keyword_null;
	                } else {
	                    this._numberFormat = this.GetNumberFormat();
	                }
	                this._numberFormatLinked = value;
	            }
	        });
	        defineProperty(TickLabels_prototype, "Offset", {
	           
	           
	           
	           
	            get: function () {
	                return this._offset;
	            },
	            set: function (value) {
	                this._offset = value;
	            }
	        });
	        defineProperty(TickLabels_prototype, "Parent", {
	           
	           
	            get: function () {
	                return this._axis;
	            }
	        });
	        TickLabels_prototype.GetNumberFormat = function () {
	            var _this = this, axis = _this._axis;
	            var axisType = axis.Type;
	            var chart = axis.Parent.Parent;
	            var formatCode = _this._numberFormat;
	            if (_this.NumberFormatLinked) {
	                var series = keyword_null;
	                var seriesCollection = chart.SeriesCollection;
	                if (seriesCollection.Count > 0) {
	                    series = seriesCollection.AllSers.filter(function(s) {
	                        return s._axisGroup === axis._axisGroup;
	                    })[0];
	                }
	                if (isNullOrUndefined(series)) {
	                    return keyword_null;
	                }
	                var refers = keyword_null;
	                if (axisType === 0) {
	                    refers = series.XValuesRefers;
	                } else if (axisType === 1) {
	                    refers = series.ValuesRefers;
	                }
	                if (refers && refers.length > 0) {
	                    var returnObj = {sheet: keyword_null, row: -1, col: -1};
	                    series.GetRowColIndex(refers, 0, returnObj);
	                    var sheet = returnObj.sheet;
	                    var row = returnObj.row;
	                    var col = returnObj.col;
	                    if (sheet && row !== -1 && col !== -1) {
	                        var style = sheet._GetCellStyle(row, col);
	                        if (style && style.FormatCode) {
	                            formatCode = style.FormatCode;
	                        }
	                    }
	                }
	            }
	            return formatCode || _this._getDefaultNumberFormat(chart.ChartType, axisType, axis);
	        };
	        TickLabels_prototype._getDefaultNumberFormat = function (chartType, axisType, axis) {
	            var format = "General";
	            if (ChartUtility.IsStockChart(chartType) && axisType === 0 || axis.IsTimeScale()) {
	                format = "mm/dd/yyyy";
	            } else if (ChartUtility.IsStacked100Chart(chartType) && axisType === 1) {
	                format = "0%";
	            }
	            return format;
	        };
	        TickLabels_prototype.FromOOModel = function (t) {
	            var _this = this;
	            var tx = {rich: t.CT_TextBody};
	            _this._chartText.FromOOModel(tx);
	            if (t.CT_NumFmt) {
	                _this._numberFormat = t.CT_NumFmt.formatCode;
	                _this._numberFormatLinked = t.CT_NumFmt.sourceLinked !== false;
	            } else {
	                _this._numberFormat = keyword_null;
	                _this._numberFormatLinked = true;
	            }
	        };
	        TickLabels_prototype.ToOOModel = function () {
	            var txtBody = this._chartText.ToOOModel().rich;
	            var nf = {} ;
	            nf.formatCode = this.GetNumberFormat();
	            if (this.NumberFormatLinked === false) {
	                nf.sourceLinked = false;   
	            }
	            var result = {};
	            result.CT_TextBody = txtBody;
	            result.CT_NumFmt = nf;
	            return result;
	        };
	        return TickLabels;
	    }());
	    Charts.TickLabels = TickLabels;
	
	
	
	    var Axis = (function (_super) {
	        $_inherit(Axis, _super);
	        function Axis(axes, type, axisGroup) {
	            var _this = _super.call(this) || this;
	            _this._majorTickMark = 2;
	            _this._minorTickMark = 2;
	            _this._axisBetweenCategories = true;
	            _this._logBase = 10;
	            _this._reversePlotOrder = false;
	            _this._displayUnit = 9;
	            _this._displayUnitCustom = 1.0;
	            _this._hasDisplayUnitLabel = keyword_null;
	            _this._displayUnitLabel = keyword_null;
	            _this._tickLabelSpacing = 1;
	            _this._tickLabelSpacingIsAuto = true;
	            _this._tickLabelPos = 2;
	            _this._tickMarkSpacing = 1;
	            _this._hasTitle = false;
	            _this._title = keyword_null;
	            _this._noMultiLvlLbl = true;
	            _this._ooAx = keyword_null;
	            _this._axisId = keyword_null;
	            _this._axes = axes;
	            _this._type = type;
	            _this._axisGroup = axisGroup;
	            _this._title = new AxisTitle((_this._axes.Parent), _this._axisGroup, _this._type);
	            _this._tickLabels = _this.GetDefaultTickLabels();
	            _this.InitProps();
	            _this.InitRulers();
	            return _this;
	        }
	
	        var Axis_prototype = Axis.prototype;
	        Axis_prototype.InitRulers = function () {
	            var _this = this;
	            _this._minimumScale = 0.0;
	            _this._maximumScale = 1.2;
	            _this._minimumScaleIsAuto = true;
	            _this._maxmumScaleIsAuto = true;
	            _this._majorUnit = 0.2;
	            _this._minorUnit = 0.04;
	            _this._majorUnitIsAuto = true;
	            _this._minorUnitIsAuto = true;
	            _this._baseUnit = 0;
	            _this._baseUnitIsAuto = true;
	            _this._minorUnitScale = 0;
	            _this._majorUnitScale = 0;
	            _this._scaleType = 1;
	        };
	        Axis_prototype.InitProps = function () {
	            var _this = this;
	            _this._categoryType = 0;
	            _this._actualCategoryType = 0;
	            if (_this.IsValueScaleAxis() && _this._axisGroup === 0) {
	                _this._hasMajorGridlines = true;
	                _this._majorGridlines = _this.GetDefaultGridlines();
	            }
	            if (_this.IsValueOrDateScaleAxis()) {
	                _this._crosses = 1;
	                if (_this.IsLogarithmic) {
	                    _this._crossesAt = 1;
	                } else {
	                    _this._crossesAt = 0;
	                }
	                _this._tickLabelSpacing = 10;
	            } else if (_this._type === 0) {
	                if (_this._axisGroup === 1) {
	                    _this._crosses = 2;
	                } else {
	                    _this._crosses = 1;
	                }
	                if (_this._actualCategoryType === 1) {
	                    _this._tickLabelSpacing = 1;
	                } else {
	                    _this._tickLabelSpacing = 10;
	                }
	            } else if (_this._type === 2) {
	                _this._crosses = 1;
	            }
	            _this._deleted = _this._type === 0 && _this._axisGroup !== 0;
	            _this._axisBetweenCategories = !ChartUtility.IsSurfaceChart(_this.Chart.ChartType);
	            _this._displayUnitLabel = new DisplayUnitLabel(_this);
	            _this._format = _this.GetDefaultFormat();
	        };
	        defineProperty(Axis_prototype, "AxisBetweenCategories", {
	           
	           
	           
	           
	            get: function () {
	                return this._axisBetweenCategories;
	            },
	            set: function (value) {
	                this._axisBetweenCategories = value;
	            }
	        });
	        defineProperty(Axis_prototype, "AxisGroup", {
	           
	           
	           
	            get: function () {
	                return this._axisGroup;
	            }
	        });
	        defineProperty(Axis_prototype, "Type", {
	           
	           
	           
	            get: function () {
	                return this._type;
	            }
	        });
	        defineProperty(Axis_prototype, "CategoryType", {
	           
	           
	           
	            get: function () {
	                return this._categoryType;
	            },
	            set: function (value) {
	                var _this = this;
	                if (value !== _this._categoryType) {
	                    _this.EnsureAxisType(0);
	                    _this.EnsureNotAxisCatType(3);
	                    _this.UpdateCategoryType(value);
	                    _this.Chart.HandleElementChanged(8, _this, ChartConstants.CategoryType);
	                }
	            }
	        });
	        defineProperty(Axis_prototype, "ActualCategoryType", {
	           
	           
	           
	            get: function () {
	                return this._actualCategoryType;
	            },
	            set: function (value) {
	                if (value !== this._actualCategoryType) {
	                    this._actualCategoryType = value;
	                    this.UpdateAxisRulers();
	                }
	            }
	        });
	        defineProperty(Axis_prototype, "CategoryNames", {
	           
	           
	           
	            get: function () {
	                this.EnsureAxisType(0);
	                this.EnsureNotAxisCatType(3);
	                return this.GetCategoryNames();
	            },
	            set: function (value) {
	                this.EnsureAxisType(0);
	                this.EnsureNotAxisCatType(3);
	                this.Chart.HandleElementChanged(8, this, ChartConstants.CategoryNames, value);
	            }
	        });
	        defineProperty(Axis_prototype, "ScaleType", {
	           
	           
	           
	            get: function () {
	                return this._scaleType;
	            },
	            set: function (value) {
	                if (value !== this._scaleType) {
	                    this._scaleType = value;
	                    this.UpdateAxisRulers();
	                }
	            }
	        });
	        defineProperty(Axis_prototype, "MaximumScale", {
	           
	           
	           
	            get: function () {
	                return this._maximumScale;
	            },
	            set: function (value) {
	                var _this = this;
	                _this._maxmumScaleIsAuto = false;
	                if (value !== _this._maximumScale) {
	                    _this._maximumScale = value;
	                    if (_this.IsValueOrDateScaleAxis()) {
	                        if (_this._maximumScale < _this._minimumScale) {
	                            _this._minimumScaleIsAuto = true;
	                        }
	                        if (Math_abs(_this._maximumScale - _this._minimumScale) < _this._majorUnit) {
	                            _this._majorUnitIsAuto = true;
	                            _this._minorUnitIsAuto = true;
	                        }
	                    }
	                    _this.UpdateAxisRulers();
	                }
	            }
	        });
	        defineProperty(Axis_prototype, "MaximumScaleIsAuto", {
	           
	           
	           
	            get: function () {
	                return this._maxmumScaleIsAuto;
	            },
	            set: function (value) {
	                if (value !== this._maxmumScaleIsAuto) {
	                    this._maxmumScaleIsAuto = value;
	                    this.UpdateAxisRulers();
	                }
	            }
	        });
	        defineProperty(Axis_prototype, "MinimumScale", {
	           
	           
	           
	            get: function () {
	                return this._minimumScale;
	            },
	            set: function (value) {
	                var _this = this;
	                _this._minimumScaleIsAuto = false;
	                if (value !== _this._minimumScale) {
	                    _this._minimumScale = value;
	                    if (_this.IsValueOrDateScaleAxis()) {
	                        if (_this._maximumScale < _this._minimumScale) {
	                            _this._maxmumScaleIsAuto = true;
	                        }
	                        if (Math_abs(_this._maximumScale - _this._minimumScale) < _this._majorUnit) {
	                            _this._majorUnitIsAuto = true;
	                            _this._minorUnitIsAuto = true;
	                        }
	                    }
	                    _this.UpdateAxisRulers();
	                }
	            }
	        });
	        defineProperty(Axis_prototype, "MinimumScaleIsAuto", {
	           
	           
	           
	            get: function () {
	                return this._minimumScaleIsAuto;
	            },
	            set: function (value) {
	                if (value !== this._minimumScaleIsAuto) {
	                    this._minimumScaleIsAuto = value;
	                    this.UpdateAxisRulers();
	                }
	            }
	        });
	        defineProperty(Axis_prototype, "MajorUnit", {
	           
	           
	           
	            get: function () {
	                return this._majorUnit;
	            },
	            set: function (value) {
	                var _this = this;
	                if (_this._canSetUnit()) {
	                    if (_this._actualCategoryType === 2) {
	                        value = Math_ceil(value);
	                    }
	                    _this._majorUnitIsAuto = false;
	                    if (value !== _this._majorUnit) {
	                        _this._majorUnit = value;
	                        if ((_this.IsValueScaleAxis() || (_this.IsTimeScale() && _this._majorUnitScale === _this._minorUnitScale)) && _this._majorUnit < _this._minorUnit) {
	                            _this._minorUnitIsAuto = true;
	                        }
	                        _this.UpdateAxisRulers();
	                    }
	                }
	            }
	        });
	        defineProperty(Axis_prototype, "MajorUnitIsAuto", {
	           
	           
	           
	            get: function () {
	                return this._majorUnitIsAuto;
	            },
	            set: function (value) {
	                if (value !== this._majorUnitIsAuto) {
	                    this._majorUnitIsAuto = value;
	                    this.UpdateAxisRulers();
	                }
	            }
	        });
	        defineProperty(Axis_prototype, "MinorUnit", {
	           
	           
	           
	            get: function () {
	                return this._minorUnit;
	            },
	            set: function (value) {
	                var _this = this;
	                if (_this._canSetUnit()) {
	                    if (_this._actualCategoryType === 2) {
	                        value = Math_ceil(value);
	                    }
	                    _this._minorUnitIsAuto = false;
	                    if (value !== _this._minorUnit) {
	                        _this._minorUnit = value;
	                        if ((_this.IsValueScaleAxis() || (_this.IsTimeScale() && _this._majorUnitScale === _this._minorUnitScale)) && _this._minorUnit > _this._majorUnit) {
	                            _this._majorUnitIsAuto = true;
	                        }
	                        _this.UpdateAxisRulers();
	                    }
	                }
	            }
	        });
	        defineProperty(Axis_prototype, "MinorUnitIsAuto", {
	           
	           
	           
	            get: function () {
	                return this._minorUnitIsAuto;
	            },
	            set: function (value) {
	                if (value !== this._minorUnitIsAuto) {
	                    this._minorUnitIsAuto = value;
	                    this.UpdateAxisRulers();
	                }
	            }
	        });
	        defineProperty(Axis_prototype, "BaseUnit", {
	           
	           
	           
	            get: function () {
	                return this._baseUnit;
	            },
	            set: function (value) {
	                var _this = this;
	                _this._baseUnitIsAuto = false;
	                if (value !== _this._baseUnit) {
	                    _this._baseUnit = value;
	                    if (_this.MinorUnitIsAuto) {
	                        _this._minorUnitScale = value;
	                    }
	                    if (_this.MajorUnitIsAuto) {
	                        _this._majorUnitScale = value;
	                    }
	                }
	                _this.UpdateAxisRulers();
	            }
	        });
	        defineProperty(Axis_prototype, "BaseUnitIsAuto", {
	           
	           
	           
	           
	            get: function () {
	                return this._baseUnitIsAuto;
	            },
	            set: function (value) {
	                if (value !== this._baseUnitIsAuto) {
	                    this._baseUnitIsAuto = value;
	                    this.UpdateAxisRulers();
	                }
	            }
	        });
	        defineProperty(Axis_prototype, "MinorUnitScale", {
	           
	           
	           
	           
	            get: function () {
	                if (this._minorUnitIsAuto) {
	                    return this._baseUnit;
	                }
	                return this._minorUnitScale;
	            },
	            set: function (value) {
	                this._minorUnitIsAuto = false;
	                if (value !== this._minorUnitScale) {
	                    this._minorUnitScale = value;
	                    this.UpdateAxisRulers();
	                }
	            }
	        });
	        defineProperty(Axis_prototype, "MajorUnitScale", {
	           
	           
	           
	           
	            get: function () {
	                if (this._majorUnitIsAuto) {
	                    return this._baseUnit;
	                }
	                return this._majorUnitScale;
	            },
	            set: function (value) {
	                this._majorUnitIsAuto = false;
	                if (value !== this._majorUnitScale) {
	                    this._majorUnitScale = value;
	                    this.UpdateAxisRulers();
	                }
	            }
	        });
	        defineProperty(Axis_prototype, "AxisTitle", {
	           
	           
	           
	           
	            get: function () {
	                if (this._hasTitle) {
	                    return this._title;
	                }
	                return keyword_null;
	            },
	            set: function (value) {
	                this._title = value;
	            }
	        });
	        defineProperty(Axis_prototype, "Crosses", {
	           
	           
	           
	            get: function () {
	                return this.GetCrosses();
	            },
	            set: function (value) {
	                if (value !== this._crosses) {
	                    if (value === 0) {
	                        this._crossesAt = this.GetCrossesAt();
	                    }
	                    this._crosses = value;
	                }
	            }
	        });
	        defineProperty(Axis_prototype, "CrossesAt", {
	           
	           
	           
	           
	            get: function () {
	                return this.GetCrossesAt();
	            },
	            set: function (value) {
	                if (value !== this._crossesAt) {
	                    this._crossesAt = value;
	                    this._crosses = 0;
	                }
	            }
	        });
	        defineProperty(Axis_prototype, "Format", {
	           
	           
	           
	           
	           
	           
	            get: function () {
	                var _this = this;
	                if (isNullOrUndefined(_this._format)) {
	                    _this._format = _this.GetDefaultFormat();
	                }
	                return _this._format;
	            }
	        });
	        defineProperty(Axis_prototype, "DisplayUnit", {
	           
	           
	           
	            get: function () {
	                return this._displayUnit;
	            },
	            set: function (value) {
	                var _this = this;
	                if (value !== _this._displayUnit) {
	                    _this._displayUnit = value;
	                    if (value === 10) {
	                        _this._displayUnitCustom = _this.GetValuesFromDispUnit(value);
	                    }
	                }
	                if (value !== 9 && isNullOrUndefined(_this._hasDisplayUnitLabel)) {
	                    _this._hasDisplayUnitLabel = true;
	                }
	            }
	        });
	        defineProperty(Axis_prototype, "DisplayUnitCustom", {
	           
	           
	           
	           
	           
	            get: function () {
	                return this._displayUnitCustom;
	            },
	            set: function (value) {
	                this._displayUnitCustom = value;
	                this._displayUnit = 10;
	                if (isNullOrUndefined(this._hasDisplayUnitLabel)) {
	                    this._hasDisplayUnitLabel = true;
	                }
	            }
	        });
	        defineProperty(Axis_prototype, "DisplayUnitLabel", {
	           
	           
	           
	           
	           
	            get: function () {
	                return this.HasDisplayUnitLabel ? this._displayUnitLabel : keyword_null;
	            }
	        });
	        defineProperty(Axis_prototype, "HasDisplayUnitLabel", {
	           
	           
	           
	           
	           
	            get: function () {
	                return !isNullOrUndefined(this._hasDisplayUnitLabel) ? this._hasDisplayUnitLabel : false;
	            },
	            set: function (value) {
	                this._hasDisplayUnitLabel = value;
	            }
	        });
	        defineProperty(Axis_prototype, "HasMajorGridlines", {
	           
	           
	           
	           
	            get: function () {
	                return !!this._hasMajorGridlines;
	            },
	            set: function (value) {
	                var _this = this;
	                if (value !== _this._hasMajorGridlines) {
	                    _this._hasMajorGridlines = value;
	                    if (value && isNullOrUndefined(_this._majorGridlines)) {
	                        _this._majorGridlines = _this.GetDefaultGridlines();
	                    }
	                }
	            }
	        });
	        defineProperty(Axis_prototype, "HasMinorGridlines", {
	           
	           
	           
	           
	            get: function () {
	                return !!this._hasMinorGridlines;
	            },
	            set: function (value) {
	                var _this = this;
	                if (value !== _this._hasMinorGridlines) {
	                    _this._hasMinorGridlines = value;
	                    if (value && isNullOrUndefined(_this._minorGridlines)) {
	                        _this._minorGridlines = _this.GetDefaultGridlines();
	                    }
	                }
	            }
	        });
	        defineProperty(Axis_prototype, "HasTitle", {
	           
	           
	           
	            get: function () {
	                return this._hasTitle;
	            },
	            set: function (value) {
	                this._hasTitle = value;
	            }
	        });
	        defineProperty(Axis_prototype, "LogBase", {
	           
	           
	           
	           
	           
	           
	           
	            get: function () {
	                return this._logBase;
	            },
	            set: function (value) {
	                if (value !== this._logBase) {
	                    if (value < 2 || value > 1000) {
	                        throw new Error("The LogBase must be in range of 2 and 1000!");
	                    }
	                    this._logBase = value;
	                    this.UpdateAxisRulers();
	                }
	            }
	        });
	        defineProperty(Axis_prototype, "MajorGridlines", {
	           
	           
	           
	           
	           
	            get: function () {
	                if (!this._hasMajorGridlines) {
	                    return keyword_null;
	                }
	                return this._majorGridlines;
	            }
	        });
	        defineProperty(Axis_prototype, "MinorGridlines", {
	           
	           
	           
	           
	           
	            get: function () {
	                if (!this._hasMinorGridlines) {
	                    return keyword_null;
	                }
	                return this._minorGridlines;
	            }
	        });
	        defineProperty(Axis_prototype, "Parent", {
	           
	           
	           
	            get: function () {
	                return this._axes;
	            }
	        });
	        defineProperty(Axis_prototype, "ReversePlotOrder", {
	           
	           
	           
	            get: function () {
	                return this._reversePlotOrder;
	            },
	            set: function (value) {
	                this._reversePlotOrder = value;
	            }
	        });
	        defineProperty(Axis_prototype, "TickLabelPosition", {
	           
	           
	           
	            get: function () {
	                return this._tickLabelPos;
	            },
	            set: function (value) {
	                this._tickLabelPos = value;
	            }
	        });
	        defineProperty(Axis_prototype, "TickLabels", {
	           
	           
	           
	           
	            get: function () {
	                return this._tickLabels;
	            }
	        });
	        defineProperty(Axis_prototype, "TickLabelSpacing", {
	           
	           
	           
	           
	            get: function () {
	                if (this._tickLabelSpacingIsAuto) {
	                    return 1;
	                }
	                return this._tickLabelSpacing;
	            },
	            set: function (value) {
	                if (value < 1) {
	                    throw new Error("The value must be equal to or greater than 1");
	                }
	                this._tickLabelSpacing = value;
	                this._tickLabelSpacingIsAuto = false;
	            }
	        });
	        defineProperty(Axis_prototype, "TickLabelSpacingIsAuto", {
	           
	           
	           
	           
	           
	           
	           
	            get: function () {
	                return this._tickLabelSpacingIsAuto;
	            },
	            set: function (value) {
	                this._tickLabelSpacingIsAuto = value;
	            }
	        });
	        defineProperty(Axis_prototype, "MajorTickMark", {
	           
	           
	           
	            get: function () {
	                return this._majorTickMark;
	            },
	            set: function (value) {
	                this._majorTickMark = value;
	            }
	        });
	        defineProperty(Axis_prototype, "MinorTickMark", {
	           
	           
	           
	            get: function () {
	                return this._minorTickMark;
	            },
	            set: function (value) {
	                this._minorTickMark = value;
	            }
	        });
	        defineProperty(Axis_prototype, "TickMarkSpacing", {
	           
	           
	           
	           
	            get: function () {
	                return this._tickMarkSpacing;
	            },
	            set: function (value) {
	                this._tickMarkSpacing = value;
	            }
	        });
	        defineProperty(Axis_prototype, "Visible", {
	            get: function () {
	                return !this._deleted;
	            },
	            set: function (value) {
	                this._deleted = !value;
	            }
	        });
	        defineProperty(Axis_prototype, "NoMultiLvlLbl", {
	            get: function () {
	                return this._noMultiLvlLbl;
	            },
	            set: function (value) {
	                if (value !== this.NoMultiLvlLbl) {
	                    this._noMultiLvlLbl = value;
	                    if (this.TickLabels.Offset === 0 && !value) {
	                        this.TickLabels.Offset = 100;
	                    }
	                }
	            }
	        });
	        defineProperty(Axis_prototype, "Chart", {
	            get: function () {
	                return this.Parent.Parent;
	            }
	        });
	        Axis_prototype.GetDefaultGridlines = function () {
	            var majorGridlines = new Gridlines(this);
	            var line = majorGridlines.Format.Line;
	            line.Color.ObjectThemeColor = 1;
	            line.Weight = 1;
	            line.Color.Brightness = ChartConstants.DefaultLineColorBrightness;
	            return majorGridlines;
	        };
	        Axis_prototype.GetDefaultTickLabels = function () {
	            return new TickLabels(this);
	        };
	        defineProperty(Axis_prototype, "SeriesCollection", {
	            get: function () {
	                return this._axes.Parent.SeriesCollection;
	            }
	        });
	        defineProperty(Axis_prototype, "IsLogarithmic", {
	            get: function () {
	                return this._scaleType === 0;
	            }
	        });
	        Axis_prototype.GetCategoryNames = function () {
	            var _this = this;
	            var sc = _this.SeriesCollection;
	            var count = sc.Count;
	            if (count > 0) {
	                if (_this._type === 2) {
	                    var serNames = [];
	                    for (var i = 0; i < count; i++) {
	                        serNames.push(sc.Get(i).Name);
	                    }
	                    return serNames;
	                }
	                var firstSer = _this.GetFirstRightSer();
	                return firstSer.GetXValuesText(sc.GetMaxPointsCount(_this._axisGroup), _this.TickLabels.NumberFormatLinked ? keyword_null : _this.TickLabels.NumberFormat);
	            }
	            return [];
	        };
	        Axis_prototype.UpdateAxisRulers = function () {
	            var _this = this;
	            if (_this._type === 1) {
	                _this.UpdateValueAxis();
	            } else if (_this._type === 0) {
	                if (_this._actualCategoryType === 2) {
	                    _this.UpdateCatAxisTimeScale();
	                } else if (_this._actualCategoryType === 3) {
	                    _this.UpdateCatAxisValueScale();
	                }
	            }
	        };
	        Axis_prototype.UpdateValueScaleAxis = function () {
	            this.UpdateValueAxisMinMax();
	            this.UpdateValueAxisMajorMinor();
	        };
	        Axis_prototype.UpdateValueAxis = function () {
	            this.UpdateValueScaleAxis();
	        };
	        Axis_prototype.UpdateAxisForCatScale = function () {
	
	        };
	        Axis_prototype.UpdateCatAxisValueScale = function () {
	            this.UpdateValueScaleAxis();
	        };
	        Axis_prototype.UpdateCatAxisTimeScale = function () {
	            this.UpdateDateTimeAxisMinMax();
	            this.UpdateDateTimeAxisMajorMinorUnit();
	        };
	        Axis_prototype.UpdateDateTimeAxisMinMax = function () {
	            var _this = this;
	            if (_this.MinimumScaleIsAuto || _this.MaximumScaleIsAuto) {
	                var returnObj = _this.GetInitialMinMax();
	                if (_this.MinimumScaleIsAuto) {
	                    _this._minimumScale = returnObj.initMin;
	                }
	                if (_this.MaximumScaleIsAuto) {
	                    _this._maximumScale = returnObj.initMax;
	                }
	            }
	        };
	        Axis_prototype.UpdateValueAxisMinMax = function () {
	            var _this = this;
	            if (_this.MinimumScaleIsAuto || _this.MaximumScaleIsAuto) {
	                var refObj = {majorUnit: 0};
	                var autoMinMaxValues = _this.CalcualteValueAxisMinMax(refObj);
	                 var majorUnit = refObj.majorUnit;
	                if (_this.MinimumScaleIsAuto) {
	                    _this._minimumScale = autoMinMaxValues.Min;
	                }
	                if (_this.MaximumScaleIsAuto) {
	                    _this._maximumScale = autoMinMaxValues.Max;
	                    if(ChartUtility.allSeriesIsScatterOrBubble(_this.Chart)) {
	                        _this._maximumScale += majorUnit;
	                    }
	                }
	            }
	        };
	        Axis_prototype.UpdateValueAxisMajorMinor = function () {
	            var _this = this;
	            if (_this.MajorUnitIsAuto || _this.MinorUnitIsAuto) {
	                var autoMajorMinor = _this.CalculateValueAxisMajorMinorUnit();
	                if (_this.MinorUnitIsAuto) {
	                    _this._minorUnit = autoMajorMinor.Min;
	                }
	                if (_this.MajorUnitIsAuto) {
	                    _this._majorUnit = autoMajorMinor.Max;
	                }
	            }
	        };
	        Axis_prototype.CalcualteValueAxisTempMinMax = function (needAutoMin, needAutoMax) {
	            var _this = this;
	            var returnObj = _this.GetInitialMinMax(needAutoMin, needAutoMax);
	            var initMin = returnObj.initMin;
	            var initMax = returnObj.initMax;
	            var validMin = AxisUtility.CalculateValidMinimum(initMin, initMax, _this.IsLogarithmic, _this.LogBase, _this.MinimumScaleIsAuto || needAutoMin, _this.MaximumScaleIsAuto || needAutoMax);
	            var validMax = AxisUtility.CalculateValidMaximum(initMin, initMax, _this.IsLogarithmic, _this.LogBase);
	           
	           
	           
	            return AxisUtility.calcMinMax(validMin, validMax, _this.IsLogarithmic, _this._axes._chart);
	        };
	        Axis_prototype.GetInitialMinMax = function (needAutoMin, needAutoMax) {
	            var _this = this;
	            var initMin, initMax;
	            var seriesCollection = _this.SeriesCollection;
	            if (_this._minimumScaleIsAuto || needAutoMin) {
	                if (_this._type === 0) {
	                    initMin = _this._axisGroup === 0 ? seriesCollection.PrimaryXValuesMinMax.Min : seriesCollection.SecondaryXValuesMinMax.Min;
	                } else {
	                    initMin = _this._axisGroup === 0 ? seriesCollection.PrimaryValuesMinMax.Min : seriesCollection.SecondaryValuesMinMax.Min;
	                }
	            } else {
	                initMin = _this._minimumScale;
	            }
	            if (_this._maxmumScaleIsAuto || needAutoMax) {
	                if (_this._type === 0) {
	                    initMax = _this._axisGroup === 0 ? seriesCollection.PrimaryXValuesMinMax.Max : seriesCollection.SecondaryXValuesMinMax.Max;
	                } else {
	                    initMax = _this._axisGroup === 0 ? seriesCollection.PrimaryValuesMinMax.Max : seriesCollection.SecondaryValuesMinMax.Max;
	                }
	            } else {
	                initMax = _this._maximumScale;
	            }
	            return {initMin: initMin, initMax: initMax};
	        };
	       
	        Axis_prototype.CalcualteValueAxisMinMax = function (refObj, needAutoMin, needAutoMax) {
	            var _this = this;
	            var tempMinMax = _this.CalcualteValueAxisTempMinMax(needAutoMin, needAutoMax);
	            var majorUnit = refObj.majorUnit = _this._majorUnitIsAuto ? _this.CalculateValueAxisMajorMinorUnit(tempMinMax).Max : _this._majorUnit;
	            var finalMinValue = AxisUtility.CalculateMinimum2(tempMinMax.Min, tempMinMax.Max, majorUnit, _this.IsLogarithmic, _this.LogBase);
	            var finalMaxValue = AxisUtility.CalculateMaximum2(tempMinMax.Min, tempMinMax.Max, majorUnit, _this.IsLogarithmic, _this.LogBase);
	            return {Min: finalMinValue, Max: finalMaxValue};
	        };
	        Axis_prototype.CalculateValueAxisMajorMinorUnit = function (minMax) {
	            var _this = this;
	            if (isNullOrUndefined(minMax)) {
	                minMax = _this.CalcualteValueAxisTempMinMax();
	            }
	            var majorUnit = AxisUtility.CalculateMajorUnit(minMax.Min, minMax.Max, _this.MinorUnitIsAuto, _this.MinorUnit, _this.IsLogarithmic, _this.LogBase);
	            var minorUnit = AxisUtility.CalculateMinorUnit(minMax.Min, minMax.Max, majorUnit, _this.IsLogarithmic);
	            return {Min: minorUnit, Max: majorUnit};
	        };
	        Axis_prototype.UpdateDateTimeAxisMajorMinorUnit = function () {
	            var _this = this;
	            var minDate = DateTimeExtension.FromOADate(_this.MinimumScale);
	            var maxDate = DateTimeExtension.FromOADate(_this.MaximumScale);
	            if (_this._baseUnitIsAuto || _this._majorUnitIsAuto) {
	                var maxPointsCount = _this.SeriesCollection.GetMaxPointsCount(_this._axisGroup);
	                var refObj = {unitValue: 0};
	                var unitScale = _this.CalculateTimeUnit(minDate, maxDate, maxPointsCount, refObj);
	                var unitValue = refObj.unitValue;
	                if (_this._baseUnitIsAuto) {
	                    _this._baseUnit = unitScale;
	                }
	                if (_this._majorUnitIsAuto) {
	                    _this._majorUnit = unitValue;
	                    _this._majorUnitScale = unitScale;
	                }
	            }
	            if (_this._minorUnitIsAuto) {
	                var majorUnitScale = _this._majorUnitScale;
	                if (majorUnitScale === 0) {
	                    _this._minorUnitScale = 0;
	                    _this._minorUnit = 1;
	                } else if (majorUnitScale === 1) {
	                    if (_this._majorUnit === 1) {
	                        _this._minorUnitScale = 0;
	                        _this._minorUnit = ONE_WEEK;
	                    } else {
	                        _this._minorUnitScale = 1;
	                        _this._minorUnit = 1;
	                    }
	                } else if (majorUnitScale === 2) {
	                    _this._minorUnitScale = 2;
	                    _this._minorUnit = 1;
	                }
	            }
	        };
	        Axis_prototype.CalculateTimeUnit = function (minDate, maxDate, expectedCount, refObj) {
	            var unitValue;
	            var timeUnit;
	            if (minDate.getFullYear() !== maxDate.getFullYear()) {
	                timeUnit = 2;
	                unitValue = 1;
	            } else if (minDate.getMonth() !== maxDate.getMonth()) {
	                timeUnit = 1;
	                unitValue = 12;
	            } else {
	                timeUnit = 0;
	                unitValue = ONE_WEEK;
	            }
	            var currentCount = this.GetDateItemsCount(minDate, maxDate, timeUnit, unitValue);
	            while (currentCount < expectedCount && timeUnit !== 0) {
	                if (timeUnit === 2) {
	                    timeUnit = 1;
	                    unitValue = 12;
	                } else if (timeUnit === 1) {
	                    if (unitValue === 1) {
	                        timeUnit = 0;
	                        var range = maxDate.valueOf() - minDate.valueOf();
	                        var days = range / (1000 * 60 * 60 * 24);
	                        if (days >= ONE_MONTH) {
	                            unitValue = ONE_WEEK;
	                        } else {
	                            unitValue = 1;
	                        }
	                    } else {
	                        unitValue--;
	                    }
	                }
	                currentCount = this.GetDateItemsCount(minDate, maxDate, timeUnit, unitValue);
	            }
	            refObj.unitValue = unitValue;
	            return timeUnit;
	        };
	        Axis_prototype.GetDateItemsCount = function (min, max, unitScale, value) {
	            value = Math.floor(value);
	            var currentItem = new Date(min.valueOf());
	            var maxDate = max;
	            var items = [];
	            while (currentItem <= maxDate) {
	                items.push(currentItem);
	                if (unitScale === 0) {
	                    currentItem.setDate(currentItem.getDate() + value);
	                } else if (unitScale === 1) {
	                    currentItem.setMonth(currentItem.getMonth() + value);
	                } else if (unitScale === 2) {
	                    currentItem.setFullYear(currentItem.getFullYear() + value);
	                }
	            }
	            return items.length;
	        };
	        Axis_prototype.GetFirstRightSer = function () {
	            var sc = this.SeriesCollection;
	            for (var i = 0, count = sc.Count; i < count; i++) {
	                var ser = sc.Get(i);
	                var dimension = ChartUtility.GetDimensioin(ser.InnerChartType);
	                if (ser.AxisGroup === this._axisGroup && dimension === 1) {
	                    return ser;
	                }
	            }
	            return keyword_null;
	        };
	        Axis_prototype.IsValueOrDateScaleAxis = function () {
	            return this.IsValueScaleAxis() || this.IsTimeScale();
	        };
	        Axis_prototype.IsValueScaleAxis = function () {
	            return this._type === 1 || (this._type === 0 && this._actualCategoryType === 3);
	        };
	        Axis_prototype.IsTimeScale = function () {
	            return this._type === 0 && this._actualCategoryType === 2;
	        };
	        Axis_prototype.GetCrosses = function () {
	            return !isNullOrUndefined(this._crosses) ? this._crosses : 1;
	        };
	        Axis_prototype.GetCustomCrossesAt = function () {
	            var _this = this;
	            var crosses = _this.Crosses;
	            if (crosses === 0) {
	                return _this._crossesAt || 0;
	            }
	        };
	        Axis_prototype.GetCrossesAt = function () {
	            var _this = this;
	            var result = 0;
	            var crosses = _this.Crosses;
	            if (crosses === 0) {
	                result = !isNullOrUndefined(_this._crossesAt) ? _this._crossesAt : 0;
	            } else if (crosses === 1) {
	                result = _this.GetAutoCrossesAt();
	            } else if (crosses === 2) {
	                result = _this.GetMaxCrossesAt();
	            } else if (crosses === 3) {
	                result = _this.GetMinCrossesAt();
	            }
	            return result;
	        };
	        Axis_prototype.GetAutoCrossesAt = function () {
	            var _this = this;
	            if (_this._type === 0) {
	                if (_this._actualCategoryType === 1) {
	                    return 1;
	                }
	                if (_this._axisGroup === 0) {
	                    return _this.MinimumScale;
	                }
	                return _this.MaximumScale;
	            } else if (_this.IsValueOrDateScaleAxis()) {
	                if (_this.IsLogarithmic) {
	                    return 1;
	                }
	                return 0;
	            }
	            return 0;
	        };
	        Axis_prototype.GetMinCrossesAt = function () {
	            var _this = this;
	            if (_this.IsValueOrDateScaleAxis()) {
	                return _this.MinimumScale;
	            } else if (_this._type === 0) {
	                if (_this._actualCategoryType === 1) {
	                    return 1;
	                }
	                return _this.MinimumScale;
	            }
	            return 0;
	        };
	        Axis_prototype.GetMaxCrossesAt = function () {
	            var _this = this;
	            if (_this.IsValueOrDateScaleAxis()) {
	                return _this.MaximumScale;
	            } else if (_this._type === 0) {
	                if (_this._actualCategoryType === 1) {
	                    return _this.CategoryNames.length;
	                }
	                return _this.MaximumScale;
	            }
	            return 0;
	        };
	        Axis_prototype.GetValuesFromDispUnit = function (unit) {
	            var dict = {
	                8: 1000000000000,
	                7: 1000000000,
	                6: 100000000,
	                5: 10000000,
	                4: 1000000,
	                3: 100000,
	                2: 10000,
	                1: 1000,
	                0: 100,
	                9: 1.0,
	                10: this._displayUnitCustom
	            };
	            return dict[unit];
	        };
	        Axis_prototype.HasTwoDimensionSers = function () {
	            var sers = this.SeriesCollection.GetSers(false, this._axisGroup);
	            for (var i = 0; i < sers.length; i++) {
	                if (ChartUtility.GetDimensioin(sers[i].InnerChartType) > 1) {
	                    return true;
	                }
	            }
	            return false;
	        };
	        Axis_prototype.ResetOnChartTypeChanged = function () {
	            this._ooAx = keyword_null;
	        };
	        Axis_prototype.CreateFormat = function () {
	            return new ChartFormat(this._axes.Parent, keyword_null, keyword_null, this.AutoLineColorFormat.bind(this));
	        };
	        Axis_prototype.GetDefaultFormat = function () {
	            var format = _super.prototype.GetDefaultFormat.call(this);
	            var chartType = this._axes.Parent.ChartType;
	            if (ChartUtility.IsSurfaceChart(chartType) || chartType === 5) {
	                format.Line.Weight = 1 ;
	            }
	            this.InitAutoLineColor(chartType, format.Line.Color);
	            if (ChartUtility.IsRadarChart(chartType) && this._type === 1) {
	                format.Line.Color.setColor(keyword_null, 'rgba(0,0,0,0)');
	            }
	            return format;
	        };
	        Axis_prototype.InitAutoLineColor = function (chartType, colorFormat) {
	            var DefaultLineColorBrightness = ChartConstants.DefaultLineColorBrightness;
	            colorFormat.ObjectThemeColor = 1;
	            colorFormat.Brightness = DefaultLineColorBrightness;
	        };
	        Axis_prototype.AutoLineColorFormat = function () {
	            var chartType = this._axes.Parent.ChartType;
	            var format = new ColorFormat(this._axes.Parent);
	            this.InitAutoLineColor(chartType, format);
	            return format;
	        };
	        Axis_prototype.EnsureAxisType = function (type) {
	            if (this._type !== type) {
	                throw new Error();
	            }
	        };
	        Axis_prototype.EnsureAxisCatType = function (catType) {
	            if (this._actualCategoryType !== catType) {
	                throw new Error();
	            }
	        };
	        Axis_prototype.EnsureNotAxisType = function (type) {
	            if (this._type === type) {
	                throw new Error();
	            }
	        };
	        Axis_prototype.EnsureNotAxisCatType = function (catType) {
	            if (this._actualCategoryType === catType) {
	                throw new Error();
	            }
	        };
	        Axis_prototype.UpdateCategoryType = function (value) {
	            this._categoryType = value;
	            this._actualCategoryType = value;
	        };
	        Axis_prototype.From2016ChartOOModel = function (ooCatAx ) {
	            var _this = this;
	            _this.Chart.SuspendElementChanged();
	            _this._ooAx = ooCatAx;
	
	            if (!isNullOrUndefined(ooCatAx.catScaling) && !isNullOrUndefined(ooCatAx.catScaling.gapWidth)) {
	                _this.gapWidth = ooCatAx.catScaling.gapWidth;
	            }
	            if (!isNullOrUndefined(ooCatAx.valScaling)) {
	                _this.FromCT_ValueAxisScaling(ooCatAx.valScaling);
	            }
	
	            if (!isNullOrUndefined(ooCatAx.title)) {
	                _this._title.FromOOModel(ooCatAx.title);
	                _this._hasTitle = true;
	            }
	
	            if(!isNullOrUndefined(ooCatAx.units)) {
	                _this._displayUnitLabel.From2016ChartOOModel(ooCatAx.units);
	                _this.HasDisplayUnitLabel = true;
	            }
	
	            if (!isNullOrUndefined(ooCatAx.majorGridlines)) {
	                _this.HasMajorGridlines = true;
	                _this._majorGridlines.FromOOModel(ooCatAx.majorGridlines);
	            } else {
	                _this.HasMajorGridlines = false;
	            }
	            if (!isNullOrUndefined(ooCatAx.minorGridlines)) {
	                _this.HasMinorGridlines = true;
	                _this._minorGridlines.FromOOModel(ooCatAx.minorGridlines);
	            } else {
	                _this.HasMinorGridlines = false;
	            }
	
	            if (!isNullOrUndefined(ooCatAx.majorTickMarks)) {
	                _this.MajorTickMark = ooCatAx.majorTickMarks;
	            } else {
	                _this.MajorTickMark = 3;
	            }
	            if (!isNullOrUndefined(ooCatAx.minorTickMarks)) {
	                _this.MinorTickMark = ooCatAx.minorTickMarks;
	            }
	
	            if (!isNullOrUndefined(ooCatAx.tickLabels) && !isNullOrUndefined(ooCatAx.tickLabels.extLst) && ooCatAx.tickLabels.extLst.length > 0) {
	                _this._tickLabelsExtLst = ooCatAx.tickLabels.extLst;
	            }
	
	            var ooTickLabels = {};
	            ooTickLabels.CT_TextBody = ooCatAx.txPr;
	            ooTickLabels.CT_NumFmt = ooCatAx.numFmt;
	            _this._tickLabels.FromOOModel(ooTickLabels);
	
	            if (!isNullOrUndefined(ooCatAx.spPr)) {
	                _this.FromShapeProperties(ooCatAx.spPr);
	            }
	
	            if (!isNullOrUndefined(ooCatAx.extLst)) {
	                _this._extLst = ooCatAx.extLst;
	            }
	
	            if (!isNullOrUndefined(ooCatAx.id)) {
	                _this._id = ooCatAx.id;
	            }
	
	            if (!isNullOrUndefined(ooCatAx.hidden)) {
	                _this._hidden = ooCatAx.hidden;
	            }
	            _this.Chart.ResumeElementChanged();
	        };
	        Axis_prototype.To2016ChartOOModel = function () {
	            var _this = this;
	            var ooCatAx = {};
	
	            if (!isNullOrUndefined(_this.gapWidth)) {
	                ooCatAx.catScaling = {gapWidth: _this.gapWidth};
	            }
	            if (_this.NeedToCT_ValueAxisScaling()) {
	                ooCatAx.valScaling = _this.ToCT_ValueAxisScaling();
	            }
	
	            if (_this._hasTitle) {
	                ooCatAx.title = _this._title.ToOOModel();
	            }
	
	            if (_this.HasDisplayUnitLabel && !isNullOrUndefined(_this._displayUnitLabel)) {
	                ooCatAx.units = _this._displayUnitLabel.To2016ChartOOModel();
	            }
	
	            if (_this.HasMajorGridlines && !isNullOrUndefined(_this._majorGridlines)) {
	                ooCatAx.majorGridlines = _this._majorGridlines.ToOOModel();
	            }
	            if (_this.HasMinorGridlines && !isNullOrUndefined(_this._minorGridlines)) {
	                ooCatAx.minorGridlines = _this._minorGridlines.ToOOModel();
	            }
	
	            ooCatAx.majorTickMarks = _this.MajorTickMark;
	            ooCatAx.minorTickMarks = _this.MinorTickMark;
	
	            if (!isNullOrUndefined(_this._tickLabelsExtLst) && _this._tickLabelsExtLst.length > 0) {
	                ooCatAx.tickLabels = {extLst: _this._tickLabelsExtLst};
	            }
	
	            if (!isNullOrUndefined(_this.TickLabels)) {
	                var ooTickLabels = _this._tickLabels.ToOOModel();
	                if (_this.Chart.SeriesCollection.Count === 0) {
	                    ooCatAx.numFmt = keyword_null;
	                } else {
	                    ooCatAx.numFmt = ooTickLabels.CT_NumFmt;
	                }
	                ooCatAx.txPr = ooTickLabels.CT_TextBody;
	            }
	
	            ooCatAx.spPr = _super.prototype.ToShapeProperties.call(_this);
	
	            if (!isNullOrUndefined(_this._extLst)) {
	                ooCatAx.extLst = _this._extLst;
	            }
	
	            if (!isNullOrUndefined(_this._id)) {
	                ooCatAx.id = _this._id;
	            }
	            if (!isNullOrUndefined(_this._hidden)) {
	                ooCatAx.hidden = _this._hidden;
	            }
	
	            return ooCatAx;
	        };
	        Axis_prototype.FromOOModel = function (t ) {
	            var _this = this;
	            _this.Chart.SuspendElementChanged();
	            _this._ooAx = t;
	            var type = _this._type;
	            if (type === 0) {
	                var axisType = t.axisType;
	                if (axisType === 0) {
	                    _this.FromCT_CatAx(t);
	                } else if (axisType === 1) {
	                    _this.FromCT_DateAx(t);
	                } else if (axisType === 3) {
	                    _this.FromCT_ValAx(t);
	                }
	            } else if (type === 1) {
	                _this.FromCT_ValAx(t);
	            } else if (type === 2) {
	                _this.FromCT_SerAx(t);
	            }
	            _this.Chart.ResumeElementChanged();
	        };
	        Axis_prototype.ToOOModel = function () {
	            var _this = this;
	            var ax = keyword_null;
	            var type = _this._type;
	            if (type === 0) {
	                var actualCategoryType = _this._actualCategoryType;
	                if (actualCategoryType === 1) {
	                    ax = _this.ToCT_CatAx();
	                } else if (actualCategoryType === 2) {
	                    ax = _this.ToCT_DateAx();
	                } else if (actualCategoryType === 3) {
	                    ax = _this.ToCT_ValAx();
	                }
	            } else if (type === 1) {
	                ax = _this.ToCT_ValAx();
	            } else if (type === 2) {
	                ax = _this.ToCT_SerAx();
	            }
	            ax.AxisGroup = _this._axisGroup;
	            ax.AxisType = type;
	            return ax;
	        };
	        Axis_prototype.ToCT_CatAx = function () {
	            var _this = this;
	            var ooAx = _this._ooAx;
	            var catAx = ooAx && ooAx.axisType === 0 ? ooAx : {axisType: 0} ;
	            _this.ToCT_AxBase(catAx);
	            catAx.auto = _this.CategoryType === 0;
	            if (_this.TickLabelSpacingIsAuto) {
	                catAx.tickLblSkip = keyword_null;
	            } else {
	                catAx.tickLblSkip = _this.TickLabelSpacing;
	            }
	            catAx.lblOffset = _this.TickLabels.Offset;
	            catAx.tickMarkSkip = _this.TickMarkSpacing;
	            catAx.noMultiLvlLbl = _this.NoMultiLvlLbl;
	            return catAx;
	        };
	        Axis_prototype.FromCT_CatAx = function (ooCatAx ) {
	            var _this = this;
	            if (isNullOrUndefined(ooCatAx.auto) ||
	                _this.ActualCategoryType !== 1) {
	                _this.UpdateCategoryType(1);
	            }
	            _this.FromCT_AxBase(ooCatAx);
	            if (!isNullOrUndefined(ooCatAx.tickLblSkip)) {
	                _this._tickLabelSpacing = ooCatAx.tickLblSkip;
	                _this._tickLabelSpacingIsAuto = false;
	            } else {
	                _this._tickLabelSpacingIsAuto = true;
	            }
	            if (!isNullOrUndefined(ooCatAx.lblOffset)) {
	                _this._tickLabels.Offset = ooCatAx.lblOffset;
	            }
	            if (!isNullOrUndefined(ooCatAx.tickMarkSkip)) {
	                _this._tickMarkSpacing = ooCatAx.tickMarkSkip;
	            }
	        };
	        Axis_prototype.ToCT_ValAx = function () {
	            var _this = this;
	            var ooAx = _this._ooAx;
	            var valAx = (ooAx && ooAx.axisType === 3) ? ooAx : {axisType: 3} ;
	            _this.ToCT_AxBase(valAx);
	            if (!_this.MajorUnitIsAuto) {
	                valAx.majorUnit = _this.MajorUnit;
	            }
	            if (!_this.MinorUnitIsAuto) {
	                valAx.minorUnit = _this.MinorUnit;
	            }
	            if (_this._displayUnit !== 9) {
	                valAx.dispUnits = _this._displayUnitLabel.ToOOModel();
	            }
	            return valAx;
	        };
	        Axis_prototype.FromCT_ValAx = function (ooValAx ) {
	            var _this = this;
	            _this.FromCT_AxBase(ooValAx);
	            if (!isNullOrUndefined(ooValAx.majorUnit)) {
	                _this._majorUnit = ooValAx.majorUnit;
	                _this._majorUnitIsAuto = false;
	            } else {
	                _this._majorUnitIsAuto = true;
	            }
	            if (!isNullOrUndefined(ooValAx.minorUnit)) {
	                _this._minorUnit = ooValAx.minorUnit;
	                _this._minorUnitIsAuto = false;
	            } else {
	                _this._minorUnitIsAuto = true;
	            }
	            _this._displayUnitLabel.FromOOModel(ooValAx.dispUnits);
	        };
	        Axis_prototype.ToCT_DateAx = function () {
	            var _this = this;
	            var ooAx = _this._ooAx;
	            var dateAx = (ooAx && ooAx.axisType === 1) ? ooAx : {axisType: 1} ;
	            _this.ToCT_AxBase(dateAx);
	            dateAx.auto = _this.CategoryType === 0;
	            dateAx.lblOffset = _this.TickLabels.Offset;
	            if (!_this.MajorUnitIsAuto) {
	                dateAx.majorUnit = _this.MajorUnit;
	                dateAx.majorTimeUnit = _this.MajorUnitScale;
	            }
	            if (!_this.MinorUnitIsAuto) {
	                dateAx.minorUnit = _this.MinorUnit;
	                dateAx.minorTimeUnit = _this.MinorUnitScale;
	            }
	            if (!_this.BaseUnitIsAuto) {
	                dateAx.baseTimeUnit = _this.BaseUnit;
	            }
	            return dateAx;
	        };
	        Axis_prototype.FromCT_DateAx = function (ooDateAx ) {
	            var _this = this;
	            if (isNullOrUndefined(ooDateAx.auto) ||
	                _this.ActualCategoryType !== 2) {
	                _this.UpdateCategoryType(2);
	            }
	            _this.FromCT_AxBase(ooDateAx);
	            if (!isNullOrUndefined(ooDateAx.majorUnit)) {
	                _this._majorUnit = ooDateAx.majorUnit;
	                _this._majorUnitIsAuto = false;
	            } else {
	                _this._majorUnitIsAuto = true;
	            }
	            if (!isNullOrUndefined(ooDateAx.minorUnit)) {
	                _this._minorUnit = ooDateAx.minorUnit;
	                _this._minorUnitIsAuto = false;
	            } else {
	                _this._minorUnitIsAuto = true;
	            }
	            if (!isNullOrUndefined(ooDateAx.baseTimeUnit)) {
	                _this._baseUnit = ooDateAx.baseTimeUnit;
	                _this._baseUnitIsAuto = false;
	            } else {
	                _this._baseUnitIsAuto = true;
	            }
	            if (!isNullOrUndefined(ooDateAx.majorTimeUnit)) {
	                _this._majorUnitScale = ooDateAx.majorTimeUnit;
	            }
	            if (!isNullOrUndefined(ooDateAx.minorTimeUnit)) {
	                _this._minorUnitScale = ooDateAx.minorTimeUnit;
	            }
	            if (!isNullOrUndefined(ooDateAx.lblOffset)) {
	                _this._tickLabels.Offset = ooDateAx.lblOffset;
	            }
	        };
	        Axis_prototype.ToCT_SerAx = function () {
	            var _this = this;
	            var serAx = _this._ooAx || {axisType: 2} ;
	            _this.ToCT_AxBase(serAx);
	            if (_this.TickLabelSpacingIsAuto) {
	                serAx.tickLblSkip = keyword_null;
	            } else {
	                serAx.tickLblSkip = _this.TickLabelSpacing;
	            }
	            serAx.tickMarkSkip = _this.TickMarkSpacing;
	            return serAx;
	        };
	        Axis_prototype.FromCT_SerAx = function (ooSerAx ) {
	            var _this = this;
	            _this.FromCT_AxBase(ooSerAx);
	            if (!isNullOrUndefined(ooSerAx.tickLblSkip)) {
	                _this._tickLabelSpacing = ooSerAx.tickLblSkip;
	                _this._tickLabelSpacingIsAuto = false;
	            } else {
	                _this._tickLabelSpacingIsAuto = true;
	            }
	            if (!isNullOrUndefined(ooSerAx.tickMarkSkip)) {
	                _this._tickMarkSpacing = ooSerAx.tickMarkSkip;
	            }
	        };
	        Axis_prototype.ToCT_AxBase = function (baseAx ) {
	            var _this = this;
	            baseAx.axId = _this.GetAxisId();
	            baseAx.delete = _this._deleted;
	            baseAx.majorTickMark = _this.MajorTickMark;
	            baseAx.minorTickMark = _this.MinorTickMark;
	            baseAx.tickLblPos = _this.TickLabelPosition;
	            baseAx.axPos = _this.GetAxPos();
	            baseAx.scaling = _this.ToCT_Scaling();
	            baseAx.spPr = _super.prototype.ToShapeProperties.call(_this);
	            if (!isNullOrUndefined(_this.TickLabels)) {
	                var ooTickLabels = _this._tickLabels.ToOOModel();
	                if (_this.Chart.SeriesCollection.Count === 0) {
	                    baseAx.numFmt = keyword_null;
	                } else {
	                    baseAx.numFmt = ooTickLabels.CT_NumFmt;
	                }
	                baseAx.txPr = ooTickLabels.CT_TextBody;
	            }
	            if (_this.HasMajorGridlines && !isNullOrUndefined(_this._majorGridlines)) {
	                baseAx.majorGridlines = _this._majorGridlines.ToOOModel();
	            }
	            if (_this.HasMinorGridlines && !isNullOrUndefined(_this._minorGridlines)) {
	                baseAx.minorGridlines = _this._minorGridlines.ToOOModel();
	            }
	            if (_this._hasTitle) {
	                baseAx.title = _this._title.ToOOModel();
	            }
	        };
	        Axis_prototype.FromCT_AxBase = function (ooAxBase ) {
	            var _this = this;
	            if (!isNullOrUndefined(ooAxBase.delete)) {
	                _this._deleted = ooAxBase.delete;
	            } else if (_this._axisGroup === 1) {
	                _this._deleted = false;
	            }
	            if (!isNullOrUndefined(ooAxBase.majorTickMark)) {
	                _this.MajorTickMark = ooAxBase.majorTickMark;
	            } else {
	                _this.MajorTickMark = 3;
	            }
	            if (!isNullOrUndefined(ooAxBase.minorTickMark)) {
	                _this.MinorTickMark = ooAxBase.minorTickMark;
	            }
	            if (!isNullOrUndefined(ooAxBase.tickLblPos)) {
	                _this.TickLabelPosition = ooAxBase.tickLblPos;
	            }
	            _this.FromCT_Scaling(ooAxBase.scaling);
	            _this.FromShapeProperties(ooAxBase.spPr);
	            var ooTickLabels = {};
	            ooTickLabels.CT_TextBody = ooAxBase.txPr;
	            ooTickLabels.CT_NumFmt = ooAxBase.numFmt;
	            _this._tickLabels.FromOOModel(ooTickLabels);
	            if (!isNullOrUndefined(ooAxBase.majorGridlines)) {
	                _this.HasMajorGridlines = true;
	                _this._majorGridlines.FromOOModel(ooAxBase.majorGridlines);
	            } else {
	                _this.HasMajorGridlines = false;
	            }
	            if (!isNullOrUndefined(ooAxBase.minorGridlines)) {
	                _this.HasMinorGridlines = true;
	                _this._minorGridlines.FromOOModel(ooAxBase.minorGridlines);
	            } else {
	                _this.HasMinorGridlines = false;
	            }
	            if (!isNullOrUndefined(ooAxBase.title)) {
	                _this._title.FromOOModel(ooAxBase.title);
	                _this._hasTitle = true;
	            }
	        };
	        Axis_prototype.GetAxisPostion = function () {
	            var position = this.GetAxPos();
	            var dict = {
	                0: "bottom",
	                3: "top",
	                1: "left",
	                2: "right"
	            };
	            return dict[position];
	        };
	        Axis_prototype.GetAxPos = function () {
	            var _this = this;
	            if (_this._ooAx && !isNullOrUndefined(_this._ooAx.axPos)) {
	                return _this._ooAx.axPos;
	            }
	            if (_this.Type === 0) {
	                if (ChartUtility.IsBarChart(_this.Chart.ChartType)) {
	                    if (this.AxisGroup === 0) {
	                        return 1;
	                    }
	                    return 2;
	                }
	                if (this.AxisGroup === 0) {
	                    return 0;
	                }
	                return 3;
	            } else if (_this.Type === 1) {
	                if (this.AxisGroup === 0) {
	                    return 1;
	                }
	                return 2;
	            }
	            return 0;
	        };
	        Axis_prototype.ToCT_Scaling = function () {
	            var _this = this;
	            var ooAx = _this._ooAx;
	            var scaling = ooAx && !isNullOrUndefined(ooAx.scaling) ? ooAx.scaling : {} ;
	            scaling.orientation = _this.ReversePlotOrder ? 0  : 1 ;
	            if (_this.IsValueOrDateScaleAxis()) {
	                if (!_this.MinimumScaleIsAuto) {
	                    scaling.min = _this.MinimumScale;
	                }
	                if (!_this.MaximumScaleIsAuto) {
	                    scaling.max = _this.MaximumScale;
	                }
	                if (_this.ScaleType === 0) {
	                    scaling.logBase = _this.LogBase;
	                }
	            }
	            return scaling;
	        };
	        Axis_prototype.FromCT_Scaling = function (ooScaling ) {
	            if (!ooScaling) {
	                return;
	            }
	            var _this = this;
	            if (!isNullOrUndefined(ooScaling.orientation)) {
	                _this.ReversePlotOrder = ooScaling.orientation === 0 ;
	            }
	            if (!isNullOrUndefined(ooScaling.min)) {
	                _this._minimumScale = ooScaling.min;
	                _this._minimumScaleIsAuto = false;
	            } else {
	                _this._minimumScaleIsAuto = true;
	            }
	            if (!isNullOrUndefined(ooScaling.max)) {
	                _this._maximumScale = ooScaling.max;
	                _this._maxmumScaleIsAuto = false;
	            } else {
	                _this._maxmumScaleIsAuto = true;
	            }
	            if (!isNullOrUndefined(ooScaling.logBase)) {
	                _this._logBase = ooScaling.logBase;
	                _this._scaleType = 0;
	            } else {
	                _this._scaleType = 1;
	            }
	        };
	        Axis_prototype.NeedToCT_ValueAxisScaling = function () {
	            var _this = this;
	            return !isNullOrUndefined(_this._min) || !isNullOrUndefined(_this._max) || !isNullOrUndefined(_this._majorUnit) || !isNullOrUndefined(_this._minorUnit);
	        };
	        Axis_prototype.ToCT_ValueAxisScaling = function () {
	            var _this = this, ooScaling = {};
	            if (!isNullOrUndefined(_this._minimumScale) && _this._minimumScaleIsAuto === false) {
	                ooScaling.min = _this._minimumScale;
	            }
	            if (!isNullOrUndefined(_this._maximumScale) && _this._maxmumScaleIsAuto === false) {
	                ooScaling.max = _this._maximumScale;
	            }
	            if (!isNullOrUndefined(_this._majorUnit) && _this._majorUnitIsAuto === false) {
	                ooScaling.majorUnit = _this._majorUnit;
	            }
	            if (!isNullOrUndefined(_this._minorUnit) && _this._minorUnitIsAuto === false) {
	                ooScaling.minorUnit = _this._minorUnit;
	            }
	            return ooScaling;
	        };
	        Axis_prototype.FromCT_ValueAxisScaling = function (ooScaling ) {
	            if (!ooScaling) {
	                return;
	            }
	            var _this = this;
	            if (!isNullOrUndefined(ooScaling.min)) {
	                _this._minimumScale = ooScaling.min;
	                _this._minimumScaleIsAuto = false;
	            } else {
	                _this._minimumScaleIsAuto = true;
	            }
	            if (!isNullOrUndefined(ooScaling.max)) {
	                _this._maximumScale = ooScaling.max;
	                _this._maxmumScaleIsAuto = false;
	            } else {
	                _this._maxmumScaleIsAuto = true;
	            }
	            if (!isNullOrUndefined(ooScaling.majorUnit)) {
	                _this._majorUnit = ooScaling.majorUnit;
	            }
	            if (!isNullOrUndefined(ooScaling.minorUnit)) {
	                _this._minorUnit = ooScaling.minorUnit;
	            }
	        };
	        Axis_prototype.GetCrossAtAx = function () {
	            var _this = this;
	            if (_this._type === 0) {
	                return _this._axes.Item(1, _this._axisGroup);
	            }
	            return _this._axes.Item(0, _this._axisGroup);
	        };
	        Axis_prototype.GetAxisId = function () {
	            if (isNullOrUndefined(this._axisId)) {
	                this._axisId = AxisUtility.GenerateAxisId();
	            }
	            return this._axisId;
	        };
	        Axis_prototype._getMajorGridlines = function (needCreate) {
	            var _this = this;
	            if (needCreate && isNullOrUndefined(_this._majorGridlines)) {
	                _this._majorGridlines = _this.GetDefaultGridlines();
	            }
	            return _this._majorGridlines;
	        };
	        Axis_prototype._getMinorGridlines = function (needCreate) {
	            var _this = this;
	            if (needCreate && isNullOrUndefined(_this._minorGridlines)) {
	                _this._minorGridlines = _this.GetDefaultGridlines();
	            }
	            return _this._minorGridlines;
	        };
	        Axis_prototype._canSetUnit = function () {
	            var actualCategoryType = this._actualCategoryType;
	           
	            if (this._type === 0  && actualCategoryType !== 2 && actualCategoryType !== 3) {
	                return false;
	            }
	            return true;
	        };
	        Axis_prototype._backup = function (value) {
	            var axisType, _this = this;
	            var type = _this._type, axisGroup = _this._axisGroup;
	            if (axisGroup === 0 ) {
	                if (type === 0) {
	                    axisType = 'primaryCategory';
	                } else if (type === 1) {
	                    axisType = 'primaryValue';    
	                }
	            } else if (axisGroup === 1) {
	                if (type === 0) {
	                    axisType = 'secondaryCategory';
	                } else if (type === 1) {
	                    axisType = 'secondaryValue';
	                }
	            }
	            var argValue = {};
	            argValue[axisType] = value;
	            this.Parent._backup(argValue);
	        };
	        return Axis;
	    }(ChartElementBase));
	    Charts.Axis = Axis;
	
	
	
	
	    var Axes = (function () {
	        function Axes(chart) {
	            this._axes = [];
	            this._chart = chart;
	        }
	
	        var Axes_prototype = Axes.prototype;
	        defineProperty(Axes_prototype, "Parent", {
	           
	           
	           
	            get: function () {
	                return this._chart;
	            }
	        });
	        defineProperty(Axes_prototype, "Count", {
	           
	           
	           
	            get: function () {
	                return this._axes.length;
	            }
	        });
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	        Axes_prototype.Item = function (type, axisGroup) {
	            if (axisGroup === keyword_undefined) {
	                axisGroup = 0;
	            }
	            return this.GetAxis(type, axisGroup);
	        };
	        Axes_prototype.GetAxis = function (type, axisGroup) {
	            var axes = this._axes;
	            for (var i = 0; i < axes.length; i++) {
	                var item = axes[i];
	                if (item.Type === type && item.AxisGroup === axisGroup) {
	                    return item;
	                }
	            }
	            return keyword_null;
	        };
	        Axes_prototype.Add = function (type, axisGroup) {
	            if (axisGroup === keyword_undefined) {
	                axisGroup = 0;
	            }
	            var axes = this._axes;
	            for (var i = 0; i < axes.length; i++) {
	                var item = axes[i];
	                if (type === item.Type && axisGroup === item.AxisGroup) {
	                    throw new Error("Can not add same type of axis many times!");
	                }
	            }
	            var axis = new Axis(this, type, axisGroup);
	            this._axes.push(axis);
	            return axis;
	        };
	        Axes_prototype.Remove = function (type, axisGroup) {
	            if (axisGroup === keyword_undefined) {
	                axisGroup = 0;
	            }
	            var removed = keyword_null;
	            var axes = this._axes;
	            for (var i = 0; i < axes.length; i++) {
	                var item = axes[i];
	                if (item.Type === type && item.AxisGroup === axisGroup) {
	                    removed = item;
	                    break;
	                }
	            }
	            if (!isNullOrUndefined(removed)) {
	                var index = this._axes.indexOf(removed);
	                this._axes.splice(index, 1);
	                return removed;
	            }
	            return keyword_null;
	        };
	        Axes_prototype.Restore2016ChartAxes = function (ooPlotArea ) {
	
	            var catAxes = getCatAxis(ooPlotArea.axes);
	            var valAxes = getValueAxis(ooPlotArea.axes);
	            var secondAxisId = getAxisIdWithPloatAreaLineSeries(ooPlotArea.plotAreaRegion.series);
	            var primaryValAxis, secondValAxis;
	            for (var i = 0; i < valAxes.length; i++) {
	                if (valAxes[i].id === secondAxisId) {
	                    secondValAxis = valAxes[i];
	                } else {
	                    primaryValAxis = valAxes[i];
	                }
	            }
	            if (catAxes && catAxes.length > 0) {
	                var catAx = this.GetAxis(0, 0);
	                catAx.From2016ChartOOModel(catAxes[0]);
	            }
	            if (valAxes && valAxes.length > 0) {
	                if (primaryValAxis) {
	                    var primaryValAx = this.GetAxis(1, 0);
	                    primaryValAx.From2016ChartOOModel(primaryValAxis);
	                }
	                if (secondValAxis) {
	                    var secondValAx = this.GetAxis(1, 1);
	                    secondValAx.From2016ChartOOModel(secondValAxis);
	                }
	            }
	        };
	        Axes_prototype.RestoreAxes = function (ooPlotArea ) {
	            this.RestoreGroupAxes(ooPlotArea, 0);
	            this.RestoreGroupAxes(ooPlotArea, 1);
	            var ooPlotArea_SerAx = ChartUtility.GetAxes(ooPlotArea, 2 );
	            if (ooPlotArea_SerAx && ooPlotArea_SerAx.length > 0) {
	                var serAx = this.GetAxis(2, 0);
	                if (serAx) {
	                    serAx.FromOOModel(ooPlotArea_SerAx[0]);
	                }
	            }
	        };
	        function getOOAxis(axes, groupedAxes, categoryAxes, axisType) {
	            return axes.filter(function (item) {
	                return (item.axisType === axisType) && groupedAxes.indexOf(item.axId) >= 0 && categoryAxes.indexOf(item.axId) >= 0;
	            })[0];
	        }
	        function getOOValAxis(axes, ooAxis) {
	            return axes.filter(function (item) {
	                return (item.axisType === 3) && item.axId === ooAxis.crossAx;
	            })[0];
	        }
	        function getCatAxis(axes) {
	            return axes.filter(function (item) {
	                return item.catScaling;
	            });
	        }
	
	        function getValueAxis(axes) {
	            return axes.filter(function (item) {
	                return item.valScaling;
	            });
	        }
	
	        function getAxisIdWithPloatAreaLineSeries(series) {
	            for (var i = 0; i < series.length; i++) {
	                if (series[i].layoutId === 18) {
	                    return series[i].axisId[0].val;
	                }
	            }
	            return null;
	        }
	
	        Axes_prototype.RestoreGroupAxes = function (ooPlotArea , axisGroup) {
	            var groupedAxes = ChartUtility.GetAxises(ooPlotArea, axisGroup);
	            var categoryAxes = ChartUtility.GetCategoryAxises(ooPlotArea);
	            var ooPlotArea_axes = ooPlotArea.axes;
	            var ooCatAx = getOOAxis(ooPlotArea_axes, groupedAxes, categoryAxes, 0);
	            var ooCatValAx = getOOAxis(ooPlotArea_axes, groupedAxes, categoryAxes, 3);
	            var ooDateAx = getOOAxis(ooPlotArea_axes, groupedAxes, categoryAxes, 1);
	            var ooValAx = keyword_null;
	            var catAx = this.GetAxis(0, axisGroup);
	            if (ooCatAx) {
	                if (catAx) {
	                    catAx.FromOOModel(ooCatAx);
	                }
	                ooValAx = getOOValAxis(ooPlotArea_axes, ooCatAx);
	            }
	            if (ooCatValAx) {
	                if (catAx && catAx.ActualCategoryType === 3) {
	                    catAx.FromOOModel(ooCatValAx);
	                }
	                ooValAx = getOOValAxis(ooPlotArea_axes, ooCatValAx);
	            }
	            if (ooDateAx) {
	                if (catAx) {
	                    catAx.FromOOModel(ooDateAx);
	                }
	                ooValAx = getOOValAxis(ooPlotArea_axes, ooDateAx);
	            }
	            if (ooValAx) {
	               
	                if (catAx) {
	                    if (!isNullOrUndefined(ooValAx.crosses)) {
	                        catAx.Crosses = ooValAx.crosses;
	                    } else if (!isNullOrUndefined(ooValAx.crossesAt)) {
	                        catAx.CrossesAt = ooValAx.crossesAt;
	                    }
	                    if (!isNullOrUndefined(ooValAx.crossBetween)) {
	                        catAx.AxisBetweenCategories = ooValAx.crossBetween === 0 ;
	                    }
	                }
	                var valAx = this.GetAxis(1, axisGroup);
	                if (valAx) {
	                    valAx.FromOOModel(ooValAx);
	                   
	                    var crosses = keyword_null;
	                    var crossAt = keyword_null;
	                    if (ooCatAx) {
	                        crosses = ooCatAx.crosses;
	                        crossAt = ooCatAx.crossesAt;
	                    } else if (ooDateAx) {
	                        crosses = ooDateAx.crosses;
	                        crossAt = ooDateAx.crossesAt;
	                    } else if (ooCatValAx) {
	                        crosses = ooCatValAx.crosses;
	                        crossAt = ooCatValAx.crossesAt;
	                    }
	                    if (!isNullOrUndefined(crosses)) {
	                        valAx.Crosses = crosses;
	                    } else if (!isNullOrUndefined(crossAt)) {
	                        valAx.CrossesAt = crossAt;
	                    }
	                }
	            }
	        };
	        Axes_prototype.ResetOnChartTypeChanged = function () {
	            var axes = this._axes;
	            for (var i = 0; i < axes.length; i++) {
	                axes[i].ResetOnChartTypeChanged();
	            }
	        };
	        Axes_prototype._backup = function (value) {
	            var chartView = this.Parent.Parent;
	            chartView._backup('axes', value);
	        };
	        return Axes;
	    }());
	    Charts.Axes = Axes;
	
	    module.exports = Charts;
	}());

/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

	(function () {
	    'use strict';
	
	    var Charts = __webpack_require__(3);
	    var FloatingObjects = __webpack_require__(4);
	    var $ = __webpack_require__(6).GC$,
	        $_inherit = $.inherit,
	        COMMON_MODULE = Charts,
	        UnitHelper = COMMON_MODULE.UnitHelper,
	        isNullOrUndefined = UnitHelper.isNullOrUndefined,
	        pointToPixel = UnitHelper.pointToPixel,
	        ChartUtility = COMMON_MODULE.ChartUtility,
	        defineProperty = ChartUtility.defineProperty,
	        ChartConstants = COMMON_MODULE.ChartConstants,
	        ChartElementBase = COMMON_MODULE.ChartElementBase,
	        SeriesCollection = __webpack_require__(10).SeriesCollection,
	        CHART_GROUP_MODULE = __webpack_require__(16),
	        FullChartGroups = CHART_GROUP_MODULE.FullChartGroups,
	        ChartGroups = CHART_GROUP_MODULE.ChartGroups,
	        Axes = __webpack_require__(8).Axes,
	        Legend = __webpack_require__(17).Legend,
	        ChartTitle = __webpack_require__(5).ChartTitle,
	        PlotArea = __webpack_require__(18).PlotArea,
	        ARGBColor = Charts.ARGBColor,
	        DrawingText = Charts.DrawingText,
	        ChartFormat = __webpack_require__(7).ChartFormat;
	    var keyword_null = null, keyword_undefined = void 0, Math_floor = Math.floor;
	
	    function is2016ChartByChartSpace(chartSpace) {
	        var chart = chartSpace.chart, plotArea = chart && chart.plotArea,
	            plotAreaRegion = plotArea && plotArea.plotAreaRegion, seriesCol = plotAreaRegion && plotAreaRegion.series,
	            series = seriesCol && seriesCol[0], layoutId = series && series.layoutId;
	        return layoutId && (layoutId === 20 || layoutId === 21);
	    }
	
	    var ChartArea = (function (_super) {
	        $_inherit(ChartArea, _super);
	
	        function ChartArea(chart) {
	            var _this = _super.call(this) || this;
	            _this._chart = chart;
	            _this._chartText = _this.GetDefaultChartText();
	            var format = _this._format = _this.GetDefaultFormat();
	            format.Fill.Color.ObjectThemeColor = 0;
	            format.Line.Color.ObjectThemeColor = 1;
	            format.Line.Color.Brightness = ChartConstants.DefaultLineColorBrightness;
	            format.Line.Weight = 1 ;
	            _this._roundedCorners = false; 
	            return _this;
	        }
	
	        var ChartArea_prototype = ChartArea.prototype;
	        ChartArea_prototype.GetDefaultChartText = function () {
	            var chartText = new DrawingText(this._chart.Parent, keyword_null, keyword_null, {Size: pointToPixel(10)});
	            var font = chartText.Font;
	            font.ThemeFont = 2;
	            font.Color.ObjectThemeColor = 1;
	            font.Color.Brightness = 0.35;
	            font.Bold = false;
	            return chartText;
	        };
	        ChartArea_prototype.ResetChartText = function () {
	            var _this = this;
	            var newChartText = new DrawingText(_this._chart.Parent, keyword_null, keyword_null, {Size: pointToPixel(10)});
	            if (!isNullOrUndefined(_this._chartText)) {
	                for (var _i = 0, _a = _this._chartText.Font.Children; _i < _a.length; _i++) {
	                    var item = _a[_i];
	                    item.ParentStateful = newChartText.Font;
	                }
	            }
	            _this._chartText = newChartText;
	        };
	        defineProperty(ChartArea_prototype, "Font", {
	            get: function () {
	                return this._chartText.Font;
	            }
	        });
	        defineProperty(ChartArea_prototype, "Format", {
	            get: function () {
	                var _this = this;
	                if (isNullOrUndefined(_this._format)) {
	                    _this._format = _this.GetDefaultFormat();
	                }
	                return _this._format;
	            }
	        });
	        defineProperty(ChartArea_prototype, "FormatInternal", {
	            get: function () {
	                var _this = this;
	                if (isNullOrUndefined(_this._format)) {
	                    _this._format = _this.CreateFormat();
	                }
	                return _this._format;
	            }
	        });
	        defineProperty(ChartArea_prototype, "Parent", {
	            get: function () {
	                return this._chart;
	            }
	        });
	        defineProperty(ChartArea_prototype, "RoundedCorners", {
	            get: function () {
	                return this._roundedCorners;
	            },
	            set: function (value) {
	                this._roundedCorners = value;
	            }
	        });
	        ChartArea_prototype.setFontColor = function (sheet, colorString) {
	           
	            this._chartText.TextBody.setFontColor(sheet, colorString);
	        };
	        ChartArea_prototype.setFontTransparency = function (sheet, colorString) {
	           
	            this._chartText.TextBody.setFontTransparency(sheet, colorString);
	        };
	        ChartArea_prototype.FromOOModel = function (t) {
	            var _this = this;
	            _this._ooModel = t;
	            if (isNullOrUndefined(t)) {
	                return;
	            }
	            _this._roundedCorners = t.RoundedCorners;
	            if (!isNullOrUndefined(t.SpPr) || !t.Is2016Chart) {
	                _super.prototype.FromShapeProperties.call(_this, t.SpPr);
	            }
	            var tx = {};
	            tx.rich = t.TxPr;
	           
	            _this.ResetChartText();
	            if (!isNullOrUndefined(tx.rich)) {
	                _this._chartText.FromOOModel(tx);
	            }
	           
	           
	           
	           
	           
	        };
	        ChartArea_prototype.ToOOModel = function () {
	            var _this = this;
	            var ooModel = !isNullOrUndefined(_this._ooModel) ? _this._ooModel : {};
	            ooModel.SpPr = _super.prototype.ToShapeProperties.call(_this);
	            if (!isNullOrUndefined(_this._chartText)) {
	                ooModel.TxPr = _this._chartText.ToOOModel().rich;
	            }
	            return ooModel;
	        };
	        ChartArea_prototype.GetDefaultFormat = function () {
	            return this.CreateFormat();
	        };
	        ChartArea_prototype.CreateFormat = function () {
	            return new ChartFormat(this._chart, keyword_null, keyword_null, keyword_null);
	        };
	        return ChartArea;
	    }(ChartElementBase));
	    Charts.ChartArea = ChartArea;
	
	    var Floor = (function (_super) {
	        $_inherit(Floor, _super);
	
	        function Floor(chart) {
	            var _this = _super.call(this) || this;
	            _this._ooModel = keyword_null;
	            _this._chart = chart;
	            return _this;
	        }
	
	        var Floor_prototype = Floor.prototype;
	        defineProperty(Floor_prototype, "Format", {
	            get: function () {
	                return this.ChartFormat;
	            }
	        });
	        defineProperty(Floor_prototype, "Parent", {
	            get: function () {
	                return this._chart;
	            }
	        });
	        Floor_prototype.GetDefaultFormat = function () {
	            var format = _super.prototype.GetDefaultFormat.call(this);
	            format.Line.Color.ColorType = 0;
	            return format;
	        };
	        Floor_prototype.CreateFormat = function () {
	            return new ChartFormat(this._chart);
	        };
	        Floor_prototype.FromOOModel = function (t ) {
	            this._ooModel = t;
	            if (!isNullOrUndefined(t.thickness)) {
	                this.Thickness = Math_floor(t.thickness);
	            }
	            _super.prototype.FromShapeProperties.call(this, t.spPr);
	        };
	        Floor_prototype.ToOOModel = function () {
	            var _this = this;
	            var ooModel = !isNullOrUndefined(_this._ooModel) ? _this._ooModel : {} ;
	            ooModel.thickness = _this.Thickness;
	            ooModel.spPr = _super.prototype.ToShapeProperties.call(_this);
	            return ooModel;
	        };
	        return Floor;
	    }(ChartElementBase));
	    Charts.Floor = Floor;
	
	    var WallBase = (function (_super) {
	        $_inherit(WallBase, _super);
	
	        function WallBase(chart) {
	            var _this = _super.call(this) || this;
	            _this._thickness = 0;
	            _this._ooModel = keyword_null;
	            _this._chart = chart;
	            return _this;
	        }
	
	        var WallBase_prototype = WallBase.prototype;
	        defineProperty(WallBase_prototype, "Format", {
	            get: function () {
	                return this.ChartFormat;
	            }
	        });
	        defineProperty(WallBase_prototype, "Parent", {
	            get: function () {
	                return this._chart;
	            }
	        });
	        defineProperty(WallBase_prototype, "Thickness", {
	            get: function () {
	                return this._thickness;
	            },
	            set: function (value) {
	                this._thickness = value;
	            }
	        });
	        WallBase_prototype.FromOOModel = function (t ) {
	            this._ooModel = t;
	            if (!isNullOrUndefined(t.thickness)) {
	                this.Thickness = Math_floor(t.thickness);
	            }
	            _super.prototype.FromShapeProperties.call(this, t.spPr);
	        };
	        WallBase_prototype.ToOOModel = function () {
	            var _this = this;
	            var ooModel = !isNullOrUndefined(_this._ooModel) ? _this._ooModel : {} ;
	            ooModel.thickness = _this.Thickness;
	            ooModel.spPr = _super.prototype.ToShapeProperties.call(_this);
	            return ooModel;
	        };
	        WallBase_prototype.CreateFormat = function () {
	            return this.CreateFormatCore();
	        };
	        WallBase_prototype.CreateFormatCore = function () {
	            return keyword_null;
	        };
	        return WallBase;
	    }(ChartElementBase));
	    Charts.WallBase = WallBase;
	    var Walls = (function (_super) {
	        $_inherit(Walls, _super);
	
	        function Walls(chart) {
	            return _super.call(this, chart) || this;
	        }
	
	        var Walls_prototype = Walls.prototype;
	        defineProperty(Walls_prototype, "Thickness", {
	            get: function () {
	                return this._thickness;
	            },
	            set: function (value) {
	                this._thickness = value;
	                this._chart.SideWall.Thickness = value;
	                this._chart.BackWall.Thickness = value;
	            }
	        });
	        Walls_prototype.CreateFormatCore = function () {
	            return new ChartFormat(this._chart);
	        };
	        return Walls;
	    }(WallBase));
	    Charts.Walls = Walls;
	    var Wall = (function (_super) {
	        $_inherit(Wall, _super);
	
	        function Wall(chart) {
	            return _super.call(this, chart) || this;
	        }
	
	        Wall.prototype.CreateFormatCore = function () {
	            return new ChartFormat(this._chart, this._chart.Walls.Format);
	        };
	        return Wall;
	    }(WallBase));
	    Charts.Wall = Wall;
	
	   
	   
	   
	   
	    var ChartModel = (function () {
	        function ChartModel(chartView, chartType) {
	            if (chartType === keyword_undefined) {
	                chartType = 12;
	            }
	            var _this = this;
	            _this._gapDepth = 150;
	            _this._plotVisibleOnly = true;
	            if (ChartUtility.IsSunburstChart(chartType)) {
	                _this._hasLegend = false;
	            } else {
	                _this._hasLegend = true;
	            }
	            _this._hasTitle = true;
	            _this._barShape = 2;
	            _this._shapes = [];    
	            _this._chartGroups = {};
	            _this._elementChangedSuspended = 0;
	            _this._chartView = chartView;
	            if (chartType === 0) {
	                throw new Error("Can not set combo chart type!");
	            }
	            _this._chartType = chartType;
	            _this._useAnimation = false;
	            _this._seriesCollection = new SeriesCollection(_this);
	            _this.InitElements();
	            _this.InitProps();
	            _this._fullGroups = new FullChartGroups(_this);
	            _this.UpdateFormat();
	        }
	
	        var ChartModel_prototype = ChartModel.prototype;
	
	        ChartModel_prototype.InitElements = function () {
	            var _this = this;
	            _this._chartArea = new ChartArea(_this);
	            _this._lengend = new Legend(_this);
	            if (ChartUtility.IsRadarChart(_this._chartType) || ChartUtility.IsSunburstOrTreemapChart(_this._chartType)) {
	                _this._lengend.Position = 1;
	            } else {
	                _this._lengend.Position = 4;
	            }
	            _this._title = new ChartTitle(_this);
	            _this._plotArea = new PlotArea(_this);
	            if (ChartUtility.Is3DChart(_this._chartType)) {
	                _this._floor = _this.GetDefaultFloor();
	                _this._walls = new Walls(_this);
	                _this._sideWall = new Wall(_this);
	                _this._backWall = new Wall(_this);
	            }
	        };
	        ChartModel_prototype.InitProps = function () {
	            var _this = this;
	            _this._gapDepth = 150;
	            switch (_this._chartType) {
	                case 15
	                :
	                case 16
	                :
	                case 17
	                :
	                case 6
	                :
	                case 21
	                :
	                case 22
	                :
	                case 23
	                :
	                    _this.RightAngleAxes = true;
	                    break;
	                case 5
	                :
	                case 10
	                :
	                case 29
	                :
	                case 30
	                :
	                case 31
	                :
	                case 4
	                :
	                case 44
	                :
	                case 45
	                :
	                case 47
	                :
	                case 46
	                :
	                    _this.RightAngleAxes = false;
	                    break;
	            }
	        };
	        defineProperty(ChartModel_prototype, "Name", {
	           
	           
	           
	            get: function () {
	                return this._chartView.name();
	            }
	        });
	        defineProperty(ChartModel_prototype, "Parent", {
	            get: function () {
	                return this._chartView;
	            }
	        });
	        defineProperty(ChartModel_prototype, "ChartType", {
	           
	           
	           
	            get: function () {
	                return this._chartType;
	            },
	            set: function (value) {
	                var _this = this;
	                if (value !== _this._chartType) {
	                    if (value === 0) {
	                        throw new Error("can not set chart type to combo!");
	                    }
	                    if (ChartUtility.IsStockChart(value) && _this.GetStockChartSersCount(value) !== _this._seriesCollection.Count) {
	                        throw new Error("the amount of series is not correct!");
	                    }
	                    _this._chartType = value;
	                    _this.UpdateOnChartTypeChanged();
	                }
	            }
	        });
	        defineProperty(ChartModel_prototype, "SeriesCollection", {
	           
	           
	           
	           
	           
	           
	           
	           
	           
	            get: function () {
	                return this._seriesCollection;
	            }
	        });
	        ChartModel_prototype.UpdateSeries = function (rects, force) {
	            if (force === keyword_undefined) {
	                force = false;
	            }
	            this._seriesCollection.RefreshSeriesIfNeed(rects, force);
	        };
	        defineProperty(ChartModel_prototype, "Axes", {
	           
	           
	           
	           
	           
	           
	           
	           
	           
	           
	           
	           
	           
	           
	           
	            get: function () {
	                var _this = this;
	                if (!_this._axes) {
	                    _this._axes = new Axes(_this);
	                }
	                return _this._axes;
	            }
	        });
	        defineProperty(ChartModel_prototype, "ChartArea", {
	           
	           
	           
	           
	           
	            get: function () {
	                return this._chartArea;
	            }
	        });
	        defineProperty(ChartModel_prototype, "ChartTitle", {
	           
	           
	           
	           
	            get: function () {
	                if (this.HasTitle) {
	                    return this._title;
	                }
	                return keyword_null;
	            }
	        });
	        defineProperty(ChartModel_prototype, "UseAnimation", {
	           
	           
	           
	           
	            get: function () {
	                return this._useAnimation;
	            },
	            set: function (value) {
	                this._useAnimation = value;
	            }
	        });
	        defineProperty(ChartModel_prototype, "PlotArea", {
	           
	           
	           
	           
	            get: function () {
	                return this._plotArea;
	            }
	        });
	        defineProperty(ChartModel_prototype, "Legend", {
	           
	           
	           
	           
	            get: function () {
	                if (this.HasLegend) {
	                    return this._lengend;
	                }
	                return keyword_null;
	            }
	        });
	        defineProperty(ChartModel_prototype, "Floor", {
	           
	           
	           
	           
	            get: function () {
	                var _this = this;
	                if (!ChartUtility.Is3DChart(_this._chartType)) {
	                    return keyword_null;
	                }
	                if (isNullOrUndefined(_this._floor)) {
	                    _this._floor = _this.GetDefaultFloor();
	                }
	                return _this._floor;
	            }
	        });
	        defineProperty(ChartModel_prototype, "Walls", {
	           
	           
	           
	           
	            get: function () {
	                var _this = this;
	                if (!ChartUtility.Is3DChart(_this._chartType)) {
	                    return keyword_null;
	                }
	                if (isNullOrUndefined(_this._walls)) {
	                    _this._walls = new Walls(_this);
	                }
	                return _this._walls;
	            }
	        });
	        defineProperty(ChartModel_prototype, "SideWall", {
	           
	           
	           
	           
	           
	           
	           
	            get: function () {
	                var _this = this;
	                if (!ChartUtility.Is3DChart(_this._chartType)) {
	                    return keyword_null;
	                }
	                if (isNullOrUndefined(_this._sideWall)) {
	                    _this._sideWall = new Wall(_this);
	                }
	                return _this._sideWall;
	            }
	        });
	        defineProperty(ChartModel_prototype, "BackWall", {
	           
	           
	           
	           
	           
	           
	           
	            get: function () {
	                var _this = this;
	                if (!ChartUtility.Is3DChart(_this._chartType)) {
	                    return keyword_null;
	                }
	                if (isNullOrUndefined(_this._backWall)) {
	                    _this._backWall = new Wall(_this);
	                }
	                return _this._backWall;
	            }
	        });
	        defineProperty(ChartModel_prototype, "AutoScaling", {
	           
	           
	           
	           
	           
	            get: function () {
	                return this._chartArea.Format.ThreeD._AutoScale;
	            },
	            set: function (value) {
	                this._chartArea.Format.ThreeD._AutoScale = value;
	            }
	        });
	        defineProperty(ChartModel_prototype, "BarShape", {
	           
	           
	           
	            get: function () {
	                return this._barShape;
	            },
	            set: function (value) {
	                this._barShape = value;
	                for (var _i = 0, _a = this._seriesCollection.AllSers; _i < _a.length; _i++) {
	                    var item = _a[_i];
	                    item.ClearBarShapeInternal();
	                }
	            }
	        });
	        defineProperty(ChartModel_prototype, "PlotVisibleOnly", {
	           
	           
	           
	           
	           
	           
	           
	           
	           
	           
	           
	           
	            get: function () {
	                return this._plotVisibleOnly;
	            },
	            set: function (value) {
	                if (value !== this._plotVisibleOnly) {
	                    this.UpdatePlotVisibleOnly(value);
	                }
	            }
	        });
	        defineProperty(ChartModel_prototype, "DepthPercent", {
	           
	           
	           
	           
	            get: function () {
	                return this._chartArea.Format.ThreeD._DepthPercent;
	            },
	            set: function (value) {
	                this._chartArea.Format.ThreeD._DepthPercent = value;
	            }
	        });
	        defineProperty(ChartModel_prototype, "Elevation", {
	           
	           
	           
	            get: function () {
	                return this._chartArea.Format.ThreeD.RotationY;
	            },
	            set: function (value) {
	                this._chartArea.Format.ThreeD.RotationY = value;
	            }
	        });
	        defineProperty(ChartModel_prototype, "GapDepth", {
	           
	           
	           
	           
	           
	            get: function () {
	                return this._gapDepth;
	            },
	            set: function (value) {
	                if (value >= 0 && value <= 500) {
	                    this._gapDepth = value;
	                }
	            }
	        });
	        defineProperty(ChartModel_prototype, "HasLegend", {
	           
	           
	           
	           
	            get: function () {
	                return this._hasLegend;
	            },
	            set: function (value) {
	                if (value !== this._hasLegend) {
	                    this._hasLegend = value;
	                    if (value) {
	                        this._lengend.LegendEntries.UpdateEntries();
	                    }
	                }
	            }
	        });
	        defineProperty(ChartModel_prototype, "HasTitle", {
	           
	           
	           
	            get: function () {
	                return this._hasTitle;
	            },
	            set: function (value) {
	                this._hasTitle = value;
	            }
	        });
	        defineProperty(ChartModel_prototype, "HeightPercent", {
	           
	           
	           
	           
	            get: function () {
	                return this._chartArea.Format.ThreeD._HeightPercent;
	            },
	            set: function (value) {
	                this._chartArea.Format.ThreeD._HeightPercent = value;
	            }
	        });
	        defineProperty(ChartModel_prototype, "Perspective", {
	           
	           
	           
	           
	           
	            get: function () {
	                return this._chartArea.Format.ThreeD.Perspective;
	            },
	            set: function (value) {
	                this._chartArea.Format.ThreeD.Perspective = value;
	            }
	        });
	        defineProperty(ChartModel_prototype, "RightAngleAxes", {
	           
	           
	           
	           
	            get: function () {
	                return this._chartArea.Format.ThreeD._RightAngleAxes;
	            },
	            set: function (value) {
	                this._chartArea.Format.ThreeD._RightAngleAxes = value;
	            }
	        });
	        defineProperty(ChartModel_prototype, "Rotation", {
	           
	           
	           
	           
	           
	           
	            get: function () {
	                return this._chartArea.Format.ThreeD.RotationX;
	            },
	            set: function (value) {
	                this._chartArea.Format.ThreeD.RotationX = value;
	            }
	        });
	        ChartModel_prototype.InitChartGroups = function () {
	            if (isNullOrUndefined(this._fullGroups)) {
	                this._fullGroups = new FullChartGroups(this);
	            }
	        };
	        defineProperty(ChartModel_prototype, "Area3DGroup", {
	           
	           
	           
	           
	            get: function () {
	                return this.GetFirstChartGroup(1);
	            }
	        });
	        defineProperty(ChartModel_prototype, "Bar3DGroup", {
	           
	           
	           
	           
	            get: function () {
	                return this.GetFirstChartGroup(2);
	            }
	        });
	        defineProperty(ChartModel_prototype, "Column3DGroup", {
	           
	           
	           
	           
	            get: function () {
	                return this.GetFirstChartGroup(3);
	            }
	        });
	        defineProperty(ChartModel_prototype, "Line3DGroup", {
	           
	           
	           
	           
	            get: function () {
	                return this.GetFirstChartGroup(4);
	            }
	        });
	        defineProperty(ChartModel_prototype, "Pie3DGroup", {
	           
	           
	           
	           
	            get: function () {
	                return this.GetFirstChartGroup(5);
	            }
	        });
	        defineProperty(ChartModel_prototype, "SurfaceGroup", {
	           
	           
	           
	           
	            get: function () {
	                return this.GetFirstChartGroup(6);
	            }
	        });
	        defineProperty(ChartModel_prototype, "AreaGroups", {
	           
	           
	           
	           
	           
	           
	           
	           
	           
	            get: function () {
	                return this.GetChartGroups(7);
	            }
	        });
	        defineProperty(ChartModel_prototype, "BarGroups", {
	           
	           
	           
	           
	           
	           
	           
	           
	           
	            get: function () {
	                return this.GetChartGroups(8);
	            }
	        });
	        defineProperty(ChartModel_prototype, "ColumnGroups", {
	           
	           
	           
	           
	           
	           
	           
	           
	           
	           
	            get: function () {
	                return this.GetChartGroups(9);
	            }
	        });
	        defineProperty(ChartModel_prototype, "DoughnutGroups", {
	           
	           
	           
	           
	           
	           
	           
	           
	           
	           
	            get: function () {
	                return this.GetChartGroups(10);
	            }
	        });
	        defineProperty(ChartModel_prototype, "LineGroups", {
	           
	           
	           
	           
	           
	           
	           
	           
	           
	            get: function () {
	                return this.GetChartGroups(11);
	            }
	        });
	        defineProperty(ChartModel_prototype, "PieGroups", {
	           
	           
	           
	           
	           
	           
	           
	           
	           
	            get: function () {
	                return this.GetChartGroups(12);
	            }
	        });
	        defineProperty(ChartModel_prototype, "RadarGroups", {
	           
	           
	           
	           
	           
	           
	           
	           
	           
	            get: function () {
	                return this.GetChartGroups(13);
	            }
	        });
	        defineProperty(ChartModel_prototype, "XYGroups", {
	           
	           
	           
	           
	           
	           
	           
	           
	           
	           
	            get: function () {
	                return this.GetChartGroups(14);
	            }
	        });
	        defineProperty(ChartModel_prototype, "ChartGroups", {
	           
	           
	           
	           
	           
	           
	           
	           
	           
	            get: function () {
	                if (this._fullGroups.Count > 0) {
	                    return this._fullGroups;
	                }
	                return keyword_null;
	            }
	        });
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	        ChartModel_prototype.SetSourceData = function (source, plotBy) {
	            this._seriesCollection.SetSourceData(source, plotBy);
	        };
	       
	       
	       
	        ChartModel_prototype.Delete = function () {
	           
	        };
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	        ChartModel_prototype.UpdatePlotVisibleOnly = function (value) {
	            this._plotVisibleOnly = value;
	            for (var _i = 0, _a = this._seriesCollection.AllSers; _i < _a.length; _i++) {
	                var item = _a[_i];
	                item.PlotVisibleOnly = value;
	            }
	        };
	        ChartModel_prototype.SuspendElementChanged = function () {
	            this._elementChangedSuspended++;
	        };
	        ChartModel_prototype.ResumeElementChanged = function (element, elementObj, changed) {
	            if (elementObj === keyword_undefined) {
	                elementObj = keyword_null;
	            }
	            if (changed === keyword_undefined) {
	                changed = keyword_null;
	            }
	            this._elementChangedSuspended--;
	            if (this._elementChangedSuspended === 0 && !isNullOrUndefined(element)) {
	                this.HandleElementChanged(element, elementObj, changed);
	            }
	        };
	        defineProperty(ChartModel_prototype, "IsElementChangedSuspended", {
	            get: function () {
	                return this._elementChangedSuspended > 0;
	            }
	        });
	        ChartModel_prototype.HandleElementChanged = function (element, elementObj, changed, newValue, oldValue) {
	            if (newValue === keyword_undefined) {
	                newValue = keyword_null;
	            }
	            if (oldValue === keyword_undefined) {
	                oldValue = keyword_null;
	            }
	            var _this = this;
	            if (_this.IsElementChangedSuspended) {
	                return;
	            }
	            if (element === 4) {
	                _this.HandleSeriesCollectionChanged(elementObj, changed, newValue, oldValue);
	            } else if (element === 3) {
	                _this.HandleSeriesChanged(elementObj, changed, newValue, oldValue);
	            } else if (element === 8) {
	                _this.HandleCategoryAxisChanged(elementObj, changed, newValue, oldValue);
	            } else if (element === 17) {
	                _this.HandleChartGroupChanged(elementObj, changed, newValue, oldValue);
	            } else if (element === 5) {
	                _this.HandleDataPointChanged(elementObj, changed, newValue, oldValue);
	            }
	        };
	        ChartModel_prototype.FindChartGroup = function (chartType, axisGroup) {
	            var groupType = ChartUtility.MapToGroupType(chartType);
	            var fullGroups = this._fullGroups;
	            for (var i = 0, length = fullGroups.Count; i < length; i++) {
	                var item = fullGroups.Get(i);
	                if (item.GroupType === groupType && item.AxisGroup === axisGroup) {
	                    return item;
	                }
	            }
	            return keyword_null;
	        };
	        ChartModel_prototype.SetBarShapeInternal = function (shape) {
	            this._barShape = shape;
	        };
	        ChartModel_prototype.HandleSeriesCollectionChanged = function (elementObj, changed, newValue, oldValue) {//eslint-disable-line
	            var _this = this;
	            var handled = false;
	            if (changed === ChartConstants.PrimaryValuesMinMax) {
	                if (!isNullOrUndefined(_this._primaryValAxis)) {
	                    _this._primaryValAxis.UpdateAxisRulers();
	                    handled = true;
	                }
	            } else if (changed === ChartConstants.SecondaryValuesMinMax) {
	                if (!isNullOrUndefined(_this._secondaryValAxis)) {
	                    _this._secondaryValAxis.UpdateAxisRulers();
	                    handled = true;
	                }
	            } else if (changed === ChartConstants.PrimaryXValuesMinMax) {
	                if (!isNullOrUndefined(_this._primaryCatAxis) && _this._primaryCatAxis.ActualCategoryType !== 1) {
	                    _this._primaryCatAxis.UpdateAxisRulers();
	                    handled = true;
	                }
	            } else if (changed === ChartConstants.SecondaryXValuesMinMax) {
	                if (!isNullOrUndefined(_this._secondaryCatAxis) && _this._secondaryCatAxis.ActualCategoryType !== 1) {
	                    _this._secondaryCatAxis.UpdateAxisRulers();
	                    handled = true;
	                }
	            } else if (changed === ChartConstants.Collection) {
	                _this._seriesCollection._dataOrientation = keyword_null;       
	                _this.UpdateChartTypeBySeries();
	                _this.UpdateAxes();
	                _this.UpdateSeriesCollectionMinMax();
	                if (_this.HasLegend) {
	                    _this._lengend.LegendEntries.UpdateEntries();
	                }
	                _this.UpdateAxisNoMultiLvlLbl();
	            } else if (changed === ChartConstants.Restore) {
	                _this.UpdateChartTypeBySeries();
	                _this.UpdateAxes();
	               
	                _this.UpdateSeriesCollectionMinMax();
	                _this._lengend.LegendEntries.UpdateEntries();
	                _this.UpdateAxisNoMultiLvlLbl();
	            }
	            return handled;
	        };
	        ChartModel_prototype.HandleSeriesChanged = function (elementObj, changed, newValue, oldValue) {
	            var _this = this;
	            var series = elementObj;
	           
	            var seriesCollection = _this._seriesCollection;
	            if (changed === ChartConstants.ChartType) {
	                var chartTypeChanged = _this.UpdateChartTypeBySeries();
	                if (chartTypeChanged) {
	                    _this.UpdateAxes();
	                }
	            } else if (changed === ChartConstants.AxisGroup) {
	                _this.UpdateAxes();
	                _this.UpdateSeriesCollectionMinMax();
	            } else if (changed === ChartConstants.AreAllXValuesDateTime) {
	                if (series.Index === 0) {
	                    _this.UpdateAxisActualCatType(series.AxisGroup);
	                }
	            } else if (changed === ChartConstants.ValuesMinMax) {
	                seriesCollection.UpdateValuesMaxMin(series.AxisGroup);
	            } else if (changed === ChartConstants.XValuesMinMax) {
	                seriesCollection.UpdateXValuesMaxMin(series.AxisGroup);
	            } else if (changed === ChartConstants.XValuesFormula) {
	                seriesCollection.SyncOneDimensionSersXValuesFormula(series, newValue);
	                _this.UpdateAxisNoMultiLvlLbl();
	            } else if (changed === ChartConstants.IsMultiLevelXValues) {
	                var catAx = getAxis(_this.Axes, 0, series.AxisGroup);
	                if (!isNullOrUndefined(catAx)) {
	                    catAx.NoMultiLvlLbl = !series.IsMultiLevelXValues;
	                }
	            } else if (changed === ChartConstants.XValues) {
	                seriesCollection.SyncOneDimensionSersXValues(series.AxisGroup, newValue);
	            } else if (changed === ChartConstants.PlotOrder) {
	                var oldOrder = Math_floor(oldValue);
	                var newOrder = Math_floor(newValue);
	                for (var i = 0, count = seriesCollection.Count; i < count; i++) {
	                    var item = seriesCollection.Get(i);
	                   
	                    if (item !== series) {
	                        if (newOrder > oldOrder) {
	                            if (item.PlotOrder === newOrder) {
	                                item.SetPlotOrderInternal(oldOrder);
	                            }
	                        } else if (item.PlotOrder >= newOrder) {
	                            item.SetPlotOrderInternal(item.PlotOrder + 1);
	                        }
	                    }
	                }
	            }
	        };
	        ChartModel_prototype.HandleCategoryAxisChanged = function (elementObj, changed, newValue, oldValue) {//eslint-disable-line
	            var axis = elementObj;
	            if (changed === ChartConstants.CategoryNames) {
	                this._seriesCollection.SyncOneDimensionSersXValues(axis.AxisGroup, newValue);
	               
	            } else if (changed === ChartConstants.CategoryType) {
	                var categoryType = axis.CategoryType;
	                if (categoryType === 0) {
	                    axis.ActualCategoryType = this.DetectCatAxisCategoryType(axis.AxisGroup);
	                } else {
	                    axis.ActualCategoryType = categoryType;
	                }
	            }
	        };
	        ChartModel_prototype.HandleChartGroupChanged = function (elementObj, changed, newValue, oldValue) {//eslint-disable-line
	            var chartGroup = elementObj;
	            if (changed === ChartConstants.SplitType || changed === ChartConstants.SplitValue) {
	                for (var _i = 0, _a = chartGroup.GetSers(); _i < _a.length; _i++) {
	                    var ser = _a[_i];
	                    ser.UpdateSecondPlotPoints();
	                }
	            } else if (changed === ChartConstants.AxisGroup) {
	                this.UpdateAxes();
	                this.UpdateSeriesCollectionMinMax();
	            }
	            return true;
	        };
	        ChartModel_prototype.HandleDataPointChanged = function (elementObj, changed, newValue, oldValue) {//eslint-disable-line
	            var point = elementObj;
	            if (changed === ChartConstants.SecondaryPlot) {
	                point.Parent.Parent.SplitType = 3;
	            }
	        };
	        ChartModel_prototype.ResetSeriesByChartType = function () {
	            var _this = this;
	            var seriesCollection = _this._seriesCollection;
	            var count = seriesCollection.Count;
	            if (count === 0) {
	                return;
	            }
	            if (!ChartUtility.IsStockChart(_this._chartType)) {
	                for (var i = 0; i < count; i++) {
	                    var ser = seriesCollection.Get(i);
	                    ser.ResetOnOwnerChartTypeChanged();
	                }
	            } else if (_this._chartType === 49 ||
	                _this._chartType === 50) {
	                for (i = 0; i < count; i++) {
	                    ser = seriesCollection.Get(i);
	                    ser.ResetOnOwnerChartTypeChanged(9);
	                }
	            } else if (_this._chartType === 51 ||
	                _this._chartType === 52) {
	                seriesCollection.Get(0).ResetOnOwnerChartTypeChanged(12, 0);
	                for (i = 1; i < count; i++) {
	                    seriesCollection.Get(i).ResetOnOwnerChartTypeChanged(9, 1);
	                }
	            }
	        };
	        ChartModel_prototype.UpdateSeriesCollectionMinMax = function () {
	            var _this = this;
	            var seriesCollection = _this._seriesCollection;
	            seriesCollection.UpdateValuesMaxMin(0);
	            seriesCollection.UpdateValuesMaxMin(1);
	            var dimension = ChartUtility.GetDimensioin(_this.ChartType);
	            if (dimension > 1 || (!isNullOrUndefined(_this._primaryCatAxis) && _this._primaryCatAxis.IsValueOrDateScaleAxis())) {
	                seriesCollection.UpdateXValuesMaxMin(0);
	            }
	            if (dimension > 1 || (!isNullOrUndefined(_this._secondaryCatAxis) && _this._secondaryCatAxis.IsValueOrDateScaleAxis())) {
	                seriesCollection.UpdateXValuesMaxMin(1);
	            }
	        };
	        ChartModel_prototype.UpdateAxes = function () {
	            var _this = this;
	            if (!_this._axes) {
	                _this._axes = new Axes(_this);
	            }
	            _this.UpdateCatValAxes();
	            _this.UpdateSeriesAxis();
	            _this.UpdateAxisSettings();
	        };
	
	        function getAxis(axes, axisType, axisGroup, needCreate) {
	            var result = axes.Item(axisType, axisGroup);
	            if (!result && needCreate) {
	                result = axes.Add(axisType, axisGroup);
	            }
	            return result;
	        }
	
	        ChartModel_prototype.UpdateCatValAxes = function () {
	            var _this = this, axes = _this._axes;
	            var hasPrimaryAxis = false;
	            var hasSecondaryAxis = false;
	            if (ChartUtility.IsAnyPieChart(_this._chartType)) {
	                hasPrimaryAxis = false;
	                hasSecondaryAxis = false;
	            } else {
	                for (var i = 0, count = _this._seriesCollection.Count; i < count; i++) {
	                    var ser = _this._seriesCollection.Get(i);
	                    if (ser.AxisGroup === 0) {
	                        hasPrimaryAxis = true;
	                    }
	                    if (ser.AxisGroup === 1) {
	                        hasSecondaryAxis = true;
	                    }
	                }
	            }
	            if (hasPrimaryAxis) {
	                if (isNullOrUndefined(_this._primaryValAxis)) {
	                    _this._primaryValAxis = getAxis(axes, 1, 0, true );
	                }
	                if (isNullOrUndefined(_this._primaryCatAxis)) {
	                    _this._primaryCatAxis = getAxis(axes, 0, 0, true );
	                }
	            } else {
	                axes.Remove(1, 0);
	                _this._primaryValAxis = keyword_null;
	                axes.Remove(0, 0);
	                _this._primaryCatAxis = keyword_null;
	            }
	            if (hasSecondaryAxis) {
	                if (isNullOrUndefined(_this._secondaryValAxis)) {
	                    _this._secondaryValAxis = getAxis(axes, 1, 1, true );
	                }
	                if (isNullOrUndefined(_this._secondaryCatAxis)) {
	                    _this._secondaryCatAxis = getAxis(axes, 0, 1, true );
	                }
	            } else {
	                axes.Remove(1, 1);
	                _this._secondaryValAxis = keyword_null;
	                axes.Remove(0, 1);
	                _this._secondaryCatAxis = keyword_null;
	            }
	        };
	        ChartModel_prototype.UpdateSeriesAxis = function () {
	            var _this = this, axes = _this._axes;
	            if (ChartUtility.HasSeriesAx(_this._chartType)) {
	                if (isNullOrUndefined(_this._seriesAxis)) {
	                    _this._seriesAxis = getAxis(axes, 2, 0, true );
	                }
	            } else {
	                axes.Remove(2, 0);
	                _this._seriesAxis = keyword_null;
	            }
	        };
	        ChartModel_prototype.UpdateAxisNoMultiLvlLbl = function () {
	            var seriesCollection = this._seriesCollection;
	            var primSers = seriesCollection.GetSers(true, 0);
	            if (primSers.length > 0) {
	                var primCatAx = getAxis(this._axes, 0, 0);
	                if (!isNullOrUndefined(primCatAx)) {
	                    primCatAx.NoMultiLvlLbl = !primSers.some(function (ser) {
	                        return ser.IsMultiLevelXValues;
	                    });
	                }
	            }
	            var secondSers = seriesCollection.GetSers(true, 1);
	            if (secondSers.length > 0) {
	                var secondCatAx = getAxis(this._axes, 0, 1);
	                if (!isNullOrUndefined(secondCatAx)) {
	                    secondCatAx.NoMultiLvlLbl = !secondSers.some(function (ser) {
	                        return ser.IsMultiLevelXValues;
	                    });
	                }
	            }
	        };
	        ChartModel_prototype.UpdateFormat = function () {
	            var _this = this;
	            var threeD = _this._chartArea.Format.ThreeD;
	            if (ChartUtility.Is3DChart(_this._chartType)) {
	                if (ChartUtility.IsPieChart(_this._chartType)) {
	                    threeD.RotationX = 0;
	                    threeD.RotationY = 30;
	                } else if (_this._chartType === 46 ||
	                    _this._chartType === 47) {
	                    threeD.RotationX = 0;
	                    threeD.RotationY = 90;
	                    threeD.Perspective = 0;
	                } else {
	                    threeD.RotationX = 20;
	                    threeD.RotationY = 15;
	                }
	            }
	        };
	        ChartModel_prototype.UpdateAxisSettings = function (axisGroup) {
	            if (axisGroup === keyword_undefined) {
	                axisGroup = keyword_null;
	            }
	            var _this = this;
	            _this.UpdateAxisActualCatType(axisGroup);
	            if (!isNullOrUndefined(_this._primaryValAxis)) {
	                if (_this._chartType === 46 ||
	                    _this._chartType === 47) {
	                    _this._primaryValAxis.TickLabelPosition = 3;
	                } else {
	                    _this._primaryValAxis.TickLabelPosition = 2;
	                }
	            }
	        };
	        ChartModel_prototype.UpdateAxisActualCatType = function (axisGroup) {
	            if (axisGroup === keyword_undefined) {
	                axisGroup = keyword_null;
	            }
	            var _this = this;
	            if (!isNullOrUndefined(_this._primaryCatAxis) && _this._primaryCatAxis.CategoryType === 0 && (isNullOrUndefined(axisGroup) || axisGroup === 0)) {
	                _this._primaryCatAxis.ActualCategoryType = _this.DetectCatAxisCategoryType(0);
	            }
	            if (!isNullOrUndefined(_this._secondaryCatAxis) && _this._secondaryCatAxis.CategoryType === 0 && (isNullOrUndefined(axisGroup) || axisGroup === 1)) {
	                _this._secondaryCatAxis.ActualCategoryType = _this.DetectCatAxisCategoryType(1);
	            }
	        };
	        ChartModel_prototype.UpdateOnChartTypeChanged = function () {
	            var _this = this;
	            _this.ResetSeriesByChartType();
	            _this.UpdateAxes();
	            _this._axes.ResetOnChartTypeChanged();
	            _this.UpdateSeriesCollectionMinMax();
	            _this.UpdateFormat();
	           
	            var groupType = ChartUtility.MapToGroupType(_this._chartType);
	            var tempChartGroups = _this._chartGroups[groupType];
	            if (tempChartGroups) {
	                tempChartGroups.Reset();
	            }
	        };
	        ChartModel_prototype.UpdateChartTypeBySeries = function () {
	            var _this = this, chartType = _this._chartType;
	            var seriesCollection = _this._seriesCollection, count = seriesCollection.Count;
	            if (count === 0) {
	                return false;
	            }
	            var firstSer = seriesCollection.Get(0),
	                firstSerChartType = firstSer.InnerChartType,
	                firstSerAxisGroup = firstSer.AxisGroup;
	            var allSersSameChartType = true;
	            var newChartType = chartType;
	            for (var i = 1; i < count; i++) {
	                var ser = seriesCollection.Get(i);
	               
	                if (ser.InnerChartType !== firstSerChartType || ser.AxisGroup !== firstSerAxisGroup) {
	                    allSersSameChartType = false;
	                    newChartType = 0;
	                    break;
	                }
	            }
	           
	           
	           
	            if (chartType === 60 ) {
	                allSersSameChartType = true;
	                newChartType = chartType;
	            }
	
	            if (allSersSameChartType && firstSerChartType !== _this._chartType) {
	                newChartType = firstSerChartType;
	            }
	            if (newChartType !== chartType && !ChartUtility.IsBuiltInComboChart(chartType)) {
	                _this._chartType = newChartType;
	                return true;
	            }
	            return false;
	        };
	        ChartModel_prototype.UpdateAxesRulers = function () {
	            var _this = this;
	            if (!isNullOrUndefined(_this._primaryCatAxis)) {
	                _this._primaryCatAxis.UpdateAxisRulers();
	            }
	            if (!isNullOrUndefined(_this._secondaryCatAxis)) {
	                _this._secondaryCatAxis.UpdateAxisRulers();
	            }
	            if (!isNullOrUndefined(_this._primaryValAxis)) {
	                _this._primaryValAxis.UpdateAxisRulers();
	            }
	            if (!isNullOrUndefined(_this._secondaryValAxis)) {
	                _this._secondaryValAxis.UpdateAxisRulers();
	            }
	        };
	        ChartModel_prototype.DetectCatAxisCategoryType = function (axisGroup) {
	            var _this = this;
	            var chartDimension = ChartUtility.GetDimensioin(_this._chartType);
	            var sers = _this._seriesCollection.GetValidSers(axisGroup);
	            if (chartDimension === -1) {
	               
	                var serDimensionValues = [];
	                for (var _i = 0, sers_1 = sers; _i < sers_1.length; _i++) {
	                    var ser = sers_1[_i];
	                    var serDimension = ChartUtility.GetDimensioin(ser.InnerChartType);
	                    if (serDimensionValues.indexOf(serDimension) < 0) {
	                        serDimensionValues.push(serDimension);
	                    }
	                }
	                if (serDimensionValues.length === 1) {
	                    serDimension = serDimensionValues[0];
	                    if (serDimension === 1) {
	                        if (_this.AreAllFirstSerXValuesDateTime(axisGroup)) {
	                            return 2;
	                        }
	                        return 1;
	                    }
	                    return 3;
	                }
	                return 1;
	            } else if (chartDimension === 1) {
	                if (_this._seriesCollection.Count === 0) {
	                    return 1;
	                }
	                if (_this.AreAllFirstSerXValuesDateTime(axisGroup)) {
	                    return 2;
	                }
	                return 1;
	            } else if (chartDimension > 1) {
	                return 3;
	            }
	            return 1;
	        };
	        ChartModel_prototype.AreAllFirstSerXValuesDateTime = function (axisGroup) {
	            var firstSer = this._seriesCollection.Item(0, axisGroup);
	            if (isNullOrUndefined(firstSer)) {
	                return false;
	            }
	            return (isNullOrUndefined(firstSer.XValuesRefers) ? false : ChartUtility.AreValuesDateTime(this._chartView.sheet(), firstSer.XValuesRefers, this.PlotVisibleOnly));
	        };
	        ChartModel_prototype.GetDefaultFloor = function () {
	            var floor = new Floor(this);
	            if (ChartUtility.IsAreaChart(this._chartType) && ChartUtility.Is3DChart(this._chartType)) {
	                var line = floor.Format.Line;
	                line.Weight = 1 ;
	                line.Color.ObjectThemeColor = 1;
	                line.Color.Brightness = ChartConstants.DefaultLineColorBrightness;
	            } else {
	                floor.Thickness = 0;
	            }
	            return floor;
	        };
	        ChartModel_prototype.GetStockChartSersCount = function (stock) {
	            if (stock === 49) {
	                return 3;
	            } else if (stock === 50 ||
	                stock === 51) {
	                return 4;
	            } else if (stock === 52) {
	                return 5;
	            }
	            return -1;
	        };
	        ChartModel_prototype.HasChartGroups = function (groupType) {
	            for (var _i = 0, _a = this._seriesCollection.AllSers; _i < _a.length; _i++) {
	                var item = _a[_i];
	                if (ChartUtility.MapToGroupType(item.InnerChartType) === groupType) {
	                    return true;
	                }
	            }
	            return false;
	        };
	        ChartModel_prototype.GetChartGroups = function (groupType) {
	            var groups = this._chartGroups[groupType];
	            if (!groups) {
	                groups = new ChartGroups(this, groupType);
	                this._chartGroups[groupType] = groups;
	            }
	            return groups;
	        };
	        ChartModel_prototype.GetFirstChartGroup = function (groupType) {
	            var groups = this.GetChartGroups(groupType);
	            if (!isNullOrUndefined(groups) && groups.Count > 0) {
	                return groups.Get(0);
	            }
	            return keyword_null;
	        };
	        ChartModel_prototype.FromOOModel = function (ooModel ) {
	            var _this = this;
	            _this._ooChartSpace = ooModel;
	            if (isNullOrUndefined(ooModel)) {
	                return;
	            }
	            _this.FromCT_ChartArea(ooModel);
	            if (!isNullOrUndefined(ooModel.colors)) {
	                _this._colors = ooModel.colors;
	            }
	            if (!isNullOrUndefined(_this._ooChartSpace.chart)) {
	                _this._fullGroups.startCache();
	                _this.FromCT_Chart(_this._ooChartSpace.chart);
	                _this._fullGroups.endCache();
	            }
	            if (!isNullOrUndefined(_this._ooChartSpace.userShapes)) {
	                _this.FromCT_UserShapes(_this._ooChartSpace.userShapes);
	            }
	        };
	        ChartModel_prototype.FromCT_ChartArea = function (chartSpace ) {
	            var chartAreaModel = {};
	            chartAreaModel.RoundedCorners = !isNullOrUndefined(chartSpace.roundedCorners) ? chartSpace.roundedCorners : false;
	            chartAreaModel.SpPr = chartSpace.spPr;
	            chartAreaModel.TxPr = chartSpace.txPr;
	            chartAreaModel.Is2016Chart = is2016ChartByChartSpace(chartSpace);
	            this._chartArea.FromOOModel(chartAreaModel);
	            if (!isNullOrUndefined(chartSpace.chart) || !isNullOrUndefined(chartSpace.spPr)) {
	                var threeDModel = {};
	                if (!isNullOrUndefined(chartSpace.chart)) {
	                    threeDModel.View3D = chartSpace.chart.view3D;
	                }
	                if (!isNullOrUndefined(chartSpace.spPr)) {
	                    threeDModel.Scene3D = chartSpace.spPr.scene3d;
	                    threeDModel.Shape3D = chartSpace.spPr.sp3d;
	                }
	                if (!isNullOrUndefined(threeDModel.View3D) || !isNullOrUndefined(threeDModel.Shape3D) || !isNullOrUndefined(threeDModel.Scene3D)) {
	                    this._chartArea.FormatInternal.ThreeD.FromOOModel(threeDModel);
	                }
	            }
	        };
	        ChartModel_prototype.ToOOModel = function () {
	            var _this = this;
	            var ooModel = !isNullOrUndefined(_this._ooChartSpace) ? _this._ooChartSpace : {typeName: 'chartSpace'} ;
	            if (!isNullOrUndefined(_this._chartArea)) {
	                ooModel.roundedCorners = _this._chartArea.RoundedCorners;
	            }
	            ooModel.chart = _this.ToCT_Chart();
	            if (!isNullOrUndefined(_this._chartArea)) {
	                var areaModel = _this._chartArea.ToOOModel();
	                ooModel.spPr = areaModel.SpPr;
	                ooModel.txPr = areaModel.TxPr;
	            }
	            var userShapes = _this.ToCT_UserShapes();
	            if (userShapes) {
	                ooModel.userShapes = userShapes;
	            }
	            return ooModel;
	        };
	        ChartModel_prototype.ToCT_UserShapes = function () {
	            if (this._shapes.length === 0) {
	                return keyword_null;
	            }
	            return this._shapes.map(function (shape) {
	                return shape.toJSON();
	            });
	        };
	        ChartModel_prototype.FromCT_UserShapes = function (userShapes ) {
	            var _this = this, worksheet = _this._chartView.sheet();
	            userShapes && userShapes.forEach(function (anchor) {
	                if (anchor) {
	                    var shape = keyword_null;
	                    if (anchor.chartSpace) {
	                        shape = new Charts.Chart(worksheet);   
	                    } else if (anchor.src) {
	                        shape = new FloatingObjects.Picture();
	                    }
	                    if (shape) {
	                        shape.fromJSON(anchor);
	                        _this._shapes.push(shape);
	                    }
	                }
	            });
	        };
	        ChartModel_prototype.ToCT_Chart = function () {
	            var _this = this;
	            var ooChart = !isNullOrUndefined(_this._ooChartSpace) && !isNullOrUndefined(_this._ooChartSpace.chart) ? _this._ooChartSpace.chart : {} ;
	            if (_this.HasTitle) {
	                var chartType = _this.ChartType;
	                var is2016Chart = ChartUtility.GetIs2016ChartByChartType(chartType);
	                ooChart.title = _this._title.ToOOModel(is2016Chart);
	                ooChart.autoTitleDeleted = false;
	            } else {
	                delete ooChart.title;
	                ooChart.autoTitleDeleted = true;
	            }
	            _this.ToCT_3DChartProps(ooChart);
	            ooChart.plotArea = _this._plotArea.ToOOModel();
	            if (_this.HasLegend) {
	                ooChart.legend = _this._lengend.ToOOModel();
	            } else {
	                delete ooChart.legend;
	            }
	            ooChart.plotVisOnly = _this.PlotVisibleOnly;
	            ooChart.dispBlanksAs = _this.DisplayBlanksAs;
	            ooChart.showDLblsOverMax = _this.ShowDataLabelsOverMaximum;
	            if (ooChart.pivotFmts && ooChart.pivotFmts.length === 0) {
	                delete ooChart.pivotFmts;
	            }
	            return ooChart;
	        };
	        ChartModel_prototype.FromCT_Chart = function (ooChart ) {
	            var _this = this;
	            _this._chartType = ChartUtility.GetChartType(ooChart.plotArea);
	            var is2016Chart = ChartUtility.Get2016ChartType(ooChart.plotArea);
	            if (!isNullOrUndefined(ooChart.title)) {
	                _this._hasTitle = true;
	                _this._title = new ChartTitle(_this);
	                _this._title.FromOOModel(ooChart.title);
	            } else {
	                _this._hasTitle = false;
	            }
	            _this.UpdatePlotVisibleOnly(!isNullOrUndefined(ooChart.plotVisOnly) ? ooChart.plotVisOnly : true);
	            if (!isNullOrUndefined(ooChart.plotArea)) {
	                _this._plotArea.FromOOModel(ooChart.plotArea);
	                for (var i = 0, count = _this._fullGroups.Count; i < count; i++) {
	                    _this._fullGroups.Get(i).Restore(ooChart.plotArea);
	                }
	            }
	            if (!isNullOrUndefined(ooChart.legend)) {
	                _this.HasLegend = true;
	                if (is2016Chart) {
	                    _this._lengend.From2016ChartOOModel(ooChart.legend);
	                } else {
	                    _this._lengend.FromOOModel(ooChart.legend);
	                }
	            } else {
	                _this.HasLegend = false;
	            }
	            if (!isNullOrUndefined(ooChart.dispBlanksAs)) {
	                _this.DisplayBlanksAs = ooChart.dispBlanksAs;
	            }
	            if (!isNullOrUndefined(ooChart.showDLblsOverMax)) {
	                _this.ShowDataLabelsOverMaximum = ooChart.showDLblsOverMax;
	            }
	            if (!isNullOrUndefined(ooChart.floor)) {
	                _this._floor = new Floor(_this);
	                _this._floor.FromOOModel(ooChart.floor);
	            } else {
	                _this._floor = keyword_null;
	            }
	            if (!isNullOrUndefined(ooChart.sideWall)) {
	                _this._sideWall = new Wall(_this);
	                _this._sideWall.FromOOModel(ooChart.sideWall);
	            } else {
	                _this._sideWall = keyword_null;
	            }
	            if (!isNullOrUndefined(ooChart.backWall)) {
	                _this._backWall = new Wall(_this);
	                _this._backWall.FromOOModel(ooChart.backWall);
	            } else {
	                _this._backWall = keyword_null;
	            }
	        };
	        ChartModel_prototype.ToCT_3DChartProps = function (ooChart ) {
	            var _this = this;
	            if (ChartUtility.Is3DChart(_this._chartType)) {
	                var threeDModel = _this._chartArea.Format.ThreeD.ToOOModel();
	                ooChart.view3D = threeDModel.View3D;
	                if (!isNullOrUndefined(_this._floor)) {
	                    ooChart.floor = _this._floor.ToOOModel();
	                } else {
	                    delete ooChart.floor;
	                }
	                if (!isNullOrUndefined(_this._sideWall)) {
	                    ooChart.sideWall = _this._sideWall.ToOOModel();
	                } else {
	                    delete ooChart.sideWall;
	                }
	                if (!isNullOrUndefined(_this._backWall)) {
	                    ooChart.backWall = _this._backWall.ToOOModel();
	                } else {
	                    delete ooChart.backWall;
	                }
	                var ct_walls = keyword_null;
	                if (!isNullOrUndefined(_this._walls)) {
	                    ct_walls = _this._walls.ToOOModel();
	                }
	                if (!isNullOrUndefined(ct_walls)) {
	                    if (isNullOrUndefined(ooChart.sideWall)) {
	                        ooChart.sideWall = ct_walls;
	                    } else if (isNullOrUndefined(ooChart.sideWall.spPr)) {
	                        ooChart.sideWall.spPr = ct_walls.spPr;
	                    }
	                    if (isNullOrUndefined(ooChart.backWall)) {
	                        ooChart.backWall = ct_walls;
	                    } else if (isNullOrUndefined(ooChart.backWall.spPr)) {
	                        ooChart.backWall.spPr = ct_walls.spPr;
	                    }
	                }
	            } else {
	                delete ooChart.view3D;
	                delete ooChart.floor;
	                delete ooChart.sideWall;
	                delete ooChart.backWall;
	            }
	        };
	        ChartModel_prototype._ToARGBColor = function (styleColor) {
	            if (styleColor.ColorType === 2) {
	                return ARGBColor.FromArgb(styleColor.Value);
	            }
	            var styleContext = this._chartView.sheet();
	            if (!isNullOrUndefined(styleContext)) {
	                return styleContext._ToARGBColor(styleColor);
	            }
	            return new ARGBColor();
	        };
	        ChartModel_prototype._ToFont = function (themeFont) {
	            var styleContext = this._chartView.sheet();
	            if (!isNullOrUndefined(styleContext)) {
	                return styleContext._ToFont(themeFont);
	            }
	            return "";
	        };
	        defineProperty(ChartModel_prototype, "DrawingType", {
	            get: function () {
	                return 1;
	            }
	        });
	        return ChartModel;
	    }());
	    Charts.ChartModel = ChartModel;
	
	    module.exports = Charts;
	}());

/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

	(function () {
	    'use strict';
	
	    var Common = __webpack_require__(11);
	    var CalcError = __webpack_require__(12).CalcError;
	    var Types = Common._Types;
	    var extend = Types._extend, inherit = Types._inherit;
	    var GeneralFormatter = __webpack_require__(13).GeneralFormatter;
	
	    var Charts = __webpack_require__(3);
	    var DrawingInterface = Charts,
	        ColorSchemeIndex = DrawingInterface.ColorSchemeIndex;
	
	    var ChartCommon = Charts,
	        Reference = ChartCommon.Reference,
	        AxisUtility = ChartCommon.AxisUtility,
	        INT32_MAX_VALUE = ChartCommon.NumberExtension.INT32_MAX_VALUE,
	        ChartUtility = ChartCommon.ChartUtility,
	        ShapeConstants = ChartCommon.ShapeConstants,
	        isEmptyObject = Types._isEmptyObject,
	        PositionConver = ShapeConstants.PositionConver,
	        defineProperty = ChartUtility.defineProperty,
	        TryToDouble = ChartUtility.TryToDouble,
	        colorFormatToString = ChartUtility.colorFormatToString,
	        getTransparencyFromColorFormat = ChartUtility.getTransparencyFromColorFormat,
	        isStockChart = ChartUtility.IsStockChart,
	        IsSunburstOrTreemapChart = ChartUtility.IsSunburstOrTreemapChart,
	        ChartConstants = ChartCommon.ChartConstants,
	        StatefulChartElementBase = ChartCommon.StatefulChartElementBase,
	        CellRect = ChartCommon.CellRect,
	        UnitHelper = ChartCommon.UnitHelper,
	        isNullOrUndefined = UnitHelper.isNullOrUndefined,
	        IsNullOrEmpty = UnitHelper.IsNullOrEmpty,
	       
	        getRangeInfoByFormula = ChartUtility.getRangeInfoByFormula,
	        isContinuousRange = ChartUtility.isContinuousRange;
	
	
	    var ColorFormat = Charts.ColorFormat;
	    var DataPoint = __webpack_require__(14),
	        Points = DataPoint.Points,
	        DataLabels = DataPoint.DataLabels,
	        DrawingText = Charts.DrawingText;
	
	    var ChartFormat = __webpack_require__(7).ChartFormat;
	    var ARGBColor = Charts.ARGBColor;
	    var ChartHelper = __webpack_require__(15).ChartHelper,
	        ChartData2016ModelCalHelper = ChartHelper.chartData2016ModelCalHelper,
	        getSeriesProperties = ChartHelper.getSeriesProperties;
	
	    var keyword_null = null, keyword_undefined = void 0;
	
	    function splitBackColor(str, ch) {
	        var result = [];
	        var inBracket = false, index = 0;
	        for (var i = 0; i < str.length; i++) {
	            var current = str[i];
	            if (current === "(") {
	                inBracket = true;
	            } else if (current === ")") {
	                inBracket = false;
	            }
	
	            if (!inBracket && current === ch) {
	                result.push(str.substring(index, i));
	                index = i + 1;
	            }
	        }
	        if (index < str.length) {
	            result.push(str.substring(index, str.length));
	           
	        }
	        return result;
	    }
	
	    function isMarkerScatterChart(chartType) {
	        return [1 , 33 , 35 , 26, 27, 28, 42].indexOf(chartType) >= 0;
	    }
	
	    function applySeriesProperties(series, seriesProperties, sheet) {
	        if (!series || !seriesProperties) {
	            return;
	        }
	        if (!isNullOrUndefined(seriesProperties.chartType)) {
	            series.ChartType = seriesProperties.chartType;
	        }
	        if (!isNullOrUndefined(seriesProperties.axisGroup)) {
	            series.AxisGroup = seriesProperties.axisGroup;
	        }
	        var isPieOrDoughnut = ChartUtility.IsPieOrDoughnutChart(series.ChartType);
	        var seriesPoints, pointNumber, point, i, dataPoints, transparency, fillColor;
	        var seriesTemp = getSeriesProperties(series, false, false, true);
	       
	        if (seriesProperties.backColor || (seriesProperties.backColor === null || seriesProperties.backColor === '')) {
	            if (isPieOrDoughnut) {
	                seriesPoints = series.Points;
	                pointNumber = seriesPoints.Count;
	                var colors = splitBackColor(seriesProperties.backColor, ',');
	                for (i = 0; i < pointNumber; i++) {
	                    point = seriesPoints.Get(i);
	                    fillColor = colors[i];
	                    if (fillColor) {
	                        point.Format.Fill.Color.setColor(sheet, fillColor);
	                    } else if (fillColor === null || fillColor === '') {
	                        point.Format.Fill.Color.ColorType = 0;
	                    }
	                }
	            } else {
	                fillColor = seriesProperties.backColor;
	                if (fillColor) {
	                    series.SetFillColor(sheet, fillColor);
	                    if (isMarkerScatterChart(series.ChartType)) {
	                        series.SetMarkerFillColor(sheet, fillColor);
	                    }
	                } else if (fillColor === null || fillColor === '') {
	                    series.Format.Fill.Color.ColorType = 0;
	                    if (isMarkerScatterChart(series.ChartType)) {
	                        series.MarkerFormat.Fill.Color.ColorType = 0;
	                    }
	                }
	                if (IsSunburstOrTreemapChart(series.ChartType) && seriesTemp.backColor !== seriesProperties.backColor) {
	                    dataPoints = series.dataPoints();
	                    transparency = series.getFillColorTransparency();
	                    for (i = 0; i < dataPoints._length(); i++) {
	                        dataPoints.set(i, {fillColor: fillColor, transparency: transparency});
	                    }
	                }
	            }
	        }
	        if (!isNullOrUndefined(seriesProperties.backColorTransparency)) {
	            if (isPieOrDoughnut) {
	                seriesPoints = series.Points;
	                pointNumber = seriesPoints.Count;
	                var transparencies = splitBackColor(seriesProperties.backColorTransparency, ',');
	                for (i = 0; i < pointNumber; i++) {
	                    point = seriesPoints.Get(i);
	                    transparency = parseInt(transparencies[i]);
	                    if (!isNullOrUndefined(transparency) && !isNaN(transparency)) {
	                        point.Format.Fill.Color.Transparency = transparency;
	                    }
	                }
	            } else {
	                series.SetFillColorTransparency(seriesProperties.backColorTransparency);
	                if (isMarkerScatterChart(series.ChartType)) {
	                    series.SetMarkerFillColorTransparency(seriesProperties.backColorTransparency);
	                }
	                if (IsSunburstOrTreemapChart(series.ChartType) && seriesTemp.backColorTransparency !== seriesProperties.backColorTransparency) {
	                    dataPoints = series.dataPoints();
	                    fillColor = series.getFillColor();
	                    for (i = 0; i < dataPoints._length(); i++) {
	                        dataPoints.set(i, {fillColor: fillColor, transparency: seriesProperties.backColorTransparency});
	                    }
	                }
	            }
	        }
	        var border = seriesProperties.border;
	        if (border) {
	            if (isPieOrDoughnut) {
	                var points = series.Points, pointCount = points.Count;
	                for (var j = 0; j < pointCount; j++) {
	                    var lineFormat = points.Get(j).Format.Line;
	                    if (border.color) {
	                        lineFormat.Color.setColor(sheet, border.color);
	                    } else if (border.color === null || border.color === '') {
	                        lineFormat.Color.ColorType = 0;
	                    }
	                    if (!isNullOrUndefined(border.width)) {
	                        lineFormat.Weight = border.width;
	                    }
	                    if (border.transparency) {
	                        lineFormat.Color.Transparency = border.transparency;
	                    }
	                }
	            } else {
	                if (border.color) {
	                    if (series.ChartType !== 1 ) {
	                        series.SetLineColor(sheet, border.color);
	                    }
	                   
	                   
	                   
	                   
	                } else if (border.color === null || border.color === '') {
	                    series.Format.Line.Color.ColorType = 0;
	                   
	                   
	                   
	                }
	                if (!isNullOrUndefined(border.width)) {
	                    series.LineWidth = border.width;
	                }
	                if (!isNullOrUndefined(border.transparency)) {
	                    series.SetLineColorTransparency(border.transparency);
	                   
	                   
	                   
	                }
	            }
	        }
	        if (!isNullOrUndefined(seriesProperties.startAngle)) {
	            series.Parent.FirstSliceAngle = seriesProperties.startAngle;
	        }
	        if (!isNullOrUndefined(seriesProperties.name)) {
	            series.UpdateNameFormula(seriesProperties.name);
	        }
	        if (!isNullOrUndefined(seriesProperties.xValues)) {
	            series.UpdateXValuesFormula(seriesProperties.xValues);
	        }
	        if (!isNullOrUndefined(seriesProperties.yValues)) {
	            series.UpdateValuesFormula(seriesProperties.yValues);
	        }
	        if (!isNullOrUndefined(seriesProperties.bubbleSizes)) {
	            series.UpdateBubbleFormula(seriesProperties.bubbleSizes);
	        }
	    }
	
	    var Util = (function () {
	        function Util() {
	        }
	
	        Util.getValueForMinMax = function (value, defaultValue) {
	            return isNaN(value) || value === Infinity ? defaultValue : value;
	        };
	        Util.getMinValue = function (values) {
	            return Math.min.apply(keyword_null, values);
	        };
	        Util.getMaxValue = function (values) {
	            return Math.max.apply(keyword_null, values);
	        };
	        Util.getMinMaxValues = function (values, defaultMin, defaultMax) {
	            if (defaultMin === keyword_undefined) {
	                defaultMin = 0;
	            }
	            if (defaultMax === keyword_undefined) {
	                defaultMax = 1;
	            }
	            var min, max;
	            if (values && values.length) {
	                min = Util.getMinValue(values);
	                max = Util.getMaxValue(values);
	            }
	            return {Min: Util.getValueForMinMax(min, defaultMin), Max: Util.getValueForMinMax(max, defaultMax)};
	        };
	        return Util;
	    }());
	
	    function isAllArrayItemSame(array) {
	        if (array) {
	            var count = array.length;
	            if (count > 0) {
	                var first = array[0];
	                for (var i = 1; i < count; i++) {
	                    if (array[i] !== first) {
	                        return false;
	                    }
	                }
	                return true;
	            }
	        }
	        return false;
	    }
	
	    var SeriesStructure = (function () {
	        function SeriesStructure() {
	            this.Label = keyword_null;
	            this.Categories = [];
	            this.Data = [];
	        }
	
	        return SeriesStructure;
	    }());
	    Charts.SeriesStructure = SeriesStructure;
	
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	    var Trendline = (function (_super) {
	        inherit(Trendline, _super);
	
	        function Trendline(series) {
	            var _this = _super.call(this, keyword_null);
	            _this._series = series;
	            _this._type = 1 ;
	            _this._period = 2;
	            _this._order = 2;
	            return _this;
	        }
	
	        var prototype = Trendline.prototype;
	
	        defineProperty(prototype, "Index", {
	            get: function () {
	                return this._series.Trendlines.IndexOf(this);
	            }
	        });
	        defineProperty(prototype, "Backward", {
	            get: function () {
	                return this._backward;
	            },
	            set: function (value) {
	                this._backward = value;
	                this.SetState(1 , true);
	            }
	        });
	        defineProperty(prototype, "DisplayEquation", {
	            get: function () {
	                return this._displayEquation;
	            },
	            set: function (value) {
	                this._displayEquation = value;
	                this.SetState(2 , true);
	            }
	        });
	        defineProperty(prototype, "DisplayRSquared", {
	            get: function () {
	                return this._displayRSquared;
	            },
	            set: function (value) {
	                this._displayRSquared = value;
	                this.SetState(4 , true);
	            }
	        });
	        defineProperty(prototype, "Format", {
	            get: function () {
	                return this.ChartFormat;
	            }
	        });
	        defineProperty(prototype, "Forward", {
	            get: function () {
	                return this._forward;
	            },
	            set: function (value) {
	                this._forward = value;
	                this.SetState(8 , true);
	            }
	        });
	        defineProperty(prototype, "Intercept", {
	            get: function () {
	                return this._intercept;
	            },
	            set: function (value) {
	                this._intercept = value;
	                this.SetState(16 , true);
	            }
	        });
	        defineProperty(prototype, "Order", {
	            get: function () {
	                return this._order;
	            },
	            set: function (value) {
	                this._order = value;
	                this.SetState(256 , true);
	            }
	        });
	        defineProperty(prototype, "Parent", {
	            get: function () {
	                return this._series;
	            }
	        });
	        defineProperty(prototype, "Period", {
	            get: function () {
	                return this._period;
	            },
	            set: function (value) {
	                this._period = value;
	                this.SetState(512 , true);
	            }
	        });
	        defineProperty(prototype, "Type", {
	            get: function () {
	                return this._type;
	            },
	            set: function (value) {
	                this._type = value;
	                this.SetState(1024 , true);
	            }
	        });
	        prototype.ClearFormats = function () {
	            this.ChartFormat = this.GetDefaultFormat();
	        };
	        prototype.Delete = function () {
	            this._series.Trendlines.Delete(this);
	        };
	        prototype.CreateFormat = function () {
	            return new ChartFormat(this._series.Chart, keyword_null, this.AutoLineColor.bind(this));
	        };
	        prototype.GetDefaultFormat = function () {
	            var format = _super.prototype.GetDefaultFormat.call(this);
	            format.Line.Weight = 2 ;
	            format.Line.DashStyle = 8 ;
	            return format;
	        };
	        prototype.AutoLineColor = function () {
	            var autoSerColor = new ColorFormat(this._series.Parent.Parent);
	            autoSerColor.ObjectThemeColor = ColorSchemeIndex["Accent" + (this._series.AutoColorIndex % 6 + 1)];
	            return autoSerColor;
	        };
	        prototype.FromOOModel = function (t ) {
	            var _this = this;
	            _this._ooLine = t;
	            if (!isNullOrUndefined(t.backward)) {
	                _this.Backward = t.backward;
	            }
	            if (!isNullOrUndefined(t.forward)) {
	                _this.Forward = t.forward;
	            }
	            if (!isNullOrUndefined(t.intercept)) {
	                _this.Intercept = t.intercept;
	            }
	            if (!isNullOrUndefined(t.order)) {
	                _this.Order = t.order;
	            }
	            if (!isNullOrUndefined(t.trendlineType)) {
	                _this.Type = t.trendlineType;
	            }
	            if (_this.Type === 3  && !isNullOrUndefined(t.period)) {
	                _this.Period = t.period;
	            }
	            if (!isNullOrUndefined(t.dispEq)) {
	                _this.DisplayEquation = t.dispEq;
	            }
	            if (!isNullOrUndefined(t.dispRSqr)) {
	                _this.DisplayRSquared = t.dispRSqr;
	            }
	            if (!isNullOrUndefined(t.spPr)) {
	                if (isNullOrUndefined(_this._format)) {
	                    _this._format = new ChartFormat(_this._series.Chart);
	                }
	                _this._format.FromOOModel(t.spPr);
	            } else {
	                _this._format = keyword_null;
	            }
	        };
	        prototype.ToOOModel = function () {
	            var _this = this;
	            var ctLine = _this._ooLine || {};
	            if (_this.GetState(1 )) {
	                ctLine.backward = _this.Backward;
	            }
	            if (_this.GetState(8 )) {
	                ctLine.forward = _this.Forward;
	            }
	            if (_this.GetState(16 )) {
	                ctLine.intercept = _this.Intercept;
	            }
	            if (_this.Type === 4 ) {
	                ctLine.order = _this.Order;
	            }
	            if (_this.Type === 3 ) {
	                ctLine.period = _this.Period;
	            }
	            ctLine.trendlineType = _this.Type;
	            ctLine.dispEq = _this.DisplayEquation;
	            ctLine.dispRSqr = _this.DisplayRSquared;
	            if (!isNullOrUndefined(_this._format)) {
	                ctLine.spPr = _this._format.ToOOModel();
	            }
	            return ctLine;
	        };
	        return Trendline;
	    }(StatefulChartElementBase));
	    Charts.Trendline = Trendline;
	    var Trendlines = (function () {
	        function Trendlines(series) {
	            this._lines = [];
	            this._series = series;
	        }
	
	        var prototype = Trendlines.prototype;
	
	        defineProperty(prototype, "Count", {
	            get: function () {
	                return this._lines.length;
	            }
	        });
	        defineProperty(prototype, "Parent", {
	            get: function () {
	                return this._series;
	            }
	        });
	        prototype.Add = function () {
	            var line = new Trendline(this._series);
	            this._lines.push(line);
	            return line;
	        };
	        prototype.Get = function (index) {
	            return this._lines[index];
	        };
	        prototype.GetLines = function () {
	            return this._lines;
	        };
	        prototype.Delete = function (indexOrLine) {
	            var index = indexOrLine;
	            if (indexOrLine instanceof Trendline) {
	                index = this.IndexOf(indexOrLine);
	            }
	            if (index >= 0) {
	                this._lines.splice(index, 1);
	            }
	        };
	        prototype.IndexOf = function (line) {
	            return this._lines.indexOf(line);
	        };
	        prototype.RestoreTrendlines = function (lines) {
	            this._lines = [];
	            for (var _i = 0, lines_1 = lines; _i < lines_1.length; _i++) {
	                var item = lines_1[_i];
	                var trendline = this.Add();
	                trendline.FromOOModel(item);
	            }
	        };
	        return Trendlines;
	    }());
	    Charts.Trendlines = Trendlines;
	
	    var DataPt = (function (_super) {
	        inherit(DataPt, _super);
	
	        function DataPt(chart, idx) {
	            var _this = _super.call(this, keyword_null);
	            
	            _this._idx = (idx || idx === 0) ? idx : -1;
	            _this._spPr = null;
	            _this._ext = [];
	            _this._chart = chart;
	            return _this;
	        }
	
	        var prototype = DataPt.prototype;
	        prototype.CreateFormat = function () {
	            return new ChartFormat(this._chart);
	        };
	        prototype.getFillColor = function (needThemeColor, needRGBA, notAddTransprent) {
	            return colorFormatToString(this.ChartFormat.Fill, needThemeColor, needRGBA, notAddTransprent);
	        };
	        prototype.getTransparency = function () {
	            return getTransparencyFromColorFormat(this.ChartFormat.Fill);
	        };
	        prototype.setFillColor = function (sheet, value) {
	            this.ChartFormat.Fill.Color.setColor(sheet, value);
	        };
	        prototype.setTransparency = function (value) {
	            this.ChartFormat.Fill.Color.Transparency = value;
	        };
	        prototype.ToOOModel = function () {
	            var _this = this, dataPointItem = {};
	            if (!isNullOrUndefined(_this._idx)) {
	                dataPointItem.idx = _this._idx;
	            }
	            if (!isNullOrUndefined(_this._format)) {
	                dataPointItem.spPr = _this.ToShapeProperties();
	            }
	            if (!isNullOrUndefined(_this._ext) && _this._ext.length > 0) {
	                dataPointItem.extLst = {ext: _this._ext};
	            }
	            return dataPointItem;
	        };
	        prototype.FromOOModel = function (t ) {
	            var _this = this;
	            if (!isNullOrUndefined(t.idx)) {
	                _this._idx = t.idx;
	            }
	            if (!isNullOrUndefined(t.spPr)) {
	                _this.FromShapeProperties(t.spPr);
	            }
	            if (!isNullOrUndefined(t.extLst) && !isNullOrUndefined(t.extLst.ext) && t.extLst.ext.length > 0) {
	                _this._ext = t.extLst.ext;
	            }
	        };
	        prototype.getDataPointProperties = function (notAddTransprent) {
	            var _this = this;
	            return {
	                fillColor: _this.getFillColor(true, false, notAddTransprent),
	                transparency: _this.getTransparency()
	            };
	        };
	        prototype.setDataPointProperties = function (dataPoint) {
	            if (dataPoint.fillColor) {
	                this.setFillColor(this._chart._chartView.sheet(), dataPoint.fillColor);
	            } else if ((dataPoint.fillColor === null || dataPoint.fillColor === '')) {
	                this.ChartFormat.Fill.Color.ColorType = 0;
	            }
	            if (!isNullOrUndefined(dataPoint.idx)) {
	                this._idx = dataPoint.idx;
	            }
	            if (!isNullOrUndefined(dataPoint.transparency)) {
	                this.setTransparency(dataPoint.transparency);
	            }
	        };
	        return DataPt;
	    }(StatefulChartElementBase));
	
	    var DataPoints = (function () {
	       
	        
	        function DataPoints(series) {
	            var _this = this;
	            _this._series = series;
	            _this._chart = series.Chart;
	            _this._dataPoints = [];
	            _this._sunburstSeriesColor = this._series.GetSunburstSeriesColor();
	            _this._treeData = series._chartData2016ModelCalHelper._treeData;
	            _this._catCount = _this._treeData.length;
	        }
	
	        var prototype = DataPoints.prototype;
	       
	        
	        prototype.get = function (index) {
	            var _this = this;
	            var targetDataPoint;
	            if (arguments.length === 0) {
	                var dataPointsProperties = [];
	                for (var i = 0; i < _this._catCount; i++) {
	                    targetDataPoint = _this._dataPoints[i];
	                    dataPointsProperties.push(targetDataPoint ? targetDataPoint.getDataPointProperties(true) : targetDataPoint);
	                }
	                return dataPointsProperties;
	            }
	            targetDataPoint = _this._get(index);
	            if (targetDataPoint) {
	                return targetDataPoint.getDataPointProperties(true);
	            }
	        };
	
	       
	        
	        prototype.set = function (index, dataPoint) {
	            var _this = this;
	            _this._setDefaultDataPointByIndex(index);
	            var targetDataPoint = _this._get(index);
	            if (targetDataPoint && dataPoint) {
	                _this._backup({index: index, dataPoint: _this.get(index)});
	                targetDataPoint.setDataPointProperties(dataPoint);
	                _this.ChartView._updateChartModel(false);
	            }
	        };
	        prototype._setDefaultDataPointByIndex = function (index) {
	            var _this = this;
	            var targetDataPoint = _this._get(index);
	            if (isNullOrUndefined(targetDataPoint) && index < _this._catCount) {
	                targetDataPoint = new DataPt(_this._chart, _this._treeData[index].idx);
	                _this._serDataPointDefaultColor(index, targetDataPoint);
	            }
	        };
	        prototype._serDataPointDefaultColor = function (index, targetDataPoint) {
	            var _this = this;
	            var fillColor = _this._sunburstSeriesColor[index];
	            if (!isNullOrUndefined(fillColor)) {
	                targetDataPoint.setDataPointProperties({fillColor: fillColor});
	            }
	            _this._dataPoints[index] = targetDataPoint;
	        };
	        prototype._clear = function () {
	            this._dataPoints.length = 0;
	        };
	        prototype._get = function (index) {
	            return this._dataPoints[index];
	        };
	        prototype._backup = function (value) {
	            this.ChartView._backup('dataPoint', value);
	        };
	        prototype._restore = function (value) {
	            if (!value) {
	                return;
	            }
	            this.set(value.index, value.dataPoint);
	        };
	        prototype._length = function () {
	            return this._catCount;
	        };
	        prototype._updateChartUI = function () {
	            var chartView = this.ChartView;
	            if (chartView) {
	               
	               
	               
	                chartView._updateChartModel(true);
	            }
	        };
	        prototype.SetDataPointByIdx = function (idx, dataPoint) {
	            var _this = this;
	            var dataPoints = _this._dataPoints;
	            if (dataPoints) {
	                for (var i = 0; i < _this._catCount; i++) {
	                    if (_this._treeData[i].idx === idx) {
	                        _this._dataPoints[i] = dataPoint;
	                    }
	                }
	            }
	        };
	        prototype.FromOOModel = function (ctDataPoint ) {
	            var _this = this;
	            ctDataPoint.forEach(function (item) {
	                var dataPointItem = new DataPt(_this._chart);
	                dataPointItem.FromOOModel(item);
	                _this.SetDataPointByIdx(dataPointItem._idx, dataPointItem);
	            });
	        };
	        prototype.ToOOModel = function () {
	           
	            var _this = this;
	            var dataPoints = _this._dataPoints;
	            var dataPointsCount = dataPoints.length;
	            var ctDataPoints = [];
	            for (var i = 0; i < dataPointsCount; i++) {
	                var dataPoint = dataPoints[i];
	                if (dataPoint) {
	                    ctDataPoints.push(dataPoints[i].ToOOModel());
	                }
	            }
	            if (ctDataPoints.length > 0) {
	                return ctDataPoints;
	            }
	        };
	        defineProperty(prototype, "Parent", {
	           
	           
	           
	            get: function () {
	                return this._series;
	            }
	        });
	        defineProperty(prototype, "ChartView", {
	           
	           
	           
	            get: function () {
	                return this._chart.Parent;
	            }
	        });
	        return DataPoints;
	    }());
	    Charts.DataPoints = DataPoints;
	    var Series = (function (_super) {
	        inherit(Series, _super);
	
	        function Series(seriesCollection, innerChartType, axisGroup) {
	            var _this = _super.call(this, keyword_null);
	            _this._serCollection = keyword_null;
	            _this._nameRefer = keyword_null;
	            _this._xValuesRefers = [];
	            _this._valuesRefers = [];
	            _this._bubbleSizesRefers = [];
	            _this._markerFormat = keyword_null;
	            _this._invertColor = keyword_null;
	            _this._plotVisibleOnly = true;
	            _this._isMultiLevelXValues = false;
	            _this._idx = -1;
	            _this._plotOrder = -1;
	            _this._valuesMinMax = {Min: 0, Max: 1};
	            _this._xValuesMinMax = {Min: 0, Max: 1};
	            _this._ooSeries = keyword_null;
	            _this._serCollection = seriesCollection;
	            _this._innerChartType = (isNullOrUndefined(innerChartType) ? _this._serCollection.Parent.ChartType : innerChartType);
	            _this._axisGroup = !isNullOrUndefined(axisGroup) ? axisGroup : 0 ;
	            _this._cachedChartGroup = keyword_null;
	            _this._formatIdx = keyword_null;
	            _this._uniqueId = keyword_null;
	            _this._hidden = false;
	            _this._ownerIdx = keyword_null;
	            _this._axisId = [];
	            _this.defaultColors = {
	                attribute: {meth: 'cycle'},
	                schemeClr: [{val: 4}, {val: 5}, {val: 6}, {val: 7}, {val: 8}, {val: 9}],
	                variation: [{}, {lumMod: 60000}, {lumMod: 80000, lumOff: 20000}, {lumMod: 80000}, {
	                    lumMod: 60000,
	                    lumOdd: 40000
	                }, {lumMod: 50000}, {lumMod: 70000, lumOdd: 30000}, {lumMod: 70000}, {lumMod: 50000, lumOdd: 50000}]
	            };
	            _this.Init();
	            if (innerChartType && IsSunburstOrTreemapChart(innerChartType)) {
	                var seriesDataLabels = new DataLabels(this);
	                seriesDataLabels._showCategoryName = true;
	                _this._dataLabels = seriesDataLabels;
	                _this._hasDataLabels = true;
	            } else {
	                _this._dataLabels = keyword_null;
	            }
	            return _this;
	        }
	
	        var prototype = Series.prototype;
	
	        defineProperty(prototype, "SeriesCollection", {
	            get: function () {
	                return this._serCollection;
	            }
	        });
	        defineProperty(prototype, "Index", {
	            get: function () {
	                if (isNullOrUndefined(this._serCollection)) {
	                    return -1;
	                }
	                return this._serCollection.IndexOf(this);
	            }
	        });
	        defineProperty(prototype, "AxisGroup", {
	           
	           
	           
	            get: function () {
	                return this._axisGroup;
	            },
	            set: function (value) {
	                var _this = this;
	                if (value !== _this._axisGroup) {
	                    _this._axisGroup = value;
	                    _this._cachedChartGroup = keyword_null;
	                    _this.Chart.HandleElementChanged(3 , _this, ChartConstants.AxisGroup);
	                }
	            }
	        });
	        defineProperty(prototype, "BarShape", {
	           
	           
	           
	           
	            get: function () {
	                var _this = this;
	                return isNullOrUndefined(_this._barShape) ? _this.Chart.BarShape : _this._barShape;
	            },
	            set: function (value) {
	                this._barShape = value;
	            }
	        });
	        defineProperty(prototype, "ChartType", {
	           
	           
	           
	            get: function () {
	                return this._innerChartType;
	            },
	            set: function (value) {
	                var _this = this;
	                if (value !== _this._innerChartType) {
	                    if (value === 0  || ChartUtility.IsSurfaceChart(value) || ChartUtility.IsStockChart(value)) {
	                        throw new Error("Invalid chart type!");
	                    }
	                    if (ChartUtility.Is3DChart(_this._innerChartType) !== ChartUtility.Is3DChart(value)) {
	                        throw new Error("Can not change 3D of series!");
	                    }
	                    _this._innerChartType = value;
	                    _this._cachedChartGroup = keyword_null;
	                    _this._ooSeries = keyword_null;
	                    _this.UpdateSettingsByChartType();
	                    _this.Chart.HandleElementChanged(3 , _this, ChartConstants.ChartType);
	                }
	            }
	        });
	        defineProperty(prototype, "Explosion", {
	           
	           
	           
	           
	           
	            get: function () {
	                return this._explosion;
	            },
	            set: function (value) {
	                var _this = this;
	                var explosion = _this._explosion;
	                if (value !== explosion) {
	                    explosion = value;
	                    if (explosion > 400) {
	                        explosion = 400;
	                    }
	                    if (explosion < 0) {
	                        explosion = 0;
	                    }
	                    _this._explosion = explosion;
	                    _this.Dirty(1 );
	                }
	            }
	        });
	        defineProperty(prototype, "Format", {
	           
	           
	           
	           
	           
	           
	           
	           
	           
	           
	           
	            get: function () {
	                return this.ChartFormat;
	            }
	        });
	        prototype.dataPoints = function () {
	            return this._dataPoints;
	        };
	        prototype.getFillColor = function (needThemeColor, needRGBA, notAddTransprent) {
	            return colorFormatToString(this.Format.Fill, needThemeColor, needRGBA, notAddTransprent);
	        };
	        prototype.getFillColorTransparency = function () {
	            return getTransparencyFromColorFormat(this.Format.Fill);
	        };
	        prototype.getLineColor = function (needThemeColor, needRGBA, notAddTransprent) {
	            return colorFormatToString(this.Format.Line, needThemeColor, needRGBA, notAddTransprent);
	        };
	        prototype.getLineColorTransparency = function () {
	            return getTransparencyFromColorFormat(this.Format.Line);
	        };
	        prototype.getMarkerFillColor = function (needThemeColor) {
	            return colorFormatToString(this.MarkerFormat.Fill, needThemeColor);
	        };
	        prototype.getMarkerColorTransparency = function () {
	            return getTransparencyFromColorFormat(this.MarkerFormat.Fill);
	        };
	        defineProperty(prototype, "LineWidth", {
	            get: function () {
	                var lineWidth = this.Format.Line.Weight;
	                if (lineWidth > 0) {
	                    return lineWidth;
	                }
	                return 0;
	            },
	            set: function (value) {
	                if (!isNullOrUndefined(value)) {
	                    this.Format.Line.Weight = value;
	                }
	            }
	        });
	        defineProperty(prototype, "Formula", {
	           
	           
	           
	            get: function () {
	                return "=" + this.GetFormulaString();
	            },
	            set: function (value) {
	                if (value[0] === "=") {
	                    value = value.substr(1);
	                }
	                if (value !== this.GetFormulaString()) {
	                    this.UpdateFormulas(value);
	                }
	            }
	        });
	        defineProperty(prototype, "FormulaR1C1", {
	           
	           
	           
	           
	            get: function () {
	                return "=" + this.GetFormulaString(true);
	            },
	            set: function (value) {
	                if (value[0] === "=") {
	                    value = value.substr(1);
	                }
	                if (value !== this.GetFormulaString(true)) {
	                    this.UpdateFormulas(value);
	                }
	            }
	        });
	        defineProperty(prototype, "Has3DEffect", {
	           
	           
	           
	           
	            get: function () {
	                return this._has3DEffect;
	            },
	            set: function (value) {
	                this._has3DEffect = value;
	                this.Dirty(4  );
	            }
	        });
	        defineProperty(prototype, "HasDataLabels", {
	           
	           
	           
	            get: function () {
	                return this._hasDataLabels;
	            },
	            set: function (value) {
	                var _this = this;
	                _this._hasDataLabels = value;
	               
	                if (value) {
	                    _this.DataLabels.ShowValue = true;
	                    _this.DataLabels.ShowLeaderLines = true;
	                }
	                if (!isNullOrUndefined(_this._dataLabels)) {
	                    _this._dataLabels.UpdateDeleted(!value);
	                }
	               
	               
	               
	               
	            }
	        });
	        defineProperty(prototype, "InvertColor", {
	           
	           
	           
	           
	           
	           
	           
	           
	           
	           
	           
	           
	           
	           
	           
	            get: function () {
	                var _this = this;
	                if (isNullOrUndefined(_this._invertColor)) {
	                    _this._invertColor = new ColorFormat(_this.Chart);
	                }
	                return this._invertColor;
	            }
	        });
	        defineProperty(prototype, "InvertIfNegative", {
	           
	           
	           
	           
	            get: function () {
	                return this._invertIfNegative;
	            },
	            set: function (value) {
	                this._invertIfNegative = value;
	                this.Dirty(8 );
	            }
	        });
	        defineProperty(prototype, "MarkerFormat", {
	           
	            get: function () {
	                var _this = this;
	                if (isNullOrUndefined(_this._markerFormat)) {
	                    _this._markerFormat = _this.CreateMarkerFormat();
	                }
	                return _this._markerFormat;
	            }
	        });
	        defineProperty(prototype, "MarkerSize", {
	           
	           
	           
	           
	           
	           
	           
	           
	            get: function () {
	                return this._markerSize;
	            },
	            set: function (value) {
	                this._markerSize = value;
	                this.Dirty(32 );
	            }
	        });
	        defineProperty(prototype, "MarkerStyle", {
	           
	           
	           
	           
	            get: function () {
	                return this._markerStyle;
	            },
	            set: function (value) {
	                this._markerStyle = value;
	                this.Dirty(64 );
	            }
	        });
	        defineProperty(prototype, "Name", {
	           
	           
	           
	            get: function () {
	                return this._name;
	            },
	            set: function (value) {
	                this.SetNameInternal(value);
	            }
	        });
	        defineProperty(prototype, "Parent", {
	           
	           
	           
	            get: function () {
	                return this.GetParentGroup();
	            }
	        });
	        defineProperty(prototype, "PictureType", {
	           
	           
	           
	           
	            get: function () {
	                return this._pictureType;
	            },
	            set: function (value) {
	                this._pictureType = value;
	                this.Dirty(128 );
	            }
	        });
	        defineProperty(prototype, "PictureUnit", {
	           
	           
	           
	           
	           
	           
	           
	           
	            get: function () {
	                return this._pictureUnit;
	            },
	            set: function (value) {
	                this._pictureUnit = value;
	                this.Dirty(256 );
	            }
	        });
	        defineProperty(prototype, "Smooth", {
	           
	           
	           
	           
	           
	           
	           
	           
	           
	            get: function () {
	                return this._smooth;
	            },
	            set: function (value) {
	                this._smooth = value;
	            }
	        });
	        defineProperty(prototype, "Values", {
	           
	           
	           
	           
	           
	            get: function () {
	                if (ChartUtility.IsOfPieChart(this._innerChartType)) {
	                    return this.ProcessOfPieValues();
	                }
	                return this._values;
	            },
	            set: function (value) {
	                this.SetValuesInternal(value);
	            }
	        });
	        defineProperty(prototype, "XValues", {
	           
	           
	           
	           
	           
	            get: function () {
	                return this.GetXValues();
	            },
	            set: function (value) {
	                this.SetXValuesInternal(value);
	                this.Chart.HandleElementChanged(3 , this, ChartConstants.XValues, value);
	            }
	        });
	        defineProperty(prototype, "BubbleSizes", {
	           
	           
	           
	           
	           
	            get: function () {
	                return this.GetBubbleSizes();
	            },
	            set: function (value) {
	                this.SetBubbleSizesInternal(value);
	            }
	        });
	        defineProperty(prototype, "DataLabels", {
	           
	           
	           
	           
	           
	           
	           
	           
	           
	            get: function () {
	                var _this = this;
	                if (isNullOrUndefined(_this._dataLabels)) {
	                    _this._dataLabels = new DataLabels(_this);
	                }
	                return _this._dataLabels;
	            }
	        });
	        defineProperty(prototype, "Points", {
	           
	           
	           
	           
	           
	           
	           
	           
	           
	            get: function () {
	                return this._points;
	            }
	        });
	        defineProperty(prototype, "Trendlines", {
	           
	           
	           
	           
	           
	           
	           
	           
	           
	            get: function () {
	                return this._trendlines;
	            }
	        });
	        defineProperty(prototype, "PlotOrder", {
	            get: function () {
	                if (this._plotOrder === -1) {
	                    return this.Index + 1;
	                }
	                return this._plotOrder;
	            },
	            set: function (value) {
	                var _this = this;
	                if (_this.PlotOrder !== value && value > 0 && value <= _this._serCollection.Count) {
	                    var oldOrder = _this._plotOrder === -1 ? _this.Index + 1 : _this._plotOrder;
	                    _this._plotOrder = value;
	                    _this.Chart.HandleElementChanged(3 , _this, ChartConstants.PlotOrder, value, oldOrder);
	                }
	            }
	        });
	        defineProperty(prototype, "FormatInternal", {
	            get: function () {
	                var _this = this;
	                if (isNullOrUndefined(_this._format)) {
	                    _this._format = _this.CreateFormat();
	                }
	                return this._format;
	            }
	        });
	        defineProperty(prototype, "AutoColorIndex", {
	            get: function () {
	                if (this._idx !== -1) {
	                    return this._idx;
	                }
	                return this.SourceIndex;
	            }
	        });
	        defineProperty(prototype, "OwnerChartType", {
	            get: function () {
	                return this._serCollection.Parent.ChartType;
	            }
	        });
	        defineProperty(prototype, "PointsCount", {
	            get: function () {
	                var _this = this;
	                if (ChartUtility.IsOfPieChart(_this.InnerChartType)) {
	                    return _this.ValuesCount + 1;
	                }
	                return _this.ValuesCount;
	            }
	        });
	        defineProperty(prototype, "ValuesCount", {
	            get: function () {
	                if (isNullOrUndefined(this._values)) {
	                    return 0;
	                }
	                return this._values.length;
	            }
	        });
	        defineProperty(prototype, "PlotVisibleOnly", {
	            get: function () {
	                return this._plotVisibleOnly;
	            },
	            set: function (value) {
	                var _this = this;
	                if (value !== _this._plotVisibleOnly) {
	                    _this._plotVisibleOnly = value;
	                    _this.RefreshValuesIfNeed();
	                }
	            }
	        });
	        defineProperty(prototype, "IsHidden", {
	            get: function () {
	                var _this = this;
	                if (!isNullOrUndefined(_this._valuesRefers) && _this._valuesRefers.length > 0) {
	                    return _this.AreAllCellsHidden(_this._valuesRefers);
	                }
	                return false;
	            }
	        });
	        defineProperty(prototype, "SourceIndex", {
	            get: function () {
	                return this._serCollection.IndexOfSource(this);
	            }
	        });
	        defineProperty(prototype, "Worksheet", {
	            get: function () {
	                return this._serCollection.Parent.Parent.sheet();
	            }
	        });
	        defineProperty(prototype, "IsMultiLevelXValues", {
	            get: function () {
	                return this._isMultiLevelXValues;
	            },
	            set: function (value) {
	                var _this = this;
	                if (value !== _this._isMultiLevelXValues) {
	                    _this._isMultiLevelXValues = value;
	                    _this.Chart.HandleElementChanged(3 , _this, ChartConstants.IsMultiLevelXValues);
	                }
	            }
	        });
	        defineProperty(prototype, "NameRefer", {
	            get: function () {
	                return this._nameRefer;
	            }
	        });
	        defineProperty(prototype, "XValuesRefers", {
	            get: function () {
	                return this._xValuesRefers;
	            }
	        });
	        defineProperty(prototype, "ValuesRefers", {
	            get: function () {
	                return this._valuesRefers;
	            }
	        });
	        defineProperty(prototype, "BubbleSizesRefers", {
	            get: function () {
	                return this._bubbleSizesRefers;
	            }
	        });
	        defineProperty(prototype, "ValuesMinMax", {
	            get: function () {
	                return this._valuesMinMax;
	            },
	            set: function (value) {
	                var _this = this;
	                if (value !== _this._valuesMinMax) {
	                    _this._valuesMinMax = value;
	                    _this.Chart.HandleElementChanged(3 , _this, ChartConstants.ValuesMinMax);
	                }
	            }
	        });
	        defineProperty(prototype, "XValuesMinMax", {
	            get: function () {
	                return this._xValuesMinMax;
	            },
	            set: function (value) {
	                var _this = this;
	                if (value !== _this._xValuesMinMax) {
	                    _this._xValuesMinMax = value;
	                    _this.Chart.HandleElementChanged(3 , _this, ChartConstants.XValuesMinMax);
	                }
	            }
	        });
	        defineProperty(prototype, "AreAllXValuesDateTime", {
	            get: function () {
	                return this._areAllXValuesDateTime;
	            },
	            set: function (value) {
	                var _this = this;
	                if (value !== _this._areAllXValuesDateTime) {
	                    _this._areAllXValuesDateTime = value;
	                    _this.Chart.HandleElementChanged(3 , _this, ChartConstants.AreAllXValuesDateTime);
	                }
	            }
	        });
	        defineProperty(prototype, "InnerChartType", {
	            get: function () {
	                return this._innerChartType;
	            }
	        });
	        defineProperty(prototype, "Chart", {
	            get: function () {
	                return this._serCollection.Parent;
	            }
	        });
	
	        extend(prototype, {
	            Init: function () {
	                var _this = this;
	               
	                _this._markerFormat = _this.CreateMarkerFormat();
	                _this._barShape = keyword_null;
	                _this._invertColor = new ColorFormat(_this.Chart);
	                _this._invertColor.AutoColorFormat = _this.AutoInvertColorFormat;
	                _this._trendlines = new Trendlines(_this);
	                _this._points = new Points(_this);
	                _this._pictureType = 0 ;
	                _this._pictureUnit = 1;
	                _this._markerStyle = 4 ;
	                _this._markerSize = ChartConstants.DefaultMarkerSize;
	                _this._areAllXValuesDateTime = false;
	                _this._isRichText = false;
	                _this._isTextData = false;
	                _this.UpdateSettingsByChartType();
	            },
	            Update2016ChartDataHelper: function () {
	                var _this = this;
	                var chartType = _this._innerChartType;
	                if (IsSunburstOrTreemapChart(chartType)) {
	                    _this._chartData2016ModelCalHelper = new ChartData2016ModelCalHelper(_this);
	                }
	            },
	            UpdateDataPoints: function () {
	                var _this = this;
	                var chartType = _this._innerChartType;
	                if (IsSunburstOrTreemapChart(chartType)) {
	                    var dataPoints = new DataPoints(_this);
	                    var oldDataPoints = _this._dataPoints;
	                    if (!isNullOrUndefined(oldDataPoints)) {
	                        var oldDataPointsProperties = oldDataPoints.get();
	                        var newDataPointsProperties = dataPoints.get();
	                        for (var i = 0; i < newDataPointsProperties.length; i++) {
	                            dataPoints.set(i, oldDataPointsProperties[i]);
	                        }
	                    }
	                    _this._dataPoints = dataPoints;
	                }
	            },
	            _getUniqueName: function () {
	                return this.ChartType + (this.AxisGroup ? 'F' : '');
	            },
	            _removeJSONCache: function () {
	                var _this = this;
	                if (_this._ooSeries && _this._ooSeries.dLbls) {
	                    delete _this._ooSeries.dLbls;
	                }
	            },
	            SetFillColor: function (sheet, value) {
	                this.Format.Fill.Color.setColor(sheet, value);
	            },
	            SetFillColorTransparency: function (value) {
	                this.Format.Fill.Color.Transparency = value;
	            },
	            SetLineColor: function (sheet, value) {
	                this.Format.Line.Color.setColor(sheet, value);
	            },
	            SetLineColorTransparency: function (value) {
	                this.Format.Line.Color.Transparency = value;
	            },
	            GetSunburstSeriesColor: function () {
	               
	               
	                var _this = this, colors = _this.defaultColors,
	                    catCount = _this._chartData2016ModelCalHelper._treeData.length;
	                if (IsSunburstOrTreemapChart(_this.ChartType) && colors) {
	                    return _this.GetSeriesColorsWithColorsAndCatCount(colors, catCount);
	                }
	                return;
	            },
	            GetSeriesColorsWithColorsAndCatCount: function (colors, catCount) {
	                var _this = this;
	                var schemeClrs = colors.schemeClr;
	                var variation = colors.variation;
	                var meth = colors.attribute && colors.attribute.meth || 'cycle';
	                var highestCategoryCount = catCount;
	                switch (meth) {
	                    case 'withinLinear':
	                        return _this.GetWithinLinearColors(schemeClrs, variation, highestCategoryCount);
	                    case 'withinLinearReversed':
	                        return _this.GetWithinLinearReversedColors(schemeClrs, variation, highestCategoryCount);
	                    case 'cycle':
	                    default:
	                        return _this.GetCycleColors(schemeClrs, variation, highestCategoryCount);
	                }
	            },
	            GetCycleColors: function (schemeClrs, variation, count) {
	                var _this = this, schemeClrsCount = schemeClrs.length, colors = [];
	                for (var i = 0; i < count; i++) {
	                    var color = new ColorFormat(_this.Chart.Parent, null);
	                    color.ObjectThemeColor = schemeClrs[i % schemeClrsCount].val;
	                    if (variation && variation.length > 0) {
	                        var variationCount = variation.length;
	                        var variationInfo = variation[i % variationCount];
	                        if (variationInfo) {
	                            color.Brightness = color.CalcBrightness(variationInfo.lumMod, variationInfo.lumOff);
	                            if (!isNullOrUndefined(variationInfo.shade)) {
	                                color.FromShade(variationInfo.shade);
	                            }
	                            if (!isNullOrUndefined(variationInfo.tint)) {
	                                color.FromTint(variationInfo.tint);
	                            }
	                        }
	                    }
	                    var rgb = color.RGB;
	                    colors.push("rgba(" + rgb.R + "," + rgb.G + "," + rgb.B + "," + (rgb.A / 255) + ")");
	                }
	                return colors;
	            },
	            GetWithinLinearColors: function (schemeClrs, variation, count) {
	                var _this = this, colors = [], step = PositionConver / count, schemeClrsCount = schemeClrs.length;
	                for (var i = 0; i < count; i++) {
	                    var color = new ColorFormat(_this.Chart.Parent, null);
	                    color.ObjectThemeColor = schemeClrs[i % schemeClrsCount].val;
	                    if (variation && variation.length > 0) {
	                        var variationCount = variation.length;
	                        var variationInfo = variation[i % variationCount];
	                        if (variationInfo) {
	                            color.Brightness = color.CalcBrightness(variationInfo.lumMod, variationInfo.lumOff);
	                            if (!isNullOrUndefined(variationInfo.shade)) {
	                                color.FromShade(variationInfo.shade);
	                            }
	                            if (!isNullOrUndefined(variationInfo.tint)) {
	                                color.FromTint(variationInfo.tint);
	                            }
	                        }
	                    } else if (i < count / 2) {
	                        color.FromShade(step * (i + 1) + PositionConver / 2);
	                    } else {
	                        color.FromTint(step * (count - i - 1) + PositionConver / 2);
	                    }
	
	                    var rgb = color.RGB;
	                    colors.push("rgba(" + rgb.R + "," + rgb.G + "," + rgb.B + "," + (rgb.A / 255) + ")");
	                }
	                return colors;
	            },
	            GetWithinLinearReversedColors: function (schemeClrs, variation, count) {
	                return this.GetWithinLinearColors(schemeClrs, variation, count).reverse();
	            },
	            SetMarkerFillColor: function (sheet, value) {
	                this.MarkerFormat.Fill.Color.setColor(sheet, value);
	            },
	            SetMarkerFillColorTransparency: function (value) {
	                this.MarkerFormat.Fill.Color.Transparency = value;
	            },
	           
	           
	           
	           
	           
	           
	            UpdateFormula: function (value, r1c1) {
	                if (r1c1 === keyword_undefined) {
	                    r1c1 = false;
	                }
	               
	               
	               
	                if (value) {
	                    var _this = this;
	                    var sections = value.split(',');
	                    if (sections.length > 5) {
	                       
	                        sections.length = 4;
	                    }
	                    sections.forEach(function (formula, index) {
	                        if (formula) {
	                            switch (index) {
	                                case 0:
	                                    formula = formula.replace('SERIES(', '');
	                                    _this.UpdateNameFormula(formula, r1c1);
	                                    break;
	                                case 1:
	                                    _this.UpdateXValuesFormula(formula, r1c1);
	                                    break;
	                                case 2:
	                                    _this.UpdateValuesFormula(formula, r1c1);
	                                    break;
	                                case 4:
	                                    formula = formula.replace(')', '');
	                                    _this.UpdateBubbleFormula(formula);
	                                    break;
	                            }
	                        }
	                    });
	                }
	            },
	            GetDataLabels: function () {
	                return this._dataLabels;
	            },
	           
	           
	           
	            ClearFormats: function () {
	                this.ChartFormat = this.GetDefaultFormat();
	            },
	           
	           
	           
	            Delete: function () {
	                this._serCollection.DeleteSeries(this);
	                this._serCollection = keyword_null;
	            },
	            RefreshValuesIfNeed: function (axisRects, force) {
	                var _this = this;
	                if (isNullOrUndefined(axisRects)) {
	                    var hiddenRows = _this.Worksheet._GetHiddens(true);
	                    var hiddenCols = _this.Worksheet._GetHiddens(false);
	                    if (hiddenRows.length > 0 || hiddenCols.length > 0) {
	                        axisRects = [];
	                        [].push.apply(axisRects, _this.SegmentToRects(hiddenRows, true));
	                        [].push.apply(axisRects, _this.SegmentToRects(hiddenCols, false));
	                    }
	                }
	                var nameRefer = _this._nameRefer;
	                if (nameRefer && (force || _this.InterectWith([nameRefer], axisRects))) {
	                    _this.UpdateNameByRefer(nameRefer);
	                }
	                var xValuesRefers = _this._xValuesRefers;
	                if (xValuesRefers && xValuesRefers.length > 0 && (force || _this.InterectWith(xValuesRefers, axisRects))) {
	                    _this.UpdateXValuesByRefers(xValuesRefers);
	                }
	                var valuesRefers = _this._valuesRefers;
	                if (valuesRefers && valuesRefers.length > 0 && (force || _this.InterectWith(valuesRefers, axisRects))) {
	                    _this.UpdateValuesByRefers(valuesRefers);
	                }
	                var bubbleSizesRefers = _this._bubbleSizesRefers;
	                if (bubbleSizesRefers && bubbleSizesRefers.length > 0 && (force || _this.InterectWith(bubbleSizesRefers, axisRects))) {
	                    _this.UpdateBubbleSizesRefers(bubbleSizesRefers);
	                }
	                _this.Update2016ChartDataHelper();
	                _this.UpdateDataPoints();
	            },
	            ClearBarShapeInternal: function () {
	                this._barShape = keyword_null;
	            },
	            SegmentToRects: function (list, isRows) {
	                var result = [];
	                for (var i = 0; i < list.length; i++) {
	                    var item = list[i], index = item.Index, count = item.Count;
	                    var axis;
	                    if (isRows) {
	                        axis = new CellRect(index, 0, count, INT32_MAX_VALUE);
	                    } else {
	                        axis = new CellRect(0, index, INT32_MAX_VALUE, count);
	                    }
	                    result.push(axis);
	                }
	                return result;
	            },
	            InterectWith: function (refs, rects) {
	                if (isNullOrUndefined(refs) || isNullOrUndefined(rects)) {
	                    return false;
	                }
	                return refs.some(function (serRef) {
	                    return rects.some(function (changedRect) {
	                        return changedRect.IntersectsWith(serRef.GetSourceRange(0, 0));
	                    });
	                });
	            },
	            GetNameFormula: function (r1c1) {
	                if (r1c1 === keyword_undefined) {
	                    r1c1 = false;
	                }
	                if (!isNullOrUndefined(this._nameRefer)) {
	                    return this.GetFormulaString2([this._nameRefer], r1c1);
	                }
	                return "";
	            },
	            GetXValuesFormula: function (r1c1) {
	                if (r1c1 === keyword_undefined) {
	                    r1c1 = false;
	                }
	                if (!isNullOrUndefined(this._xValuesRefers)) {
	                    return this.GetFormulaString2(this._xValuesRefers, r1c1);
	                }
	                return "";
	            },
	            GetValuesFormula: function (r1c1) {
	                if (r1c1 === keyword_undefined) {
	                    r1c1 = false;
	                }
	                if (!isNullOrUndefined(this._valuesRefers)) {
	                    return this.GetFormulaString2(this._valuesRefers, r1c1);
	                }
	                return "";
	            },
	            GetBubbleSizesFormula: function (r1c1) {
	                if (r1c1 === keyword_undefined) {
	                    r1c1 = false;
	                }
	                if (!isNullOrUndefined(this._bubbleSizesRefers)) {
	                    return this.GetFormulaString2(this._bubbleSizesRefers, r1c1);
	                }
	                return "";
	            },
	            GetFormulaString2: function (references, r1c1) {
	                if (r1c1 === keyword_undefined) {
	                    r1c1 = false;
	                }
	                var name = this.Worksheet.name();
	                var formulaArray = [];
	                for (var i = 0, count = references.length; i < count; i++) {
	                    var ref = references[i];
	                    var formula = r1c1 ? ref.ToR1C1Text(name) : ref.ToA1Text(0, 0, name);
	                    formulaArray.push(formula);
	                }
	                return formulaArray.join(',');
	            },
	            HasRefers: function (type) {
	                var _this = this;
	                var result = false;
	                switch (type) {
	                    case 0 
	                    :
	                        result = !isNullOrUndefined(_this._nameRefer);
	                        break;
	                    case 1 
	                    :
	                        result = !isNullOrUndefined(_this._valuesRefers) && _this._valuesRefers.length > 0;
	                        break;
	                    case 2 
	                    :
	                        result = !isNullOrUndefined(_this._xValuesRefers) && _this._xValuesRefers.length > 0;
	                        break;
	                    case 3 
	                    :
	                        result = !isNullOrUndefined(_this._bubbleSizesRefers) && _this._bubbleSizesRefers.length > 0;
	                        break;
	                    default:
	                        break;
	                }
	                return result;
	            },
	            UpdateOrder: function (removedOrder) {
	                if (this._plotOrder > removedOrder) {
	                    this._plotOrder--;
	                }
	            },
	            SetNameInternal: function (name) {
	                this._name = name;
	                this.ClearNameFormulaInternal();
	            },
	            SetXValuesInternal: function (xValues) {
	                this.UpdateXValues(xValues);
	                this.ClearXValuesFormulaInternal();
	            },
	            SetValuesInternal: function (values) {
	                this.UpdateNumberValues(values);
	                this.ClearValuesFormulaInternal();
	            },
	            SetBubbleSizesInternal: function (sizes) {
	               
	                this._bubbleSizes = sizes;
	                this.ClearBubbleFormulaInternal();
	            },
	            SetPlotOrderInternal: function (value) {
	                this._plotOrder = value;
	            },
	            ResetOnOwnerChartTypeChanged: function (newChartType, axisGroup) {
	                var _this = this;
	                if (newChartType === keyword_undefined) {
	                    newChartType = keyword_null;
	                }
	                if (axisGroup === keyword_undefined) {
	                    axisGroup = keyword_null;
	                }
	                _this._innerChartType = !isNullOrUndefined(newChartType) ? newChartType : _this._serCollection.Parent.ChartType;
	                _this._ooSeries = keyword_null;
	                _this._axisGroup = !isNullOrUndefined(axisGroup) ? axisGroup : 0 ;
	                _this._cachedChartGroup = keyword_null;
	                _this.UpdateSettingsByChartType();
	            },
	            UpdateSecondPlotPoints: function () {
	                var _this = this;
	                var chartGroup = _this.Parent;
	                if (!isNullOrUndefined(chartGroup) &&
	                    chartGroup.SplitType === 3 ) {
	                    return;
	                }
	                var i, pointCount;
	                for (i = 0, pointCount = _this.Points.Count; i < pointCount; i++) {
	                    _this.Points.Get(i).SetSecondaryPlotInteral(false);
	                }
	                if (!isNullOrUndefined(chartGroup)) {
	                    var index, d, outObj;
	                    switch (chartGroup.SplitType) {
	                        case 0 
	                        :
	                            var startIndex = _this._values.length - chartGroup.SplitValue;
	                            if (startIndex < 0) {
	                                startIndex = 0;
	                            }
	                            for (index = startIndex; index < _this._values.length; index++) {
	                               
	                                _this.Points.Get(index).SetSecondaryPlotInteral(true);
	                            }
	                            break;
	                        case 1 
	                        :
	                            for (index = 0; index < _this._values.length; index++) {
	                                outObj = {value: keyword_null};
	                                TryToDouble(_this._values[index], outObj);
	                                d = outObj.value;
	                                if (!isNullOrUndefined(d) && d < chartGroup.SplitValue) {
	                                    _this.Points.Get(index).SetSecondaryPlotInteral(true);
	                                }
	                            }
	                            break;
	                        case 2 
	                        :
	                            var totalValue = 0.0;
	                            var dValues = [];
	                            i = 0;
	                            for (var values = _this._values, count = values.length; i < count; i++) {
	                                var value = values[i];
	                                outObj = {value: keyword_null};
	                                TryToDouble(value, outObj);
	                                d = outObj.value;
	                                if (!isNullOrUndefined(d)) {
	                                    dValues.push(d);
	                                    d = Math.abs(d);
	                                    totalValue += d;
	                                }
	                            }
	                            for (index = 0; index < dValues.length; index++) {
	                                d = dValues[index];
	                                var percentage = (d / totalValue) * 100;
	                                if (percentage < chartGroup.SplitValue) {
	                                    _this.Points.Get(index).SetSecondaryPlotInteral(true);
	                                }
	                            }
	                            break;
	                        case 3 
	                        :
	                            break;
	                        default:
	                            break;
	                    }
	                }
	            },
	            UpdateSettingsByChartType: function () {
	                var _this = this;
	                var innerChartType = _this._innerChartType;
	               
	                _this._format = _this.GetDefaultFormat();
	
	                _this._smooth = ChartUtility.IsSmoothLine(innerChartType);
	                _this._markerSize = ChartConstants.DefaultMarkerSize;
	                _this.UnDirty(32 );
	                _this._markerStyle = 4 ;
	                _this.UnDirty(64 );
	                _this._has3DEffect = false;
	                _this.UnDirty(4 );
	                switch (innerChartType) {
	                    case 0 
	                    :
	                        break;
	                    case 12 
	                    :
	                    case 13 
	                    :
	                    case 14 
	                    :
	                        break;
	                    case 15 
	                    :
	                    case 16 
	                    :
	                    case 17 
	                    :
	                    case 6 
	                    :
	                        break;
	                    case 18 
	                    :
	                    case 19 
	                    :
	                    case 20 
	                    :
	                        break;
	                    case 21 
	                    :
	                    case 22 
	                    :
	                    case 23 
	                    :
	                        break;
	                    case 9 
	                    :
	                    case 24 
	                    :
	                    case 25 
	                    :
	                        break;
	                    case 26 
	                    :
	                    case 27 
	                    :
	                    case 28 
	                    :
	                        _this._markerStyle = 0 ;
	                        break;
	                    case 5 
	                    :
	                        break;
	                    case 10 
	                    :
	                    case 29 
	                    :
	                    case 4 
	                    :
	                        _this._explosion = 0;
	                        break;
	                    case 30 
	                    :
	                    case 31 
	                    :
	                        _this._explosion = 25;
	                        break;
	                    case 32 
	                    :
	                        break;
	                    case 1 
	                    :
	                    case 33 
	                    :
	                    case 35 
	                    :
	                        _this._markerStyle = 0 ;
	                        break;
	                    case 34 
	                    :
	                    case 36 
	                    :
	                        _this._markerStyle = 4 ;
	                        break;
	                    case 8 
	                    :
	                    case 37 
	                    :
	                    case 38 
	                    :
	                    case 39 
	                    :
	                    case 40 
	                    :
	                    case 7 
	                    :
	                        break;
	                    case 3 
	                    :
	                        _this._explosion = 0;
	                        break;
	                    case 41 
	                    :
	                        _this._explosion = 25;
	                        break;
	                    case 2 
	                    :
	                    case 43 
	                    :
	                        break;
	                    case 42 
	                    :
	                        _this._markerStyle = 11 ;
	                        break;
	                    case 44 
	                    :
	                    case 45 
	                    :
	                    case 46 
	                    :
	                    case 47 
	                    :
	                        break;
	                    case 11 
	                    :
	                        break;
	                    case 48 
	                    :
	                        _this._has3DEffect = true;
	                        break;
	                    case 49 
	                    :
	                    case 50 
	                    :
	                    case 51 
	                    :
	                    case 52 
	                    :
	                        _this._markerStyle = 3 ;
	                        _this._markerSize = 3;
	                        break;
	                    case 57 
	                    :
	                    case 58 
	                    :
	                        _this.Update2016ChartDataHelper();
	                        _this.UpdateDataPoints();
	                        break;
	                    default:
	                        break;
	                }
	                if (_this.HasDataLabels) {
	                    _this._dataLabels.ResetByChartType();
	                }
	                _this._updateValuesMinMax();
	            },
	            GetFormulaString: function (r1c1) {
	                var _this = this;
	                if (r1c1 === keyword_undefined) {
	                    r1c1 = false;
	                }
	                var nameFormula = _this.GetNameFormula(r1c1);
	                var xValuesFormula = _this.GetXValuesFormula(r1c1);
	                var valuesFormula = _this.GetValuesFormula(r1c1);
	                var bubbleFormula = _this.GetBubbleSizesFormula(r1c1);
	                var plotOrder = _this.PlotOrder;
	                var namePara;
	                if (!nameFormula) {
	                    var name = _this.Name;
	                    namePara = isNullOrUndefined(name) ? "" : ("\"" + name + "\"");
	                } else {
	                    namePara = nameFormula;
	                }
	                var xValuesPara;
	                if (!xValuesFormula) {
	                    xValuesPara = _this.ToFormulaArray(_this._xValues, true);
	                } else {
	                    xValuesPara = _this._xValuesRefers.length > 1 ? "(" + xValuesFormula + ")" : xValuesFormula;
	                }
	                var valuesPara;
	                if (!valuesFormula) {
	                    valuesPara = _this.ToFormulaArray(_this._values, false);
	                } else {
	                    valuesPara = _this._valuesRefers.length > 1 ? "(" + valuesFormula + ")" : valuesFormula;
	                }
	                var indexPara = plotOrder.toString();
	                if (ChartUtility.IsBubbleChart(_this._innerChartType)) {
	                    var bubbleSizePara;
	                    if (!bubbleFormula) {
	                        bubbleSizePara = _this.ToFormulaArray(_this.BubbleSizes, false);
	                    } else {
	                        bubbleSizePara = _this._bubbleSizesRefers.length > 1 ? "(" + bubbleFormula + ")" : bubbleFormula;
	                    }
	                    return "SERIES(" + namePara + "," + xValuesPara + "," + valuesPara + "," + indexPara + "," + bubbleSizePara + ")";
	                }
	                return "SERIES(" + namePara + "," + xValuesPara + "," + valuesPara + "," + indexPara + ")";
	            },
	            ToFormulaArray: function (values, toString) {
	                if (isNullOrUndefined(values) || values.length === 0) {
	                    return "";
	                }
	                var temp = values;
	                var hasString = toString && temp.some(function (item) {
	                    return typeof item === 'string';
	                });
	                var result = [];
	                result.push("{");
	                if (!isNullOrUndefined(values) && values.length > 0) {
	                    for (var i = 0; i < values.length; i++) {
	                        if (i > 0) {
	                            result.push(",");
	                        }
	                        var value = values[i];
	                        if (isNullOrUndefined(value)) {
	                            result.push("#N/A");
	                        } else if (typeof value === 'string') {
	                            result.push("\"");
	                            result.push(value);
	                            result.push("\"");
	                        } else {
	                            if (hasString) {       
	                                result.push("\"");
	                                result.push(value.toString());
	                                result.push("\"");
	                            } else {
	                                result.push(value);
	                            }
	                        }
	                    }
	                }
	                result.push("}");
	                return result.join('');
	            },
	            UpdateFormulas: function (formula, r1c1) {
	                var _this = this;
	                if (r1c1 === keyword_undefined) {
	                    r1c1 = false;
	                }
	                var result = _this.Worksheet._ParseFormula(formula, 0, 0, r1c1);
	                var references = result.references;
	                if (references) {
	                    if (references[0]) {
	                        _this.SetNameRefer(references[0]);
	                    }
	                    if (references[1]) {
	                        _this.SetXValuesRefers([references[1]]);
	                    }
	                    if (references[2]) {
	                        _this.SetValuesRefers([references[2]]);
	                    }
	                    if (references[3]) {
	                        _this.SetBubbleSizesRefers([references[3]]);
	                    }
	                }
	            },
	            ClearNameFormula: function () {
	                this.ClearNameFormulaInternal();
	                this._name = keyword_null;
	            },
	            ClearNameFormulaInternal: function () {
	                this.UpdateNameReferCore(keyword_null);
	            },
	            ClearXValuesFormula: function () {
	                this.ClearXValuesFormulaInternal();
	                this.UpdateXValues(keyword_null);
	            },
	            ClearXValuesFormulaInternal: function () {
	                this.UpdateXValuesRefersCore(keyword_null);
	            },
	            ClearValuesFormula: function () {
	                this.ClearValuesFormulaInternal();
	                this.UpdateValues(keyword_null);
	            },
	            ClearValuesFormulaInternal: function () {
	                this.UpdateValuesRefersCore(keyword_null);
	            },
	            ClearBubbleFormula: function () {
	                this.ClearBubbleFormulaInternal();
	                this.UpdateBubbleSizes(keyword_null);
	            },
	            ClearBubbleFormulaInternal: function () {
	                this.UpdateBubbleSizesRefersCore(keyword_null);
	            },
	            UpdateNameFormula: function (formula, r1c1) {
	                if (r1c1 === keyword_undefined) {
	                    r1c1 = false;
	                }
	                var result = this.Worksheet._ParseFormula(formula, 0, 0, r1c1);
	                var refers = result.references;
	                var nameRef = refers ? refers[0] : keyword_null;
	                this.SetNameRefer(nameRef);
	            },
	            UpdateXValuesFormula: function (formula, r1c1) {
	                var _this = this;
	                if (r1c1 === keyword_undefined) {
	                    r1c1 = false;
	                }
	                var result = _this.Worksheet._ParseFormula(formula, 0, 0, r1c1);
	                var xValueRefers = result.references;
	                if (xValueRefers.length > 0) {
	                    _this.SetXValuesRefers(xValueRefers);
	                } else {
	                    _this.SetXValuesInternal(result.values);
	                }
	                _this.Update2016ChartDataHelper();
	                _this.UpdateDataPoints();
	            },
	            UpdateValuesFormula: function (formula, r1c1) {
	                var _this = this;
	                if (r1c1 === keyword_undefined) {
	                    r1c1 = false;
	                }
	                var result = _this.Worksheet._ParseFormula(formula, 0, 0, r1c1);
	                var valueRefers = result.references;
	                if (valueRefers.length > 0) {
	                    _this.SetValuesRefers(valueRefers);
	                } else {
	                    _this.SetValuesInternal(result.values);
	                }
	                _this.Update2016ChartDataHelper();
	                _this.UpdateDataPoints();
	            },
	            UpdateBubbleFormula: function (formula, r1c1) {
	                if (r1c1 === keyword_undefined) {
	                    r1c1 = false;
	                }
	                var result = this.Worksheet._ParseFormula(formula, 0, 0, r1c1);
	                var bubbleSizesRefers = result.references;
	                if (bubbleSizesRefers.length > 0) {
	                    this.SetBubbleSizesRefers(bubbleSizesRefers);
	                } else {
	                    this.SetBubbleSizesInternal(result.values);
	                }
	            },
	            RemoveEquals: function (formula) {
	                if (formula && formula[0] === "=") {
	                    formula = formula.substr(1);
	                }
	                return formula;
	            },
	            SetNameRefer: function (value) {
	                this.UpdateNameRefer(value);
	            },
	            SetXValuesRefers: function (value) {
	               
	                this.UpdateXValuesRefers(value);
	               
	                this.IsMultiLevelXValues = (!isNullOrUndefined(value) && value.length > 0 && value[0].RowCount > 1 && value[0].ColumnCount > 1);
	            },
	            SetValuesRefers: function (value) {
	                this.CheckRefers(value);
	                this.UpdateValuesRefers(value);
	            },
	            SetBubbleSizesRefers: function (value) {
	                this.CheckRefers(value);
	                this.UpdateBubbleSizesRefers(value);
	            },
	            UpdateNameRefer: function (value) {
	                this.UpdateNameReferCore(value);
	                this.UpdateNameByRefer(value);
	            },
	            UpdateXValuesRefers: function (refers) {
	                this.UpdateXValuesRefersCore(refers);
	                this.UpdateXValuesByRefers(refers);
	            },
	            UpdateValuesRefers: function (refers) {
	                this.UpdateValuesRefersCore(refers);
	                this.UpdateValuesByRefers(refers);
	            },
	            UpdateBubbleSizesRefers: function (refers) {
	                this.UpdateBubbleSizesRefersCore(refers);
	                this.UpdateSizessByRefers(refers);
	            },
	            UpdateNameReferCore: function (refer) {
	                this._nameRefer = refer;
	            },
	            UpdateXValuesRefersCore: function (refers) {
	                if (isNullOrUndefined(refers) || refers.length === 0) {
	                    this._xValuesRefers = [];
	                } else {
	                    this._xValuesRefers = refers;
	                }
	            },
	            UpdateValuesRefersCore: function (refers) {
	                if (isNullOrUndefined(refers) || refers.length === 0) {
	                    this._valuesRefers = [];
	                } else {
	                    this._valuesRefers = refers;
	                }
	            },
	            UpdateBubbleSizesRefersCore: function (refers) {
	                if (isNullOrUndefined(refers) || refers.length === 0) {
	                    this._bubbleSizesRefers = [];
	                } else {
	                    this._bubbleSizesRefers = refers;
	                }
	            },
	            GetValuesFromRefers: function (refers) {
	                var _this = this;
	                var values = [];
	               
	               
	                var visibleOnly = _this.PlotVisibleOnly;
	                var valueMatrixs = ChartUtility.GetValuesFromCellRefers(_this.Worksheet, refers, visibleOnly);
	                for (var _i = 0, valueMatrixs_1 = valueMatrixs; _i < valueMatrixs_1.length; _i++) {
	                    var valueMatrix = valueMatrixs_1[_i];
	                    if (!isNullOrUndefined(valueMatrix)) {
	                        for (var _a = 0, valueMatrix_1 = valueMatrix; _a < valueMatrix_1.length; _a++) {
	                            var valueArray = valueMatrix_1[_a];
	                            for (var _b = 0, valueArray_1 = valueArray; _b < valueArray_1.length; _b++) {
	                                var item = valueArray_1[_b];
	                                values.push(item);
	                            }
	                        }
	                    }
	                }
	                return values;
	            },
	            GetMultiLevelValuesFromRefers: function (refers) {
	                var _this = this;
	                var arrayValues = [];
	                var firstReferValues = ChartUtility.GetValuesFromCellRefer(_this.Worksheet, refers[0], _this.PlotVisibleOnly);
	                var rowCount = firstReferValues.length;
	                var colCount = firstReferValues[0].length;
	                var row, temp, col;
	                if (_this._serCollection.RowCol === 1 ) {
	                    for (row = 0; row < rowCount; row++) {
	                        temp = [];
	                        for (col = 0; col < colCount; col++) {
	                            temp.push(firstReferValues[row][col]);
	                        }
	                        [].push.apply(arrayValues, temp);
	                    }
	                } else {
	                    for (col = 0; col < colCount; col++) {
	                        temp = [];
	                        for (row = 0; row < rowCount; row++) {
	                            temp.push(firstReferValues[row][col]);
	                        }
	                        [].push.apply(arrayValues, temp);
	                    }
	                }
	                return arrayValues;
	            },
	            GetStylesFromRefers: function (refers) {
	                var styles = [];
	                var styleMatrixs = ChartUtility.GetStylesFromCellRefers(this.Worksheet, refers, this.PlotVisibleOnly);
	                for (var _i = 0, styleMatrixs_1 = styleMatrixs; _i < styleMatrixs_1.length; _i++) {
	                    var styleMatrix = styleMatrixs_1[_i];
	                    if (!isNullOrUndefined(styleMatrix)) {
	                        for (var _a = 0, styleMatrix_1 = styleMatrix; _a < styleMatrix_1.length; _a++) {
	                            var styleArray = styleMatrix_1[_a];
	                            for (var _b = 0, styleArray_1 = styleArray; _b < styleArray_1.length; _b++) {
	                                var item = styleArray_1[_b];
	                                styles.push(item);
	                            }
	                        }
	                    }
	                }
	                return styles;
	            },
	            UpdateNameByRefer: function (nameRef) {
	                var _this = this;
	                if (!isNullOrUndefined(nameRef) && !nameRef.IsError) {
	                    var sheet = _this.Worksheet._GetSheet(nameRef.WorksheetName);
	                    if (!isNullOrUndefined(sheet)) {
	                        var range = nameRef;
	                        _this._name = "";
	                        for (var row = range.Row; row <= range.LastRow; row++) {
	                            for (var col = range.Column; col <= range.LastColumn; col++) {
	                                _this._name += sheet._GetRange(row, col).Text;
	                            }
	                        }
	                    } else {
	                        _this._name = keyword_null;
	                    }
	                } else {
	                    _this._name = keyword_null;
	                }
	            },
	            UpdateXValuesByRefers: function (refers) {
	                var _this = this;
	                if (!isNullOrUndefined(refers) && refers.length > 0) {
	                    var values;
	                    if (_this.IsMultiLevelXValues) {
	                        values = _this.GetMultiLevelValuesFromRefers(refers);
	                    } else {
	                        values = _this.GetValuesFromRefers(refers);
	                    }
	                    _this.UpdateXValues(values);
	                } else {
	                    _this.UpdateXValues(keyword_null);
	                }
	            },
	            UpdateValuesByRefers: function (refers) {
	                if (!isNullOrUndefined(refers) && refers.length > 0) {
	                    var values = this.GetValuesFromRefers(refers);
	                    this.UpdateValues(values);
	                } else {
	                    this.UpdateValues([]);
	                }
	            },
	            UpdateSizessByRefers: function (refers) {
	                if (!isNullOrUndefined(refers) && refers.length > 0) {
	                    var values = this.GetValuesFromRefers(refers);
	                    this.UpdateBubbleSizes(values);
	                } else {
	                    this.UpdateBubbleSizes([]);
	                }
	            },
	            UpdateValues: function (values) {
	                var numbers = [];
	                ChartUtility.TryAllToNumbers(values, numbers);
	                this.UpdateNumberValues(numbers);
	            },
	            _updateValuesMinMax: function () {
	                var _this = this;
	                var dValues = _this._values;
	                var minMaxValues = Util.getMinMaxValues(dValues);
	                var chartType = _this._innerChartType;
	                if (!isNullOrUndefined(dValues) && dValues.length > 0 && ChartUtility.IsStackedChart(chartType)) {
	                    var allValues = _this._serCollection.GetValidSers(_this.AxisGroup).filter(function (ser) {
	                        return ser._innerChartType === chartType;
	                    }).map(function (ser) {
	                        return ser._values;
	                    });
	                    var max = 0, min = 0, sumArray = [];
	                    for (var i = 0; i < dValues.length; i++) {
	                        var negativeSum = 0, positiveSum = 0, sum = 0;
	                        for (var j = 0; j < allValues.length; j++) {
	                            var tempValue = allValues[j] && allValues[j][i];
	                            if (!isNullOrUndefined(tempValue)) {
	                                if (tempValue >= 0) {
	                                    positiveSum += tempValue;
	                                } else {
	                                    negativeSum += tempValue;
	                                }
	                                sum += tempValue;
	                            }
	                        }
	                        sumArray.push(sum);
	                        if (max < positiveSum) {
	                            max = positiveSum;
	                        }
	                        if (min > negativeSum) {
	                            min = negativeSum;
	                        }
	                    }
	                    if (max === 0) {
	                        max = Math.max.apply(null, sumArray);
	                    }
	                    if (min === 0) {
	                        min = Math.min.apply(null, sumArray);
	                    }
	
	                   
	                   
	                   
	                   
	                    if (allValues.length > 0) {
	                        var firstSeriesValues = allValues[0];
	                        if (firstSeriesValues.length > 0) {
	                            var firstSeriesMin = Math.min.apply(null, firstSeriesValues);
	                            var firstSeriesMax = Math.max.apply(null, firstSeriesValues);
	                            var retObj = AxisUtility.calcMinMax(min, max, false, this.Chart);
	                            if (retObj.Max < firstSeriesMax) {
	                                max = 0;
	                            }
	                            if (retObj.Min > firstSeriesMin) {
	                                min = 0;
	                            }
	                        }
	                    }
	                    minMaxValues.Max = max;
	                    minMaxValues.Min = min;
	                }
	                _this.ValuesMinMax = minMaxValues;
	            },
	            UpdateNumberValues: function (dValues) {
	                var _this = this;
	                _this._values = dValues;
	                _this._updateValuesMinMax();
	                if (ChartUtility.IsOfPieChart(_this.InnerChartType)) {
	                    _this.UpdateSecondPlotPoints();
	                }
	                if (dValues) {
	                    this._adjustAutoXValueMinMax(dValues.length);
	                }
	            },
	            _adjustAutoXValueMinMax: function (count) {
	                var _this = this, autoXValuesCount = _this._autoXValuesCount;
	                if (!isNullOrUndefined(autoXValuesCount)) {
	                    delete _this._autoXValuesCount;
	                   
	                    if (count !== autoXValuesCount) {
	                        _this.XValuesMinMax = {Min: 1, Max: count};
	                    }
	                }
	            },
	            UpdateBubbleSizes: function (values) {
	                var sizes = [];
	                for (var _i = 0, values_1 = values; _i < values_1.length; _i++) {
	                    var item = values_1[_i];
	                    var outObj = {value: keyword_null};
	                    if (TryToDouble(item, outObj)) {
	                        sizes.push(outObj.value);
	                    } else {
	                        sizes.push(1.0);
	                    }
	                }
	                this._bubbleSizes = sizes;
	            },
	            UpdateXValues: function (xValues) {
	                var values = [], isAllNumbers = false;
	                var _this = this;
	                if (isNullOrUndefined(xValues) || xValues.length === 0) {
	                    _this._xValues = keyword_null;
	                } else {
	                    _this._xValues = xValues;
	                    isAllNumbers = ChartUtility.TryAllToNumbers(xValues, values, true );
	                }
	
	                if (!isAllNumbers || values.length === 0 ) {
	                   
	                    values = _this.GetXValues();
	                }
	
	                _this.XValuesMinMax = Util.getMinMaxValues(values);
	                _this.AreAllXValuesDateTime = ChartUtility.AreValuesDateTime(_this.Worksheet, _this.XValuesRefers, _this.PlotVisibleOnly);
	            },
	            GetXValues: function () {
	                var dimension = ChartUtility.GetDimensioin(this._innerChartType);
	                var xValues = [];
	                if (dimension === 1) {
	                    [].push.apply(xValues, this.GetOneDimensionXValues());
	                } else {
	                    [].push.apply(xValues, this.GetMultiDimensionXValues());
	                }
	                return xValues;
	            },
	            XValuesIsAuto: function () {
	                var isAuto, xValues = this._xValues;
	                var dimension = ChartUtility.GetDimensioin(this._innerChartType);
	                if (dimension === 1) {
	                    isAuto = isNullOrUndefined(xValues) || xValues.length === 0;
	                } else if (this._innerChartType === 58  || this._innerChartType === 57 ) {
	                    isAuto = false;
	                } else {
	                    isAuto = isNullOrUndefined(xValues) || xValues.length === 0 || !ChartUtility.AreAllNumbers(xValues);
	                }
	                return isAuto;
	            },
	            GetOneDimensionXValues: function () {
	                var pointCount = this.PointsCount;
	                var adjustedValues = this.GetAdjustedOneDimensionXValues(pointCount);
	                if (adjustedValues.some(function (item) {
	                    return typeof item === 'string';
	                })) {
	                    adjustedValues = this.GetXValuesText(pointCount);
	                }
	                return adjustedValues;
	            },
	            GetAdjustedOneDimensionXValues: function (expectedCount) {
	                var xValues = this._xValues;
	                var temp = [];
	                if (isNullOrUndefined(xValues) || xValues.length === 0) {
	                    temp = this.AutoGenerateXValues();
	                } else if (xValues.length !== expectedCount) {
	                    temp = this.AdjustList(xValues, expectedCount);
	                } else {
	                    temp = xValues;
	                }
	                return temp;
	            },
	            GetMultiDimensionXValues: function () {
	                var _this = this;
	                var xValues = _this._xValues;
	                var temp = [];
	                if (isNullOrUndefined(xValues) || xValues.length === 0) {
	                    temp = _this.AutoGenerateXValues();
	                } else if (ChartUtility.AreAllNumbers(xValues)) {
	                    temp = xValues;
	                    var pointsCount = _this.PointsCount;
	                    if (temp.length > pointsCount) {
	                        temp = _this.AdjustList(temp, pointsCount);
	                    }
	                } else {
	                    temp = _this.AutoGenerateXValues();
	                }
	                return temp;
	            },
	            AdjustList: function (temp, expectedCount) {
	                var adjustedXValues = [];
	                [].push.apply(adjustedXValues, temp);
	                if (adjustedXValues.length > expectedCount) {
	                    adjustedXValues.splice(expectedCount, adjustedXValues.length - expectedCount);
	                } else {
	                    for (var i = 0; i <= expectedCount - adjustedXValues.length; i++) {
	                        adjustedXValues.push(keyword_null);
	                    }
	                }
	                return adjustedXValues;
	            },
	            AutoGenerateXValues: function () {
	                var valuesCount = this.PointsCount;
	                var autoValues = [];
	                for (var i = 0; i < valuesCount; i++) {
	                    autoValues.push(i + 1);
	                }
	               
	                this._autoXValuesCount = valuesCount;
	                return autoValues;
	            },
	            GetCatCount: function () {
	                var valuesCount = this.PointsCount;
	                var xValues = this._xValues;
	                if (valuesCount === 0 || isNullOrUndefined(xValues)) {
	                    return 0;
	                }
	                return parseInt(xValues.length / valuesCount);
	            },
	
	           
	           
	           
	           
	           
	           
	           
	           
	           
	           
	           
	           
	           
	           
	           
	           
	           
	           
	           
	           
	           
	           
	           
	           
	           
	           
	           
	           
	           
	           
	           
	           
	           
	           
	           
	           
	           
	           
	           
	           
	           
	           
	           
	            GetBubbleSizes: function () {
	                var _this = this;
	                var bubbleSizes = _this._bubbleSizes;
	                if (isNullOrUndefined(bubbleSizes) || bubbleSizes.length === 0) {
	                    var values = _this._values;
	                    if (isNullOrUndefined(values) || values.length === 0) {
	                        return keyword_null;
	                    }
	                    var sizes = [];
	                    for (var i = 0, count = values.length; i < count; i++) {
	                        if (_this._values[i] !== keyword_null) {
	                            sizes.push(1.0);
	                        } else {
	                            sizes.push(keyword_null);
	                        }
	                    }
	                    return sizes;
	                }
	                return this._bubbleSizes;
	            },
	            CheckRefers: function (refers) {
	                if (isNullOrUndefined(refers)) {
	                    throw new Error("Must provide at least one range or values!");
	                }
	                var sheetName = keyword_null;
	                for (var _i = 0, refers_1 = refers; _i < refers_1.length; _i++) {
	                    var rect = refers_1[_i];
	                    if (isNullOrUndefined(sheetName)) {
	                        sheetName = rect.WorksheetName;
	                    } else if (sheetName !== rect.WorksheetName) {
	                        throw new Error("Must be same worksheet!");
	                    }
	                    if (rect.RowCount > 1 && rect.ColumnCount > 1) {
	                        throw new Error("The Range must contain single row or column!");
	                    }
	                }
	            },
	            ProcessOfPieValues: function () {
	                var _this = this;
	                var values = _this._values;
	                if (isNullOrUndefined(values) || values.length === 0) {
	                    return values;
	                }
	                var secondPieTotalValue = 0.0;
	                for (var index = 0; index < values.length; index++) {
	                    var outObj = {value: keyword_null};
	                    if (_this.Points.Get(index).SecondaryPlot &&
	                        TryToDouble(values[index], outObj) &&
	                        !isNullOrUndefined(outObj.value)) {
	                        secondPieTotalValue += Math.abs(outObj.value);
	                    }
	                }
	                var result = values.slice(0);
	                result.push(secondPieTotalValue);
	                return result;
	            },
	            CreateFormat: function () {
	                var _this = this;
	                return new ChartFormat(_this.Chart, keyword_null, _this.AutoFillColorFormat.bind(_this), _this.AutoLineColorFormat.bind(_this));
	            },
	            GetDefaultFormat: function () {
	                var _this = this;
	                var format = _super.prototype.GetDefaultFormat.call(_this);
	                if (_this._innerChartType === 43) {
	                    format.Line.Weight = 0 ;
	                    format.Line.Color.ColorType = 1 ;
	                } else if (ChartUtility.IsRadarChart(_this._innerChartType)) {
	                    format.Line.Weight = 2 ;
	                    format.Line.Color.ColorType = 1 ;
	                } else if (ChartUtility.IsLineSeries(_this._innerChartType)) {
	                    format.Line.Weight = 2 ;
	                    format.Line.Color.ColorType = isStockChart(_this.SeriesCollection.Parent.ChartType) ? 0  : 1 ;
	                } else if (ChartUtility.IsScatterChart(_this._innerChartType)) {
	                    format.Line.Weight = 2 ;
	                    format.Line.Color.ColorType = 0 ;
	                } else if (ChartUtility.IsOfPieChart(_this._innerChartType)) {
	                    format.Line.Weight = 2 ;
	                    format.Line.Color.ObjectThemeColor = 0 ;
	                } else if (ChartUtility.IsPieOrDoughnutChart(this._innerChartType) || ChartUtility.IsSunburstOrTreemapChart(this._innerChartType)) {
	                    format.Line.Weight = 2;
	                    format.Line.Color.RGB = ARGBColor.FromArgbs(255, 255, 255, 255);
	                }
	               
	               
	                return format;
	            },
	            AutoFillColorFormat: function () {
	                if (ChartUtility.IsFillSeries(this._innerChartType)) {
	                    return this.GenerateAutoColor(this.AutoColorIndex);
	                }
	                return keyword_null;
	            },
	            AutoLineColorFormat: function () {
	                if (ChartUtility.IsLineSeries(this._innerChartType)) {
	                    return this.GenerateAutoColor(this.AutoColorIndex);
	                }
	                return keyword_null;
	            },
	            AutoMarkerColorFormat: function () {
	                if (ChartUtility.IsMarkerSeries(this._innerChartType)) {
	                    return this.GenerateAutoColor(this.AutoColorIndex);
	                }
	                return keyword_null;
	            },
	            AutoInvertColorFormat: function () {
	                var color = new ColorFormat(this.Chart);
	                color.RGB = ARGBColor.FromArgbs(255, 255, 255, 255);
	                return color;
	            },
	            GenerateAutoColor: function (index) {
	                if (ChartUtility.IsAnyPieChart(this.InnerChartType) && this.Parent.VaryByCategories) {
	                    return keyword_null;
	                }
	                var autoSerColor = new ColorFormat(this.Chart);
	                autoSerColor.ObjectThemeColor = ColorSchemeIndex["Accent" + (index % 6 + 1)];
	                return autoSerColor;
	            },
	            CreateMarkerFormat: function () {
	                var _this = this;
	                var markerFormat = new ChartFormat(_this.Chart, keyword_null, _this.AutoMarkerColorFormat.bind(_this), _this.AutoMarkerColorFormat.bind(_this));
	                markerFormat.Line.Weight = 0;
	                return markerFormat;
	            },
	            IsPictureFill: function () {
	                if (!isNullOrUndefined(this._format)) {
	                    var fillType = this._format.Fill.Type;
	                    return fillType === 5  || fillType === 3 ;
	                }
	                return false;
	            },
	            IsDirtyIncludingParent: function (includingParent) {
	                var _this = this;
	                if (includingParent === keyword_undefined) {
	                    includingParent = false;
	                }
	                if (!isNullOrUndefined(_this._format) && _this._format.IsDirtyIncludingParent(includingParent)) {
	                    return true;
	                }
	                if (!isNullOrUndefined(_this._markerFormat) && _this._markerFormat.IsDirtyIncludingParent(includingParent)) {
	                    return true;
	                }
	                return _super.prototype.IsDirtyIncludingParent.call(_this, includingParent);
	            },
	            AreAllCellsHidden: function (refers) {
	                for (var _i = 0, refers_2 = refers; _i < refers_2.length; _i++) {
	                    var item = refers_2[_i];
	                    if (item.IsError) {
	                        continue;
	                    }
	                    var worksheet = this.Worksheet._GetSheet(item.WorksheetName);
	                    if (isNullOrUndefined(worksheet)) {
	                        continue;
	                    }
	                    if (item.RowCount === 1 && worksheet._GetRange(item.Row, item.Column).EntireRow.Hidden) {
	                        return true;
	                    } else if (item.ColumnCount === 1 && worksheet._GetRange(item.Row, item.Column).EntireColumn.Hidden) {
	                        return true;
	                    }
	                    for (var col = item.Column; col < item.Column + item.ColumnCount; col++) {
	                        if (!worksheet._GetRange(item.Row, col).EntireRow.Hidden) {
	                            return false;
	                        }
	                    }
	                    for (var row = item.Row; row < item.Row + item.RowCount; row++) {
	                        if (!worksheet._GetRange(row, item.Column).EntireColumn.Hidden) {
	                            return false;
	                        }
	                    }
	                }
	                return false;
	            },
	            HasHiddenValues: function () {
	                return this.HasHiddenCells(this._xValuesRefers);
	            },
	            HasHiddenCells: function (refers) {
	                if (isNullOrUndefined(refers) || refers.length === 0) {
	                    return false;
	                }
	                for (var _i = 0, refers_3 = refers; _i < refers_3.length; _i++) {
	                    var refer = refers_3[_i];
	                    var sheet = this.Worksheet._GetSheet(refer.WorksheetName);
	                    if (refer.RowCount === 1) {
	                        for (var c = refer.Column; c <= refer.LastColumn; c++) {
	                            if (sheet._GetRange(refer.Row, c).EntireColumn.Hidden) {
	                                return true;
	                            }
	                        }
	                    } else if (refer.ColumnCount === 1) {
	                        for (var r = refer.Row; r <= refer.LastRow; r++) {
	                            if (sheet._GetRange(r, refer.Column).EntireRow.Hidden) {
	                                return true;
	                            }
	                        }
	                    }
	                }
	                return false;
	            },
	            GetRowColIndex: function (refers, pointIndex, outObj) {
	                outObj.sheet = keyword_null;
	                outObj.row = -1;
	                outObj.col = -1;
	                var i = 0;
	                for (var _i = 0, refers_4 = refers; _i < refers_4.length; _i++) {
	                    var refer = refers_4[_i];
	                    if (refer.IsError) {
	                        continue;
	                    }
	                    outObj.sheet = this.Worksheet._GetSheet(refer.WorksheetName);
	                    if (isNullOrUndefined(outObj.sheet)) {
	                        continue;
	                    }
	                    for (var r = refer.Row; r < refer.Row + refer.RowCount; r++) {
	                        for (var c = refer.Column; c < refer.Column + refer.ColumnCount; c++) {
	                            if (this._plotVisibleOnly) {
	                                var cell = outObj.sheet._GetRange(r, c);
	                                if (!(cell.EntireRow.Hidden || cell.EntireColumn.Hidden)) {
	                                    if (pointIndex === i) {
	                                        outObj.row = r;
	                                        outObj.col = c;
	                                        return;
	                                    }
	                                    i++;
	                                }
	                            } else {
	                                if (pointIndex === i) {
	                                    outObj.row = r;
	                                    outObj.col = c;
	                                    return;
	                                }
	                                i++;
	                            }
	                        }
	                    }
	                }
	            },
	            GetXValueText: function (pointIndex) {
	                var result = this.GetXValuesText(this.PointsCount, keyword_null);
	                if (pointIndex > result.length) {
	                    return "";
	                }
	                return result[pointIndex];
	            },
	            GetCatText: function (pointIndex) {
	                var pointsCount = this.PointsCount;
	                if (ChartUtility.IsOfPieChart(this._innerChartType) && pointIndex === pointsCount - 1) {
	                   
	                    return "";
	                }
	               
	               
	                return this.GetXValueText(pointIndex);
	               
	               
	               
	               
	               
	            },
	            GetPercentageValue: function (pointIndex) {
	                var value = this.Values[pointIndex];
	                var sum = 0;
	                for (var _i = 0, _a = this.Values; _i < _a.length; _i++) {
	                    var item = _a[_i];
	                    if (!isNullOrUndefined(item)) {
	                        sum += Math.abs(item);
	                    }
	                }
	                if (!isNullOrUndefined(value)) {
	                    return value / sum;
	                }
	                return 0;
	            },
	            GetXValuesText: function (expectedCount, format) {
	                if (format === keyword_undefined) {
	                    format = keyword_null;
	                }
	                if (this.IsMultiLevelXValues) {
	                    return this.GetMultiXValuesText(expectedCount, format);
	                }
	                return this.GetSingleXValuesText(expectedCount, format);
	            },
	            GetSingleXValuesText: function (expectedCount, format) {
	                var _this = this;
	                if (format === keyword_undefined) {
	                    format = keyword_null;
	                }
	                var result = [];
	                var styles = keyword_null;
	                if (!isNullOrUndefined(_this._xValuesRefers) && _this._xValuesRefers.length > 0) {
	                    styles = _this.GetStylesFromRefers(_this.XValuesRefers);
	                }
	                var xValues = _this.GetAdjustedOneDimensionXValues(expectedCount);
	                for (var i = 0; i < xValues.length; i++) {
	                    var formatCode = format;
	                    if (xValues[i] === keyword_null) {
	                        result.push("");
	                    } else if (typeof xValues[i] === 'string') {
	                        result.push(xValues[i]);
	                    } else {
	                        if (!formatCode && !isNullOrUndefined(styles) && styles.length > 0 && i < styles.length && styles[i] !== keyword_null) {
	                            formatCode = styles[i].FormatCode;
	                        }
	                        if (!formatCode) {
	                            result.push(xValues[i].toString());
	                        } else {
	                            var text = new GeneralFormatter(formatCode).format(xValues[i]);
	                            result.push(text);
	                        }
	                    }
	                }
	                return result;
	            },
	            GetMultiXValuesText: function (expectedCount, format, level) {
	                var _this = this;
	                if (format === keyword_undefined) {
	                    format = keyword_null;
	                }
	                if (level === keyword_undefined) {
	                    level = keyword_null;
	                }
	                var result = [];
	                var styleMatrixs = ChartUtility.GetStylesFromCellRefer(_this.Worksheet, _this.XValuesRefers[0], _this.PlotVisibleOnly);
	                var xValues = _this.GetAdjustedOneDimensionXValues(expectedCount);
	                for (var i = 0; i < xValues.length; i++) {
	                    var oneText = "";
	                    var text, formatCode, style, oneValue;
	                    if (xValues[i] instanceof Array) {
	                        var multiValues = xValues[i];
	                        if (_this._serCollection.RowCol === 1 ) {
	                            for (var col = 0; col < multiValues.length; col++) {
	                                if (!isNullOrUndefined(level) && level !== col) {
	                                    continue;
	                                }
	                                if (oneText) {
	                                    oneText += " ";
	                                }
	                                oneValue = multiValues[col];
	                                if (typeof oneValue === 'string') {
	                                    oneText += oneValue.toString();
	                                } else {
	                                    formatCode = format;
	                                    style = styleMatrixs.GetValue(i, col);
	                                    if (!isNullOrUndefined(style) && !formatCode) {
	                                        formatCode = style.FormatCode;
	                                    }
	                                    if (!formatCode) {
	                                        if (!isNullOrUndefined(oneValue)) {
	                                            oneText += oneValue.toString();
	                                        }
	                                    } else {
	                                        text = (new GeneralFormatter(formatCode).format(oneValue));
	                                        oneText += text;
	                                    }
	                                }
	                            }
	                        } else {
	                            for (var row = 0; row < multiValues.length; row++) {
	                                if (!isNullOrUndefined(level) && level !== row) {
	                                    continue;
	                                }
	                                if (oneText) {
	                                    oneText += " ";
	                                }
	                                oneValue = multiValues[row];
	                                if (typeof oneValue === 'string') {
	                                    oneText += oneValue.toString();
	                                } else {
	                                    formatCode = format;
	                                    style = styleMatrixs.GetValue(row, i);
	                                    if (!isNullOrUndefined(style) && !formatCode) {
	                                        formatCode = style.FormatCode;
	                                    }
	                                    if (!formatCode) {
	                                        if (!isNullOrUndefined(oneValue)) {
	                                            oneText += oneValue.toString();
	                                        }
	                                    } else {
	                                        text = new GeneralFormatter(formatCode).format(oneValue);
	                                        oneText += text;
	                                    }
	                                }
	                            }
	                        }
	                    }
	                    result.push(oneText);
	                }
	                return result;
	            },
	            GetPointValueText: function (index, format) {
	                var _this = this;
	                if (format === keyword_undefined) {
	                    format = keyword_null;
	                }
	                var pointsCount = _this.PointsCount;
	                if (ChartUtility.IsOfPieChart(_this.InnerChartType) && index === pointsCount - 1) {
	                    if (!format) {
	                        return _this.Values[index].toString();
	                    }
	                    return new GeneralFormatter(format).format(this.Values[index]);
	                }
	                if (_this.HasRefers(1 )) {
	                    var outObj = {sheet: keyword_null, row: -1, col: -1};
	                    _this.GetRowColIndex(_this.ValuesRefers, index, outObj);
	                    var sheet = outObj.sheet;
	                    var row = outObj.row, col = outObj.col;
	                    if (!isNullOrUndefined(sheet) && row !== -1 && col !== -1) {
	                        if (!format) {
	                            return sheet._GetCellText(row, col);
	                        }
	                        var cellValue = sheet._GetCellValue(row, col);
	                        return (new GeneralFormatter(format)).format(cellValue);
	                    }
	                } else {
	                    if (!format) {
	                        return this.Values[index].toString();
	                    }
	                    return new GeneralFormatter(format).format(this.Values[index]);
	                }
	                return keyword_null;
	            },
	            FromOOModel: function (t ) {
	                var _this = this;
	                _this._ooSeries = t;
	               
	                if (t.seriesType === 0 ) {
	                    _this.FromCT_BarSer(t );
	                } else if (t.seriesType === 1 ) {
	                    _this.FromCT_AreaSer(t );
	                } else if (t.seriesType === 2 ) {
	                    _this.FromCT_LineSer(t );
	                } else if (t.seriesType === 3 ) {
	                    _this.FromCT_PieSer(t );
	                } else if (t.seriesType === 4 ) {
	                    _this.FromCT_RadarSer(t );
	                } else if (t.seriesType === 5 ) {
	                    _this.FromCT_ScatterSer(t );
	                } else if (t.seriesType === 6 ) {
	                    _this.FromCT_BubbleSer(t );
	                } else if (t.seriesType === 7 ) {
	                    _this.FromCT_SurfaceSer(t );
	                } else if (t.layoutId === 16 ) {
	                    _this.FromCT_BoxWhisker(t );
	                } else if (t.layoutId === 17 ) {
	                    _this.FromCT_Funnel(t );
	                } else if (t.layoutId === 18 ) {
	                    _this.FromCT_ParetoLine(t );
	                } else if (t.layoutId === 19 ) {
	                    _this.FromCT_RegionMap(t );
	                } else if (t.layoutId === 20 ) {
	                    _this.FromCT_Sunburst(t );
	                } else if (t.layoutId === 21 ) {
	                    _this.FromCT_Treemap(t );
	                } else if (t.layoutId === 22 ) {
	                    _this.FromCT_Waterfall(t );
	                } else if (t.layoutId === 23 ) {
	                    _this.FromCT_ClusteredColumn(t );
	                }
	               
	
	            },
	            ToOOModel: function () {
	                var _this = this;
	                var ser = keyword_null;
	                switch (this._innerChartType) {
	                    case 0 
	                    :
	                        break;
	                    case 12 
	                    :
	                    case 13 
	                    :
	                    case 14 
	                    :
	                    case 15 
	                    :
	                    case 16 
	                    :
	                    case 17 
	                    :
	                    case 6 
	                    :
	                    case 18 
	                    :
	                    case 19 
	                    :
	                    case 20 
	                    :
	                    case 21 
	                    :
	                    case 22 
	                    :
	                    case 23 
	                    :
	                        ser = _this.ToCT_BarSer();
	                        break;
	                    case 9 
	                    :
	                    case 24 
	                    :
	                    case 25 
	                    :
	                    case 26 
	                    :
	                    case 27 
	                    :
	                    case 28 
	                    :
	                    case 5 
	                    :
	                        ser = _this.ToCT_LineSer();
	                        break;
	                    case 10 
	                    :
	                    case 29 
	                    :
	                    case 32 
	                    :
	                    case 30 
	                    :
	                    case 31 
	                    :
	                    case 4 
	                    :
	                        ser = _this.ToCT_PieSer();
	                        break;
	                    case 1 
	                    :
	                    case 33 
	                    :
	                    case 34 
	                    :
	                    case 35 
	                    :
	                    case 36 
	                    :
	                        ser = _this.ToCT_ScatterSer();
	                        break;
	                    case 8 
	                    :
	                    case 37 
	                    :
	                    case 38 
	                    :
	                    case 39 
	                    :
	                    case 40 
	                    :
	                    case 7 
	                    :
	                        ser = _this.ToCT_AreaSer();
	                        break;
	                    case 3 
	                    :
	                    case 41 
	                    :
	                        ser = _this.ToCT_PieSer();
	                        break;
	                    case 2 
	                    :
	                    case 42 
	                    :
	                    case 43 
	                    :
	                        ser = _this.ToCT_RadarSer();
	                        break;
	                    case 44 
	                    :
	                    case 45 
	                    :
	                    case 46 
	                    :
	                    case 47 
	                    :
	                        ser = _this.ToCT_SurfaceSer();
	                        break;
	                    case 11 
	                    :
	                    case 48 
	                    :
	                        ser = _this.ToCT_BubbleSer();
	                        break;
	                    case 49 
	                    :
	                        break;
	                    case 50 
	                    :
	                        break;
	                    case 51 
	                    :
	                        break;
	                    case 52 
	                    :
	                        break;
	                    case 53 
	                    :
	                        ser = _this.ToCT_BoxWhisker();
	                        break;
	                    case 54 
	                    :
	                        ser = _this.ToCT_Funnel();
	                        break;
	                    case 55 
	                    :
	                        ser = _this.ToCT_ParetoLine();
	                        break;
	                    case 56 
	                    :
	                        ser = _this.ToCT_RegionMap();
	                        break;
	                    case 57 
	                    :
	                        ser = _this.ToCT_Sunburst();
	                        break;
	                    case 58 
	                    :
	                        ser = _this.ToCT_Treemap();
	                        break;
	                    case 59 
	                    :
	                        ser = _this.ToCT_Waterfall();
	                        break;
	                    case 60 
	                    :
	                        ser = _this.ToCT_ClusteredColumn();
	                        break;
	                    default:
	                        break;
	                }
	                if (ser) {
	                    ChartUtility.removeEmptyArrayProperties(ser);
	                }
	                return ser;
	            },
	            ToCT_BarSer: function () {
	                var _this = this;
	                var ooSeries = _this._ooSeries;
	                var ooModel = ooSeries && ooSeries.seriesType === 0  ? ooSeries  : {
	                    seriesType: 0 
	                } ;
	                _this.ToCT_CatValSerBase(ooModel);
	                ooModel.shape = _this.BarShape;
	                ooModel.invertIfNegative = _this.InvertIfNegative;
	                ooModel.dPt = _this.ToDataPoints();
	                if (_this.IsPictureFill()) {
	                    ooModel.pictureOptions = _this.ToCT_PictureOptions();
	                } else {
	                    delete ooModel.pictureOptions;
	                }
	                return ooModel;
	            },
	            FromCT_BarSer: function (ooSer ) {
	                var _this = this;
	                _this.FromCT_CatValSerBase(ooSer);
	                if (!isNullOrUndefined(ooSer.shape)) {
	                    _this.BarShape = ooSer.shape;
	                }
	                if (!isNullOrUndefined(ooSer.invertIfNegative)) {
	                    _this.InvertIfNegative = ooSer.invertIfNegative;
	                }
	                _this._points.RestorePoints(ooSer.dPt);
	                _this.FromCT_PictureOptions(ooSer.pictureOptions);
	            },
	            ToCT_LineSer: function () {
	                var _this = this;
	                var ooModel = _this._ooSeries && _this._ooSeries.seriesType === 2  ? _this._ooSeries  : {
	                    seriesType: 2 ,
	                    dPt: [],
	                    trendline: [],
	                    errBars: []
	                } ;
	                _this.ToCT_CatValSerBase(ooModel);
	                ooModel.smooth = _this.Smooth;
	                ooModel.marker = _this.ToCT_Marker();
	                ooModel.dPt = _this.ToDataPoints();
	                return ooModel;
	            },
	            FromCT_LineSer: function (ooSer ) {
	                var _this = this;
	                _this.FromCT_CatValSerBase(ooSer);
	                if (!isNullOrUndefined(ooSer.smooth)) {
	                    _this.Smooth = ooSer.smooth;
	                }
	                _this.FromCT_Marker(ooSer.marker);
	                _this._points.RestorePoints(ooSer.dPt);
	            },
	            ToCT_PieSer: function () {
	                var _this = this;
	                var ooModel = _this._ooSeries && _this._ooSeries.seriesType === 3  ? _this._ooSeries  : {
	                    seriesType: 3 ,
	                    dPt: [],
	                    trendline: [],
	                    errBars: []
	                } ;
	                _this.ToCT_CatValSerBase(ooModel);
	                ooModel.explosion = _this.Explosion;
	                ooModel.dPt = _this.ToDataPoints();
	                return ooModel;
	            },
	            FromCT_PieSer: function (ooSer ) {
	                this.FromCT_CatValSerBase(ooSer);
	                if (!isNullOrUndefined(ooSer.explosion)) {
	                    this.Explosion = ooSer.explosion;
	                }
	                this._points.RestorePoints(ooSer.dPt);
	            },
	            ToCT_AreaSer: function () {
	                var _this = this;
	                var ooModel = _this._ooSeries && _this._ooSeries.seriesType === 1  ? _this._ooSeries  : {
	                    seriesType: 1 ,
	                    dPt: [],
	                    trendline: [],
	                    errBars: []
	                } ;
	                _this.ToCT_CatValSerBase(ooModel);
	                ooModel.marker = _this.ToCT_Marker();
	                if (_this.IsPictureFill()) {
	                    ooModel.pictureOptions = _this.ToCT_PictureOptions();
	                } else {
	                    ooModel.pictureOptions = keyword_null;
	                }
	                return ooModel;
	            },
	            FromCT_AreaSer: function (ooSer ) {
	                this.FromCT_CatValSerBase(ooSer);
	                this.FromCT_Marker(ooSer.marker);
	                this.FromCT_PictureOptions(ooSer.pictureOptions);
	            },
	            ToCT_RadarSer: function () {
	                var _this = this;
	                var ooModel = _this._ooSeries && _this._ooSeries.seriesType === 4  ? _this._ooSeries  : {
	                    seriesType: 4 ,
	                    dPt: [],
	                    trendline: [],
	                    errBars: []
	                } ;
	                _this.ToCT_CatValSerBase(ooModel);
	                ooModel.marker = _this.ToCT_Marker();
	                ooModel.dPt = _this.ToDataPoints();
	                return ooModel;
	            },
	            FromCT_RadarSer: function (ooSer ) {
	                this.FromCT_CatValSerBase(ooSer);
	                this.FromCT_Marker(ooSer.marker);
	                this._points.RestorePoints(ooSer.dPt);
	            },
	            ToCT_ScatterSer: function () {
	                var _this = this;
	                var ooModel = _this._ooSeries && _this._ooSeries.seriesType === 5  ? _this._ooSeries  : {
	                    seriesType: 5 ,
	                    dPt: [],
	                    trendline: [],
	                    errBars: []
	                } ;
	                _this.ToCT_XYSerBase(ooModel);
	                ooModel.smooth = _this.Smooth;
	                ooModel.marker = _this.ToCT_Marker();
	                ooModel.dPt = _this.ToDataPoints();
	                return ooModel;
	            },
	            FromCT_ScatterSer: function (ooSer ) {
	                var _this = this;
	               
	                _this.FromCT_XYSerBase(ooSer);
	                if (!isNullOrUndefined(ooSer.smooth)) {
	                    _this.Smooth = ooSer.smooth;
	                }
	                _this.FromCT_Marker(ooSer.marker);
	                _this._points.RestorePoints(ooSer.dPt);
	            },
	            ToCT_BubbleSer: function () {
	                var _this = this;
	                var ooModel = _this._ooSeries && this._ooSeries.seriesType === 5  ? _this._ooSeries  : {
	                    seriesType: 6 ,
	                    dPt: [],
	                    trendline: [],
	                    errBars: []
	                } ;
	                _this.ToCT_XYSerBase(ooModel);
	                ooModel.bubbleSize = _this.BubbleSizesToCT_NumDataSource();
	                ooModel.bubble3D = _this._innerChartType === 48  || _this.Has3DEffect;
	                ooModel.invertIfNegative = _this.InvertIfNegative;
	                ooModel.extLst = _this.ToCT_ExtensionList();
	                ooModel.dPt = _this.ToDataPoints();
	                return ooModel;
	            },
	            FromCT_BubbleSer: function (ooSer ) {
	                var _this = this;
	               
	                _this.FromCT_XYSerBase(ooSer);
	                _this.BubbleFromCT_NumDataSource(ooSer.bubbleSize);
	                if (ooSer.bubble3D) {
	                    _this.Has3DEffect = true;
	                }
	                _this._points.RestorePoints(ooSer.dPt);
	            },
	            ToCT_BoxWhisker: function () {
	                var ooSer = {};
	                this.ToCT_Cat2016ChartValSerBase(ooSer);
	                return ooSer;
	            },
	            FromCT_BoxWhisker: function (ooSer ) {
	                this.FromCT_Cat2016ChartValSerBase(ooSer);
	            },
	            ToCT_Funnel: function () {
	                var ooSer = {};
	                this.ToCT_Cat2016ChartValSerBase(ooSer);
	                return ooSer;
	            },
	            FromCT_Funnel: function (ooSer ) {
	                this.FromCT_Cat2016ChartValSerBase(ooSer);
	            },
	            ToCT_ParetoLine: function () {
	                var ooSer = {};
	                this.ToCT_Cat2016ChartValSerBase(ooSer);
	                return ooSer;
	            },
	            FromCT_ParetoLine: function (ooSer ) {
	                this.FromCT_Cat2016ChartValSerBase(ooSer);
	            },
	            ToCT_RegionMap: function () {
	                var ooSer = {};
	                this.ToCT_Cat2016ChartValSerBase(ooSer);
	                return ooSer;
	            },
	            FromCT_RegionMap: function (ooSer ) {
	                this.FromCT_Cat2016ChartValSerBase(ooSer);
	            },
	            ToCT_Sunburst: function () {
	                var ooSer = {};
	                this.ToCT_Cat2016ChartValSerBase(ooSer);
	                return ooSer;
	            },
	            FromCT_Sunburst: function (ooSer ) {
	                this.FromCT_Cat2016ChartValSerBase(ooSer);
	            },
	            ToCT_Treemap: function () {
	                var ooSer = {};
	                this.ToCT_Cat2016ChartValSerBase(ooSer);
	                return ooSer;
	            },
	            FromCT_Treemap: function (ooSer ) {
	                this.FromCT_Cat2016ChartValSerBase(ooSer);
	            },
	            ToCT_Waterfall: function () {
	                var ooSer = {};
	                this.ToCT_Cat2016ChartValSerBase(ooSer);
	                return ooSer;
	            },
	            FromCT_Waterfall: function (ooSer ) {
	                this.FromCT_Cat2016ChartValSerBase(ooSer);
	            },
	            ToCT_ClusteredColumn: function () {
	                var ooSer = {};
	                this.ToCT_Cat2016ChartValSerBase(ooSer);
	                return ooSer;
	            },
	            FromCT_ClusteredColumn: function (ooSer ) {
	                this.FromCT_Cat2016ChartValSerBase(ooSer);
	            },
	            ToCT_Cat2016ChartValSerBase: function (ctSer ) {
	                var _this = this;
	                if (_this._idx !== -1) {
	                    ctSer.dataId = {
	                        val: _this._idx
	                    };
	                }
	                ctSer.uniqueId = _this._uniqueId;
	                ctSer.formatIdx = _this._formatIdx;
	                ctSer.layoutId = ChartUtility.Get2016InnerChartTypeByChartType(_this.ChartType);
	                if (!isNullOrUndefined(_this._hidden)) {
	                    ctSer.hidden = _this._hidden;
	                }
	                if (!isNullOrUndefined(_this._ownerIdx)) {
	                    ctSer.ownerIdx = _this._ownerIdx;
	                }
	                ctSer.tx = _this.ToCT_Text();
	                ctSer.formulaObj = _this.ToCT_2016ChartFormulaObj();
	                ctSer.axisId = _this.ToST_AxisId();
	
	                ctSer.valueColors = _this.ToCT_ValueColors();
	                ctSer.valueColorPositions = _this.ToCT_ValueColorPositions();
	                ctSer.dataPt = _this._dataPoints ? _this._dataPoints.ToOOModel() : keyword_null;
	                ctSer.layoutPr = _this.ToCT_SeriesLayoutProperties();
	
	                ctSer.spPr = _this.ToShapeProperties();
	                ctSer.dataLabels = _this.ToCT_DLbls();
	                ctSer.trendline = _this.ToCT_Trendlines();
	                if (!isNullOrUndefined(_this._extLst) && _this._extLst.length > 0) {
	                    ctSer.extLst = {
	                        ext: _this._extLst
	                    };
	                }
	                if (!isNullOrUndefined(_this._layoutId)) {
	                    ctSer.layoutId = _this._layoutId;
	                }
	            },
	            FromCT_Cat2016ChartValSerBase: function (ctSer ) {
	                var _this = this;
	                if (!isNullOrUndefined(ctSer.dataId)) {
	                    _this._idx = ctSer.dataId.val;
	                } else {
	                    _this._idx = -1;
	                }
	                _this._plotOrder = -1;
	
	                _this._uniqueId = ctSer.uniqueId;
	                _this._formatIdx = ctSer.formatIdx;
	                if (!isNullOrUndefined(ctSer.hidden)) {
	                    _this._hidden = ctSer.hidden;
	                }
	                if (!isNullOrUndefined(ctSer.ownerIdx)) {
	                    _this._ownerIdx = ctSer.ownerIdx;
	                }
	                _this.FromCT_Text(ctSer.tx);
	                _this.FromCT_2016ChartFormulaObj(ctSer.formulaObj);
	                _this.FromST_AxisId(ctSer.axisId);
	
	                if (!isNullOrUndefined(ctSer.valueColors)) {
	                    _this.FromCT_ValueColors(ctSer.valueColors);
	                }
	                if (!isNullOrUndefined(ctSer.valueColorPositions)) {
	                    _this.FromCT_ValueColorPositions(ctSer.valueColorPositions);
	                }
	                if (!isNullOrUndefined(ctSer.defaultColors)) {
	                    _this.defaultColors = ctSer.defaultColors;
	                }
	                if (!isNullOrUndefined(ctSer.dataPt) && !isNullOrUndefined(_this._dataPoints)) {
	                    var colors = this.GetSunburstSeriesColor();
	                    _this._dataPoints._sunburstSeriesColor = colors;
	                    var count = this._chartData2016ModelCalHelper._treeData.length;
	                    for (var index = 0; index < count; index++) {
	                        var dataPoints = _this._dataPoints;
	                        var targetDataPoint = dataPoints._get(index);
	                        if (isNullOrUndefined(targetDataPoint)) {
	                            dataPoints._setDefaultDataPointByIndex(index);
	                            targetDataPoint = dataPoints._get(index);
	                        }
	                        dataPoints._serDataPointDefaultColor(index, targetDataPoint);
	                    }
	                   
	                    _this._dataPoints.FromOOModel(ctSer.dataPt);
	                }
	                if (!isNullOrUndefined(ctSer.layoutPr)) {
	                    _this.FromCT_SeriesLayoutProperties(ctSer.layoutPr);
	                }
	               
	                _this.FromShapeProperties(ctSer.spPr);
	                _this.FromCT_DLbls(ctSer.dataLabels);
	                _this.FromCT_Trendlines(ctSer.trendline);
	                if (!isNullOrUndefined(ctSer.extLst) && !isNullOrUndefined(ctSer.extLst.ext) && ctSer.extLst.ext.length > 0) {
	                    _this._extLst = ctSer.extLst.ext;
	                }
	                if (!isNullOrUndefined(ctSer.layoutId)) {
	                    _this._layoutId = ctSer.layoutId;
	                }
	
	            },
	            ToCT_CatValSerBase: function (ctSer ) {
	                var _this = this;
	                ctSer.idx = _this._idx !== -1 ? _this._idx : _this.SourceIndex;
	                if (_this._plotOrder === -1) {
	                    ctSer.order = _this.SourceIndex;
	                } else {
	                    ctSer.order = _this._plotOrder - 1;
	                }
	                ctSer.tx = _this.ToCT_SerTx();
	                ctSer.spPr = _this.ToShapeProperties();
	                ctSer.cat = _this.XValuesToCT_AxDataSource();
	                ctSer.val = _this.ValuesToCT_NumDataSource();
	                ctSer.dLbls = _this.ToCT_DLbls();
	                ctSer.trendline = _this.ToCT_Trendlines();
	                ctSer.extLst = _this.ToCT_ExtensionList();
	            },
	            FromCT_CatValSerBase: function (ctSer ) {
	                var _this = this;
	                if (!isNullOrUndefined(ctSer.idx)) {
	                    _this._idx = ctSer.idx;
	                } else {
	                    _this._idx = -1;
	                }
	                if (!isNullOrUndefined(ctSer.order)) {
	                    _this._plotOrder = ctSer.order + 1;
	                } else {
	                    _this._plotOrder = -1;
	                }
	                _this.FromCT_SerTx(ctSer.tx);
	                _this.FromShapeProperties(ctSer.spPr);
	                _this.FromCT_AxDataSource(ctSer.cat);
	                _this.FromCT_NumDataSource(ctSer.val);
	                _this.FromCT_DLbls(ctSer.dLbls);
	                _this.FromCT_Trendlines(ctSer.trendline);
	                _this.FromCT_ExtensionList(ctSer.extLst);
	            },
	            ToST_AxisId: function () {
	                var _this = this;
	                var axisId = _this._axisId, axisIDArray = [];
	                if (!isNullOrUndefined(axisId) && axisId.length > 0) {
	                    for (var i = 0; i < axisId.length; i++) {
	                        var axisValue = axisId[i];
	                        axisIDArray.push({val: axisValue});
	                    }
	                }
	                return axisIDArray;
	            },
	            FromST_AxisId: function (axisId) {
	                var _this = this;
	                _this._axisId = [];
	                if (!isNullOrUndefined(axisId) && axisId.length > 0) {
	                    for (var i = 0; i < axisId.length; i++) {
	                        var axisItem = axisId[i];
	                        _this._axisId.push(axisItem.val);
	                    }
	                }
	            },
	            ToCT_2016ChartFormulaObj: function () {
	                var _this = this, formulaObj = {};
	                var formulaStr = _this.GetXValuesFormula();
	                if (formulaStr) {
	                    formulaObj.strDim = formulaStr;
	                }
	                var formulaVal = _this.GetValuesFormula();
	                if (formulaVal) {
	                    formulaObj.numDim = formulaVal;
	                }
	                return formulaObj;
	            },
	            FromCT_2016ChartFormulaObj: function (formulaObj) {
	                var _this = this;
	                var formulaStr = formulaObj && formulaObj.strDim;
	                var formulaVal = formulaObj && formulaObj.numDim;
	                if (!IsNullOrEmpty(formulaStr)) {
	                    _this.UpdateXValuesFormula(formulaStr);
	                } else {
	                    _this.SetXValuesInternal(keyword_null);
	                }
	                if (!IsNullOrEmpty(formulaVal)) {
	                    _this.UpdateValuesFormula(formulaVal);
	                } else {
	                    _this.SetValuesInternal(keyword_null);
	                }
	            },
	            ToCT_ValueColors: function () {
	                var _this = this;
	                if (!isNullOrUndefined(_this._valueColors)) {
	                    var colors = _this._valueColors, ctColors = {};
	                    if (!isNullOrUndefined(colors._minColor)) {
	                        ctColors.minColor = colors._minColor;
	                    }
	                    if (!isNullOrUndefined(colors._midColor)) {
	                        ctColors.midColor = colors._midColor;
	                    }
	                    if (!isNullOrUndefined(colors._maxColor)) {
	                        ctColors.maxColor = colors._maxColor;
	                    }
	                    return ctColors;
	                }
	            },
	            FromCT_ValueColors: function (ctColors ) {
	                if (!isNullOrUndefined(ctColors)) {
	                    var colors = {}, _this = this;
	                    if (!isNullOrUndefined(ctColors.minColor)) {
	                        colors._minColor = ctColors.minColor;
	                    }
	                    if (!isNullOrUndefined(ctColors.midColor)) {
	                        colors._midColor = ctColors.midColor;
	                    }
	                    if (!isNullOrUndefined(ctColors.maxColor)) {
	                        colors._maxColor = ctColors.maxColor;
	                    }
	                    _this._valueColors = colors;
	                }
	            },
	            ToCT_ValueColorPositions: function () {
	                var _this = this;
	                if (!isNullOrUndefined(_this._colorPositions)) {
	                    var colorPositions = _this._colorPositions, ctColorPositions = {};
	                    if (!isNullOrUndefined(colorPositions._min)) {
	                        ctColorPositions.min = colorPositions._min;
	                    }
	                    if (!isNullOrUndefined(colorPositions._mid)) {
	                        ctColorPositions.mid = colorPositions._mid;
	                    }
	                    if (!isNullOrUndefined(colorPositions._max)) {
	                        ctColorPositions.max = colorPositions._max;
	                    }
	                    return ctColorPositions;
	                }
	            },
	            FromCT_ValueColorPositions: function (ctColorPositions) {
	                if (!isNullOrUndefined(ctColorPositions)) {
	                    var colorPositions = {}, _this = this;
	                    if (!isNullOrUndefined(ctColorPositions.min)) {
	                        colorPositions._min = ctColorPositions.min;
	                    }
	                    if (!isNullOrUndefined(ctColorPositions.mid)) {
	                        colorPositions._mid = ctColorPositions.mid;
	                    }
	                    if (!isNullOrUndefined(ctColorPositions.max)) {
	                        colorPositions._max = ctColorPositions.max;
	                    }
	                    _this._colorPositions = colorPositions;
	                }
	            },
	            ToCT_SeriesLayoutProperties: function () {
	                var _this = this, layoutProperties = _this._layoutProperties;
	                if (!isNullOrUndefined(layoutProperties)) {
	                    var ctLayoutProperties = {};
	                    if (!isNullOrUndefined(layoutProperties._parentLabelLayout)) {
	                        ctLayoutProperties.parentLabelLayout = {val: layoutProperties._parentLabelLayout};
	                    }
	                    if (!isNullOrUndefined(layoutProperties._regionLabelLayout)) {
	                        ctLayoutProperties.regionLabelLayout = {val: layoutProperties._regionLabelLayout};
	                    }
	                    if (!isNullOrUndefined(layoutProperties._visibility)) {
	                        var visibility = layoutProperties._visibility;
	                        if (!isNullOrUndefined(visibility._connectorLines)) {
	                            ctLayoutProperties.connectorLines = visibility._connectorLines;
	                        }
	                        if (!isNullOrUndefined(visibility._meanLine)) {
	                            ctLayoutProperties.meanLine = visibility._meanLine;
	                        }
	                        if (!isNullOrUndefined(visibility._meanMarker)) {
	                            ctLayoutProperties.meanMarker = visibility._meanMarker;
	                        }
	                        if (!isNullOrUndefined(visibility._nonoutliers)) {
	                            ctLayoutProperties.nonoutliers = visibility._nonoutliers;
	                        }
	                        if (!isNullOrUndefined(visibility._outliers)) {
	                            ctLayoutProperties.outliers = visibility._outliers;
	                        }
	                    }
	                    if (!isNullOrUndefined(layoutProperties._aggregation)) {
	                        ctLayoutProperties.aggregation = layoutProperties._aggregation;
	                    } else if (!isNullOrUndefined(layoutProperties._binning)) {
	                        ctLayoutProperties.binning = _this.ToCT_Binning(layoutProperties._binning);
	                    }
	
	                    if (!isNullOrUndefined(layoutProperties._geography)) {
	                        ctLayoutProperties.geography = _this.ToCT_Geography(layoutProperties._geography);
	                    }
	                    if (!isNullOrUndefined(layoutProperties._statisticsQuartileMethod)) {
	                        ctLayoutProperties.statistics = {quartileMethod: layoutProperties._statisticsQuartileMethod};
	                    }
	                    if (!isNullOrUndefined(layoutProperties._subtotalsIdx) && layoutProperties._subtotalsIdx.length > 0) {
	                        ctLayoutProperties.subtotals = {idx: layoutProperties._subtotalsIdx};
	                    }
	                    if (!isNullOrUndefined(layoutProperties._extLst) && layoutProperties._extLst.length > 0) {
	                        ctLayoutProperties.extLst = {ext: layoutProperties._extLst};
	                    }
	                }
	            },
	            FromCT_SeriesLayoutProperties: function (ctLayoutProperties ) {
	                if (!isNullOrUndefined(ctLayoutProperties)) {
	                    var _this = this, layoutPro = {};
	                    if (!isNullOrUndefined(ctLayoutProperties.parentLabelLayout) && !isNullOrUndefined(ctLayoutProperties.parentLabelLayout.val)) {
	                        layoutPro._parentLabelLayout = ctLayoutProperties.parentLabelLayout.val;
	                    }
	                    if (!isNullOrUndefined(ctLayoutProperties.regionLabelLayout) && !isNullOrUndefined(ctLayoutProperties.regionLabelLayout.val)) {
	                        layoutPro._regionLabelLayout = ctLayoutProperties.regionLabelLayout.val;
	                    }
	                    if (!isNullOrUndefined(ctLayoutProperties.visibility)) {
	                        var visibility = ctLayoutProperties.visibility;
	                        if (!isNullOrUndefined(visibility.connectorLines)) {
	                            layoutPro._connectorLines = visibility.connectorLines;
	                        }
	                        if (!isNullOrUndefined(visibility.meanLine)) {
	                            layoutPro._meanLine = visibility.meanLine;
	                        }
	                        if (!isNullOrUndefined(visibility.meanMarker)) {
	                            layoutPro._meanMarker = visibility.meanMarker;
	                        }
	                        if (!isNullOrUndefined(visibility.nonoutliers)) {
	                            layoutPro._nonoutliers = visibility.nonoutliers;
	                        }
	                        if (!isNullOrUndefined(visibility.outliers)) {
	                            layoutPro._outliers = visibility.outliers;
	                        }
	                    }
	                    if (!isNullOrUndefined(ctLayoutProperties.aggregation)) {
	                        layoutPro._aggregation = ctLayoutProperties.aggregation;
	                    } else if (!isNullOrUndefined(ctLayoutProperties.binning)) {
	                        layoutPro._binning = _this.FromCT_Binning(ctLayoutProperties.binning);
	                    }
	
	                    if (!isNullOrUndefined(ctLayoutProperties.geography)) {
	                        layoutPro._geography = _this.FromCT_Geography(ctLayoutProperties.geography);
	                    }
	                    if (!isNullOrUndefined(ctLayoutProperties.statistics) && !isNullOrUndefined(ctLayoutProperties.statistics.quartileMethod)) {
	                        layoutPro._statisticsQuartileMethod = ctLayoutProperties.statistics.quartileMethod;
	                    }
	                    if (!isNullOrUndefined(ctLayoutProperties.subtotals) && !isNullOrUndefined(ctLayoutProperties.subtotals.idx) && ctLayoutProperties.subtotals.idx.length > 0) {
	                        layoutPro._subtotalsIdx = ctLayoutProperties.subtotals.idx;
	                    }
	                    if (!isNullOrUndefined(ctLayoutProperties.extLst) && !isNullOrUndefined(ctLayoutProperties.extLst.ext) && ctLayoutProperties.extLst.ext.length > 0) {
	                        layoutPro._extLst = ctLayoutProperties.extLst.ext;
	                    }
	                    _this._layoutProperties = layoutPro;
	                }
	            },
	            ToCT_Binning: function () {
	                var binning = this._binning || {}, ctBinning = {};
	                if (!isNullOrUndefined(binning._binSize)) {
	                    ctBinning.binSize = binning._binSize;
	                } else if (!isNullOrUndefined(binning._binCount)) {
	                    ctBinning.binCount = binning._binCount;
	                }
	                if (!isNullOrUndefined(binning._intervalClosed)) {
	                    ctBinning.intervalClosed = binning._intervalClosed;
	                }
	                if (!isNullOrUndefined(binning._underflow)) {
	                    ctBinning.underflow = binning._underflow;
	                }
	                if (!isNullOrUndefined(binning._overflow)) {
	                    ctBinning.overflow = binning._overflow;
	                }
	                return ctBinning;
	            },
	            FromCT_Binning: function (ctBinning ) {
	                var binning = {};
	                if (!isNullOrUndefined(ctBinning.binSize)) {
	                    binning._binSize = ctBinning.binSize;
	                } else if (!isNullOrUndefined(ctBinning.binCount)) {
	                    binning._binCount = ctBinning.binCount;
	                }
	                if (!isNullOrUndefined(ctBinning.intervalClosed)) {
	                    binning._intervalClosed = ctBinning.intervalClosed;
	                }
	                if (!isNullOrUndefined(ctBinning.underflow)) {
	                    binning._underflow = ctBinning.underflow;
	                }
	                if (!isNullOrUndefined(ctBinning.overflow)) {
	                    binning._overflow = ctBinning.overflow;
	                }
	                return binning;
	            },
	
	            ToCT_Geography: function () {
	                var geography = this._geogarphy || {};
	                var ctGeography = {};
	                if (!isNullOrUndefined(geography._geoCache)) {
	                    ctGeography.geoCache = geography._geoCache;
	                }
	                if (!isNullOrUndefined(geography._projectionType) ) {
	                    ctGeography.projectionType = geography._projectionType;
	                }
	                if (!isNullOrUndefined(geography._viewedRegionType) ) {
	                    ctGeography.viewedRegionType = geography._viewedRegionType;
	                }
	                if (!isNullOrUndefined(geography._cultureLanguage)) {
	                    ctGeography.cultureLanguage = geography._cultureLanguage;
	                }
	                if (!isNullOrUndefined(geography._cultureRegion)) {
	                    ctGeography.cultureRegion = geography._cultureRegion;
	                }
	                if (!isNullOrUndefined(geography._attribution)) {
	                    ctGeography.attribution = geography._attribution;
	                }
	                return ctGeography;
	
	            },
	            FromCT_Geography: function (ctGeography ) {
	                var geography = {};
	                if (!isNullOrUndefined(ctGeography.geoCache)) {
	                    geography._geoCache = ctGeography.geoCache;
	                }
	                if (!isNullOrUndefined(ctGeography.projectionType) ) {
	                    geography._projectionType = ctGeography.projectionType;
	                }
	                if (!isNullOrUndefined(ctGeography.viewedRegionType) ) {
	                    geography._viewedRegionType = ctGeography.viewedRegionType;
	                }
	                if (!isNullOrUndefined(ctGeography.cultureLanguage)) {
	                    geography._cultureLanguage = ctGeography.cultureLanguage;
	                }
	                if (!isNullOrUndefined(ctGeography.cultureRegion)) {
	                    geography._cultureRegion = ctGeography.cultureRegion;
	                }
	                if (!isNullOrUndefined(ctGeography.attribution)) {
	                    geography._attribution = ctGeography.attribution;
	                }
	                return geography;
	            },
	
	            ToCT_XYSerBase: function (ctSer ) {
	                var _this = this;
	                ctSer.idx = _this._idx !== -1 ? _this._idx : _this.SourceIndex;
	                ctSer.order = _this.PlotOrder - 1;
	                ctSer.tx = _this.ToCT_SerTx();
	                ctSer.spPr = _this.ToShapeProperties();
	                ctSer.xVal = _this.XValuesToCT_AxDataSource();
	                ctSer.yVal = _this.ValuesToCT_NumDataSource();
	                var dLbls = _this.ToCT_DLbls();
	                if (dLbls) {
	                    ctSer.dLbls = dLbls;
	                }
	                ctSer.trendline = _this.ToCT_Trendlines();
	                ctSer.extLst = _this.ToCT_ExtensionList();
	            },
	            FromCT_XYSerBase: function (ctSer ) {
	                var _this = this;
	                if (!isNullOrUndefined(ctSer.idx)) {
	                    _this._idx = ctSer.idx;
	                } else {
	                    _this._idx = -1;
	                }
	                if (!isNullOrUndefined(ctSer.order)) {
	                    _this._plotOrder = ctSer.order + 1;
	                } else {
	                    _this._plotOrder = -1;
	                }
	                _this.FromCT_SerTx(ctSer.tx);
	                _this.FromShapeProperties(ctSer.spPr);
	                _this.FromCT_NumDataSource(ctSer.yVal);
	                _this.FromCT_AxDataSource(ctSer.xVal);
	                _this.FromCT_DLbls(ctSer.dLbls);
	                _this.FromCT_Trendlines(ctSer.trendline);
	                _this.FromCT_ExtensionList(ctSer.extLst);
	            },
	            ToCT_DLbls: function () {
	                var _this = this;
	                if ((_this.HasDataLabels || _this._points.HasDataLabel) && !isNullOrUndefined(_this._dataLabels)) {
	                    return _this._dataLabels.ToOOModel();
	                }
	                return keyword_null;
	            },
	            ToCT_Trendlines: function () {
	                var lines = [];
	                if (this._trendlines.Count > 0) {
	                    for (var _i = 0, _a = this._trendlines.GetLines(); _i < _a.length; _i++) {
	                        var item = _a[_i];
	                        lines.push(item.ToOOModel());
	                    }
	                }
	                return lines;
	            },
	            FromCT_DLbls: function (dLbls ) {
	                if (!isNullOrUndefined(dLbls)) {
	                    this.HasDataLabels = true;
	                    this._dataLabels.FromOOModel(dLbls);
	                } else {
	                    this.HasDataLabels = false;
	                }
	            },
	            FromCT_Trendlines: function (ooLines) {
	                if (!isNullOrUndefined(ooLines)) {
	                    this._trendlines.RestoreTrendlines(ooLines);
	                } else {
	                    this._trendlines = new Trendlines(this);
	                }
	            },
	            FromCT_AxDataSource: function (axDataSource ) {
	                var _this = this;
	                if (isNullOrUndefined(axDataSource)) {
	                    _this.SetXValuesInternal(keyword_null);
	                    return;
	                }
	                var result = _this.GetAxDataSourceFormulaOrValues(axDataSource);
	                var xValuesFormula = result.formula;
	                var xValues = result.values;
	                if (!IsNullOrEmpty(xValuesFormula)) {
	                    _this.UpdateXValuesFormula(xValuesFormula);
	                } else if (!isNullOrUndefined(xValues)) {
	                    _this.SetXValuesInternal(xValues);
	                } else {
	                    _this.SetXValuesInternal(keyword_null);
	                }
	            },
	            FromCT_NumDataSource: function (numDataSource ) {
	                var _this = this;
	                if (isNullOrUndefined(numDataSource)) {
	                    _this.SetValuesInternal(keyword_null);
	                    return;
	                }
	                var result = _this.GetNumDataSourceFormulaOrValues(numDataSource);
	                var valuesFormula = result.formula;
	                var values = result.values;
	                if (!IsNullOrEmpty(valuesFormula)) {
	                    _this.UpdateValuesFormula(valuesFormula);
	                } else if (!isNullOrUndefined(values)) {
	                    _this.SetValuesInternal(values);
	                } else {
	                    _this.SetValuesInternal(keyword_null);
	                }
	            },
	            BubbleFromCT_NumDataSource: function (numDataSource ) {
	                var _this = this;
	                if (isNullOrUndefined(numDataSource)) {
	                    _this.SetBubbleSizesInternal(keyword_null);
	                    return;
	                }
	                var result = _this.GetNumDataSourceFormulaOrValues(numDataSource);
	                var valuesFormula = result.formula;
	                var values = result.values;
	                if (!IsNullOrEmpty(valuesFormula)) {
	                    _this.UpdateBubbleFormula(valuesFormula);
	                } else if (!isNullOrUndefined(values)) {
	                    _this.SetBubbleSizesInternal(values);
	                } else {
	                    _this.SetBubbleSizesInternal(keyword_null);
	                }
	            },
	            ToCT_SurfaceSer: function () {
	                var ctSer = {
	                    seriesType: 7 
	                } ;
	                this.ToCT_CatValSerBase(ctSer);
	                return ctSer;
	            },
	            FromCT_SurfaceSer: function (ooser ) {
	                this.FromCT_CatValSerBase(ooser);
	            },
	            ToCT_PictureOptions: function () {
	                var picOptions = {} ;
	                picOptions.pictureFormat = this.PictureType;
	                if (this.PictureType === 2 ) {
	                    picOptions.pictureStackUnit = this.PictureUnit;
	                }
	                return picOptions;
	            },
	            FromCT_PictureOptions: function (picOptions ) {
	                var _this = this;
	                if (isNullOrUndefined(picOptions)) {
	                    _this._pictureType = 0 ;
	                    _this.UnDirty(128 );
	                    _this._pictureUnit = 1;
	                    _this.UnDirty(256 );
	                    return;
	                }
	                if (!isNullOrUndefined(picOptions.pictureFormat)) {
	                    _this.PictureType = picOptions.pictureFormat;
	                }
	                if (!isNullOrUndefined(picOptions.pictureStackUnit)) {
	                    _this.PictureUnit = picOptions.pictureStackUnit;
	                }
	            },
	            ToCT_Text: function () {
	                var _this = this;
	                if (IsNullOrEmpty(_this._name) && isNullOrUndefined(_this._nameRefer)) {
	                    return keyword_null;
	                }
	                if (_this._isTextData) {
	                    var txData = {};
	                    if (!isNullOrUndefined(_this._nameRefer)) {
	                        txData.f = {
	                            formula: _this.GetNameFormula()
	                        };
	                    } else if (!isNullOrUndefined(_this._name)) {
	                        txData.v = {
	                            value: _this.Name
	                        };
	                    }
	                    return {txData: txData};
	                } else if (_this._isRichText) {
	                    return _this._chartText.ToOOModel();
	                }
	            },
	            FromCT_Text: function (ooserTx ) {
	                if (isNullOrUndefined(ooserTx)) {
	                    this.SetNameInternal(keyword_null);
	                    return;
	                }
	                var _this = this;
	                var nameF = keyword_null;
	                var name = keyword_null;
	                if (ooserTx.txData) {
	                    var txData = ooserTx.txData;
	                    if (!isNullOrUndefined(txData.f) && !IsNullOrEmpty(txData.f.formula)) {
	                        nameF = txData.f.formula;
	                    } else if (!isNullOrUndefined(txData.v) && !IsNullOrEmpty(txData.v.value)) {
	                        name = txData.v.value;
	                    }
	                    if (!IsNullOrEmpty(nameF)) {
	                        this.UpdateNameFormula(nameF);
	                    } else if (!isNullOrUndefined(name)) {
	                        this.SetNameInternal(name);
	                    }
	                    _this._isTextData = true;
	                } else if (ooserTx.rich) {
	                    _this._chartText = new DrawingText();
	                    _this._chartText.FromOOModel(ooserTx);
	                    this.SetNameInternal(_this._chartText.Text);
	                    _this._isRichText = true;
	                }//TODO need check
	            },
	
	            ToCT_SerTx: function () {
	                var _this = this;
	                if (IsNullOrEmpty(_this._name) && isNullOrUndefined(_this._nameRefer)) {
	                    return keyword_null;
	                }
	                var tx = {} ;
	                if (isNullOrUndefined(_this._nameRefer)) {
	                    tx.v = _this.Name;
	                } else {
	                    tx.strRef = {
	                        
	                        f: _this.GetNameFormula()
	                    };
	                }
	                return tx;
	            },
	            FromCT_SerTx: function (ooserTx ) {
	                if (isNullOrUndefined(ooserTx)) {
	                    this.SetNameInternal(keyword_null);
	                    return;
	                }
	                var nameF = keyword_null;
	                var name = keyword_null;
	                if (!isNullOrUndefined(ooserTx.strRef) && !IsNullOrEmpty(ooserTx.strRef.f)) {
	                    nameF = ooserTx.strRef.f;
	                } else if (!IsNullOrEmpty(ooserTx.v)) {
	                    name = ooserTx.v;
	                }
	                if (!IsNullOrEmpty(nameF)) {
	                    this.UpdateNameFormula(nameF);
	                } else if (!isNullOrUndefined(name)) {
	                    this.SetNameInternal(name);
	                }
	            },
	            ToCT_Marker: function () {
	                var _this = this;
	               
	               
	               
	               
	               
	                var marker = {} ;
	                var dirty = false;
	                if (_this.MarkerStyle !== 11 ) {
	                    marker.symbol = _this.MarkerStyle;
	                    dirty = true;
	                }
	                if (_this.MarkerStyle !== 11  &&
	                    _this.MarkerStyle !== 4 ) {
	                    marker.size = _this.MarkerSize;
	                    dirty = true;
	                }
	                if (!isNullOrUndefined(_this._markerFormat)) {
	                    marker.spPr = _this._markerFormat.ToOOModel();
	                    dirty = true;
	                }
	                if (dirty) {
	                    return marker;
	                }
	                return keyword_null;
	            },
	            FromCT_Marker: function (ooMarker ) {
	                var _this = this;
	                if (isNullOrUndefined(ooMarker)) {
	                    _this.MarkerStyle = 11 ;
	                    _this.ClearMarkerFormat();
	                    return;
	                }
	                if (!isNullOrUndefined(ooMarker.spPr)) {
	                    if (isNullOrUndefined(_this._markerFormat)) {
	                        _this._markerFormat = _this.CreateMarkerFormat();
	                    }
	                    _this._markerFormat.FromOOModel(ooMarker.spPr);
	                } else {
	                    _this.ClearMarkerFormat();
	                }
	                if (!isNullOrUndefined(ooMarker.size)) {
	                    _this.MarkerSize = ooMarker.size;
	                }
	                if (!isNullOrUndefined(ooMarker.symbol)) {
	                    _this.MarkerStyle = ooMarker.symbol;
	                } else {
	                    _this.MarkerStyle = 11 ;
	                }
	            },
	            ClearMarkerFormat: function () {
	                var _this = this;
	                if (!isNullOrUndefined(_this._markerFormat)) {
	                    _this._markerFormat.SetParentForChildren(keyword_null);
	                    _this._markerFormat.ParentStateful = keyword_null;
	                    _this._markerFormat = keyword_null;
	                }
	            },
	            XValuesToCT_AxDataSource: function () {
	                if (this.IsMultiLevelXValues) {
	                    return this.ToMultipleCT_AxDataSource();
	                }
	                return this.ToSingleCT_AxDataSource();
	            },
	            ToSingleCT_AxDataSource: function () {
	                var _this = this;
	                var catSource = {} ;
	                var xValuesFormula = _this.GetXValuesFormula();
	                var strRef;
	                if (isNullOrUndefined(_this._xValues) || _this._xValues.length === 0) {
	                    if (IsNullOrEmpty(xValuesFormula)) {
	                        return keyword_null;
	                    }
	                    strRef = {} ;
	                    strRef.f = xValuesFormula;
	                    catSource.strRef = strRef;
	                    return catSource;
	
	                }
	                var numbers = [];
	                var xValues = _this.XValues;
	                if (ChartUtility.TryAllToNumbers(xValues, numbers)) {
	                    var numData = _this.ToCT_NumberData(xValuesFormula, _this.XValuesRefers, numbers);
	                    if (IsNullOrEmpty(xValuesFormula)) {
	                        catSource.numLit = numData;
	                    } else {
	                        catSource.numRef = {
	                            f: xValuesFormula,
	                            numCache: {
	                                formatCode: numData.formatCode 
	                            }
	                        } ;
	                    }
	                } else {
	                    var strData = _this.ToCT_StrData(xValues);
	                    if (IsNullOrEmpty(xValuesFormula)) {
	                        catSource.strLit = strData;
	                    } else {
	                        catSource.strRef = {
	                            f: xValuesFormula
	                        } ;
	                    }
	                }
	                return catSource;
	            },
	            ToMultipleCT_AxDataSource: function () {
	                var _this = this;
	                if (isNullOrUndefined(_this._xValues) || _this._xValues.length === 0) {
	                    return keyword_null;
	                }
	                var catSource = {} ;
	                var xValuesFormula = _this.GetXValuesFormula();
	                var strData = _this.ToCT_MultiLvlStrData();
	                var strRef = {} ;
	                strRef.multiLvlStrCache = strData;
	                strRef.f = xValuesFormula;
	                catSource.multiLvlStrRef = strRef;
	                return catSource;
	            },
	            GetAxDataSourceFormulaOrValues: function (axDataSource ) {
	                var formula = keyword_null;
	                var values = keyword_null;
	                if (!isNullOrUndefined(axDataSource.numRef) || !isNullOrUndefined(axDataSource.numLit)) {
	                    if (!isNullOrUndefined(axDataSource.numRef) && !IsNullOrEmpty(axDataSource.numRef.f)) {
	                        formula = axDataSource.numRef.f;
	                    } else {
	                        var numData = axDataSource.numLit;
	                        if (!isNullOrUndefined(numData) && !isNullOrUndefined(numData.pt)) {
	                            values = [];
	                            for (var _i = 0, _a = numData.pt; _i < _a.length; _i++) {
	                                var item = _a[_i];
	                                var numObj = {value: keyword_null};
	                                TryToDouble(item, numObj, true);
	                                values.push(numObj.value);
	                            }
	                        }
	                    }
	                } else if (!isNullOrUndefined(axDataSource.strRef) || !isNullOrUndefined(axDataSource.strLit)) {
	                    if (!isNullOrUndefined(axDataSource.strRef) && !IsNullOrEmpty(axDataSource.strRef.f)) {
	                        formula = axDataSource.strRef.f;
	                    } else {
	                        var strData = axDataSource.strLit;
	                        if (!isNullOrUndefined(strData) && !isNullOrUndefined(strData.pt)) {
	                            values = strData.pt.slice();
	                        }
	                    }
	                } else if (!isNullOrUndefined(axDataSource.multiLvlStrRef)) {
	                    formula = axDataSource.multiLvlStrRef.f;
	                }
	                return {
	                    formula: formula,
	                    values: values
	                };
	            },
	            ValuesToCT_NumDataSource: function () {
	                var _this = this;
	                var numDataSource = {} ;
	               
	               
	                var valuesFormula = _this.GetValuesFormula();
	                if (IsNullOrEmpty(valuesFormula) && (isNullOrUndefined(_this._values) || _this._values.length === 0)) {
	                    return keyword_null;
	                }
	                var numData = _this.ToCT_NumberData(valuesFormula, _this.ValuesRefers, _this.Values);
	                if (IsNullOrEmpty(valuesFormula)) {
	                    numDataSource.numLit = numData;
	                } else {
	                    numDataSource.numRef = {
	                        f: valuesFormula,
	                        numCache: {
	                            formatCode: numData.formatCode 
	                        }
	                    } ;
	                }
	               
	                return numDataSource;
	            },
	            GetNumDataSourceFormulaOrValues: function (numDataSource ) {
	                var formula = keyword_null;
	                var values = keyword_null;
	                if (!isNullOrUndefined(numDataSource.numRef) || !isNullOrUndefined(numDataSource.numLit)) {
	                    if (!isNullOrUndefined(numDataSource.numRef) && !IsNullOrEmpty(numDataSource.numRef.f)) {
	                        formula = numDataSource.numRef.f;
	                    } else {
	                        var numData = numDataSource.numLit;
	                        if (!isNullOrUndefined(numData) && !isNullOrUndefined(numData.pt)) {
	                            values = [];
	                            for (var _i = 0, _a = numData.pt; _i < _a.length; _i++) {
	                                var item = _a[_i];
	                                var dObj = {value: keyword_null};
	                                if (TryToDouble(item, dObj, true)) {
	                                    values.push(dObj.value);
	                                } else if (CalcError.parse(item) instanceof CalcError) {   
	                                    values.push(null);
	                                } else {   
	                                    values.push(0);
	                                }
	                            }
	                        }
	                    }
	                }
	                return {
	                    formula: formula,
	                    values: values
	                };
	            },
	            BubbleSizesToCT_NumDataSource: function () {
	                var _this = this;
	                var numDataSource = {} ;
	                var bubbleSizesFormula = _this.GetBubbleSizesFormula();
	                var numData = _this.ToCT_NumberData(bubbleSizesFormula, _this.BubbleSizesRefers, _this.BubbleSizes);
	                if (IsNullOrEmpty(bubbleSizesFormula)) {
	                    numDataSource.numLit = numData;
	                } else {
	                    numDataSource.numRef = {
	                        f: bubbleSizesFormula,
	                        numCache: {
	                            formatCode: numData.formatCode 
	                        }
	                    } ;
	                }
	                return numDataSource;
	            },
	            ToCT_NumberData: function (formula, refers, values) {
	                if (isNullOrUndefined(values) || values.length === 0) {
	                   
	                    if (!IsNullOrEmpty(formula)) {
	                        var errorRefNumData = {} ;
	                        errorRefNumData.formatCode = "General";
	                        errorRefNumData.ptCount = 1;
	                        errorRefNumData.pt = ["1"];
	                       
	                       
	                       
	                       
	                        return errorRefNumData;
	                    }
	                    return keyword_null;
	                }
	                var numData = {} ;
	                var defaultFormatCode = "General";
	                var pt = [], formatCodes = [];
	                numData.formatCode = defaultFormatCode;
	                var count = numData.ptCount = values.length;
	                for (var i = 0; i < count; i++) {
	                    var value;
	                    if (values[i] !== keyword_null && !isNaN(values[i])) {
	                        var d = values[i];
	                        if (UnitHelper.IsNegativeInfinity(d)) {
	                            value = Number.MIN_VALUE.toLocaleString();
	                        } else if (UnitHelper.IsPositiveInfinity(d)) {
	                            value = Number.MAX_VALUE.toLocaleString();
	                        } else {
	                            value = d.toLocaleString();
	                        }
	                    } else {
	                        value = "#N/A";
	                    }
	                    pt.push(value);
	                }
	                if (!isNullOrUndefined(refers) && refers.length > 0) {
	                    var cellRefers = [];
	                    for (var _i = 0, refers_5 = refers; _i < refers_5.length; _i++) {
	                        var item = refers_5[_i];
	                        cellRefers.push(new CellRect(item.Row, item.Column, item.RowCount, item.ColumnCount));
	                    }
	                    var ptIndex = 0;
	                    var styles = this.GetStylesFromRefers(refers);
	                    for (var _a = 0, styles_1 = styles; _a < styles_1.length && ptIndex < count; _a++) {
	                        var style = styles_1[_a];
	                        if (!isNullOrUndefined(style)) {
	                            var formatCode = style.FormatCode;
	                            if (formatCode && formatCode !== defaultFormatCode) {
	                                formatCodes[ptIndex] = formatCode;
	                            }
	                        }
	                        ptIndex++;
	                    }
	                }
	                if (pt.length > 0) {
	                    numData.pt = pt;
	                    if (formatCodes.length > 0) {
	                        if (isAllArrayItemSame(formatCodes)) {
	                           
	                            numData.formatCode = formatCodes[0];
	                        } else {
	                            numData.formatCodes = formatCodes;
	                        }
	                    }
	                }
	                return numData;
	            },
	            ToCT_StrData: function (xValues) {
	               
	               
	               
	               
	               
	               
	               
	               
	               
	                var ptValues = xValues.map(function (val) {
	                    return !isNullOrUndefined(val) && val.toLocaleString ? val.toLocaleString() : val;
	                });
	                return {
	                    ptCount: xValues.length,
	                    pt: ptValues
	                };
	            },
	            ToCT_MultiLvlStrData: function () {
	                var _this = this;
	                var multiStrData = {lvl: []} ;
	                multiStrData.ptCount = _this.PointsCount;
	                var lvlCount = _this._serCollection.RowCol === 1  ? _this._xValuesRefers[0].ColumnCount : _this._xValuesRefers[0].RowCount;
	                for (var lvl = 0; lvl < lvlCount; lvl++) {
	                   
	                    var textValues = _this.GetMultiXValuesText(_this.PointsCount, keyword_null, lvl);
	                   
	                   
	                   
	                   
	                   
	                   
	                    multiStrData.lvl.push({pt: textValues});
	                }
	                return multiStrData;
	            },
	            ToCT_ExtensionList: function () {
	                var _this = this;
	                var extList = {ext: []} ;
	                if (!isNullOrUndefined(_this._invertColor) && _this._invertColor.IsDirtyIncludingParent()) {
	                    extList.ext.push(_this.ToCT_InvertSolidFillFmt());
	                }
	                if (_this.HasDataLabels && !isNullOrUndefined(_this._dataLabels.ChartText.TextRefer)) {
	                    var dataLabelsRangeExt = {uri: "{6F2FDCE9-48DA-4B69-8628-5D25D57E5C99}"} ;
	                    dataLabelsRangeExt.dataObject = {
	                        extDataType: 1 
	                    } ;
	                    dataLabelsRangeExt.dataObject.f = _this._dataLabels.ChartText.Formula;
	                    extList.ext.push(dataLabelsRangeExt);
	                }
	                return extList;
	            },
	            ToCT_InvertSolidFillFmt: function () {
	                var serExt = {uri: "{6F2FDCE9-48DA-4B69-8628-5D25D57E5C99}"} ;
	               
	                var invertColorFmt = {
	                    extDataType: 0 
	                };
	                invertColorFmt.spPr = {};
	                var fill = this._invertColor.ToOOModel();
	                if (fill.colorFillType === 0 ) {
	                    invertColorFmt.spPr.solidFill = fill;
	                    delete fill.colorFillType;
	                } else if (fill.colorFillType === 5 ) {
	                    invertColorFmt.spPr.noFill = true;
	                }
	               
	               
	               
	                invertColorFmt.spPr.ln = {};
	                invertColorFmt.spPr.ln.noFill = true;
	               
	               
	
	               
	                serExt.dataObject = invertColorFmt;
	                return serExt;
	            },
	            FromCT_ExtensionList: function (extLst ) {
	                var _this = this;
	                if (_this.HasDataLabels) {
	                    _this._dataLabels.ShowDataLabelsRange = false;
	                }
	                if (isNullOrUndefined(extLst) || isNullOrUndefined(extLst.ext)) {
	                    return;
	                }
	                for (var _i = 0, _a = extLst.ext; _i < _a.length; _i++) {
	                    var item = _a[_i];
	                    if (item && item.dataObject) {
	                        var extDataType = item.dataObject.extDataType;
	                        if (extDataType === 0 ) {
	                            var ooInvertFill = item.dataObject ;
	                            if (!isNullOrUndefined(ooInvertFill.spPr)) {
	                                _this._invertColor.FromOOModel(ooInvertFill.spPr.solidFill);
	                            }
	                        } else if (extDataType === 1 ) {
	                            var ooLabelsRange = item.dataObject ;
	                            _this._dataLabels.ChartText.Formula = ooLabelsRange.f;
	                            _this._dataLabels.ShowDataLabelsRange = true;
	                        }
	                    }
	                }
	            },
	            ToDataPoints: function (forceToAll) {
	                if (forceToAll === keyword_undefined) {
	                    forceToAll = false;
	                }
	                var result = [];
	                var pointsObj = this.Points.GetPoints();
	                for (var key in pointsObj) {    
	                    var point = pointsObj[key];
	                    if (forceToAll || this.NeedRenderPoint(point)) {
	                        result.push(point.ToOOModel());
	                    }
	                }
	                return result;
	            },
	            NeedRenderPoint: function (p) {
	                return p.IsDirtyIncludingParent();
	            },
	            GetParentGroup: function () {
	                var chartGroup = this._cachedChartGroup;
	                if (!chartGroup) {
	                    chartGroup = this._cachedChartGroup = this.Chart.FindChartGroup(this._innerChartType, this._axisGroup);
	                }
	                return chartGroup;
	            }
	        });
	        return Series;
	    }(StatefulChartElementBase));
	    Charts.Series = Series;
	    Charts.ReferType = {
	        Name: 0,
	        Values: 1,
	        XValues: 2,
	        BubbleSzies: 3
	    };
	    var SeriesCollection = (function () {
	       
	        
	        function SeriesCollection(chart) {
	            var _this = this;
	            _this._dataOrientation = keyword_null;
	            _this._series = [];
	            _this._primaryValuesMinMax = {Min: 0, Max: 1};
	            _this._secondaryValuesMinMax = {Min: 0, Max: 1};
	            _this._primaryXValuesMinMax = {Min: 0, Max: 1};
	            _this._secondaryXValuesMinMax = {Min: 0, Max: 1};
	            _this._chart = chart;
	        }
	
	        var prototype = SeriesCollection.prototype;
	       
	        
	        prototype.get = function (index) {
	            if (arguments.length === 0) {
	                return this.GetSers().map(function (seriesItem, itemIndex) {
	                    return getSeriesProperties(seriesItem, itemIndex === 0, false, true);
	                });
	            }
	            var targetSeries = this.Get(index);
	            if (targetSeries) {
	                return getSeriesProperties(targetSeries, index === 0, false, true);
	            }
	            return keyword_null;
	        };
	       
	        
	        prototype.set = function (index, seriesItem) {
	            var _this = this, targetSeries = _this.Get(index);
	            if (targetSeries && seriesItem) {
	                var changedSeries = getSeriesProperties(targetSeries, index === 0);
	                _this._backup({type: 'set', index: index, series: changedSeries});
	
	                var chartView = _this.ChartView, sheet = chartView.sheet();
	                applySeriesProperties(targetSeries, seriesItem, sheet);
	                _this._chart.HandleElementChanged(4 , _this, ChartConstants.Collection);
	                sheet._updateRegisteredFormula(chartView);
	                chartView._updateChartModel();
	            }
	        };
	       
	        
	        prototype.add = function (seriesItem) {
	            this._addInternal(keyword_null, seriesItem);
	        };
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	        
	        prototype.dataPoints = function () {
	           
	           
	            var series0 = this.Get(0);
	            if (series0 && series0.dataPoints()) {
	                return series0.dataPoints();
	            }
	        };
	        prototype._addInternal = function (index, seriesItem, isUndo) {
	            if (seriesItem) {
	                var _this = this;
	                if (!isUndo && isStockChart(_this._chart.ChartType)) {
	                    throw new Error("Stock chart not support add / remove series.");
	                }
	                var chartView = this.ChartView, sheet = chartView.sheet();
	                var needAddedSeriesItems = seriesItem.length && seriesItem[0] ? seriesItem : [seriesItem];
	                var count = needAddedSeriesItems.length;
	                if (count > 0) {
	                    var seriesLengthBeforeAdd = _this._series.length;
	                    _this._backup({type: 'add', index: seriesLengthBeforeAdd, count: count});
	
	                   
	                    var insertPosition = seriesLengthBeforeAdd;
	                    if (!isNullOrUndefined(index)) {
	                        insertPosition = index;
	                    }
	                    for (var i = 0; i < count; i++) {
	                        var newSeries = new Series(_this);
	                        _this._series.splice(insertPosition, 0, newSeries);
	                        applySeriesProperties(newSeries, needAddedSeriesItems[i], sheet);
	                        insertPosition++;
	                    }
	
	                    _this._chart.HandleElementChanged(4 , _this, ChartConstants.Collection);
	                }
	                sheet._updateRegisteredFormula(chartView);
	                chartView._updateChartModel();
	            }
	        };
	       
	        
	        prototype.remove = function (index) {
	            var _this = this;
	            if (isStockChart(_this._chart.ChartType)) {
	                throw new Error("Stock chart not support add / remove series.");
	            }
	            var targetSeries = _this.Get(index);
	            if (targetSeries) {
	                var changedSeries = getSeriesProperties(targetSeries, index === 0, true);
	                _this._backup({type: 'remove', index: index, series: changedSeries});
	
	                var chartView = _this.ChartView, sheet = chartView.sheet();
	                sheet._updateRegisteredFormula(chartView);
	                targetSeries.Delete();
	                chartView._updateChartModel();
	            }
	        };
	        prototype._deleteCachedSeries = function (seriesIndexes) {
	           
	            if (seriesIndexes && seriesIndexes.length > 0) {
	                seriesIndexes.sort(function (a, b) {
	                    return a - b;
	                });
	               
	               
	               
	                while (seriesIndexes.length) {
	                    var tempIndex = seriesIndexes.pop();
	                    this.Get(tempIndex).Delete();
	                }
	            }
	        };
	        prototype._backupSeriesByFormulaChange = function (cachedSeries) {
	            this._backup({type: 'updateSeriesInCalc', series: cachedSeries});
	        };
	        prototype._backup = function (value) {
	            this.ChartView._backup('series', value);
	        };
	        prototype._restore = function (value) {
	            if (!value || !value.type) {
	                return;
	            }
	            var _this = this;
	            var type = value.type, index = value.index,
	                count = value.count, series = value.series;
	            if (type === 'add') {
	                for (var i = 0; i < count; i++) {
	                    _this.remove(index);
	                }
	            } else if (type === 'remove') {
	                this._addInternal(index, series, true);
	            } else if (type === 'set') {
	                _this.set(index, series);
	            } else if (type === 'updateSeriesInCalc') {
	                _this._series.length = 0;
	                _this._addInternal(0, series, true);
	            }
	           
	           
	           
	        };
	        defineProperty(prototype, "Parent", {
	           
	           
	           
	            get: function () {
	                return this._chart;
	            }
	        });
	        defineProperty(prototype, "ChartView", {
	           
	           
	           
	            get: function () {
	                return this._chart.Parent;
	            }
	        });
	        defineProperty(prototype, "Count", {
	           
	           
	            get: function () {
	                return this.GetValidSers().length;
	            }
	        });
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	        prototype.Add = function (source, rowCol, seriesLabels, categoryLabels, dataLabelsInfo, chartTypes) {
	            this.AddInteral(source, rowCol, seriesLabels, categoryLabels, dataLabelsInfo, chartTypes);
	            var chart = this._chart;
	            if (chart) {
	                var chartView = chart.Parent;
	                if (chartView) {
	                    var sheet = chartView.sheet();
	                    sheet._updateRegisteredFormula(chartView);
	                    chartView._updateChartModel(true);
	                }
	            }
	        };
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	        prototype.Extend = function (source, rowCol, categoryLabels) {
	            var strips = this.Splits(source, rowCol);
	            if (strips.length === 0) {
	                return;
	            }
	            var stripIndex = categoryLabels ? 1 : 0;
	            var extendedCatRect = strips[0];
	            var extendedRect;
	            for (var i = 0, series = this._series, count = series.length; i < count; i++) {
	                var ser = series[i];
	               
	                if (!isNullOrUndefined(ser.ValuesRefers) && ser.ValuesRefers.length > 0 && stripIndex < strips.length) {
	                    var valueRefers = ser.ValuesRefers.slice(0);
	                    extendedRect = strips[stripIndex++];
	                    valueRefers.push(ChartUtility.CreateReference(source.Worksheet.name(), extendedRect.Row, extendedRect.Column, extendedRect.RowCount, extendedRect.ColumnCount));
	                   
	                    ser.UpdateValuesFormula(ChartUtility.ReferencesToFormula(valueRefers));
	                }
	                if (ChartUtility.IsBubbleChart(ser.InnerChartType) &&
	                    (!isNullOrUndefined(ser.BubbleSizesRefers) && ser.BubbleSizesRefers.length > 0 && stripIndex < strips.length)) {
	                    var bubbleSizeRefers = ser.BubbleSizesRefers.slice(0);
	                    extendedRect = strips[stripIndex++];
	                    bubbleSizeRefers.push(ChartUtility.CreateReference(source.Worksheet.name(), extendedRect.Row, extendedRect.Column, extendedRect.RowCount, extendedRect.ColumnCount));
	                    ser.UpdateBubbleFormula(ChartUtility.ReferencesToFormula(bubbleSizeRefers));
	                }
	                if (categoryLabels &&
	                    (!isNullOrUndefined(ser.XValuesRefers) && ser.XValuesRefers.length > 0)) {
	                    var xValueRefers = ser.XValuesRefers.slice(0);
	                    xValueRefers.push(ChartUtility.CreateReference(source.Worksheet.name(), extendedCatRect.Row, extendedCatRect.Column, extendedCatRect.RowCount, extendedCatRect.ColumnCount));
	                   
	                    ser.UpdateXValuesFormula(ChartUtility.ReferencesToFormula(xValueRefers));
	                }
	            }
	        };
	       
	       
	       
	       
	       
	       
	       
	        prototype.Get = function (indexOrName) {
	            return this.Item(indexOrName, keyword_null);
	        };
	       
	       
	       
	       
	        prototype.NewSeries = function () {
	            var _this = this;
	            var ser = new Series(_this);
	            _this._series.push(ser);
	            return ser;
	        };
	        defineProperty(prototype, "PrimaryValuesMinMax", {
	            get: function () {
	                return this._primaryValuesMinMax;
	            },
	            set: function (value) {
	                var _this = this;
	                if (value !== _this._primaryValuesMinMax) {
	                    _this._primaryValuesMinMax = value;
	                    _this._chart.HandleElementChanged(4 , _this, ChartConstants.PrimaryValuesMinMax);
	                }
	            }
	        });
	        defineProperty(prototype, "SecondaryValuesMinMax", {
	            get: function () {
	                return this._secondaryValuesMinMax;
	            },
	            set: function (value) {
	                var _this = this;
	                if (value !== _this._secondaryValuesMinMax) {
	                    _this._secondaryValuesMinMax = value;
	                    _this._chart.HandleElementChanged(4 , _this, ChartConstants.SecondaryValuesMinMax);
	                }
	            }
	        });
	        defineProperty(prototype, "PrimaryXValuesMinMax", {
	            get: function () {
	                return this._primaryXValuesMinMax;
	            },
	            set: function (value) {
	                var _this = this;
	                if (value !== _this._primaryXValuesMinMax) {
	                    _this._primaryXValuesMinMax = value;
	                    _this._chart.HandleElementChanged(4 , _this, ChartConstants.PrimaryXValuesMinMax);
	                }
	            }
	        });
	        defineProperty(prototype, "SecondaryXValuesMinMax", {
	            get: function () {
	                return this._secondaryXValuesMinMax;
	            },
	            set: function (value) {
	                var _this = this;
	                if (value !== _this._secondaryXValuesMinMax) {
	                    _this._secondaryXValuesMinMax = value;
	                    _this._chart.HandleElementChanged(4 , _this, ChartConstants.SecondaryXValuesMinMax);
	                }
	            }
	        });
	        defineProperty(prototype, "AllSers", {
	            get: function () {
	                return this._series;
	            }
	        });
	        defineProperty(prototype, "RowCol", {
	            get: function () {
	                return !isNullOrUndefined(this._dataOrientation) ? this._dataOrientation : 1 ;
	            }
	        });
	        prototype.IndexOf = function (series) {
	            var ser = series;
	            if (ser.PlotVisibleOnly && ser.IsHidden) {
	                return -1;
	            }
	           
	
	            return this.GetValidSers().indexOf(series);
	        };
	        prototype.IndexOfSource = function (series) {
	            return this._series.indexOf(series);
	        };
	        prototype.AdjustIndex = function (currentIndex, newIndex) {
	            var _this = this;
	            var visibleSers = _this.GetValidSers();
	            if (currentIndex < 0 || currentIndex >= visibleSers.length || newIndex < 0 || newIndex >= visibleSers.length) {
	                return;
	            }
	            var currenSrcIndex = _this.MapToSourceIndex(currentIndex);
	            var newSrcIndex = _this.MapToSourceIndex(newIndex);
	            var series = _this._series;
	            var current = series[currenSrcIndex];
	            var newSer = series[newSrcIndex];
	            series[currenSrcIndex] = newSer;
	            series[newSrcIndex] = current;
	        };
	        prototype.GetSers = function (visibleOnly, axisGroup) {
	            if (visibleOnly === keyword_undefined) {
	                visibleOnly = true;
	            }
	            if (visibleOnly) {
	                return this._series.filter(function (item) {
	                    return !item.IsHidden && (isNullOrUndefined(axisGroup) || item.AxisGroup === axisGroup);
	                });
	            } else if (!isNullOrUndefined(axisGroup)) {
	                return this._series.filter(function (item) {
	                    return item.AxisGroup === axisGroup;
	                });
	            }
	            return this._series;
	        };
	        prototype.GetValidSers = function (axisGroup) {
	            return this.GetSers(this._chart.PlotVisibleOnly, axisGroup);
	        };
	        prototype.DetectRanges2 = function (sheet, row, column, rowCount, columnCount, outObj) {
	            var vertical = this.DetectRanges(sheet, row, column, rowCount, columnCount, outObj);
	            var nameRange;
	            if (ChartUtility.GetDimensioin(this._chart.ChartType) > 1 && isNullOrUndefined(outObj.category) && !isNullOrUndefined(outObj.data)) {
	                var dataRange = outObj.data;
	                if (vertical) {
	                    if (dataRange.ColumnCount > 1) {
	                        outObj.category = new CellRect(dataRange.Row, dataRange.Column, dataRange.RowCount, 1);
	                        outObj.data = new CellRect(dataRange.Row, dataRange.Column + 1, dataRange.RowCount, dataRange.ColumnCount - 1);
	                        if (!isNullOrUndefined(outObj.seriesName)) {
	                            nameRange = outObj.seriesName;
	                            outObj.seriesName = new CellRect(nameRange.Row, nameRange.Column + 1, nameRange.RowCount, nameRange.ColumnCount - 1);
	                        }
	                    }
	                } else {
	                    if (outObj.data.RowCount > 1) {
	                        outObj.category = new CellRect(dataRange.Row, dataRange.Column, 1, dataRange.ColumnCount);
	                        outObj.data = new CellRect(dataRange.Row + 1, dataRange.Column, dataRange.RowCount - 1, dataRange.ColumnCount);
	                        if (!isNullOrUndefined(outObj.seriesName)) {
	                            nameRange = outObj.seriesName;
	                            outObj.seriesName = new CellRect(nameRange.Row + 1, nameRange.Column, dataRange.RowCount - 1, nameRange.ColumnCount);
	                        }
	                    }
	                }
	            }
	            return vertical;
	        };
	        prototype.GenerateSeriesStructures = function (refs, rowCol, seriesLabels, categoryLabels) {
	            var _this = this;
	            var firstSheet = _this._chart.Parent.sheet()._GetSheet(refs[0].WorksheetName);
	            var firstRect = new CellRect(refs[0].Row, refs[0].Column, refs[0].RowCount, refs[0].ColumnCount);
	            var firstSerNameRect = keyword_null, firstCatRect = keyword_null, firstDataRect = keyword_null;
	            var outObj, vertical;
	            if (isNullOrUndefined(rowCol)) {
	                outObj = {seriesName: keyword_null, category: keyword_null, data: keyword_null};
	                vertical = _this.DetectRanges2(firstSheet, firstRect.Row, firstRect.Column, firstRect.RowCount, firstRect.ColumnCount, outObj);
	                firstSerNameRect = outObj.seriesName;
	                firstCatRect = outObj.category;
	                firstDataRect = outObj.data;
	               
	               
	               
	               
	               
	               
	               
	               
	               
	               
	               
	               
	                _this._dataOrientation = vertical ? 1  : 0 ;
	            } else {
	                _this._dataOrientation = rowCol;
	                if (isNullOrUndefined(seriesLabels) && isNullOrUndefined(categoryLabels)) {
	                    outObj = {seriesName: keyword_null, category: keyword_null, data: keyword_null};
	                    vertical = _this.DetectRanges2(firstSheet, firstRect.Row, firstRect.Column, firstRect.RowCount, firstRect.ColumnCount, outObj);
	                    firstSerNameRect = outObj.seriesName;
	                    firstCatRect = outObj.category;
	                    firstDataRect = outObj.data;
	                    var autoOrientation = vertical ? 1  : 0 ;
	                    if (_this._dataOrientation !== autoOrientation) {
	                        var tmp = firstCatRect;
	                        firstCatRect = firstSerNameRect;
	                        firstSerNameRect = tmp;
	                    }
	                }
	            }
	            if (!(isNullOrUndefined(seriesLabels) && isNullOrUndefined(categoryLabels))) {
	                if (_this._dataOrientation === 1 ) {
	                    if (seriesLabels && categoryLabels) {
	                        firstSerNameRect = new CellRect(firstRect.Row, firstRect.Column + 1, 1, firstRect.ColumnCount - 1);
	                        firstCatRect = new CellRect(firstRect.Row + 1, firstRect.Column, firstRect.RowCount - 1, 1);
	                        firstDataRect = new CellRect(firstRect.Row + 1, firstRect.Column + 1, firstRect.RowCount - 1, firstRect.ColumnCount - 1);
	                    } else if (seriesLabels) {
	                        firstSerNameRect = new CellRect(firstRect.Row, firstRect.Column, 1, firstRect.ColumnCount);
	                        firstCatRect = keyword_null;
	                        firstDataRect = new CellRect(firstRect.Row + 1, firstRect.Column, firstRect.RowCount - 1, firstRect.ColumnCount);
	                    } else if (categoryLabels) {
	                        firstSerNameRect = keyword_null;
	                        firstCatRect = new CellRect(firstRect.Row, firstRect.Column, firstRect.RowCount, 1);
	                        firstDataRect = new CellRect(firstRect.Row, firstRect.Column + 1, firstRect.RowCount, firstRect.ColumnCount - 1);
	                    } else {
	                        firstSerNameRect = keyword_null;
	                        firstCatRect = keyword_null;
	                        firstDataRect = new CellRect(firstRect.Row, firstRect.Column, firstRect.RowCount, firstRect.ColumnCount);
	                    }
	                } else {
	                    if (seriesLabels && categoryLabels) {  
	                        firstSerNameRect = new CellRect(firstRect.Row + 1, firstRect.Column, firstRect.RowCount - 1, 1);
	                        firstCatRect = new CellRect(firstRect.Row, firstRect.Column + 1, 1, firstRect.ColumnCount - 1);
	                        firstDataRect = new CellRect(firstRect.Row + 1, firstRect.Column + 1, firstRect.RowCount - 1, firstRect.ColumnCount - 1);
	                    } else if (seriesLabels) {
	                        firstSerNameRect = new CellRect(firstRect.Row, firstRect.Column, firstRect.RowCount, 1);
	                        firstCatRect = keyword_null;
	                        firstDataRect = new CellRect(firstRect.Row, firstRect.Column + 1, firstRect.RowCount, firstRect.ColumnCount - 1);
	                    } else if (categoryLabels) {
	                        firstSerNameRect = keyword_null;
	                        firstCatRect = new CellRect(firstRect.Row, firstRect.Column, 1, firstRect.ColumnCount);
	                        firstDataRect = new CellRect(firstRect.Row + 1, firstRect.Column, firstRect.RowCount - 1, firstRect.ColumnCount);
	                    } else {
	                        firstSerNameRect = keyword_null;
	                        firstCatRect = keyword_null;
	                        firstDataRect = new CellRect(firstRect.Row, firstRect.Column, firstRect.RowCount, firstRect.ColumnCount);
	                    }
	                }
	            }
	            return _this.GenerateSeriesStructures2(refs, _this._dataOrientation, firstSerNameRect, firstCatRect, firstDataRect);
	        };
	        prototype.GenerateSeriesStructures2 = function (refers, rowCol, firstSerNameRect, firstCatRect, firstDataRect) {
	            var result = [];
	            if (isNullOrUndefined(refers) || refers.length === 0) {
	                return result;
	            }
	            var firstSheet = refers[0].WorksheetName;
	            var firstRect = refers[0];
	            var orientation = !isNullOrUndefined(rowCol) ? rowCol : 1 ;
	            var i, rect, series, serNameCount, row, col;
	            if (!isNullOrUndefined(firstDataRect)) {
	                if (orientation === 1 ) {
	                    for (col = firstRect.Column; col < firstRect.Column + firstRect.ColumnCount; col++) {
	                        if (isNullOrUndefined(firstCatRect) || col < firstCatRect.Column || col >= firstCatRect.Column + firstCatRect.ColumnCount) {
	                            series = new SeriesStructure();
	                            if (!isNullOrUndefined(firstSerNameRect)) {
	                                series.Label = ChartUtility.CreateReference(firstSheet, firstSerNameRect.Row, col, firstSerNameRect.RowCount, 1);
	                            }
	                            series.Data.push(ChartUtility.CreateReference(firstSheet, firstDataRect.Row, col, firstDataRect.RowCount, 1));
	                            if (!isNullOrUndefined(firstCatRect)) {
	                                series.Categories.push(ChartUtility.CreateReference(firstSheet, firstCatRect.Row, firstCatRect.Column, firstCatRect.RowCount, firstCatRect.ColumnCount));
	                            }
	                            result.push(series);
	                        }
	                    }
	                } else {
	                    for (row = firstRect.Row; row < firstRect.Row + firstRect.RowCount; row++) {
	                        if (isNullOrUndefined(firstCatRect) || row < firstCatRect.Row || row >= firstCatRect.Row + firstCatRect.RowCount) {
	                            series = new SeriesStructure();
	                            if (!isNullOrUndefined(firstSerNameRect)) {
	                                series.Label = ChartUtility.CreateReference(firstSheet, row, firstSerNameRect.Column, 1, firstSerNameRect.ColumnCount);
	                            }
	                            series.Data.push(ChartUtility.CreateReference(firstSheet, row, firstDataRect.Column, 1, firstDataRect.ColumnCount));
	                            if (!isNullOrUndefined(firstCatRect)) {
	                                series.Categories.push(ChartUtility.CreateReference(firstSheet, firstCatRect.Row, firstCatRect.Column, firstCatRect.RowCount, firstCatRect.ColumnCount));
	                            }
	                            result.push(series);
	                        }
	                    }
	                }
	                if (refers.length > 1) {
	                    var inSameStrip = this.InSameColumnRowStrip(refers);
	                    if (inSameStrip) {
	                        if (this._dataOrientation === 1 ) {
	                            var startCol = firstDataRect.Column;
	                            var colCount = firstDataRect.ColumnCount;
	                            for (col = startCol; col < startCol + colCount; col++) {
	                                if (isNullOrUndefined(firstCatRect) || col !== firstCatRect.Column) {
	                                    series = result[col - startCol];
	                                   
	                                   
	                                   
	                                   
	                                    for (i = 1; i < refers.length; i++) {
	                                        rect = refers[i];
	                                        for (row = rect.Row; row < rect.Row + rect.RowCount; row++) {
	                                            series.Data.push(ChartUtility.CreateReference(firstSheet, row, col, rect.RowCount, 1));
	                                            if (!isNullOrUndefined(firstCatRect)) {
	                                                series.Categories.push(ChartUtility.CreateReference(firstSheet, row, firstCatRect.Column, rect.RowCount, 1));
	                                            }
	                                        }
	                                    }
	                                    result.push(series);
	                                }
	                            }
	                        } else {
	                            var startRow = firstDataRect.Row;
	                            var rowCount = firstDataRect.RowCount;
	                            for (row = startRow; row < startRow + rowCount; row++) {
	                                if (isNullOrUndefined(firstCatRect) || row !== firstCatRect.Row) {
	                                    series = result[row - startRow];
	                                   
	                                   
	                                   
	                                   
	                                    for (i = 1; i < refers.length; i++) {
	                                        rect = refers[i];
	                                        for (col = rect.Column; col < rect.Column + rect.ColumnCount; col++) {
	                                            series.Data.push(ChartUtility.CreateReference(firstSheet, row, col, 1, rect.ColumnCount));
	                                            if (!isNullOrUndefined(firstCatRect)) {
	                                                series.Categories.push(ChartUtility.CreateReference(firstSheet, row, firstCatRect.Column, 1, rect.ColumnCount));
	                                            }
	                                        }
	                                    }
	                                    result.push(series);
	                                }
	                            }
	                        }
	                    } else {
	                        if (orientation === 1 ) {       
	                            for (i = 1; i < refers.length; i++) {
	                                rect = refers[i];
	                                for (col = rect.Column; col < rect.Column + rect.ColumnCount; col++) {
	                                    series = new SeriesStructure();
	                                    serNameCount = firstSerNameRect.RowCount;
	                                    if (!isNullOrUndefined(firstSerNameRect)) {
	                                        series.Label = ChartUtility.CreateReference(firstSheet, rect.Row, col, serNameCount, 1);
	                                    }
	                                    series.Data.push(ChartUtility.CreateReference(firstSheet, rect.Row + serNameCount, col, rect.RowCount - serNameCount, 1));
	                                   
	                                   
	                                   
	                                   
	                                    result.push(series);
	                                }
	                            }
	                        } else {
	                            for (i = 1; i < refers.length; i++) {
	                                rect = refers[i];
	                                for (row = rect.Row; row < rect.Row + rect.RowCount; row++) {
	                                    series = new SeriesStructure();
	                                    serNameCount = firstSerNameRect.ColumnCount;
	                                    if (!isNullOrUndefined(firstSerNameRect)) {
	                                        series.Label = ChartUtility.CreateReference(firstSheet, row, rect.Column, 1, serNameCount);
	                                    }
	                                    series.Data.push(ChartUtility.CreateReference(firstSheet, row, rect.Column + serNameCount, 1, rect.ColumnCount - serNameCount));
	                                   
	                                   
	                                   
	                                   
	                                    result.push(series);
	                                }
	                            }
	                        }
	                    }
	                }
	            }
	            for (var _i = 0, result_1 = result; _i < result_1.length; _i++) {
	                var item = result_1[_i];
	                item.RowCol = orientation;
	            }
	            return result;
	        };
	        prototype.InSameColumnRowStrip = function (refers) {
	            var start = -1;
	            var end = -1;
	            var i, refer;
	            if (this._dataOrientation === 1 ) {
	                for (i = 0; i < refers.length; i++) {
	                    refer = refers[i];
	                    if (start !== -1 && end !== -1 &&
	                        (refer.Column !== start || refer.LastColumn !== end)) {
	                        return false;
	                    }
	                    start = refer.Column;
	                    end = refer.LastColumn;
	                }
	            } else {
	                for (i = 0; i < refers.length; i++) {
	                    refer = refers[i];
	                    if (start !== -1 && end !== -1 &&
	                        (refer.Row !== start || refer.LastRow !== end)) {
	                        return false;
	                    }
	                    start = refer.Row;
	                    end = refer.LastRow;
	                }
	            }
	            return true;
	        };
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	        prototype.DetectRanges = function (sheet, row, column, rowCount, columnCount, outObj) {
	            var _this = this;
	            var svRowCount = sheet.getRowCount();
	            var svColumnCount = sheet.getColumnCount();
	            if ((rowCount < 1 && row !== -1) || (columnCount < 1 && column !== -1)) {
	                throw new Error("Cannot detect an empty cell range.");
	            }
	            var rect = _this.TrimCellRect(sheet, row, column, rowCount, columnCount);
	            row = rect.Row;
	            column = rect.Column;
	            rowCount = rect.RowCount;
	            columnCount = rect.ColumnCount;
	            outObj.category = keyword_null;
	            outObj.seriesName = keyword_null;
	            outObj.data = keyword_null;
	            if (rowCount <= 0 || columnCount <= 0) {
	                return false;
	            }
	            var r1 = new CellRect(row, column, rowCount, columnCount);
	            var r2 = new CellRect(0, 0, svRowCount, svColumnCount);
	            r1.Intersect(r2);
	            row = r1.Row;
	            column = r1.Column;
	            rowCount = r1.RowCount;
	            columnCount = r1.ColumnCount;
	            if (row < 0 || column < 0) {
	                throw new Error("The cell range is invalid.");
	            }
	            if (rowCount === 1 && columnCount === 1) {
	                if (!_this.IsEmptyCell(sheet, row, column)) {
	                    outObj.data = new CellRect(row, column, rowCount, columnCount);
	                }
	                return false;
	            }
	           
	            var i, j;
	            if (_this.IsEmptyCell(sheet, row, column)) {
	                var titleColumn, titleColumnCount;
	                i = column + 1;
	                j = row + 1;
	                while (i < column + columnCount && _this.IsEmptyCell(sheet, row, i)) {
	                    i++;
	                }
	                titleColumn = i;
	                titleColumnCount = column + columnCount - titleColumn;
	                if (titleColumnCount === 0) {
	                    while (j < row + rowCount && _this.IsEmptyCell(sheet, j, column)) {
	                        j++;
	                    }
	                    if (j === row + rowCount) {
	                        if (rowCount > 1) {
	                            if (columnCount > 1) {
	                                outObj.category = new CellRect(row, column + 1, 1, columnCount - 1);
	                                outObj.seriesName = new CellRect(row + 1, column, rowCount - 1, 1);
	                                outObj.data = new CellRect(row + 1, column + 1, rowCount - 1, columnCount - 1);
	                            } else {
	                                outObj.seriesName = new CellRect(row, column, 1, 1);
	                                outObj.data = new CellRect(row + 1, column, rowCount - 1, 1);
	                            }
	                        } else {
	                            outObj.seriesName = new CellRect(row, column, 1, 1);
	                            outObj.data = new CellRect(row, column + 1, rowCount, columnCount - 1);
	                        }
	                    } else {
	                        if (columnCount > 1) {
	                            if (columnCount > 1 && j - row >= 1) {
	                                outObj.category = new CellRect(row, column + 1, j - row, columnCount - 1);
	                            }
	                            if (rowCount > 1 && row + rowCount > j) {
	                                outObj.seriesName = new CellRect(j, column, row + rowCount - j, 1);
	                            }
	                            outObj.data = new CellRect(j, column + 1, row + rowCount - j, columnCount - 1);
	                        } else {
	                           
	                            outObj.seriesName = keyword_null;
	                            if (rowCount > 1 && j > row && j < row + rowCount) {
	                                outObj.category = new CellRect(row, column, j - row, columnCount);
	                            }
	                            if (j < row + rowCount && j > row) {
	                                outObj.data = new CellRect(j, column, row + rowCount - j, columnCount);
	                            } else {
	                                outObj.data = new CellRect(row, column, rowCount, columnCount);
	                            }
	                        }
	                    }
	                } else {
	                    i--;
	                    while (j < row + rowCount && _this.IsEmptyCell(sheet, j, i)) {
	                        j++;
	                    }
	                    if (j === row + rowCount) {
	                        if (rowCount > 1) {
	                            if (columnCount > 1 && j - row >= 1) {
	                                outObj.category = new CellRect(row, titleColumn, 1, titleColumnCount);
	                            }
	                            if (rowCount > 1 && columnCount > titleColumnCount) {
	                                outObj.seriesName = new CellRect(row + 1, column, rowCount - 1, columnCount - titleColumnCount);
	                            }
	                            outObj.data = new CellRect(row + 1, titleColumn, rowCount - 1, titleColumnCount);
	                        } else {
	                            outObj.seriesName = new CellRect(row, column, rowCount, titleColumn - column);
	                            outObj.data = new CellRect(row, titleColumn, rowCount, titleColumnCount);
	                        }
	                    } else {
	                        if (columnCount > 1 && j - row >= 1) {
	                            outObj.category = new CellRect(row, titleColumn, j - row, titleColumnCount);
	                        }
	                        if (rowCount > 1 && row + rowCount > j && columnCount > titleColumnCount) {
	                            outObj.seriesName = new CellRect(j, column, row + rowCount - j, columnCount - titleColumnCount);
	                        }
	                        outObj.data = new CellRect(j, titleColumn, row + rowCount - j, titleColumnCount);
	                    }
	                }
	            } else {
	                var lastColumn = column + columnCount - 1;
	                var lastRow = row + rowCount - 1;
	                if (columnCount > 1 && rowCount > 1) {
	                   
	                    i = lastColumn;
	                    titleColumnCount = 0;
	                    while (i >= column && _this.IsNumericData(sheet._GetCellValue(lastRow, i))) {
	                        titleColumnCount++;
	                        i--;
	                    }
	                    var oneCellData = titleColumnCount === 0;
	                    if (oneCellData) {
	                        titleColumnCount = 1;
	                        i--;
	                    }
	                    var legendRowCount;
	                    if (columnCount > 1) {
	                        titleColumn = i + 1;
	                        i = lastRow - 1;
	                        legendRowCount = 1;
	                        if (!oneCellData) {
	                            while (i >= row && _this.IsNumericData(sheet._GetCellValue(i, lastColumn))) {
	                                legendRowCount++;
	                                i--;
	                            }
	                        }
	                        if (titleColumnCount > 0 && titleColumn >= column && i + 1 > row) {
	                            outObj.category = new CellRect(row, titleColumn, i + 1 - row, titleColumnCount);
	                        }
	                        if (legendRowCount > 0 && titleColumn > column) {
	                            outObj.seriesName = new CellRect(i + 1, column, legendRowCount, titleColumn - column);
	                        }
	                        outObj.data = new CellRect(i + 1, titleColumn, legendRowCount, titleColumnCount);
	                    }
	                } else if (rowCount > 1) {
	                   
	                   
	                    if (_this.IsNumericData(sheet._GetCellValue(row, column))) {
	                        outObj.data = new CellRect(row, column, rowCount, columnCount);
	                    } else {
	                       
	                       
	                        i = lastRow;
	                        while (i >= row && _this.IsNumericData(sheet._GetCellValue(i, column))) {
	                            i--;
	                           
	                        }
	                        if (i === lastRow && !_this.IsNumericData(sheet._GetCellValue(i, column))) {
	                            i--;
	                        }
	                        outObj.data = new CellRect(i + 1, column, lastRow - i, columnCount);
	                        if (i >= row) {
	                            outObj.seriesName = new CellRect(row, column, i - row + 1, columnCount);
	                        }
	                    }
	                } else {
	                   
	                   
	                    if (_this.IsNumericData(sheet._GetCellValue(row, column))) {
	                        outObj.data = new CellRect(row, column, rowCount, columnCount);
	                    } else {
	                       
	                       
	                        i = lastColumn;
	                        while (i >= column && _this.IsNumericData(sheet._GetCellValue(row, i))) {
	                            i--;
	                           
	                        }
	                        if (i === lastColumn && !_this.IsNumericData(sheet._GetCellValue(row, i))) {
	                            i--;
	                        }
	                        outObj.data = new CellRect(row, i + 1, rowCount, lastColumn - i);
	                        if (i >= column) {
	                            outObj.seriesName = new CellRect(row, column, rowCount, i - column + 1);
	                        }
	                    }
	                }
	            }
	            if (!isNullOrUndefined(outObj.data)
	                && outObj.data.RowCount > outObj.data.ColumnCount
	                && outObj.data.RowCount > 1
	                && (outObj.data.ColumnCount > 1 || (outObj.data.ColumnCount === 1 && (!isNullOrUndefined(outObj.seriesName) || !isNullOrUndefined(outObj.category))))) {
	                var needSwitch = false;
	                if (!isNullOrUndefined(outObj.seriesName)) {
	                    needSwitch = outObj.seriesName.Row === outObj.data.Row;
	                } else if (!isNullOrUndefined(outObj.category)) {
	                    needSwitch = outObj.category.Column === outObj.data.Column;
	                }
	                if (needSwitch) {
	                    var tmp = outObj.category;
	                    outObj.category = outObj.seriesName;
	                    outObj.seriesName = tmp;
	                }
	                return true;
	            } else if (!isNullOrUndefined(outObj.data)) {
	                if (outObj.data.RowCount === 1) {
	                    return false;
	                } else if (outObj.data.ColumnCount === 1) {
	                    return true;
	                }
	            }
	            if (!isNullOrUndefined(outObj.seriesName) && outObj.seriesName.Column === outObj.data.Column) {
	                return true;
	            }
	            if (!isNullOrUndefined(outObj.category) && outObj.category.Row === outObj.data.Row) {
	                return true;
	            }
	            return false;
	        };
	        prototype.TrimCellRect = function (sheet, row, column, rowCount, columnCount) {
	            var setRow = row, setColumn = column, setRowCount = rowCount, setColumnCount = columnCount;
	            var svRowCount = sheet.getRowCount();
	            var svColumnCount = sheet.getColumnCount();
	            if (svRowCount === 0 || svColumnCount === 0) {
	                return;
	            }
	
	            var isEmpty, r, c, endC, endR;
	            if (row === -1 || (row === 0 && rowCount === svRowCount)) {
	                var restoreNegativeColumn = column === -1;
	                if (restoreNegativeColumn) {
	                    column = 0;
	                    columnCount = svColumnCount;
	                }
	                row = 0;
	                rowCount = svRowCount;
	               
	                isEmpty = true;
	                do {
	                    for (c = column, endC = column + columnCount; c < endC; c++) {
	                        if (!this.IsEmptyCell(sheet, row, c)) {
	                            isEmpty = false;
	                            break;
	                        }
	                    }
	                    if (isEmpty) {
	                        row++;
	                        rowCount--;
	                        if (rowCount === 0) {
	                            return new CellRect(setRow, setColumn, setRowCount, setColumnCount);
	                        }
	                    }
	                } while (isEmpty);
	                r = row + rowCount - 1;
	                isEmpty = true;
	                do {
	                    for (c = column, endC = column + columnCount; c < endC; c++) {
	                        if (!this.IsEmptyCell(sheet, r, c)) {
	                            isEmpty = false;
	                            break;
	                        }
	                    }
	                    if (isEmpty) {
	                        rowCount--;
	                        r--;
	                        if (rowCount === 0) {
	                            return new CellRect(setRow, setColumn, setRowCount, setColumnCount);
	                        }
	                    }
	                } while (isEmpty);
	                if (restoreNegativeColumn) {
	                    column = -1;
	                }
	            }
	            if (column === -1 || (column === 0 && columnCount === svColumnCount)) {
	                column = 0;
	                columnCount = svColumnCount;
	               
	                isEmpty = true;
	                do {
	                    for (r = row, endR = row + rowCount; r < endR; r++) {
	                        if (!this.IsEmptyCell(sheet, r, column)) {
	                            isEmpty = false;
	                            break;
	                        }
	                    }
	                    if (isEmpty) {
	                        column++;
	                        columnCount--;
	                        if (columnCount === 0) {
	                            return new CellRect(setRow, setColumn, setRowCount, setColumnCount);
	                        }
	                    }
	                } while (isEmpty);
	                c = column + columnCount - 1;
	                isEmpty = true;
	                do {
	                    for (r = row, endR = row + rowCount; r < endR; r++) {
	                        if (!this.IsEmptyCell(sheet, r, c)) {
	                            isEmpty = false;
	                            break;
	                        }
	                    }
	                    if (isEmpty) {
	                        columnCount--;
	                        c--;
	                        if (columnCount === 0) {
	                            return new CellRect(setRow, setColumn, setRowCount, setColumnCount);
	                        }
	                    }
	                } while (isEmpty);
	            }
	            return new CellRect(row, column, rowCount, columnCount);
	        };
	        prototype.IsNumericData = function (value) {
	            if (value instanceof Date) {
	                return false;
	            }
	            if (isNullOrUndefined(value)) {
	                return true;
	            }
	            if (typeof value === 'number') {
	                return true;
	            }
	            var s = value.toString();
	            if (s.length === 0) {
	                return true;
	            }
	            return !isNaN(value) && isFinite(value);
	        };
	        prototype.IsEmptyCell = function (sheet, r, c) {
	            var value = sheet._GetCellValue(r, c);
	            if (!isNullOrUndefined(value) &&
	                value.toString().length > 0) {
	                return false;
	            }
	            return true;
	        };
	        prototype.UpdateValuesMaxMin = function (axisGroup) {
	            if (axisGroup === 0 ) {
	                this.UpdatePrimaryValuesMaxMin();
	            } else {
	                this.UpdateSecondaryValuesMaxMin();
	            }
	        };
	        prototype.UpdateXValuesMaxMin = function (axisGroup) {
	            if (axisGroup === 0 ) {
	                this.UpdatePrimaryXValuesMaxMin();
	            } else {
	                this.UpdateSecondaryXValuesMaxMin();
	            }
	        };
	        prototype.Item = function (indexOrName, axisGroup) {
	            var visibleSers = this.GetSers(this._chart.PlotVisibleOnly, axisGroup);
	            if (typeof indexOrName === 'number') {
	                if (indexOrName >= 0 && indexOrName < visibleSers.length) {
	                    return visibleSers[indexOrName];
	                }
	            } else if (typeof indexOrName === 'string') {
	                for (var _i = 0, visibleSers_1 = visibleSers; _i < visibleSers_1.length; _i++) {
	                    var item = visibleSers_1[_i];
	                    if (item.Name === name) {
	                        return item;
	                    }
	                }
	            }
	            return keyword_null;
	        };
	        prototype.GetSerieValues = function (axisGroup, fnGetValue) {
	            var self = this;
	            var series = self.GetValidSers(axisGroup);
	            var values = [];
	            series.forEach(function (ser) {
	                var valuesMinMax = fnGetValue(ser);
	                values.push(valuesMinMax.Min);
	                values.push(valuesMinMax.Max);
	            });
	            return values;
	        };
	        prototype.UpdatePrimaryValuesMaxMin = function () {
	           
	           
	           
	           
	           
	           
	           
	           
	           
	           
	           
	           
	            var values = this.GetSerieValues(0 , function (series) {
	                return series.ValuesMinMax;
	            });
	            this.PrimaryValuesMinMax = Util.getMinMaxValues(values);
	        };
	        prototype.UpdateSecondaryValuesMaxMin = function () {
	           
	           
	           
	           
	           
	           
	           
	           
	           
	           
	           
	           
	            var values = this.GetSerieValues(1 , function (series) {
	                return series.ValuesMinMax;
	            });
	            this.SecondaryValuesMinMax = Util.getMinMaxValues(values);
	        };
	        prototype.UpdatePrimaryXValuesMaxMin = function () {
	           
	           
	           
	           
	           
	           
	           
	           
	           
	           
	           
	           
	            var values = this.GetSerieValues(0 , function (series) {
	                return series.XValuesMinMax;
	            });
	            this.PrimaryXValuesMinMax = Util.getMinMaxValues(values);
	        };
	        prototype.UpdateSecondaryXValuesMaxMin = function () {
	           
	           
	           
	           
	           
	           
	           
	           
	           
	           
	           
	           
	            var values = this.GetSerieValues(1 , function (series) {
	                return series.XValuesMinMax;
	            });
	            this.SecondaryXValuesMinMax = Util.getMinMaxValues(values);
	        };
	        prototype.GetMaxPointsCount = function (axisGroup) {
	            var maxCount = 0;
	            var sers = this.GetValidSers(axisGroup);
	            for (var _i = 0, sers_1 = sers; _i < sers_1.length; _i++) {
	                var ser = sers_1[_i], values = ser.Values;
	                if (!isNullOrUndefined(values) && values.length > maxCount) {
	                    maxCount = values.length;
	                }
	            }
	            return maxCount;
	        };
	
	        function _updateDataLabels(series, dataLabelInfo, isNewItem) {
	            if (dataLabelInfo || isNewItem) {
	                series.HasDataLabels = true;
	               
	                if (dataLabelInfo) {
	                    series.DataLabels._copyProperties(dataLabelInfo);
	                }
	            }
	        }
	
	        prototype._applyDataLabelsSetting = function (dataLabelsInfo) {
	            if (dataLabelsInfo) {
	                var series = this._series, count = series.length, oldCount = dataLabelsInfo.count;
	                for (var i = 0; i < count; i++) {
	                    _updateDataLabels(series[i], dataLabelsInfo[i], i >= oldCount);
	                }
	            }
	        };
	        prototype.AddSers = function (structures, dataLabelsInfo, chartTypes) {
	            var _this = this;
	            _this._chart.SuspendElementChanged();
	            var chartType = _this.Parent.ChartType;
	            if (ChartUtility.IsBubbleChart(chartType)) {
	                _this.AddSersForBubble(structures);
	            } else if (chartType === 49  || chartType === 50 ) {
	                if (chartType === 49  && structures.length !== 3) {
	                    throw new Error("To create this stock chart, arrange the data on your sheet in this order: high price, low price, closing price. Use dates or stock names as labels.");
	                }
	                if (chartType === 50  && structures.length !== 4) {
	                    throw new Error("To create this stock chart, arrange the data on your sheet in this order: opening price, high price, low price, closing price. Use dates or stock names as labels.");
	                }
	                _this.AddSersForStock(structures);
	            } else if (chartType === 51  || chartType === 52 ) {
	                if (chartType === 51  && structures.length !== 4) {
	                    throw new Error("To create this stock chart, arrange the data on your sheet in this order: volume traded, high price, low price, closing price. Use dates or stock names as labels.");
	                }
	                if (chartType === 52  && structures.length !== 5) {
	                    throw new Error("To create this stock chart, arrange the data on your sheet in this order: volume traded, opening price, high price, low price, closing price. Use dates or stock names as labels.");
	                }
	                _this.AddSersForVolumeStock(structures);
	            } else if (chartType === 57  || chartType === 58 ) {
	                _this.AddSersForSunburstOrTreeMap(structures, chartType);
	            } else {
	                _this.AddSersDefault(structures, keyword_null, keyword_null, chartTypes);
	            }
	            _this._applyDataLabelsSetting(dataLabelsInfo);
	            _this._chart.ResumeElementChanged(4 , _this, ChartConstants.Collection);
	        };
	        prototype.AddSersDefault = function (structures, serInnerType, axisGroup, chartTypes) {
	            var hasChartTypes = chartTypes && chartTypes.length;
	            var lastChartType = hasChartTypes && chartTypes.slice(-1)[0];
	            for (var i = 0; i < structures.length; i++) {
	                var item = structures[i];
	                var ser = new Series(this, hasChartTypes ? chartTypes[i] || lastChartType : serInnerType, axisGroup);
	                this._series.push(ser);
	                if (!isNullOrUndefined(item.Label)) {
	                    ser.UpdateNameFormula(ChartUtility.ReferencesToFormula([item.Label]));
	                } else {
	                    ser.UpdateNameFormula(keyword_null);
	                }
	                ser.UpdateXValuesFormula(ChartUtility.ReferencesToFormula(item.Categories));
	                ser.UpdateValuesFormula(ChartUtility.ReferencesToFormula(item.Data));
	            }
	        };
	        prototype.AddSersForBubble = function (structures) {
	            for (var i = 0; i < structures.length; i += 2) {
	                var item1 = structures[i];
	                var item2 = structures[i + 1];
	                var ser = new Series(this);
	                this._series.push(ser);
	                if (!isNullOrUndefined(item1.Label)) {
	                    ser.UpdateNameFormula(ChartUtility.ReferencesToFormula([item1.Label]));
	                } else {
	                    ser.UpdateNameFormula(keyword_null);
	                }
	                ser.UpdateXValuesFormula(ChartUtility.ReferencesToFormula(item1.Categories));
	                ser.UpdateValuesFormula(ChartUtility.ReferencesToFormula(item1.Data));
	                if (!isNullOrUndefined(item2)) {
	                    ser.UpdateBubbleFormula(ChartUtility.ReferencesToFormula(item2.Data));
	                }
	            }
	        };
	        prototype.AddSersForStock = function (structures, axisGroup) {
	            if (axisGroup === keyword_undefined) {
	                axisGroup = keyword_null;
	            }
	            for (var i = 0; i < structures.length; i++) {
	                var item = structures[i];
	                var ser = new Series(this, 9 , axisGroup);
	                this._series.push(ser);
	                if (!isNullOrUndefined(item.Label)) {
	                    ser.UpdateNameFormula(ChartUtility.ReferencesToFormula([item.Label]));
	                } else {
	                    ser.UpdateNameFormula(keyword_null);
	                }
	                ser.UpdateXValuesFormula(ChartUtility.ReferencesToFormula(item.Categories));
	                ser.UpdateValuesFormula(ChartUtility.ReferencesToFormula(item.Data));
	            }
	        };
	        prototype.AddSersForVolumeStock = function (structures) {
	            var colSers = structures.filter(function (item, i) {
	                return i === 0;
	            });
	            this.AddSersDefault(colSers, 12 );
	            var lineSers = structures.filter(function (item, i) {
	                return i > 0;
	            });
	            this.AddSersForStock(lineSers, 1 );
	        };
	        prototype.AddSersForSunburstOrTreeMap = function (structures, chartType) {
	            var _this = this, count = structures.length, orientation = _this._dataOrientation,
	                chartView = _this.ChartView, sheet = chartView.sheet();
	            if (count > 0) {
	                var startCategoryRangeInfo = getRangeInfoByFormula(sheet, ChartUtility.ReferencesToFormula(structures[count - 1].Categories));
	                var valueReferences = [], isFinedValues = false;
	                for (var i = 0; i < count; i++) {
	                    var nextCategoryRangeInfo = getRangeInfoByFormula(sheet, ChartUtility.ReferencesToFormula(structures[i].Data));
	                    if (isFinedValues === true || ChartUtility.AreValuesAllNum(sheet, nextCategoryRangeInfo.range)) {
	                        isFinedValues = true;
	                        valueReferences.push(structures[i]);
	                    } else if (isContinuousRange(startCategoryRangeInfo, nextCategoryRangeInfo, !!orientation)) {
	                        if (orientation === 1 ) {
	                            startCategoryRangeInfo.range.colCount++;
	                        } else {
	                            startCategoryRangeInfo.range.rowCount++;
	                        }
	                    }
	                }
	                var categoryRange = startCategoryRangeInfo.range;
	                var categoryRefs = keyword_null;
	                if (!isEmptyObject(categoryRange)) {
	                    categoryRefs = new Reference(sheet.name(), categoryRange.row, categoryRange.col, categoryRange.row + categoryRange.rowCount - 1, categoryRange.col + categoryRange.colCount - 1);
	                    categoryRefs = sheet.parent.options.referenceStyle === 1  ? categoryRefs.ToR1C1Text() : categoryRefs.ToA1Text(0, 0);
	                }
	               
	               
	                for (var j = 0; j < valueReferences.length; j++) {
	                    var valueReferencesItem = valueReferences[j];
	                    var ser = new Series(this, chartType);
	                    this._series.push(ser);
	                    var label = valueReferencesItem.Label;
	                    label = label && [label];
	                    ser.UpdateNameFormula(ChartUtility.ReferencesToFormula(label));
	                    ser.UpdateXValuesFormula(categoryRefs);
	                    ser.UpdateValuesFormula(ChartUtility.ReferencesToFormula(valueReferencesItem.Data));
	                }
	            }
	        };
	        prototype.DeleteSeries = function (ser) {
	            var _this = this;
	           
	           
	           
	            _this.UpdatePlotOrders(ser.PlotOrder);
	            var index = _this._series.indexOf(ser);
	            if (index >= 0) {
	                _this._series.splice(index, 1);
	            }
	            _this._chart.HandleElementChanged(4 , _this, ChartConstants.Collection);
	        };
	        prototype.UpdatePlotOrders = function (removedOrder) {
	            for (var _i = 0, _a = this._series; _i < _a.length; _i++) {
	                var item = _a[_i];
	                item.UpdateOrder(removedOrder);
	            }
	        };
	        prototype.Splits = function (source, rowCol) {
	            var result = [];
	            if (rowCol === 1 ) {
	                for (var col = 0; col < source.ColumnCount; col++) {
	                    result.push(ChartUtility.CreateReference(source.Worksheet.name(), source.Row, col + source.Column, source.RowCount, 1));
	                }
	            } else {
	                for (var row = 0; row < source.RowCount; row++) {
	                    result.push(ChartUtility.CreateReference(source.Worksheet.name(), row + source.Row, source.Column, 1, source.ColumnCount));
	                }
	            }
	            return result;
	        };
	        prototype.MapToSourceIndex = function (index) {
	            if (!this._chart.PlotVisibleOnly || index === -1) {
	                return index;
	            }
	            var vIndex = 0;
	            var series = this._series;
	            for (var i = 0; i < series.length; i++) {
	                if (!series[i].IsHidden) {
	                    if (vIndex === index) {
	                        return i;
	                    }
	                    vIndex++;
	                }
	            }
	            return -1;
	        };
	        prototype.SyncOneDimensionSersXValues = function (axisGroup, xValues) {
	            for (var _i = 0, _a = this._series; _i < _a.length; _i++) {
	                var ser = _a[_i];
	                if (ser.AxisGroup === axisGroup) {
	                    var dimension = ChartUtility.GetDimensioin(ser.InnerChartType);
	                    if (dimension === 1) {
	                        ser.SetXValuesInternal(xValues);
	                    }
	                }
	            }
	        };
	        prototype.SyncOneDimensionSersXValuesFormula = function (causedSeries, xValuesFormula) {
	            for (var _i = 0, _a = this._series; _i < _a.length; _i++) {
	                var ser = _a[_i];
	                if (causedSeries !== ser && ser.AxisGroup === causedSeries.AxisGroup) {
	                    var dimension = ChartUtility.GetDimensioin(ser.InnerChartType);
	                    if (dimension === 1) {
	                       
	                        ser.UpdateXValuesFormula(xValuesFormula);
	                    }
	                }
	            }
	        };
	        prototype.RestoreSeries = function (ooPlotArea ) {
	            var _this = this;
	            _this._chart.SuspendElementChanged();
	            _this._series = [];
	            var primaryAxes = ChartUtility.GetPrimaryAxises(ooPlotArea);
	            var sers = [], serArray;
	            var pieCharts = ChartUtility.GetPieCharts(ooPlotArea);
	            var primPieChart = ChartUtility.GetPrimaryPieChart(pieCharts);
	            var plotVisOnly = _this._chart.PlotVisibleOnly;
	            if (ooPlotArea.chartGroups) {
	                for (var _i = 0, _a = ooPlotArea.chartGroups; _i < _a.length; _i++) {
	                    serArray = _this.RestoreSeriesImp(_a[_i], primPieChart, plotVisOnly, primaryAxes);
	                    for (var i = 0; i < serArray.length; i++) {
	                        sers.push(serArray[i]);
	                    }
	                }
	            } else {
	                sers = _this.Restore2016ChartSeriesImp(ooPlotArea, plotVisOnly);
	            }
	            for (var j = 0; j < sers.length; j++) {
	                _this._series.push(sers[j]);
	            }
	            _this._chart.ResumeElementChanged(4 , _this, ChartConstants.Restore);
	        };
	        prototype.Restore2016ChartSeriesImp = function (ooPlotArea, plotVisOnly) {
	            var _this = this, sers = [], ser, innerChartType;
	            var axisGroup = 0;
	            var firstItem;
	            for (var _f = 0, _g = ooPlotArea.plotAreaRegion.series; _f < _g.length; _f++) {
	                var item2 = _g[_f];
	                item2.defaultColors = this._chart._colors;
	                innerChartType = ChartUtility.GetChartTypeBy2016InnerChartType(item2.layoutId);
	                if (innerChartType === 55) {
	                    axisGroup = 1;
	                } else {
	                    axisGroup = 0;
	                }
	                ser = new Series(_this, innerChartType, axisGroup);
	                ser.PlotVisibleOnly = plotVisOnly;
	                sers.push(ser);
	                if (_f === 0) {
	                    firstItem = item2;
	                } else if (!item2.cat && firstItem && firstItem.cat) {
	                   
	                    item2.cat = firstItem.cat;
	                }
	                ser.FromOOModel(item2);
	            }
	            return sers;
	        };
	        prototype.RestoreSeriesImp = function (chartGroup, primPieChart, plotVisOnly, primaryAxes) {
	            var ser, innerChartType, axisGroup;
	            var chart = chartGroup, chartType = chart.chartType;
	            var _this = this, sers = [];
	            if ([10 , 11 , 12 , 13 ].indexOf(chartType) >= 0) {
	                var pieChart = chart;
	                for (var _b = 0, _c = pieChart.ser; _b < _c.length; _b++) {
	                    var item = _c[_b];
	                    innerChartType = ChartUtility.GetChartTypeByPieChart(pieChart, item);
	                    ser = new Series(_this, innerChartType, pieChart === primPieChart ? 0  : 1 );
	                    ser.PlotVisibleOnly = plotVisOnly;
	                    sers.push(ser);
	                    ser.FromOOModel(item);
	                }
	            } else if (chartType === 0 ) {
	                var stockChart = chart;
	                axisGroup = primaryAxes.indexOf(stockChart.axId[0]) >= 0 ? 0  : 1 ;
	                for (var _d = 0, _e = stockChart.ser; _d < _e.length; _d++) {
	                    var item1 = _e[_d];
	                    ser = new Series(_this, 9 , axisGroup);
	                    ser.PlotVisibleOnly = plotVisOnly;
	                    sers.push(ser);
	                    ser.FromOOModel(item1);
	                }
	            } else {
	                axisGroup = primaryAxes.indexOf(chart.axId[0]) >= 0 ? 0  : 1 ;
	               
	                var firstItem;
	                for (var _f = 0, _g = chart.ser; _f < _g.length; _f++) {
	                    var item2 = _g[_f];
	                    innerChartType = ChartUtility.GetChartTypeByChartBase(chart, item2);
	                    ser = new Series(_this, innerChartType, axisGroup);
	                    ser.PlotVisibleOnly = plotVisOnly;
	                    sers.push(ser);
	                    if (_f === 0) {
	                        firstItem = item2;
	                    } else if (!item2.cat && firstItem && firstItem.cat) {
	                       
	                        item2.cat = firstItem.cat;
	                    }
	                    ser.FromOOModel(item2);
	                }
	            }
	            return sers;
	        };
	        prototype.RefreshSeriesIfNeed = function (changedRects, force) {
	            for (var _i = 0, _a = this._series; _i < _a.length; _i++) {
	                var item = _a[_i];
	                item.RefreshValuesIfNeed(changedRects, force);
	            }
	        };
	        prototype.RefreshSeriesIfNeed2 = function (ranges, style) {   
	            if (ChartUtility.GetDimensioin(this._chart.ChartType) === 1) {
	                var validSers = this.GetValidSers();
	                var firstSer = validSers[0];
	                if (!isNullOrUndefined(firstSer) && !isNullOrUndefined(firstSer.XValuesRefers) && firstSer.XValuesRefers.length > 0) {
	                    firstSer.AreAllXValuesDateTime = ChartUtility.AreValuesDateTime(this.ChartView.sheet(), firstSer.XValuesRefers, firstSer.PlotVisibleOnly);
	                }
	            }
	        };
	        prototype.SetSourceData = function (source, rowCol) {
	            this._series.length = 0;
	            this.AddInteral(source, rowCol, keyword_null, keyword_null);
	        };
	        prototype.AddInteral = function (source, rowCol, seriesLabels, categoryLabels, dataLabelsInfo, chartTypes) {
	            var cellRefers = ChartUtility.RangeToReferences(source);
	            if (cellRefers.length > 0) {
	                var structures = this.GenerateSeriesStructures(cellRefers, rowCol, seriesLabels, categoryLabels);
	                if (ChartUtility.IsStockChart(this.Parent.ChartType) && !ChartUtility.AreValuesDateTime(this.ChartView.sheet(), structures[0].Categories)) {
	                    throw new Error("The xValues of stock chart should be date.");
	                }
	                this.AddSers(structures, dataLabelsInfo, chartTypes);
	            }
	        };
	        return SeriesCollection;
	    }());
	    Charts.SeriesCollection = SeriesCollection;
	
	    module.exports = Charts;
	}());

/***/ }),
/* 11 */
/***/ (function(module, exports) {

	module.exports = GC.Spread.Common;

/***/ }),
/* 12 */
/***/ (function(module, exports) {

	module.exports = GC.Spread.CalcEngine;

/***/ }),
/* 13 */
/***/ (function(module, exports) {

	module.exports = GC.Spread.Formatter;

/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

	(function () {
	    'use strict';
	
	    var Charts = __webpack_require__(3);
	    var $ = __webpack_require__(6).GC$,
	        $_inherit = $.inherit,
	        COMMON_MODULE = Charts,
	        ChartElementBase = COMMON_MODULE.ChartElementBase,
	        StatefulChartElementBase = COMMON_MODULE.StatefulChartElementBase,
	        ChartConstants = COMMON_MODULE.ChartConstants,
	        ChartUtility = COMMON_MODULE.ChartUtility,
	        defineProperty = ChartUtility.defineProperty,
	        colorFormatToString = ChartUtility.colorFormatToString,
	        getTransparencyFromColorFormat = ChartUtility.getTransparencyFromColorFormat,
	        UnitHelper = COMMON_MODULE.UnitHelper,
	        isNullOrUndefined = UnitHelper.isNullOrUndefined,
	        ColorSchemeIndex = Charts.ColorSchemeIndex,
	        ChartFormat = __webpack_require__(7).ChartFormat,
	        ColorFormat = Charts.ColorFormat,
	        DrawingText = Charts.DrawingText,
	        GeneralFormatter = __webpack_require__(13).GeneralFormatter,
	        IsSunburstOrTreemapChart = ChartUtility.IsSunburstOrTreemapChart;
	    var keyword_null = null, keyword_undefined = void 0;
	
	    Charts.PointStates = {
	        Explosion: 1,
	        Format: 2,
	        Has3DEffect: 4,
	        InvertIfNegative: 8,
	        MarkerFormat: 16,
	        MarkerSize: 32,
	        MarkerStyle: 64,
	        PictureType: 128,
	        PictureUnit: 256
	    };
	    var Point = (function (_super) {
	        $_inherit(Point, _super);
	
	        function Point(series, index) {
	            var _this = _super.call(this, series) || this;
	            _this._ooPoint = keyword_null;
	            _this._series = series;
	            _this._index = index;
	            _this._pictureUnit = 1;
	            _this._markerSize = 5;
	            _this._markerStyle = 4 ;
	            return _this;
	        }
	
	        var Point_prototype = Point.prototype;
	        defineProperty(Point_prototype, "DataLabel", {
	            get: function () {
	                return this._series.DataLabels.Get(this._index);
	            }
	        });
	        defineProperty(Point_prototype, "Explosion", {
	            get: function () {
	                if (!this.GetState(1)) {
	                    return this._series.Explosion;
	                }
	                return this._explosion;
	            },
	            set: function (value) {
	                if (value !== this._explosion && value >= 0 && value <= 400) {
	                    this._explosion = value;
	                    this.Dirty(1);
	                }
	            }
	        });
	        defineProperty(Point_prototype, "Format", {
	            get: function () {
	                return this.ChartFormat;
	            }
	        });
	        Point_prototype.getFillColor = function (needThemeColor, needRGBA, notAddTransprent) {
	            return colorFormatToString(this.Format.Fill, needThemeColor, needRGBA, notAddTransprent);
	        };
	        Point_prototype.getFillColorTransparency = function () {
	            return getTransparencyFromColorFormat(this.Format.Fill);
	        };
	        Point_prototype.getLineColor = function (needThemeColor, needRGBA, notAddTransprent) {
	            return colorFormatToString(this.Format.Line, needThemeColor, needRGBA, notAddTransprent);
	        };
	        Point_prototype.getLineColorTransparency = function () {
	            return getTransparencyFromColorFormat(this.Format.Line);
	        };
	        defineProperty(Point_prototype, "Has3DEffect", {
	            get: function () {
	                if (!this.GetState(4)) {
	                    return this._series.Has3DEffect;
	                }
	                return this._has3DEffect;
	            },
	            set: function (value) {
	                this._has3DEffect = value;
	                this.Dirty(4);
	            }
	        });
	        defineProperty(Point_prototype, "HasDataLabel", {
	            get: function () {
	                return !this._series.DataLabels.Get(this._index).Deleted;
	            },
	            set: function (value) {
	                this._series.DataLabels.Get(this._index).Deleted = !value;
	            }
	        });
	        defineProperty(Point_prototype, "InvertIfNegative", {
	            get: function () {
	                if (!this.GetState(8)) {
	                    return this._series.InvertIfNegative;
	                }
	                return this._invertIfNegative;
	            },
	            set: function (value) {
	                this._invertIfNegative = value;
	                this.Dirty(8);
	            }
	        });
	        defineProperty(Point_prototype, "MarkerFormat", {
	            get: function () {
	                var _this = this;
	                if (isNullOrUndefined(_this._markerFormat)) {
	                    _this._markerFormat = _this.CreateMarkerFormat();
	                }
	                return _this._markerFormat;
	            }
	        });
	        defineProperty(Point_prototype, "MarkerSize", {
	            get: function () {
	                if (!this.GetState(32)) {
	                    return this._series.MarkerSize;
	                }
	                return this._markerSize;
	            },
	            set: function (value) {
	                this._markerSize = value;
	                this.Dirty(32);
	            }
	        });
	        defineProperty(Point_prototype, "MarkerStyle", {
	            get: function () {
	                if (!this.GetState(64)) {
	                    return this._series.MarkerStyle;
	                }
	                return this._markerStyle;
	            },
	            set: function (value) {
	                this._markerStyle = value;
	                this.Dirty(64);
	            }
	        });
	        defineProperty(Point_prototype, "Parent", {
	            get: function () {
	                return this._series;
	            }
	        });
	        defineProperty(Point_prototype, "PictureType", {
	            get: function () {
	                if (!this.GetState(128)) {
	                    return this._series.PictureType;
	                }
	                return this._pictureType;
	            },
	            set: function (value) {
	                this._pictureType = value;
	                this.Dirty(128);
	            }
	        });
	        defineProperty(Point_prototype, "PictureUnit", {
	            get: function () {
	                if (!this.GetState(256)) {
	                    return this._series.PictureUnit;
	                }
	                return this._pictureUnit;
	            },
	            set: function (value) {
	                this._pictureUnit = value;
	                this.Dirty(256);
	            }
	        });
	        defineProperty(Point_prototype, "SecondaryPlot", {
	            get: function () {
	                return this._secondaryPlot;
	            },
	            set: function (value) {
	                if (value !== this._secondaryPlot) {
	                    this._secondaryPlot = value;
	                    this.Chart.HandleElementChanged(5, this, ChartConstants.SecondaryPlot);
	                }
	            }
	        });
	        defineProperty(Point_prototype, "Chart", {
	            get: function () {
	                return this._series.SeriesCollection.Parent;
	            }
	        });
	        defineProperty(Point_prototype, "Index", {
	            get: function () {
	                return this._index;
	            }
	        });
	        Point_prototype.SetFillColor = function (sheet, value) {
	            this.Format.Fill.Color.setColor(sheet, value);
	        };
	        Point_prototype.SetFillColorTransparency = function (value) {
	            this.Format.Fill.Color.Transparency = value;
	        };
	        Point_prototype.SetSecondaryPlotInteral = function (value) {
	            this._secondaryPlot = value;
	        };
	        Point_prototype.GetValueText = function (format) {
	            if (format === keyword_undefined) {
	                format = keyword_null;
	            }
	            return this._series.GetPointValueText(this._index, format);
	        };
	        Point_prototype.GetCatText = function () {
	            return this._series.GetCatText(this._index);
	        };
	        Point_prototype.GetPercentageValue = function () {
	            return this._series.GetPercentageValue(this._index);
	        };
	        Point_prototype.CreateFormat = function () {
	            var _this = this;
	            return new ChartFormat(_this._series.SeriesCollection.Parent, _this._series.FormatInternal, _this.AutoFillColorFormat.bind(_this), _this.AutoLineColorFormat.bind(_this));
	        };
	        Point_prototype.GetDefaultFormat = function () {
	            return _super.prototype.GetDefaultFormat.call(this);
	        };
	        Point_prototype.CreateMarkerFormat = function () {
	            var _this = this;
	            return new ChartFormat(_this.Chart, _this._series.MarkerFormat, _this.AutoMarkerColorFormat.bind(_this), _this.AutoMarkerColorFormat.bind(_this));
	        };
	        Point_prototype.AutoFillColorFormat = function () {
	            if (ChartUtility.IsFillSeries(this._series.InnerChartType)) {
	                return this.GenerateAutoColor();
	            }
	            return keyword_null;
	        };
	        Point_prototype.AutoLineColorFormat = function () {
	            if (ChartUtility.IsLineSeries(this._series.InnerChartType)) {
	                return this.GenerateAutoColor();
	            }
	            return keyword_null;
	        };
	        Point_prototype.AutoMarkerColorFormat = function () {
	            if (ChartUtility.IsMarkerSeries(this._series.InnerChartType)) {
	                return this.GenerateAutoColor();
	            }
	            return keyword_null;
	        };
	        Point_prototype.GenerateAutoColor = function () {
	            var index;
	            if (this.IsRenderVaryColors()) {
	                index = this._index;
	            } else {
	                index = this._series.AutoColorIndex;
	            }
	            var autoPointColor = new ColorFormat(this.Chart);
	            autoPointColor.ObjectThemeColor = ColorSchemeIndex["Accent" + (index % 6 + 1)];
	            return autoPointColor;
	        };
	        Point_prototype.IsRenderVaryColors = function () {
	            var varyByCategory = this._series.Parent.VaryByCategories;
	            return (this._series.SeriesCollection.Count === 1 && varyByCategory) ||
	                (ChartUtility.IsAnyPieChart(this._series.InnerChartType) && varyByCategory);
	        };
	        Point_prototype.IsDirtyIncludingParent = function (includingParent) {
	            if (includingParent === keyword_undefined) {
	                includingParent = false;
	            }
	            var _this = this;
	            if (!isNullOrUndefined(_this._format) && _this._format.IsDirtyIncludingParent(includingParent)) {
	                return true;
	            }
	            if (!isNullOrUndefined(_this._markerFormat) && _this._markerFormat.IsDirtyIncludingParent(includingParent)) {
	                return true;
	            }
	            return _super.prototype.IsDirtyIncludingParent.call(_this, includingParent);
	        };
	        Point_prototype.OnParentChanged = function (newParent) {
	            var _this = this;
	            _this._series = newParent;
	            if (!isNullOrUndefined(_this._format)) {
	                _this._format.ParentStateful = _this._series.ChartFormat;
	            }
	            if (!isNullOrUndefined(_this._markerFormat)) {
	                _this._markerFormat.ParentStateful = _this._series.MarkerFormat;
	            }
	        };
	        Point_prototype.IsNegative = function () {
	            return this._series.Values[this._index] < 0;
	        };
	        Point_prototype.MapToSourceIndex = function (index) {
	            var _this = this;
	            if (!_this._series.PlotVisibleOnly || !_this._series.HasRefers(1 ) || !_this._series.HasHiddenValues()) {
	                return index;
	            }
	            var srcIndex = 0;
	            var visibleIndex = 0;
	            for (var _i = 0, _a = _this._series.ValuesRefers; _i < _a.length; _i++) {
	                var rect = _a[_i];
	                var sheet = _this._series.Worksheet._GetSheet(rect.WorksheetName);
	                if (rect.RowCount === 1) {
	                    for (var c = rect.Column; c < rect.Column + rect.ColumnCount; c++) {
	                        if (!sheet._GetRange(rect.Row, c).EntireColumn.Hidden) {
	                            if (visibleIndex === index) {
	                                return srcIndex;
	                            }
	                            visibleIndex++;
	                        }
	                        srcIndex++;
	                    }
	                } else if (rect.ColumnCount === 1) {
	                    for (var r = rect.Row; r < rect.Row + rect.RowCount; r++) {
	                        if (!sheet._GetRange(r, rect.Column).EntireRow.Hidden) {
	                            if (visibleIndex === index) {
	                                return srcIndex;
	                            }
	                            visibleIndex++;
	                        }
	                        srcIndex++;
	                    }
	                }
	            }
	            return index;
	        };
	        Point_prototype.FromOOModel = function (ooPoint ) {
	            var _this = this;
	            _this._ooPoint = ooPoint;
	            _this._index = ooPoint.idx;
	            var bubble3D = ooPoint.bubble3D;
	            if (!isNullOrUndefined(bubble3D)) {
	                _this.Has3DEffect = bubble3D;
	            }
	            var pictureOptions = ooPoint.pictureOptions;
	            if (!isNullOrUndefined(pictureOptions)) {
	                _this.FromCT_PictureOptions(pictureOptions);
	            }
	            var explosion = ooPoint.explosion;
	            if (!isNullOrUndefined(explosion)) {
	                _this.Explosion = explosion;
	            }
	            var invertIfNegative = ooPoint.invertIfNegative;
	            if (!isNullOrUndefined(invertIfNegative)) {
	                _this.InvertIfNegative = invertIfNegative;
	            }
	            _super.prototype.FromShapeProperties.call(_this, ooPoint.spPr);
	            var marker = ooPoint.marker;
	            if (!isNullOrUndefined(marker)) {
	                _this.FromCT_Marker(marker);
	            }
	        };
	        Point_prototype.ToOOModel = function () {
	            var _this = this;
	            var dpt = !isNullOrUndefined(_this._ooPoint) ? _this._ooPoint : {} ;
	            dpt.idx = _this._index;
	            if (_this.GetState(4)) {
	                dpt.bubble3D = _this.Has3DEffect;
	            }
	            dpt.pictureOptions = _this.ToCT_PictureOptions();
	            if (ChartUtility.IsPieOrDoughnutChart(_this._series.InnerChartType) && _this.GetState(1)) {
	                dpt.explosion = _this.Explosion;
	            }
	            dpt.invertIfNegative = _this.InvertIfNegative;
	            dpt.spPr = _super.prototype.ToShapeProperties.call(_this);
	            dpt.marker = _this.ToCT_Marker();
	            return dpt;
	        };
	        Point_prototype.ToCT_PictureOptions = function () {
	            var _this = this;
	            var picOptions = {} ;
	            var dirty = false;
	            if (_this.GetState(128)) {
	                picOptions.pictureFormat = _this.PictureType;
	                dirty = true;
	            }
	            if (_this.GetState(256)) {
	                picOptions.pictureStackUnit = _this.PictureUnit;
	                dirty = true;
	            }
	            return dirty ? picOptions : keyword_null;
	        };
	        Point_prototype.FromCT_PictureOptions = function (ooModel ) {
	            var pictureFormat = ooModel.pictureFormat;
	            if (!isNullOrUndefined(pictureFormat)) {
	                this.PictureType = pictureFormat;
	            }
	            var pictureStackUnit = ooModel.pictureStackUnit;
	            if (!isNullOrUndefined(pictureStackUnit)) {
	                this.PictureUnit = pictureStackUnit;
	            }
	        };
	        Point_prototype.ToCT_Marker = function () {
	            var _this = this;
	            var marker = {} ;
	            var dirty = false;
	            if ((!isNullOrUndefined(_this._markerFormat) && _this._markerFormat.IsDirtyIncludingParent()) || _this.IsRenderVaryColors()) {
	                if (isNullOrUndefined(_this._markerFormat)) {
	                    _this._markerFormat = _this.CreateMarkerFormat();
	                }
	                marker.spPr = _this._markerFormat.ToOOModel();
	                dirty = true;
	            }
	            if (_this.GetState(32) || _this.IsRenderVaryColors()) {
	                marker.size = _this.MarkerSize;
	                dirty = true;
	            }
	            if (_this.GetState(64) || _this.IsRenderVaryColors()) {
	                marker.symbol = _this.MarkerStyle;
	                dirty = true;
	            }
	            return dirty ? marker : keyword_null;
	        };
	        Point_prototype.FromCT_Marker = function (ooMarker ) {
	            var _this = this;
	            var spPr = ooMarker.spPr;
	            if (!isNullOrUndefined(spPr)) {
	                if (isNullOrUndefined(_this._markerFormat)) {
	                    _this._markerFormat = _this.CreateMarkerFormat();
	                }
	                _this._markerFormat.FromOOModel(spPr);
	            } else {
	                _this.ClearMarkerFormat();
	            }
	            var size = ooMarker.size;
	            if (!isNullOrUndefined(size)) {
	                _this.MarkerSize = size;
	            }
	            var symbol = ooMarker.symbol;
	            if (!isNullOrUndefined(symbol)) {
	                _this.MarkerStyle = symbol;
	            }
	        };
	        Point_prototype.ClearMarkerFormat = function () {
	            var _this = this;
	            if (!isNullOrUndefined(_this._markerFormat)) {
	                _this._markerFormat.SetParentForChildren(keyword_null);
	                _this._markerFormat.ParentStateful = keyword_null;
	                _this._markerFormat = keyword_null;
	            }
	        };
	        return Point;
	    }(StatefulChartElementBase));
	    Charts.Point = Point;
	    var Points = (function () {
	        function Points(series) {
	            this._points = {};
	            this._series = series;
	        }
	
	        var Points_prototype = Points.prototype;
	        defineProperty(Points_prototype, "Count", {
	            get: function () {
	                return this._series.PointsCount;
	            }
	        });
	        defineProperty(Points_prototype, "Parent", {
	            get: function () {
	                return this._series;
	            }
	        });
	        Points_prototype.Get = function (index) {
	            return this.GetPoint(index);
	        };
	        defineProperty(Points_prototype, "HasDataLabel", {
	            get: function () {
	                var points = this._points;
	                for (var key in points) {  
	                    var item = points[key];
	                    if (!isNullOrUndefined(item) && item.HasDataLabel) {
	                        return true;
	                    }
	                }
	                return false;
	            }
	        });
	        Points_prototype.ItemInternal = function (index) {
	            return this._points[index] || keyword_null;
	        };
	        Points_prototype.GetPoint = function (index) {
	            var _this = this;
	            if (index < 0 || index >= _this.Count) {
	                return keyword_null;
	            }
	            var p = _this._points[index];
	            if (p) {
	                return p;
	            }
	            p = new Point(_this._series, index);
	            _this._points[index] = p;
	            return p;
	        };
	        Points_prototype.GetPoints = function () {
	            return this._points;
	        };
	        Points_prototype.RestorePoints = function (ooDpts) {
	            this.ClearPoints();
	            if (!isNullOrUndefined(ooDpts)) {
	                for (var _i = 0, ooDpts_1 = ooDpts; _i < ooDpts_1.length; _i++) {
	                    var ooPoint = ooDpts_1[_i];
	                    var p = this.GetPoint(ooPoint.idx);
	                    if (!isNullOrUndefined(p)) {
	                        p.FromOOModel(ooPoint);
	                    }
	                }
	            }
	        };
	        Points_prototype.ClearPoints = function () {
	            for (var key in this._points) { 
	                var item = this._points[key];
	                if (!isNullOrUndefined(item)) {
	                    item.ParentStateful = keyword_null;
	                }
	            }
	            this._points = {};
	        };
	        return Points;
	    }());
	    Charts.Points = Points;
	    Charts.DataLableStates = {
	        Font: 1,
	        Format: 2,
	        NumberFormat: 4,
	        NumberFormatLinked: 8,
	        Position: 16,
	        Separator: 32,
	        ShowBubbleSize: 64,
	        ShowCategoryName: 128,
	        ShowLegendKey: 256,
	        ShowPercentage: 512,
	        ShowSeriesName: 1024,
	        ShowValue: 2048,
	        ShowLeaderLines: 4096,
	        Text: 8192,
	        AutoText: 16384
	    };
	    var DataLabelBase = (function (_super) {
	        $_inherit(DataLabelBase, _super);
	
	        
	        function DataLabelBase(series, parentLabel) {
	            var _this = _super.call(this, parentLabel) || this;
	            _this._numberFormat = "General";
	            _this._numberFormatLinked = true;
	            _this._separator = ",";
	            _this._showBubbleSize = false;
	            _this._showCategoryName = false;
	            _this._showLegendKey = false;
	            _this._showPercentage = false;
	            _this._showSeriesName = false;
	            _this._showValue = false;
	            _this._showLeaderLines = false;
	            _this._autoText = true;
	            _this._deleted = keyword_null;
	            _this._ooModel = keyword_null;
	            _this._series = series;
	            _this._parentLabel = parentLabel;
	            _this.UpdatePosition();
	            return _this;
	        }
	
	        var DataLabelBase_prototype = DataLabelBase.prototype;
	        defineProperty(DataLabelBase_prototype, "AutoText", {
	            get: function () {
	                var _this = this;
	                if (!_this.GetState(16384) && !isNullOrUndefined(_this._parentLabel)) {
	                    return _this._parentLabel.AutoText;
	                }
	                return _this._autoText;
	            },
	            set: function (value) {
	                this._autoText = value;
	                this.Dirty(16384);
	            }
	        });
	        defineProperty(DataLabelBase_prototype, "Font", {
	            get: function () {
	                return this.ChartTextInternal.Font;
	            }
	        });
	        defineProperty(DataLabelBase_prototype, "Format", {
	            get: function () {
	                return this.ChartFormat;
	            }
	        });
	        defineProperty(DataLabelBase_prototype, "NumberFormat", {
	            get: function () {
	                var _this = this;
	                if (!_this.GetState(4) && !isNullOrUndefined(_this._parentLabel)) {
	                    return _this._parentLabel.NumberFormat;
	                }
	                return !_this._numberFormat ? "General" : _this._numberFormat;
	            },
	            set: function (value) {
	                this.setNumberFormat(value);
	            }
	        });
	        DataLabelBase_prototype.setNumberFormat = function (value) {
	            var _this = this;
	            _this._numberFormat = value;
	            if (!value) {
	                _this.UnDirty(4);
	            } else {
	                _this.Dirty(4);
	            }
	            _this._numberFormatLinked = false;
	            _this.Dirty(8);
	        };
	        defineProperty(DataLabelBase_prototype, "NumberFormatLinked", {
	            get: function () {
	                return this.getNumberFormatLinked();
	            },
	            set: function (value) {
	                this.setNumberFormatLinked(value);
	            }
	        });
	        DataLabelBase_prototype.getNumberFormatLinked = function () {
	            var _this = this;
	            if (!_this.GetState(8) && !isNullOrUndefined(_this._parentLabel)) {
	                return _this._parentLabel.NumberFormatLinked;
	            }
	            return _this._numberFormatLinked;
	        };
	        DataLabelBase_prototype.setNumberFormatLinked = function (value) {
	            var _this = this;
	            _this._numberFormatLinked = value;
	            _this.Dirty(8);
	            if (value) {
	                _this._numberFormat = keyword_null;
	                _this.UnDirty(4);
	            }
	        };
	        defineProperty(DataLabelBase_prototype, "Position", {
	            get: function () {
	                var _this = this;
	                if (!_this.GetState(16) && !isNullOrUndefined(_this._parentLabel)) {
	                    return _this._parentLabel.Position;
	                }
	                return _this._position;
	            },
	            set: function (value) {
	                if (this.IsPositionValid(value)) {
	                    this._position = value;
	                    this.Dirty(16);
	                }
	            }
	        });
	        defineProperty(DataLabelBase_prototype, "Separator", {
	            get: function () {
	                var _this = this;
	                if (!_this.GetState(32) && !isNullOrUndefined(_this._parentLabel)) {
	                    return _this._parentLabel.Separator;
	                }
	                return _this._separator;
	            },
	            set: function (value) {
	                this._separator = value;
	                this.Dirty(32);
	            }
	        });
	        defineProperty(DataLabelBase_prototype, "ShowBubbleSize", {
	            get: function () {
	                var _this = this;
	                if (!_this.GetState(64) && !isNullOrUndefined(_this._parentLabel)) {
	                    return _this._parentLabel.ShowBubbleSize;
	                }
	                return _this._showBubbleSize;
	            },
	            set: function (value) {
	                this._showBubbleSize = value;
	                this.Dirty(64);
	            }
	        });
	        defineProperty(DataLabelBase_prototype, "ShowCategoryName", {
	            get: function () {
	                var _this = this;
	                if (!_this.GetState(128) && !isNullOrUndefined(_this._parentLabel)) {
	                    return _this._parentLabel.ShowCategoryName;
	                }
	                return _this._showCategoryName;
	            },
	            set: function (value) {
	                this._showCategoryName = value;
	                this.Dirty(128);
	            }
	        });
	        defineProperty(DataLabelBase_prototype, "ShowLegendKey", {
	            get: function () {
	                var _this = this;
	                if (!_this.GetState(256) && !isNullOrUndefined(_this._parentLabel)) {
	                    return _this._parentLabel.ShowLegendKey;
	                }
	                return _this._showLegendKey;
	            },
	            set: function (value) {
	                this._showLegendKey = value;
	                this.Dirty(256);
	            }
	        });
	        defineProperty(DataLabelBase_prototype, "ShowPercentage", {
	            get: function () {
	                var _this = this;
	                if (!_this.GetState(512) && !isNullOrUndefined(_this._parentLabel)) {
	                    return _this._parentLabel.ShowPercentage;
	                }
	                return _this._showPercentage;
	            },
	            set: function (value) {
	                this._showPercentage = value;
	                this.Dirty(512);
	            }
	        });
	        defineProperty(DataLabelBase_prototype, "ShowSeriesName", {
	            get: function () {
	                var _this = this;
	                if (!_this.GetState(1024) && !isNullOrUndefined(_this._parentLabel)) {
	                    return _this._parentLabel.ShowSeriesName;
	                }
	                return _this._showSeriesName;
	            },
	            set: function (value) {
	                this._showSeriesName = value;
	                this.Dirty(1024);
	            }
	        });
	        defineProperty(DataLabelBase_prototype, "ShowValue", {
	            get: function () {
	                var _this = this;
	                if (!_this.GetState(2048) && !isNullOrUndefined(_this._parentLabel)) {
	                    return _this._parentLabel.ShowValue;
	                }
	                return _this._showValue;
	            },
	            set: function (value) {
	                this._showValue = value;
	                this.Dirty(2048);
	            }
	        });
	        defineProperty(DataLabelBase_prototype, "ShowLeaderLines", {
	            get: function () {
	                var _this = this;
	                if (!_this.GetState(4096) && !isNullOrUndefined(_this._parentLabel)) {
	                    return _this._parentLabel.ShowLeaderLines;
	                }
	                return _this._showLeaderLines;
	            },
	            set: function (value) {
	                this._showLeaderLines = value;
	                this.Dirty(4096);
	            }
	        });
	        defineProperty(DataLabelBase_prototype, "LeaderLines", {
	            get: function () {
	                var _this = this;
	                if (isNullOrUndefined(_this._leaderLines)) {
	                    _this._leaderLines = _this.CreateLeaderLines();
	                }
	                return _this._leaderLines;
	            }
	        });
	        DataLabelBase_prototype.IsDirtyIncludingParent = function (includingParent) {
	            if (includingParent === keyword_undefined) {
	                includingParent = false;
	            }
	            var _this = this;
	            if (!isNullOrUndefined(_this._chartText) && _this._chartText.Font.IsDirtyIncludingParent(includingParent)) {
	                return true;
	            }
	            if (!isNullOrUndefined(_this._format) && _this._format.IsDirtyIncludingParent(includingParent)) {
	                return true;
	            }
	            return _super.prototype.IsDirtyIncludingParent.call(_this, includingParent);
	        };
	        DataLabelBase_prototype.OnParentChanged = function (newParent) {
	            var _this = this;
	            _this._parentLabel = newParent;
	            if (!isNullOrUndefined(_this._parentLabel)) {
	                if (!isNullOrUndefined(_this._format)) {
	                    _this._format.ParentStateful = _this._parentLabel.ChartFormat;
	                }
	                if (!isNullOrUndefined(_this._leaderLines)) {
	                    _this._leaderLines.Format.ParentStateful = _this._parentLabel.LeaderLines.Format;
	                }
	            }
	        };
	        DataLabelBase_prototype.GetDefaultPosition = function () {
	            var chartType = this._series.InnerChartType;
	            if (ChartUtility.IsColumnChart(chartType) || ChartUtility.IsBarChart(chartType)) {
	                if (ChartUtility.IsStackedChart(chartType)) {
	                    return 2;
	                }
	                return 6;
	            } else if (ChartUtility.IsLineChart(chartType) ||
	                ChartUtility.IsScatterChart(chartType) ||
	                ChartUtility.IsBubbleChart(chartType)) {
	                return 7;
	            } else if (ChartUtility.IsPieChart(chartType) || ChartUtility.IsOfPieChart(chartType)) {
	                return 0;
	            }
	           
	            return 2;
	        };
	        DataLabelBase_prototype.IsNoPosition = function () {
	            var chartType = this._series.InnerChartType;
	            return ChartUtility.IsAreaChart(chartType) ||
	                ChartUtility.IsRadarChart(chartType) ||
	                ChartUtility.Is3DChart(chartType) ||
	                ChartUtility.IsDoughnutChart(chartType);
	        };
	        DataLabelBase_prototype.FromOOModel = function (ooLabelBase ) {
	            var _this = this;
	            _this._ooModel = ooLabelBase;
	            var numFmt = ooLabelBase.numFmt;
	            if (!isNullOrUndefined(numFmt)) {
	                _this._numberFormat = numFmt.formatCode;
	                _this.Dirty(4);
	                _this._numberFormatLinked = numFmt.sourceLinked !== false;
	                _this.Dirty(8);
	            }
	            _super.prototype.FromShapeProperties.call(_this, ooLabelBase.spPr);
	            var txPr = ooLabelBase.txPr;
	            var chartType = _this.Chart.ChartType;
	            if (!isNullOrUndefined(txPr)) {
	                var tx = {};
	                tx.rich = txPr;
	                _this.ChartTextInternal.FromOOModel(tx);
	            } else if (IsSunburstOrTreemapChart(chartType)) {
	               
	                var chProperties = {solidFill: {srgbClr: {val: [255, 255, 255]}}};
	                _this.ChartTextInternal._textBody._font.TextCharacterProperties_FromOOModel(chProperties);
	            }
	            var dLblPos = ooLabelBase.dLblPos;
	            if (!isNullOrUndefined(dLblPos)) {
	                _this.Position = dLblPos;
	            }
	            var showBubbleSize = ooLabelBase.showBubbleSize;
	            if (!isNullOrUndefined(showBubbleSize) && ChartUtility.IsBubbleChart(_this._series.InnerChartType)) {
	                _this.ShowBubbleSize = showBubbleSize;
	            }
	            var isSunburstOrTreemapChart = IsSunburstOrTreemapChart(_this._series.InnerChartType);
	            var visibility = ooLabelBase.visibility;
	            var isSunburstVisibleInfo = isSunburstOrTreemapChart && visibility;
	            var showCatName = isSunburstVisibleInfo ? visibility.categoryName : ooLabelBase.showCatName;
	            _this.ShowCategoryName = !isNullOrUndefined(showCatName) ? showCatName : false;
	            var showLegendKey = ooLabelBase.showLegendKey;
	            _this.ShowLegendKey = !isNullOrUndefined(showLegendKey) ? showLegendKey : false;
	            var showPercent = ooLabelBase.showPercent;
	            if (!isNullOrUndefined(showPercent) && ChartUtility.IsPieOrDoughnutChart(_this._series.InnerChartType)) {
	                _this.ShowPercentage = showPercent;
	            }
	            var showSerName = isSunburstVisibleInfo ? visibility.seriesName : ooLabelBase.showSerName;
	            _this.ShowSeriesName = !isNullOrUndefined(showSerName) ? showSerName : false;
	            var showVal = isSunburstVisibleInfo ? visibility.value : ooLabelBase.showVal;
	            _this.ShowValue = !isNullOrUndefined(showVal) ? showVal : false;
	            var separator = ooLabelBase.separator;
	            if (separator && separator !== ",") {
	                _this.Separator = separator;
	            }
	            var ooLabelBase_delete = ooLabelBase.delete;
	            _this._deleted = !isNullOrUndefined(ooLabelBase_delete) ? ooLabelBase_delete : keyword_null;
	        };
	        DataLabelBase_prototype.ToOOModel = function () {
	            var _this = this;
	            var ooModel = _this._ooModel || _this.CreateCT_Dlbl();
	            if (_this.GetState(4) ||
	                _this.GetState(8)) {
	                var numFmt = {
	                    formatCode: _this.NumberFormat
	                } ;
	                if (_this.NumberFormatLinked === false) {
	                    numFmt.sourceLinked = false;   
	                }
	                ooModel.numFmt = numFmt;
	            }
	            ooModel.spPr = _super.prototype.ToShapeProperties.call(_this);
	            if (_this._chartText && _this._chartText.Font.IsDirtyIncludingParent()) {
	                ooModel.txPr = _this._chartText.ToOOModel().rich;
	            }
	            if (!_this.IsNoPosition()) {
	                ooModel.dLblPos = _this.Position;
	            }
	            var isSunburstOrTreemapChart = IsSunburstOrTreemapChart(_this._series.InnerChartType);
	            if (!_this._deleted) {
	                ooModel.showBubbleSize = _this.ShowBubbleSize;
	                ooModel.showLegendKey = _this.ShowLegendKey;
	                ooModel.showPercent = _this.ShowPercentage;
	                if (isSunburstOrTreemapChart) {
	                    ooModel.visibility = {
	                        seriesName: _this.ShowSeriesName,
	                        categoryName: _this.ShowCategoryName,
	                        value: _this.ShowValue
	                    };
	                } else {
	                    ooModel.showCatName = _this.ShowCategoryName;
	                    ooModel.showSerName = _this.ShowSeriesName;
	                    ooModel.showVal = _this.ShowValue;
	                }
	            }
	            if (_this.Separator !== ",") {
	                ooModel.separator = _this.Separator;
	            }
	            return ooModel;
	        };
	        DataLabelBase_prototype.CreateCT_Dlbl = function () {
	            return keyword_null;
	        };
	        DataLabelBase_prototype.GetDefaultChartText = function () {
	            return keyword_null;
	        };
	        DataLabelBase_prototype.IsPositionValid = function (position) {
	            var valid = false;
	            var chartType = this._series.InnerChartType;
	            if (ChartUtility.IsColumnChart(chartType) || ChartUtility.IsBarChart(chartType)) {
	                if (ChartUtility.IsStackedChart(chartType)) {
	                    valid = position === 2 ||
	                        position === 3 ||
	                        position === 4;
	                } else {
	                    valid = position === 2 ||
	                        position === 3 ||
	                        position === 4 ||
	                        position === 6;
	                }
	            } else if (ChartUtility.IsLineChart(chartType) ||
	                ChartUtility.IsScatterChart(chartType) ||
	                ChartUtility.IsBubbleChart(chartType)) {
	                valid = position === 2 ||
	                    position === 5 ||
	                    position === 7 ||
	                    position === 8 ||
	                    position === 1;
	            } else if (ChartUtility.IsPieChart(chartType)) {
	                valid = position === 2 ||
	                    position === 4 ||
	                    position === 6 ||
	                    position === 0;
	            } else if (ChartUtility.IsAreaChart(chartType) ||
	                ChartUtility.IsRadarChart(chartType) ||
	                ChartUtility.Is3DChart(chartType)) {
	                valid = false;
	            }
	            return valid;
	        };
	        DataLabelBase_prototype.UpdatePosition = function () {
	            this._position = this.GetDefaultPosition();
	        };
	        DataLabelBase_prototype.ResetByChartType = function () {
	            this.UpdatePosition();
	        };
	        defineProperty(DataLabelBase_prototype, "Chart", {
	            get: function () {
	                return this._series.SeriesCollection.Parent;
	            }
	        });
	        defineProperty(DataLabelBase_prototype, "ChartText", {
	            get: function () {
	                return this._chartText;
	            }
	        });
	        defineProperty(DataLabelBase_prototype, "ChartTextInternal", {
	            get: function () {
	                var _this = this;
	                if (isNullOrUndefined(_this._chartText)) {
	                    _this._chartText = _this.GetDefaultChartText();
	                }
	                return _this._chartText;
	            }
	        });
	        DataLabelBase_prototype.CreateLeaderLines = function () {
	            return keyword_null;
	        };
	        defineProperty(DataLabelBase_prototype, "HasDataLabelsRange", {
	            get: function () {
	                return !isNullOrUndefined(this._chartText) && !isNullOrUndefined(this._chartText.TextRefer);
	            }
	        });
	        defineProperty(DataLabelBase_prototype, "Series", {
	            get: function () {
	                return this._series;
	            }
	        });
	        return DataLabelBase;
	    }(StatefulChartElementBase ));
	    Charts.DataLabelBase = DataLabelBase;
	    var DataLabels = (function (_super) {
	        $_inherit(DataLabels, _super);
	
	        function DataLabels(series) {
	            var _this = _super.call(this, series, keyword_null) || this;
	            _this._labels = {};
	            _this._series = series;
	            _this._chartText = _this.GetDefaultChartText();
	            _this._showValue = false;
	            _this._showLeaderLines = false;
	            return _this;
	        }
	
	        var DataLabels_prototype = DataLabels.prototype;
	        DataLabels_prototype.CreateFormat = function () {
	            var format = new ChartFormat(this.Chart);
	            format.Fill.Color.ColorType = 0 ;
	            format.Line.Color.ColorType = 0 ;
	            return format;
	        };
	        DataLabels_prototype.GetDefaultChartText = function () {
	            var text = new DrawingText(this.Chart.Parent, this.Chart.ChartArea.Font);
	            var isSunBurstOrTeeemap = IsSunburstOrTreemapChart(this._series.InnerChartType);
	            if (isSunBurstOrTeeemap) {
	               
	                text.Font.Color.setColor(this._series.Worksheet, 'rgb(255,255,255)');
	            }
	            return text;
	
	        };
	        defineProperty(DataLabels_prototype, "Parent", {
	            get: function () {
	                return this._series;
	            }
	        });
	        defineProperty(DataLabels_prototype, "AutoText", {
	            get: function () {
	                return this._autoText;
	            },
	            set: function (value) {
	                for (var i = 0, length = this.Count; i < length; i++) {
	                    var item = this.GetLabel(i);
	                    item.AutoText = value;
	                }
	                this._autoText = value;
	            }
	        });
	        defineProperty(DataLabels_prototype, "Count", {
	            get: function () {
	                return this._series.PointsCount;
	            }
	        });
	        defineProperty(DataLabels_prototype, "NumberFormat", {
	            get: function () {
	                return this.GetNumberFormat();
	            },
	            set: function (value) {
	                _super.prototype.setNumberFormat.call(this, value);
	            }
	        });
	        defineProperty(DataLabels_prototype, "NumberFormatLinked", {
	            get: function () {
	                return _super.prototype.getNumberFormatLinked.call(this);
	            },
	            set: function (value) {
	                if (!value) {
	                    this._numberFormat = this.GetFirstNumberFormat();
	                    this.Dirty(4);
	                }
	                _super.prototype.setNumberFormatLinked.call(this, value);
	            }
	        });
	        DataLabels_prototype.Get = function (index) {
	            return this.GetLabel(index);
	        };
	        DataLabels_prototype.IsDirtyIncludingParent = function (includingParent) {
	            if (includingParent === keyword_undefined) {
	                includingParent = false;
	            }
	            if (!isNullOrUndefined(this._leaderLines) && this._leaderLines.Format.IsDirtyIncludingParent(includingParent)) {
	                return true;
	            }
	            return _super.prototype.IsDirtyIncludingParent.call(this, includingParent);
	        };
	        DataLabels_prototype.CreateLeaderLines = function () {
	            return new DataLabelsLeaderLines(this);
	        };
	        DataLabels_prototype.GetLabel = function (index) {
	            var _this = this;
	            if (index < 0 || index >= _this.Count) {
	                return keyword_null;
	            }
	            var label = _this._labels[index];
	            if (label) {
	                return label;
	            }
	            label = new DataLabel(_this._series, index);
	            _this._labels[index] = label;
	            return label;
	        };
	        DataLabels_prototype.UpdateDeleted = function (deleted) {
	            var labels = this._labels;
	            for (var key in labels) {   
	                var item = labels[key];
	                if (!isNullOrUndefined(item)) {
	                    item.Deleted = deleted;
	                }
	            }
	        };
	        DataLabels_prototype.ResetByChartType = function () {
	            _super.prototype.ResetByChartType.call(this);
	            for (var i = 0, length = this.Count; i < length; i++) {
	                var item = this.GetLabel(i);
	                if (item.IsDirtyIncludingParent()) {
	                    item.ResetByChartType();
	                }
	            }
	        };
	        DataLabels_prototype.GetNumberFormat = function () {
	            var _this = this;
	            var formatCode = _this._numberFormat;
	            if (!_this.GetState(4)) {
	                if (_this.NumberFormatLinked && !isNullOrUndefined(_this._series.ValuesRefers) &&
	                    _this._series.ValuesRefers.length > 0) {
	                    formatCode = _this.GetFirstNumberFormat();
	                } else if (!isNullOrUndefined(_this._parentLabel)) {
	                    formatCode = _this._parentLabel.NumberFormat;
	                }
	            }
	            return formatCode || "General";
	        };
	        DataLabels_prototype.GetFirstNumberFormat = function () {
	            var range = this._series.ValuesRefers[0];
	            var sheet = this._series.Worksheet._GetSheet(range.WorksheetName);
	            var formatCode = keyword_null;
	            if (!isNullOrUndefined(sheet)) {
	                var style = sheet._GetCellStyle(range.Row, range.Column);
	                if (!isNullOrUndefined(style)) {
	                    formatCode = style.FormatCode;
	                }
	            }
	            return formatCode || "General";
	        };
	        DataLabels_prototype.ToOOModel = function () {
	            var _this = this;
	            var dlbls = _super.prototype.ToOOModel.call(_this) ;
	            if (_this.ShowLeaderLines) {
	                dlbls.extLst = {ext: []} ;
	                var dlbsExt = {uri: '{CE6537A1-D6FC-4f65-9D91-7224C49458BB}'} ;
	                dlbls.extLst.ext.push(dlbsExt);
	               
	                dlbsExt.showLeaderLines = true;
	                dlbls.showLeaderLines = true;
	                if (!isNullOrUndefined(_this._leaderLines)) {
	                    dlbls.leaderLines = _this._leaderLines.ToOOModel();
	                } else {
	                    delete dlbls.leaderLines;
	                }
	            }
	            var dLbl = [];
	            for (var prop in _this._labels) {   
	                var dataLabel = _this._labels[prop];
	                if (!isNullOrUndefined(dataLabel) &&
	                    (!isNullOrUndefined(_this._chartText.TextRefer) || dataLabel.Deleted || dataLabel.IsDirtyIncludingParent())) {
	                    dLbl.push(dataLabel.ToOOModel());
	                }
	            }
	            if (dLbl.length > 0) {
	                dlbls.dLbl = dLbl;
	            }
	            return dlbls;
	        };
	        DataLabels_prototype.FromOOModel = function (ooDLbls ) {
	            var _this = this;
	            _super.prototype.FromOOModel.call(_this, ooDLbls);
	            _this._labels = {};
	            var dLbl = ooDLbls.dLbl;
	            if (!isNullOrUndefined(dLbl)) {
	                for (var _i = 0, _a = dLbl; _i < _a.length; _i++) {
	                    var ooLabel = _a[_i];
	                    var label = _this.GetLabel(ooLabel.idx);
	                    if (!isNullOrUndefined(label)) {
	                        label.FromOOModel(ooLabel);
	                    }
	                }
	            }
	            var showLeaderLines = ooDLbls.showLeaderLines;
	            if (!isNullOrUndefined(showLeaderLines)) {
	                _this.ShowLeaderLines = showLeaderLines;
	            }
	            var leaderLines = ooDLbls.leaderLines;
	            if (!isNullOrUndefined(leaderLines)) {
	                if (isNullOrUndefined(_this._leaderLines)) {
	                    _this._leaderLines = _this.CreateLeaderLines();
	                }
	                _this._leaderLines.FromOOModel(leaderLines);
	            } else {
	                _this._leaderLines = keyword_null;
	            }
	        };
	        DataLabels_prototype.CreateCT_Dlbl = function () {
	            return {dLbl: []} ;
	        };
	        DataLabels_prototype._copyProperties = function (src) {
	            var _this = this;
	            _this.Separator = src.Separator;
	            _this.ShowBubbleSize = src.ShowBubbleSize;
	            _this.ShowCategoryName = src.ShowCategoryName;
	            _this.ShowLegendKey = src.ShowLegendKey;
	            _this.ShowPercentage = src.ShowPercentage;
	            _this.ShowSeriesName = src.ShowSeriesName;
	            _this.ShowValue = src.ShowValue;
	            _this.ShowLeaderLines = src.ShowLeaderLines;
	            _this.Position = src.Position;
	        };
	
	        return DataLabels;
	    }(DataLabelBase));
	    Charts.DataLabels = DataLabels;
	    var DataLabel = (function (_super) {
	        $_inherit(DataLabel, _super);
	
	        function DataLabel(series, index) {
	            var _this = _super.call(this, series, series.DataLabels) || this;
	            _this._series = series;
	            _this._index = index;
	            return _this;
	        }
	
	        var DataLabel_prototype = DataLabel.prototype;
	        DataLabel_prototype.CreateFormat = function () {
	            var format = new ChartFormat(this.Chart, this._series.DataLabels.Format);
	            format.Fill.Color.ColorType = 0 ;
	            format.Line.Color.ColorType = 0 ;
	            return format;
	        };
	        DataLabel_prototype.GetDefaultChartText = function () {
	            var chart = this._series.SeriesCollection.Parent;
	            return new DrawingText(chart.Parent, this._series.DataLabels.Font);
	        };
	        defineProperty(DataLabel_prototype, "Parent", {
	            get: function () {
	                return this._series.Points.Get(this._index);
	            }
	        });
	        defineProperty(DataLabel_prototype, "AutoText", {
	            get: function () {
	                return this._autoText;
	            },
	            set: function (value) {
	                var _this = this;
	                if (_this._autoText !== value) {
	                    if (!value) {
	                        _this.ChartTextInternal.Text = _this.GetAutoText();
	                        _this.Dirty(8192);
	                    }
	                    _this._autoText = value;
	                }
	            }
	        });
	        defineProperty(DataLabel_prototype, "NumberFormat", {
	            get: function () {
	                return this.GetNumberFormat();
	            },
	            set: function (value) {
	                _super.prototype.setNumberFormat.call(this, value);
	            }
	        });
	        defineProperty(DataLabel_prototype, "NumberFormatLinked", {
	            get: function () {
	                return _super.prototype.getNumberFormatLinked.call(this);
	            },
	            set: function (value) {
	                if (!value) {
	                    this._numberFormat = this.GetNumberFormat();
	                    this.Dirty(4);
	                }
	                _super.prototype.setNumberFormatLinked.call(this, value);
	            }
	        });
	        defineProperty(DataLabel_prototype, "Text", {
	            get: function () {
	                return this.GetText();
	            },
	            set: function (value) {
	                var _this = this;
	                _this.ChartTextInternal.Text = value;
	                _this.Dirty(8192);
	                _this._autoText = false;
	                _this.Dirty(16384);
	            }
	        });
	        DataLabel_prototype.Delete = function () {
	            this._deleted = true;
	        };
	        DataLabel_prototype.CreateLeaderLines = function () {
	            return new DataLabelLeaderLines(this);
	        };
	        defineProperty(DataLabel_prototype, "Deleted", {
	            get: function () {
	                return isNullOrUndefined(this._deleted) ? false : this._deleted;
	            },
	            set: function (value) {
	                this._deleted = value;
	                if (!value) {
	                    this.ShowValue = true;
	                    this.ShowLeaderLines = true;
	                }
	            }
	        });
	        defineProperty(DataLabel_prototype, "ParentLabels", {
	            get: function () {
	                return this._parentLabel;
	            }
	        });
	        DataLabel_prototype.GetNumberFormat = function () {
	            var _this = this;
	            var formatCode = _this._numberFormat;
	            if (!_this.GetState(4)) {
	                var ranges = _this._series.ValuesRefers;
	                if (_this.NumberFormatLinked && !isNullOrUndefined(ranges) && ranges.length > 0) {
	                    var returnObj = {sheet: keyword_null, row: -1, col: -1};
	                    _this._series.GetRowColIndex(ranges, _this._index, returnObj);
	                    var sheet = returnObj.sheet;
	                    var row = returnObj.row;
	                    var col = returnObj.col;
	                    if (!isNullOrUndefined(sheet) && row !== -1 && col !== -1) {
	                        var style = sheet._GetCellStyle(row, col);
	                        if (!isNullOrUndefined(style)) {
	                            formatCode = style.FormatCode;
	                        }
	                    }
	                } else if (!isNullOrUndefined(_this._parentLabel)) {
	                    formatCode = _this._parentLabel.NumberFormat;
	                }
	            }
	            return formatCode || "General";
	        };
	        DataLabel_prototype.GetText = function () {
	            if (this.AutoText) {
	                return this.GetAutoText();
	            }
	            return this._chartText.Text;
	        };
	        DataLabel_prototype.GetAutoText = function () {
	            var _this = this;
	            var textArray = [];
	            var needSeparator = false;
	            if (_this.ShowSeriesName) {
	                var name = _this._series.Name;
	                textArray.push(!isNullOrUndefined(name) ? name : "");
	                needSeparator = true;
	            }
	            if (_this.ShowCategoryName) {
	                if (needSeparator) {
	                    textArray.push(_this.Separator);
	                }
	                textArray.push(_this._series.GetCatText(_this._index));
	                needSeparator = true;
	            }
	            if (_this.ShowValue) {
	                if (needSeparator) {
	                    textArray.push(_this.Separator);
	                }
	                textArray.push(_this._series.GetPointValueText(_this._index, _this.NumberFormat));
	                needSeparator = true;
	            }
	            if (_this.ShowBubbleSize && ChartUtility.IsBubbleChart(_this._series.InnerChartType)) {
	                if (needSeparator) {
	                    textArray.push(_this.Separator);
	                }
	                textArray.push(_this._series.BubbleSizes[_this._index].toString());
	                needSeparator = true;
	            }
	            if (_this.ShowPercentage && ChartUtility.IsPieOrDoughnutChart(_this._series.InnerChartType)) {
	                if (needSeparator) {
	                    textArray.push(_this.Separator);
	                }
	                textArray.push(_this.GetPercentText());
	            }
	            return textArray.join('');
	        };
	        DataLabel_prototype.GetValueText = function () {
	            var _this = this;
	            if (!_this.GetState(8192)) {
	                return _this._chartText.Text;
	            }
	            if (_this.NumberFormatLinked) {
	                return _this._series.GetPointValueText(_this._index);
	            }
	           
	           
	            return _this._series.GetPointValueText(_this._index, _this.NumberFormat);
	        };
	        DataLabel_prototype.GetPercentText = function () {
	            var numFormat = this.GetNumberFormat();
	            var formatter = new GeneralFormatter(numFormat === "General" ? "0%" : numFormat);
	            var percentValue = this._series.GetPercentageValue(this._index);
	            return formatter.format(percentValue);
	        };
	        DataLabel_prototype.FromOOModel = function (ooModel ) {
	            var _this = this;
	            _super.prototype.FromOOModel.call(_this, ooModel);
	            _this._index = ooModel.idx;
	            if (!isNullOrUndefined(ooModel.tx)) {
	                var origRich = ooModel.tx.rich;
	                if (isNullOrUndefined(ooModel.tx.rich) && !isNullOrUndefined(ooModel.txPr)) {
	                    ooModel.tx.rich = ooModel.txPr;
	                }
	                _this.ChartTextInternal.FromOOModel(ooModel.tx);
	                var showDataLabelsRange = false;
	                var extLst = ooModel.extLst;
	                if (!isNullOrUndefined(extLst) && !isNullOrUndefined(extLst.ext)) {
	                    for (var _i = 0, _a = extLst.ext; _i < _a.length; _i++) {
	                        var ext = _a[_i];
	                        if (ext.showDataLabelsRange) {
	                            showDataLabelsRange = true;
	                            break;
	                        }
	                    }
	                }
	                if (showDataLabelsRange) {
	                    _this._autoText = true;
	                    _this.UnDirty(16384);
	                } else {
	                    _this._autoText = false;
	                    _this.Dirty(16384);
	                    _this.Dirty(8192);
	                }
	                ooModel.tx.rich = origRich;
	            } else if (!isNullOrUndefined(ooModel.txPr)) {
	                var tx = {};
	                tx.rich = ooModel.txPr;
	                _this.ChartTextInternal.FromOOModel(tx);
	                _this._autoText = true;
	                _this.UnDirty(16384);
	            }
	        };
	        DataLabel_prototype.ToOOModel = function () {
	            var _this = this;
	            if (_this.Deleted) {
	                var deletedModel = {} ;
	                deletedModel.idx = _this._index;
	                deletedModel.delete = true;
	                return deletedModel;
	            }
	            var ooModel = _super.prototype.ToOOModel.call(_this);
	            ooModel.idx = _this._index;
	            var extLst = ooModel.extLst;
	            if (!isNullOrUndefined(extLst) && !isNullOrUndefined(extLst.ext) &&
	                extLst.ext.length > 0) {
	                var layoutExt = keyword_null;
	                var exts = extLst.ext;
	                var index;
	                for (var i = 0, len = exts.length; i < len; i++) {
	                    var item = exts[i];
	                    if (!isNullOrUndefined(item.layout)) {
	                        layoutExt = item;
	                        index = i;
	                        break;
	                    }
	                }
	                if (!isNullOrUndefined(layoutExt)) {
	                    extLst.ext.splice(index, 1);
	                    var layout = layoutExt.layout;
	                    var ooModel_layout = ooModel.layout;
	                    if (!isNullOrUndefined(layout)) {
	                        if (!isNullOrUndefined(layout.extLst)) {
	                            ooModel_layout.extLst = layout.extLst;
	                        }
	                        var manualLayout = layout.manualLayout;
	                        if (!isNullOrUndefined(manualLayout)) {
	                            if (isNullOrUndefined(ooModel_layout.manualLayout)) {
	                                ooModel_layout.manualLayout = manualLayout;
	                            } else {
	                                var ooModel_layout_manualLayout = ooModel_layout.manualLayout;
	                                if (!isNullOrUndefined(manualLayout.x)) {
	                                    ooModel_layout_manualLayout.x = manualLayout.x;
	                                }
	                                if (!isNullOrUndefined(manualLayout.y)) {
	                                    ooModel_layout_manualLayout.y = manualLayout.y;
	                                }
	                                if (!isNullOrUndefined(manualLayout.w)) {
	                                    ooModel_layout_manualLayout.w = manualLayout.w;
	                                }
	                                if (!isNullOrUndefined(manualLayout.h)) {
	                                    ooModel_layout_manualLayout.h = manualLayout.h;
	                                }
	                            }
	                        }
	                    }
	                }
	                ooModel.extLst = keyword_null;
	            }
	            var tx ;
	            var parentLabels = _this.ParentLabels;
	            if (!isNullOrUndefined(parentLabels) &&
	                parentLabels.ShowDataLabelsRange && !isNullOrUndefined(parentLabels.ChartText) && !isNullOrUndefined(parentLabels.ChartText.TextRefer)) {
	                tx = _this._chartText.ToOOModel();
	                ooModel.tx = tx;
	                ooModel.txPr = keyword_null;
	                ooModel.extLst = {ext: []} ;
	                var ext = {} ;
	                ext.uri = "{CE6537A1-D6FC-4f65-9D91-7224C49458BB}";
	                ext.dlblFieldTable = {dlblFTEntry: []} ;
	                ext.showDataLabelsRange = true;
	                ooModel.extLst.ext.push(ext);
	            } else if (_this.AutoText && !isNullOrUndefined(_this._chartText)) {
	                ooModel.txPr = _this._chartText.ToOOModel().rich;
	                ooModel.tx = keyword_null;
	            } else if (!isNullOrUndefined(_this._chartText)) {
	                tx = _this._chartText.ToOOModel();
	                if (!isNullOrUndefined(_this._chartText.TextRefer)) {
	                    ooModel.tx = {};
	                    ooModel.tx.strRef = tx.strRef;
	                    ooModel.txPr = tx.rich;
	                } else {
	                    ooModel.tx = tx;
	                    ooModel.txPr = keyword_null;
	                }
	            }
	            return ooModel;
	        };
	        DataLabel_prototype.CreateCT_Dlbl = function () {
	            var label = {} ;
	            label.layout = {} ;
	            return label;
	        };
	        return DataLabel;
	    }(DataLabelBase));
	    Charts.DataLabel = DataLabel;
	    var DblsLeaderLinesBase = (function (_super) {
	        $_inherit(DblsLeaderLinesBase, _super);
	
	        function DblsLeaderLinesBase(dataLabelBase) {
	            var _this = _super.call(this) || this;
	            _this._ooLines = keyword_null;
	            _this._dataLabelBase = dataLabelBase;
	            return _this;
	        }
	
	        var DblsLeaderLinesBase_prototype = DblsLeaderLinesBase.prototype;
	        defineProperty(DblsLeaderLinesBase_prototype, "Format", {
	            get: function () {
	                return this.ChartFormat;
	            }
	        });
	        DblsLeaderLinesBase_prototype.GetDefaultFormat = function () {
	            var format = _super.prototype.GetDefaultFormat.call(this);
	            var line = format.Line;
	            var color = line.Color;
	            color.ObjectThemeColor = 1;
	            color.Brightness = 0.65;
	            line.Weight = 1 ;
	            return format;
	        };
	        DblsLeaderLinesBase_prototype.Delete = function () {
	            this._dataLabelBase.ShowLeaderLines = false;
	        };
	        DblsLeaderLinesBase_prototype.FromOOModel = function (t ) {
	            this._ooLines = t;
	            _super.prototype.FromShapeProperties.call(this, t.spPr);
	        };
	        DblsLeaderLinesBase_prototype.ToOOModel = function () {
	            var lines = this._ooLines || {} ;
	            lines.spPr = _super.prototype.ToShapeProperties.call(this);
	            return lines;
	        };
	        return DblsLeaderLinesBase;
	    }(ChartElementBase));
	    Charts.DblsLeaderLinesBase = DblsLeaderLinesBase;
	    var DataLabelsLeaderLines = (function (_super) {
	        $_inherit(DataLabelsLeaderLines, _super);
	
	        function DataLabelsLeaderLines(dataLabels) {
	            return _super.call(this, dataLabels) || this;
	        }
	
	        DataLabelsLeaderLines.prototype.CreateFormat = function () {
	            return new ChartFormat(this._dataLabelBase.Chart);
	        };
	        return DataLabelsLeaderLines;
	    }(DblsLeaderLinesBase));
	    Charts.DataLabelsLeaderLines = DataLabelsLeaderLines;
	    var DataLabelLeaderLines = (function (_super) {
	        $_inherit(DataLabelLeaderLines, _super);
	
	        function DataLabelLeaderLines(dataLabel) {
	            return _super.call(this, dataLabel) || this;
	        }
	
	        DataLabelLeaderLines.prototype.CreateFormat = function () {
	            return new ChartFormat(this._dataLabelBase.Chart, this._dataLabelBase.Series.DataLabels.LeaderLines.Format);
	        };
	        return DataLabelLeaderLines;
	    }(DblsLeaderLinesBase));
	    Charts.DataLabelLeaderLines = DataLabelLeaderLines;
	
	    module.exports = Charts;
	}());

/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

	(function () {
	    'use strict';
	
	    var Charts = __webpack_require__(3);
	    var Common = __webpack_require__(11);
	    var GeneralFormatter = __webpack_require__(13).GeneralFormatter,
	        ColorHelper = Common._ColorHelper,
	        ChartCommon = Charts,
	        DateTimeExtension = ChartCommon.DateTimeExtension,
	        isEmptyObject = Common._Types._isEmptyObject,
	        isNullOrUndefined = ChartCommon.UnitHelper.isNullOrUndefined;
	    var ChartUtility = ChartCommon.ChartUtility,
	        Core = __webpack_require__(6),
	        $ = Core.GC$,
	        colorFormatToString = ChartUtility.colorFormatToString,
	        getTransparencyFromColorFormat = ChartUtility.getTransparencyFromColorFormat,
	        isStockChart = ChartUtility.IsStockChart,
	        isSunburstChart = ChartUtility.IsSunburstChart,
	        IsSunburstOrTreemapChart = ChartUtility.IsSunburstOrTreemapChart,
	        isBarChart = ChartUtility.IsBarChart,
	        isColumnChart = ChartUtility.IsColumnChart,
	        isLineChart = ChartUtility.IsLineChart,
	        getColumnGroupOrBarGroup = ChartUtility.getColumnGroupOrBarGroup,
	        getLineFormatInfo = ChartUtility.getLineFormatInfo;
	    var CATEGORY_NAME = 'x', VALUE_NAME = 'value', COLOR_NAME = 'color',
	        BUBBLE_SIZE_NAME = 'bubbleSizeField', TOOLTIP_X_NAME = 'name';
	    var STOCK_OHLC_TYPE = 'Candlestick', STOCK_HLC_TYPE = 'HighLowOpenClose';
	    var keyword_null = null;
	    var CONST_BAR = 'Bar', CONST_LINE = 'Line', CONST_AREA = 'Area', CONST_SCATTER = 'Scatter',
	        CONST_STACK = 'Stack', CONST_SPLINE = 'Spline', CONST_RADIAL = 'Radial', CONST_POLYGONAL = 'Polygonal',
	        CONST_TREEMAP = 'TreeMap', CONST_RADAR = 'Radar', CONST_SUNBURST = 'Sunburst',
	        CONST_2016_CHART_VALUE_NAME = 'value',
	        CONST_TREEMAP_CAT = 'treeMapCat', CONST_TREEMAP_SUBCAT = 'treeMapSubCat', CONST_LEVEL = 'level';
	    var DATE_FORMAT = "yyyy-MM-dd";
	    var LINE_ANIMATION = [{
	        "mode": "Point",
	        "duration": 1000,
	        "easing": "Linear",
	        "startDelay": 0,
	        "staggering": true
	    }, {
	        "mode": "Point",
	        "duration": 500,
	        "easing": "Linear"
	    }], BAR_ANIMATION = [{
	        "mode": "Point",
	        "duration": 1000,
	        "easing": "Linear",
	        "startDelay": 0,
	        "staggering": false
	    }, {
	        "mode": "Point",
	        "duration": 500,
	        "easing": "Linear"
	    }], PIE_ANIMATION = [{
	        "mode": "All",
	        "duration": 1000,
	        "easing": "Linear",
	        "startDelay": 0
	    }, {
	        "mode": "All",
	        "duration": 500,
	        "easing": "Linear"
	    }];
	
	    function findUnsupportedSeries(seriesArray, blackList) {
	        if (seriesArray.length > 1) {
	            var firstNotAutoXValues;
	            for (var k = 0; k < seriesArray.length; k++) {
	                var series = seriesArray[k][0];
	                if (!firstNotAutoXValues) {
	                    if (!series.XValuesIsAuto()) {
	                        firstNotAutoXValues = series.XValues;
	                    }
	                    continue;
	                }
	                if (!isEqual(firstNotAutoXValues, series.XValues)) {
	                    blackList.push(seriesArray[k][1]);
	                }
	            }
	        }
	    }
	
	    function filterUnsupportedSeries(seriesArray) {
	        var seriesArrayInPrimary = [];
	        var seriesArrayInSecondary = [];
	        for (var i = 0, length = seriesArray.length; i < length; i++) {
	            var series = seriesArray[i];
	            if (series.AxisGroup === 0 ) {
	                seriesArrayInPrimary.push([series, i]);
	            } else {
	                seriesArrayInSecondary.push([series, i]);
	            }
	        }
	
	        var blackList = [];
	        findUnsupportedSeries(seriesArrayInPrimary, blackList);
	        findUnsupportedSeries(seriesArrayInSecondary, blackList);
	
	        var result = [];
	        for (i = 0, length = seriesArray.length; i < length; i++) {
	            if (blackList.indexOf(i) < 0) {
	                result.push(seriesArray[i]);
	            }
	        }
	        return result;
	    }
	
	    function getFirstVisibleSeries(allSers) {
	        for (var i = 0, length = allSers.length; i < length; i++) {
	            if (!allSers[i].IsHidden) {
	                return allSers[i];
	            }
	        }
	    }
	
	    function getAllSers(chart) {
	        var allSers = chart.SeriesCollection.AllSers;
	        if (ChartUtility.IsPieChart(chart.ChartType) && allSers.length > 0) {
	            allSers = [getFirstVisibleSeries(allSers) || allSers[0]];
	        } else if (chart.ChartType === 0 ) {
	            allSers = filterUnsupportedSeries(allSers);
	        }
	        return allSers;
	    }
	
	    function getSeriesName(series, seriesNameCache) {
	        var serName = series.Name, retName = serName;
	        if (!serName) {
	            var seriesIndex = series.SeriesCollection.IndexOfSource(series);
	            if (ChartUtility.IsPieOrDoughnutChart(series.ChartType)) {
	                retName = '' + (seriesIndex + 1);
	            } else {
	                retName = 'Series' + (seriesIndex + 1);
	            }
	        } else if (seriesNameCache) {
	            var count = seriesNameCache[serName];
	            if (count > 0) {
	                for (var i = 0; i < count; i++) {
	                   
	                    retName += ' ';
	                }
	                seriesNameCache[serName]++;
	            } else {
	                seriesNameCache[serName] = 1;
	            }
	        }
	        return retName;
	    }
	
	    function getMarkerInfoForSeries(series, needThemeColor) {
	        if (series.MarkerStyle !== 4 ) {
	            var result = {};
	            var markerFormat = series.MarkerFormat;
	            result.symbolFill = colorFormatToString(markerFormat.Fill, needThemeColor, true);
	            result.symbolStroke = colorFormatToString(markerFormat.Line, needThemeColor, true);
	            var width = markerFormat.Line.Weight;
	            if (width >= 0) {
	                result.symbolStrokeWidth = width;
	            }
	            return result;
	        }
	        return keyword_null;
	    }
	
	    function getLineFormatInfoForSeries(series, needThemeColor, needRGBA) {
	        if (ChartUtility.IsPieOrDoughnutChart(series.ChartType)) {
	            return getLineFormatInfo(series.Points.Get(0), needThemeColor, needRGBA);
	        }
	        return getLineFormatInfo(series, needThemeColor, needRGBA);
	    }
	
	    function getChartInfo(series, chartType, isFirstStockSeries) {
	        var seriesChartType = series.ChartType;
	        var chartInfo;
	        switch (seriesChartType) {
	            case 12
	            :
	            case 6
	            :
	            case 15
	            :
	                chartInfo = {
	                    type: CONST_BAR
	                };
	                break;
	            case 13
	            :
	            case 16
	            :
	            case 14
	            :
	            case 17
	            :
	                chartInfo = {
	                    type: CONST_BAR,
	                    group: CONST_STACK
	                };
	                break;
	            case 19
	            :
	            case 22
	            :
	            case 20
	            :
	            case 23
	            :
	                chartInfo = {
	                    type: CONST_BAR,
	                    swapAxes: true,
	                    group: CONST_STACK
	                };
	                break;
	            case 18
	            :
	            case 21
	            :
	                chartInfo = {
	                    type: CONST_BAR,
	                    swapAxes: true
	                };
	                break;
	            case 9
	            :
	            case 5
	            :
	            case 36
	            :
	                chartInfo = {
	                    type: CONST_LINE
	                };
	                break;
	            case 26
	            :
	            case 35
	            :
	                chartInfo = {
	                    type: CONST_LINE,
	                    symbols: true
	                };
	                break;
	            case 24
	            :
	            case 25
	            :
	                chartInfo = {
	                    type: CONST_LINE,
	                    group: CONST_STACK
	                };
	                break;
	            case 27
	            :
	            case 28
	            :
	                chartInfo = {
	                    type: CONST_LINE,
	                    group: CONST_STACK,
	                    symbols: true
	                };
	                break;
	            case 8
	            :
	            case 7
	            :
	                chartInfo = {
	                    type: CONST_AREA
	                };
	                break;
	            case 37
	            :
	            case 39
	            :
	            case 38
	            :
	            case 40
	            :
	                chartInfo = {
	                    type: CONST_AREA,
	                    group: CONST_STACK
	                };
	                break;
	            case 1
	            :
	                chartInfo = {
	                    type: CONST_SCATTER
	                };
	                break;
	            case 33
	            :
	                chartInfo = {
	                    type: CONST_LINE,
	                    symbols: true,
	                    lineAspect: CONST_SPLINE
	                };
	                break;
	            case 34
	            :
	                chartInfo = {
	                    type: CONST_LINE,
	                    lineAspect: CONST_SPLINE
	                };
	                break;
	            case 11
	            :
	            case 48
	            :
	                chartInfo = {
	                    type: CONST_SCATTER,
	                    size: true
	                };
	                break;
	            case 10
	            :
	            case 4
	            :
	            case 30
	            :
	            case 31
	            :
	            case 29
	            :
	            case 32
	            :
	                chartInfo = {
	                    type: CONST_BAR,
	                    radial: true,
	                    group: CONST_STACK
	                };
	                break;
	            case 3
	            :
	            case 41
	            :
	                chartInfo = {
	                    type: CONST_BAR,
	                    radial: true,
	                    group: CONST_STACK,
	                    doughnut: true
	                };
	                break;
	            case 57
	            :
	                chartInfo = {
	                    type: CONST_SUNBURST
	                };
	                break;
	            case 58
	            :
	                chartInfo = {
	                    type: CONST_TREEMAP
	                };
	                break;
	            case 2
	            :
	                chartInfo = {
	                    type: CONST_RADAR,
	                    swapAxes: true,
	                    radar: true
	                };
	                break;
	            case 43
	            :
	                chartInfo = {
	                    type: CONST_RADAR,
	                    radar: true,
	                    swapAxes: true,
	                    area: true
	                };
	                break;
	            case 42
	            :
	                chartInfo = {
	                    type: CONST_RADAR,
	                    radar: true,
	                    swapAxes: true,
	                    marker: true,
	                    symbols: true
	                };
	                break;
	           
	           
	           
	           
	           
	           
	           
	           
	            default: 
	                chartInfo = {
	                    type: CONST_BAR
	                };
	                break;
	        }
	        if (chartType === 52 ) {
	            if (isFirstStockSeries) {
	                chartInfo.stock = true;
	                chartInfo.stockType = 2;
	            } else if (seriesChartType === 9 ) {
	                chartInfo = {
	                    type: STOCK_OHLC_TYPE,
	                    stockType: 0
	                };
	            }
	        } else if (chartType === 51 ) {
	            if (isFirstStockSeries) {
	                chartInfo.stock = true;
	                chartInfo.stockType = 2;
	            } else if (seriesChartType === 9 ) {
	                chartInfo = {
	                    type: STOCK_HLC_TYPE,
	                    stockType: 1
	                };
	            }
	        } else if (chartType === 50 ) {
	            chartInfo = {
	                type: STOCK_OHLC_TYPE,
	                stockType: 0
	            };
	        } else if (chartType === 49 ) {
	            chartInfo = {
	                type: STOCK_HLC_TYPE,
	                stockType: 1
	            };
	        }
	        var isAutoXValues = series.XValuesIsAuto(),
	            isScatter = (ChartUtility.IsScatterChart(seriesChartType) || ChartUtility.IsBubbleChart(seriesChartType));
	        if (isScatter) {
	            chartInfo.scatter = true;
	            if (isAutoXValues) {
	                chartInfo.needXNames = true;
	            }
	        }
	        return chartInfo;
	    }
	
	    function processDate(value, dateInString) {
	        if (value instanceof Date) {
	            if (dateInString) {
	                return new GeneralFormatter(DATE_FORMAT).format(value);
	            }
	           
	           
	            return DateTimeExtension.ToOADate(value);
	
	        }
	       
	        return value;
	    }
	
	    function getValue(values, index) {
	        var result = values ? values[index] : index + 1;
	       
	       
	       
	        return processDate(result);
	    }
	
	    function getDataItem(radial, serName, xValues, yValues, index, categoryName, valueName, colorName, xInfo, isAreaChart) {
	        var retObj = {};
	        var value = yValues[index], nullValue;
	        if (radial && isNullOrUndefined(value)) {
	            value = 0;
	            nullValue = true;
	        }
	        if (isAreaChart && isNullOrUndefined(value)) {
	            value = 0;
	        }
	        retObj[valueName] = processDate(value);
	        if (radial === true) {
	            retObj[categoryName] = serName;
	            var colorValue = getValue(xValues, index);
	            if (nullValue && isNullOrUndefined(colorValue)) {  
	                return keyword_null;
	            }
	            retObj[colorName] = typeof colorValue === "number" ? "" + colorValue : colorValue;
	        } else {
	            var xValue = getValue(xValues, index);
	            if ((isNullOrUndefined(value) || (isAreaChart && isNullOrUndefined(value))) && isNullOrUndefined(xValue)) {
	                return keyword_null;
	            }
	            retObj[categoryName] = xValue;
	            retObj[colorName] = serName;
	            if (xInfo) {
	                var xNames = xInfo.names;
	                retObj[TOOLTIP_X_NAME] = (xNames && xNames[index] || xValue) + ""; 
	            }
	        }
	        return retObj;
	    }
	
	    var TickMarkMap = {
	        2: "None",
	        3: "Outside",
	        1: "Inside",
	        0: "Cross"
	    };
	
	    function tickMarkToString(tickMark) {
	        return TickMarkMap[tickMark];
	    }
	
	    function getAxisTitleStyle(axis, fontSizeToString, needThemeColor, zoomFactor, needRGBA, notAddTransprent) {
	        var title = axis.AxisTitle;
	        if (title) {
	            var fontSize = title.Font.Size * zoomFactor;
	            if (fontSizeToString) {
	                fontSize += "";
	            }
	            var retValue = {
	                color: colorFormatToString(title.Font, needThemeColor, needRGBA, notAddTransprent),
	                fontFamily: title.Font.Name,
	                fontSize: fontSize
	            };
	            if (!needRGBA) {
	                retValue.transparency = getTransparencyFromColorFormat(title.Font);
	            }
	            return retValue;
	        }
	    }
	
	    var AxisPositionMap = {
	        "bottom": "Near",
	        "top": "Far",
	        "left": "Near",
	        "right": "Far"
	    };
	
	    function getAxisPositionString(axis) {
	        var str;
	        if (axis.Visible === true) {
	            var position = axis.GetAxisPostion();
	            str = AxisPositionMap[position];
	        }
	        return str || "None";
	    }
	
	    function getGridLineInfo(axis) {
	        var result = {
	            majorGrid: !!axis.MajorGridlines,
	            minorGrid: !!axis.MinorGridlines
	        };
	        var gridLineStyle = getGridLineStyle(getLineFormatInfo(axis.MajorGridlines, false, true));
	        if (gridLineStyle) {
	            result.majorGridStyle = gridLineStyle;
	        }
	        gridLineStyle = getGridLineStyle(getLineFormatInfo(axis.MinorGridlines, false, true));
	        if (gridLineStyle) {
	            result.minorGridStyle = gridLineStyle;
	        }
	
	        return result;
	    }
	
	    function getGridLineStyle(gridlineInfo) {
	        if (gridlineInfo) {
	            var lineWidth = gridlineInfo.width, lineColor = gridlineInfo.color;
	            if (lineWidth || lineColor) {
	                var gridLineStyle = {};
	                if (lineWidth) {
	                    gridLineStyle.strokeWidth = lineWidth;
	                }
	                if (lineColor) {
	                    gridLineStyle.stroke = lineColor;
	                }
	                return gridLineStyle;
	            }
	        }
	    }
	
	    function getPercentageMinMax(axis) {
	        if (!axis.MinimumScaleIsAuto && !axis.MaximumScaleIsAuto) {
	            return {min: axis.MinimumScale, max: axis.MaximumScale};
	        }
	        var tempMin = 0, tempMax = 1;
	        var tempMaxMinValue = axis.CalcualteValueAxisMinMax({}, true, true);
	        var maxValue = tempMaxMinValue.Max, minValue = tempMaxMinValue.Min;
	        if (!axis.MaximumScaleIsAuto) {
	            tempMax = axis.MaximumScale;
	        } else if (maxValue <= 0) {
	           
	            tempMax = 0;
	        }
	        if (!axis.MinimumScaleIsAuto) {
	            tempMin = axis.MinimumScale;
	        } else if (minValue < 0) {
	            if (Math.abs(minValue) > maxValue) {
	               
	                tempMin = -1;
	            } else {
	               
	               
	               
	               
	               
	               
	                tempMin = Math.floor(minValue * 5 / maxValue) / 5;
	            }
	        }
	        return {min: tempMin, max: tempMax};
	    }
	
	    function getAxisProperties(axis, needRGBA, notAddTransprent) {
	        var retValue = {
	            visible: axis.Visible,
	            tickLabelPosition: axis.TickLabelPosition === 3 ? 3 : 2,
	            format: axis.TickLabels.NumberFormat,
	            majorTickPosition: axis.MajorTickMark,
	            minorTickPosition: axis.MinorTickMark
	        };
	
	        var majorGridlines = axis.MajorGridlines;
	        var majorGridLine = getLineFormatInfo(majorGridlines, true, needRGBA) || {};
	        majorGridLine.visible = !!majorGridlines;
	        retValue.majorGridLine = majorGridLine;
	
	        var minorGridlines = axis.MinorGridlines;
	        var minorGridLine = getLineFormatInfo(minorGridlines, true, needRGBA) || {};
	        minorGridLine.visible = !!minorGridlines;
	        retValue.minorGridLine = minorGridLine;
	
	        var title = getAxisTitleStyle(axis, false, true, 1, needRGBA, notAddTransprent) || {};
	        title.text = axis.AxisTitle ? axis.AxisTitle.Text : "";
	        retValue.title = title;
	
	        if (!axis.MajorUnitIsAuto) {
	            retValue.majorUnit = axis.MajorUnit;
	        }
	
	        if (!axis.MinorUnitIsAuto) {
	            retValue.minorUnit = axis.MinorUnit;
	        }
	
	        if (axis.IsValueOrDateScaleAxis()) {
	            var min = axis.MinimumScale, max = axis.MaximumScale;
	            if (axis.IsTimeScale()) {
	                min = DateTimeExtension.FromOADate(min);
	                max = DateTimeExtension.FromOADate(max);
	            } else if (isPercentageScaleType(axis.Chart, axis.AxisGroup)) {
	                var tempMinMax = getPercentageMinMax(axis);
	                min = tempMinMax.min;
	                max = tempMinMax.max;
	                if (!retValue.format || axis.TickLabels.NumberFormatLinked) {
	                    retValue.format = "0%";
	                }
	            }
	            if (!axis.MinimumScaleIsAuto) {
	                retValue.min = min;
	            }
	            if (!axis.MaximumScaleIsAuto) {
	                retValue.max = max;
	            }
	        }
	
	        var fontFormat = axis.TickLabels.Font;
	        if (fontFormat) {
	            retValue.style = {
	                color: colorFormatToString(fontFormat, true, needRGBA, notAddTransprent),
	                fontFamily: fontFormat.Name,
	                fontSize: fontFormat.Size
	            };
	            if (!needRGBA) {
	                retValue.style.transparency = getTransparencyFromColorFormat(fontFormat);
	            }
	        }
	
	        var lineInfo = getLineFormatInfo(axis, true, needRGBA, notAddTransprent);
	        if (lineInfo) {
	            var color = "transparent";
	            if (lineInfo.color || (lineInfo.color === '' && notAddTransprent)) {
	                color = lineInfo.color;
	            }
	            retValue.lineStyle = {
	                color: color,
	                width: !isNullOrUndefined(lineInfo.width) ? lineInfo.width : 1
	            };
	            if (!needRGBA) {
	                retValue.lineStyle.transparency = lineInfo.transparency;
	            }
	        }
	
	        if (axis.Type === 0 ) {
	            retValue.categoryType = axis.ActualCategoryType;
	        }
	
	        return retValue;
	    }
	
	   
	    var DAYSDIC = {
	        0 : 1,
	        1 : 31,
	        2 : 365
	    };
	
	    function getUnitScale(axisUnit) {
	        return (DAYSDIC[axisUnit]);
	    }
	
	    function getAxisOptions(axis, type, plotNames, isPercentageScale, isNumberAxis, zoomFactor) {
	        var axisPosition = getAxisPositionString(axis);
	        var gridLineInfo = getGridLineInfo(axis);
	        var chartType = axis.Chart.ChartType;
	        var _isStockChart = isStockChart(chartType);
	        if (_isStockChart) {
	            gridLineInfo.minorGrid = false;
	            delete gridLineInfo.minorGridStyle;
	        }
	        var IsBar = ChartUtility.IsBarChart(chartType);
	        var padding = {};
	        var isYAxis = type === 'Y';
	        var isBarXAxis = !isYAxis && IsBar;
	        var isBarYAxis = isYAxis && IsBar;
	        var isPercentageScaleAxis = isPercentageScale && (( isYAxis && !IsBar) || isBarXAxis);
	        if (type === "X") {
	            padding.bottom = 5;
	            padding.top = 5;
	        } else {
	            padding.left = 5;
	            padding.right = 5;
	        }
	        var retValue = {
	            plots: plotNames,
	            type: type,
	            format: axis.TickLabels.NumberFormat,
	            majorTicks: tickMarkToString(axis.MajorTickMark),
	            minorTicks: tickMarkToString(axis.MinorTickMark),
	            majorGrid: gridLineInfo.majorGrid,
	            minorGrid: gridLineInfo.minorGrid,
	            title: axis.AxisTitle ? axis.AxisTitle.Text : "",
	            titleStyle: getAxisTitleStyle(axis, true, false, zoomFactor),
	            position: axisPosition,
	            labelStyle: {
	                padding: padding
	            }
	        };
	        if (axis.TickLabelPosition === 3) {
	            retValue.labels = false;
	        }
	        var timeScale = axis.IsTimeScale(),
	            actualMajorUnitScale = !axis.MajorUnitIsAuto ? axis.MajorUnitScale : axis.BaseUnit,
	            actualMinorUnitScale = !axis.MinorUnitIsAuto ? axis.MinorUnitScale : axis.BaseUnit,
	            majorUnitScale = timeScale ? getUnitScale(actualMajorUnitScale) : 1,
	            minorUnitScale = timeScale ? getUnitScale(actualMinorUnitScale) : 1;
	        if (!axis.MajorUnitIsAuto) {
	            retValue.majorUnit = axis.MajorUnit * majorUnitScale;
	        }
	        var minorUnit = axis.MinorUnit * minorUnitScale;
	        if (!axis.MinorUnitIsAuto) {
	            retValue.minorUnit = minorUnit;
	        }
	        var isStockYAxis = isYAxis && _isStockChart;
	        var isRadarChart = IsRadarChart(axis.Chart);
	        if (isStockYAxis) {
	            retValue.max = axis.MaximumScale;
	            retValue.min = axis.MinimumScale;
	        } else {
	            var needAutoMinMax = isNumberAxis && !isPercentageScaleAxis;
	            if (!axis.MaximumScaleIsAuto || needAutoMinMax) {
	                var max = axis.MaximumScale;
	               
	               
	               
	               
	               
	               
	               
	               
	               
	                if (timeScale && _isStockChart) {
	                    max = DateTimeExtension.FromOADate(max).valueOf();
	                }
	                retValue.max = max;
	            }
	            if (!axis.MinimumScaleIsAuto || needAutoMinMax) {
	                var min = axis.MinimumScale;
	               
	               
	               
	               
	               
	               
	               
	               
	               
	                if (timeScale && _isStockChart) {
	                    min = DateTimeExtension.FromOADate(min).valueOf();
	                }
	                retValue.min = min;
	            }
	        }
	        if (isYAxis) { 
	            if (isPercentageScaleAxis) {
	                retValue.scale = {
	                    type: "Percentage"
	                };
	            } else if (axis.ScaleType === 0) {
	                retValue.scale = {
	                    type: "Logarithmic"
	                };
	                retValue.logBase = axis.LogBase;
	            }
	           
	           
	           
	           
	           
	           
	           
	        }
	        if (isPercentageScaleAxis && isNumberAxis) {
	            var tempMinMax = getPercentageMinMax(axis);
	            retValue.min = tempMinMax.min;
	            retValue.max = tempMinMax.max;
	            if (!retValue.format || axis.TickLabels.NumberFormatLinked) {
	                retValue.format = "0%";
	            }
	        }
	        var gridLineStyle = gridLineInfo.majorGridStyle;
	        if (gridLineStyle) {
	            retValue.majorGridStyle = gridLineStyle;
	        }
	        gridLineStyle = gridLineInfo.minorGridStyle;
	        if (gridLineStyle) {
	            retValue.minorGridStyle = gridLineStyle;
	        }
	        var fontFormat = axis.TickLabels.Font;
	        if (fontFormat) {
	            retValue.textStyle = {
	                color: colorFormatToString(fontFormat, false, true),
	                fontFamily: fontFormat.Name
	            };
	            if (fontFormat.Size) {
	                retValue.textStyle.fontSize = fontFormat.Size * zoomFactor + "";
	            }
	        }
	        var lineInfo = getLineFormatInfo(axis, false, true);
	        if (lineInfo) {
	            retValue.lineStyle = {
	                stroke: lineInfo.color || "transparent",
	                strokeWidth: !isNullOrUndefined(lineInfo.width) ? lineInfo.width : 1
	            };
	            if (isRadarChart) {
	                retValue.lineStyle.strokeWidth = 0;
	            }
	        }
	        var rotationDegree = axis.TickLabels && axis.TickLabels._chartText &&
	            axis.TickLabels._chartText.TextBody && axis.TickLabels._chartText.TextBody.Rotation;
	        if (rotationDegree) {
	            retValue.labelAngle = rotationDegree;
	        }
	        if (isSunburstChart(axis.Chart.ChartType)) {
	            retValue.position = "None";
	            delete retValue.max;
	            delete retValue.min;
	        }
	       
	        if (isBarYAxis && isPercentageScale) {
	            retValue.scale = {type: "Percentage"};
	        }
	        return retValue;
	    }
	
	    function isPercentageScaleType(chart, axisGroup, allSers) {
	        if (!allSers) {
	            allSers = getAllSers(chart);
	        }
	        var i, ser, chartType;
	        for (i = 0; i < allSers.length; i++) {
	            ser = allSers[i];
	            chartType = ser.ChartType;
	            if (ser.AxisGroup === axisGroup && ChartUtility.IsStacked100Chart(chartType)) {
	                return true;
	            }
	        }
	        return false;
	    }
	
	    function getChartAreaStyle(chartArea, needThemeColor, zoomFactor, needRGBA, notAddTransprent) {
	        var result = {};
	        var chartFormat = chartArea.ChartFormat;
	        if (chartFormat) {
	            if (needRGBA) {
	                result.style = {
	                    backgroundColor: colorFormatToString(chartFormat.Fill, needThemeColor, needRGBA, notAddTransprent)
	                };
	            } else {
	                result.style = {
	                    backgroundColor: colorFormatToString(chartFormat.Fill, needThemeColor, false, notAddTransprent),
	                    transparency: getTransparencyFromColorFormat(chartFormat.Fill)
	                };
	            }
	        }
	        var fontFormat = chartArea.Font;
	        if (fontFormat) {
	            var textStyle = result.textStyle = {};
	            if (needRGBA) {
	                textStyle.color = colorFormatToString(fontFormat, needThemeColor, needRGBA, notAddTransprent);
	            } else {
	                textStyle.color = colorFormatToString(fontFormat, needThemeColor, needRGBA, notAddTransprent);
	                textStyle.transparency = getTransparencyFromColorFormat(fontFormat);
	            }
	            textStyle.fontFamily = fontFormat.Name;
	            var fontSize = fontFormat.Size;
	            if (fontSize > 0) {
	               
	                textStyle.fontSize = fontSize * zoomFactor + "";
	            }
	        }
	        return result;
	    }
	
	    function getChartAreaBorder(chartArea, sheet) {
	        var line = chartArea.Format.Line;
	        if (line.Color && line.Color.ColorType === 0 ) {
	            return keyword_null;
	        }
	        var borderStyle = {};
	        var rgbColor = colorFormatToString(line, true );
	        if (rgbColor) {
	            borderStyle.stroke = sheet.currentTheme().getColor(rgbColor);
	        }
	        var lineWidth = line.Weight > 0 ? line.Weight : 1;
	        borderStyle.strokeWidth = lineWidth;
	        var lineDashType = line.DashStyle;
	        var strokeDasharray;
	        switch (lineDashType) {
	           
	            case 1
	            :
	                strokeDasharray = lineWidth + "," + lineWidth * 3;
	                break;
	            case 2
	            :
	                strokeDasharray = lineWidth * 4 + "," + lineWidth * 3;
	                break;
	            case 3
	            :
	                strokeDasharray = lineWidth * 8 + "," + lineWidth * 3;
	                break;
	            case 4
	            :
	                strokeDasharray = lineWidth * 4 + "," + lineWidth * 3 + "," + lineWidth + "," + lineWidth * 3;
	                break;
	            case 5
	            :
	                strokeDasharray = lineWidth * 8 + "," + lineWidth * 3 + "," + lineWidth + "," + lineWidth * 3;
	                break;
	            case 6
	            :
	                strokeDasharray = lineWidth * 8 + "," + lineWidth * 3 + "," + lineWidth + "," + lineWidth * 3 + "," + lineWidth + "," + lineWidth * 3;
	                break;
	            case 7
	            :
	                strokeDasharray = lineWidth * 3 + "," + lineWidth;
	                break;
	            case 8
	            :
	                strokeDasharray = lineWidth + "," + lineWidth;
	                break;
	            case 9
	            :
	                strokeDasharray = lineWidth * 3 + "," + lineWidth + "," + lineWidth + "," + lineWidth;
	                break;
	            case 10
	            :
	                strokeDasharray = lineWidth * 3 + "," + lineWidth + "," + lineWidth + "," + lineWidth + "," + lineWidth + "," + lineWidth;
	                break;
	        }
	        if (strokeDasharray) {
	            borderStyle.strokeDasharray = strokeDasharray;
	        }
	        return borderStyle;
	    }
	
	    function getPieChartStartAngle(ser) {
	       
	        return ser.Parent.FirstSliceAngle;
	
	       
	       
	       
	       
	       
	    }
	
	    function getLegendPosition(legendPosition) {
	        var legendPositionMap = {
	            1: "Top",
	            4: "Bottom",
	            3: "Left"
	        };
	        return legendPositionMap[legendPosition] || "Right";
	    }
	
	    function getLegendOrientation(legendPosition) {
	        var orientation = "Vertical";
	        if (legendPosition === 1 ||
	            legendPosition === 4) {
	            orientation = "Horizontal";
	        }
	        return orientation;
	    }
	
	    function getLegendTextStyle(legendFont, zoomFactor) {
	        var textStyle = {};
	        var fontColor = colorFormatToString(legendFont, false, true);
	        var fontFamily = legendFont.Name;
	        var fontSize = legendFont.Size;
	        if (fontColor || fontFamily || fontSize > 0) {
	           
	            if (fontColor) {
	                textStyle.color = fontColor;
	            }
	           
	            if (fontFamily) {
	                textStyle.fontFamily = fontFamily;
	            }
	           
	            if (fontSize > 0) {
	                textStyle.fontSize = fontSize * zoomFactor + "";
	            }
	        }
	        return textStyle;
	    }
	
	    function getPlotEncodingValue(chartInfo, valueName, categoryName) {
	        var type = chartInfo.type, isStock = chartInfo.stock;
	        var fieldValue;
	        if (type === STOCK_OHLC_TYPE) {
	            fieldValue = {x: 'date', high: 'high', low: 'low', open: 'open', close: 'close'};
	        } else if (type === STOCK_HLC_TYPE) {
	            fieldValue = {x: 'date', high: 'high', low: 'low', close: 'close'};
	        } else if (isStock) {
	            fieldValue = 'date, volume';
	        } else if (type === CONST_TREEMAP || type === CONST_SUNBURST) {
	            fieldValue = CONST_2016_CHART_VALUE_NAME;
	        } else if (type === CONST_RADAR) {
	            fieldValue = valueName;
	        } else {
	           
	           
	           
	           
	           
	            fieldValue = categoryName + ", " + valueName;
	        }
	        return [
	            {
	                field: fieldValue,
	                excludeNulls: true
	            }
	        ];
	    }
	
	    function getPlotEncodingDetail(chartInfo, colorName, categoryName, series) {
	        var type = chartInfo.type, field = colorName;
	        var catCount = series.GetCatCount();
	        if (type === CONST_SUNBURST || type === CONST_TREEMAP) {
	            field = '';
	            for (var i = 0; i < catCount; i++) {
	                if (i === 0) {
	                    field += 'level' + i;
	                } else {
	                    field += ' > level' + i;
	                }
	            }
	        }
	        var retConfig = {
	            field: field
	        };
	        if (type === CONST_SUNBURST) {
	            retConfig.group = "Stack";
	        }
	        if (chartInfo.group) {
	            retConfig.group = chartInfo.group;
	        }
	        return [retConfig];
	    }
	
	    function getPlotEncodingColor(chartInfo, colorName) {
	        var type = chartInfo.type, field = colorName;
	        if (type === CONST_TREEMAP || type === CONST_SUNBURST) {
	            field = CONST_LEVEL + '0';
	        }
	        return {field: field};
	    }
	
	    function getDataLabelTemplate(dataLabels, seriesName, colorName, categoryName, valueName, chartInfo, categoryCount) {
	        var showValue = dataLabels.ShowValue;
	        var showCategoryName = dataLabels.ShowCategoryName;
	        var showSeriesName = dataLabels.ShowSeriesName;
	        var showPercentage = dataLabels.ShowPercentage;
	        var items = [];
	        var radial = chartInfo.radial;
	        var chartType = chartInfo.type;
	        var isSunburstOrTreeMapChart = chartType === CONST_TREEMAP || chartType === CONST_SUNBURST;
	       
	        if (isSunburstOrTreeMapChart) {
	            return keyword_null;
	        }
	        if (showSeriesName) {
	            items.push("{" + (radial ? categoryName : colorName) + ".value}");
	           
	           
	           
	        }
	        if (showCategoryName) {
	            if (chartType === CONST_TREEMAP) {
	                items.push("{" + CONST_TREEMAP_CAT + "}\n{" + CONST_TREEMAP_SUBCAT + "}");
	            } else if (chartType === CONST_SUNBURST) {
	                var template = '';
	                for (var i = 0; i < categoryCount; i++) {
	                    template += "{" + CONST_LEVEL + i + "} ";
	                }
	                items.push(template);
	            } else {
	                items.push("{" + (radial ? colorName : categoryName) + ".value}");
	            }
	        }
	        if (showValue) {
	            var valueFormat = "";
	           
	            var dataLabelFormat = dataLabels.NumberFormat;
	            if (dataLabelFormat) {
	                valueFormat = ": " + dataLabelFormat;  
	            }
	            items.push("{" + valueName + ".value" + valueFormat + "}");
	
	        }
	        if (showPercentage) {
	            items.push("{PercentageCategory:0%}");
	           
	           
	           
	        }
	        return items.length > 0 ? items.join(dataLabels.Separator) : keyword_null;
	    }
	
	    function getDataLabelFields(dataLabels, seriesName, colorName, categoryName, valueName, chartInfo, categoryCount) {
	        if (!dataLabels) {
	            return keyword_null;
	        }
	        var showValue = dataLabels.ShowValue;
	        var showCategoryName = dataLabels.ShowCategoryName;
	        var showSeriesName = dataLabels.ShowSeriesName;
	        var showPercentage = dataLabels.ShowPercentage;
	        var radial = chartInfo.radial;
	        var chartType = chartInfo.type;
	        var isSunburstOrTreeMapChart = chartType === CONST_SUNBURST || chartType === CONST_TREEMAP;
	        var labelTextField = [];
	        if (showValue || showPercentage) {
	            if (isSunburstOrTreeMapChart) {
	                labelTextField.push({field: CONST_2016_CHART_VALUE_NAME});
	            } else {
	                labelTextField.push({field: valueName});
	            }
	        }
	        if (showCategoryName) {
	            if (isSunburstOrTreeMapChart) {
	                for (var i = 0; i < categoryCount; i++) {
	                    labelTextField.push({field: CONST_LEVEL + i});
	                }
	            } else {
	                labelTextField.push({field: radial ? colorName : categoryName});
	            }
	        }
	        if (showSeriesName) {
	            if (isSunburstOrTreeMapChart) {
	                labelTextField.push({field: seriesName});
	            } else {
	                labelTextField.push({field: radial ? categoryName : colorName});
	            }
	        }
	       
	       
	        var result;
	        if (isSunburstOrTreeMapChart) {
	            result = {
	                "field": "level0"
	            };
	        } else {
	            result = labelTextField.length > 0 ? labelTextField : keyword_null;
	        }
	        return result;
	    }
	
	    function getTooltipTemplate(chartInfo, colorName, categoryName, valueName, format) {
	        var type = chartInfo.type, isStock = chartInfo.stock, radial = chartInfo.radial, isScatter = chartInfo.scatter;
	        var template;
	        if (type === STOCK_OHLC_TYPE) {
	            template = "{date.name}:{date.value}\n{high.name}:{high.value}\n{low.name}:{low.value}\n{open.name}:{open.value}\n{close.name}:{close.value}";
	        } else if (type === STOCK_HLC_TYPE) {
	            template = "{date.name}:{date.value}\n{high.name}:{high.value}\n{low.name}:{low.value}\n{close.name}:{close.value}";
	        } else if (isScatter) {
	            var pointFieldName = chartInfo.needXNames ? TOOLTIP_X_NAME : categoryName;
	            template = "Series \"{" + colorName + ".value}\" Point \"{" + pointFieldName + ".value}\" \n({" + categoryName + ".value}, {" + valueName + ".value})";
	            if (chartInfo.size) {
	                template += " Size: {" + BUBBLE_SIZE_NAME + ".value}";
	            }
	        } else if (isStock) {
	            template = "{date.name}:{date.value}\n{volume.name}:{volume.value}";
	        } else if (radial) {
	            template = "Series \"{" + categoryName + ".value}\" Point \"{" + colorName + ".value}\" \nValue: {" + valueName + ".value: " + (format || "#,##0") + "} ({PercentageCategory:0%})";
	        } else if (type === CONST_SUNBURST || type === CONST_TREEMAP) {
	            template = '';
	        } else {
	            template = "Series \"{" + colorName + ".value}\" Point \"{" + categoryName + ".value}\" \nValue: {" + valueName + ".value: " + (format || "General") + "}";
	        }
	        return template;
	    }
	
	    function getTooltipFields(chartInfo, colorName, categoryName, valueName, categoryCount) {
	        var type = chartInfo.type, isStock = chartInfo.stock;
	        var isSunburstOrTreeMapChart = type === CONST_SUNBURST || type === CONST_TREEMAP;
	        var fieldNames;
	        if (type === STOCK_OHLC_TYPE) {
	            fieldNames = ['date', 'high', 'low', 'open', 'close'];
	        } else if (type === STOCK_HLC_TYPE) {
	            fieldNames = ['date', 'high', 'low', 'close'];
	        } else if (isStock) {
	            fieldNames = ['date', 'volume'];
	        } else if (isSunburstOrTreeMapChart) {
	            fieldNames = [];
	            for (var i = 0; i < categoryCount; i++) {
	                fieldNames.push(CONST_LEVEL + i);
	            }
	        } else {
	            fieldNames = [valueName, categoryName, colorName];
	            if (chartInfo.size) {  
	                fieldNames.push(BUBBLE_SIZE_NAME);
	            }
	            if (chartInfo.needXNames) {
	                fieldNames.push(TOOLTIP_X_NAME);
	            }
	        }
	        var fields = [];
	        fieldNames.forEach(function (name) {
	            fields.push({field: name});
	        });
	        if (isSunburstOrTreeMapChart) {
	            fields.push({field: CONST_2016_CHART_VALUE_NAME, aggregate: "Sum"});
	        }
	        return fields;
	    }
	
	    function getPlotConfigText(dataLabels, seriesName, categoryName, valueName, colorName, chartInfo, zoomFactor, categoryCount) {
	        var textConfig = {};
	        var dataLabelPosition = dataLabels.Position;
	        if (typeof dataLabelPosition === 'number' && dataLabelPosition >= 0 && dataLabelPosition <= 8) {
	            var dict = {
	                0: "Auto",
	                1: "Inside",
	                2: "Center",
	                3: "Inside",
	                4: "Inside",
	                5: "Center",
	                6: "Outside",
	                7: "Center",
	                8: "Outside"
	            };
	            var pos = dict[dataLabelPosition];
	            if (pos) {
	                textConfig.position = pos;
	            }
	        }
	        if (dataLabels.ShowLeaderLines && textConfig.position === "Outside") {
	            var leaderLinesLineInfo = getLineFormatInfo(dataLabels.LeaderLines, false, true);
	            if (leaderLinesLineInfo) {
	                textConfig.connectingLine = {
	                    stroke: leaderLinesLineInfo.color || "transparent",
	                    strokeWidth: !isNullOrUndefined(leaderLinesLineInfo.width) ? leaderLinesLineInfo.width : 1
	                };
	            }
	        } else {
	            textConfig.connectingLine = {
	                stroke: "transparent"
	            };
	        }
	        var style = textConfig.style = {};
	        var dataLabelsLineInfo = getLineFormatInfo(dataLabels, false, true);
	        if (dataLabelsLineInfo) {
	            textConfig.borderStyle = {
	                strokeWidth: !isNullOrUndefined(dataLabelsLineInfo.width) ? dataLabelsLineInfo.width : 1,
	                stroke: dataLabelsLineInfo.color || "transparent"
	            };
	        }
	        var dataLabelFillFormat = dataLabels.Format && dataLabels.Format.Fill;
	        var dataLabelFillColor = colorFormatToString(dataLabelFillFormat, false, true);
	       
	        style.backgroundColor = dataLabelFillColor || "transparent";
	        var dataLabelFont = dataLabels.Font;
	        var dataLabelFontColor = colorFormatToString(dataLabelFont, false, true);
	        var dataLabelFontFamily = dataLabelFont && dataLabelFont.Name;
	        var dataLabelFontSize = dataLabelFont && dataLabelFont.Size;
	        if (dataLabelFontColor || dataLabelFontFamily || dataLabelFontSize > 0) {
	            var labelStyle = textConfig.textStyle = {};
	           
	            if (dataLabelFontColor) {
	                labelStyle.color = dataLabelFontColor;
	            }
	           
	            if (dataLabelFontFamily) {
	                labelStyle.fontFamily = dataLabelFontFamily;
	            }
	           
	            if (dataLabelFontSize > 0) {
	                labelStyle.fontSize = dataLabelFontSize * zoomFactor + "";
	            }
	        }
	       
	        var labelTemplateString = getDataLabelTemplate(dataLabels, seriesName, colorName, categoryName, valueName, chartInfo, categoryCount);
	        var chartType = chartInfo.type;
	        var isSunburstOrTreeMapChart = chartType === CONST_TREEMAP || chartType === CONST_SUNBURST;
	       
	        if (isSunburstOrTreeMapChart) {
	            var showCategoryName = dataLabels.ShowCategoryName;
	            if (!showCategoryName) {
	                textConfig = {textStyle: {color: "transparent"}, style: {backgroundColor: "transparent"}};
	            }
	        } else if (labelTemplateString) {
	            textConfig.template = labelTemplateString;
	        }
	        return textConfig;
	    }
	
	    function getPlotEncodings(chartInfo, chartType, valueName, colorName, series, categoryName) {
	        var plotItemEncodings = {};
	       
	       
	       
	        plotItemEncodings.values = getPlotEncodingValue(chartInfo, valueName, categoryName);
	       
	       
	       
	       
	        var type = chartInfo.type;
	        if (type === CONST_RADAR) {
	            plotItemEncodings.category = {
	                field: categoryName,
	                excludeNulls: true
	            };
	        }
	        plotItemEncodings.details = getPlotEncodingDetail(chartInfo, colorName, categoryName, series);
	        plotItemEncodings.color = getPlotEncodingColor(chartInfo, colorName);
	        if (chartInfo.size) {
	            plotItemEncodings.size = {
	                field: BUBBLE_SIZE_NAME
	            };
	        }
	       
	        var labelTextField = getDataLabelFields(series.GetDataLabels(), series.Name, colorName, categoryName, valueName, chartInfo, series.GetCatCount());
	        if (labelTextField) {
	            plotItemEncodings.text = labelTextField;
	        }
	       
	        plotItemEncodings.tooltip = getTooltipFields(chartInfo, colorName, categoryName, valueName, series.GetCatCount());
	        return plotItemEncodings;
	    }
	
	    function getPlotConfig(chartInfo, chartType, seriesGroup, categoryName, valueName, colorName, zoomFactor, useAnimation) {
	        var series = seriesGroup[0];
	        var plotItemConfig = {};
	       
	        if (!chartInfo.radial) {
	            plotItemConfig.clippingMode = 'Clip';           
	        }
	       
	        var dataLabels = series.GetDataLabels();
	        if (dataLabels) {
	            plotItemConfig.text = getPlotConfigText(dataLabels, series.Name, categoryName, valueName, colorName, chartInfo, zoomFactor, series.GetCatCount());
	        }
	       
	        plotItemConfig.tooltip = {
	           
	            style: {
	                borderStyle: {
	                    stroke: "#767676"
	                },
	                backgroundColor: "white"
	            },
	            textStyle: {
	                color: "#575757",
	                fontFamily: "Calibri, Arial",
	                fontSize: 14 * zoomFactor
	            },
	            template: getTooltipTemplate(chartInfo, colorName, categoryName, valueName, dataLabels && dataLabels.NumberFormat)//tooltip has no format, so borrow from data labels
	        };
	
	        if (chartInfo.swapAxes) {
	            plotItemConfig.swapAxes = true;
	        }
	        if (chartInfo.symbols) {
	            plotItemConfig.symbols = true;
	        }
	        if (chartInfo.lineAspect) {
	            plotItemConfig.lineAspect = chartInfo.lineAspect;
	        }
	        if (chartInfo.radial) {
	            plotItemConfig.axisMode = CONST_RADIAL;
	            plotItemConfig.startAngle = getPieChartStartAngle(series);
	            if (chartInfo.doughnut) {
	                plotItemConfig.innerRadius = series.Parent.DoughnutHoleSize / 100;
	            }
	            plotItemConfig.sweep = 360;
	        }
	        if (chartInfo.radar) {
	            plotItemConfig.axisMode = CONST_POLYGONAL;
	            plotItemConfig.startAngle = getPieChartStartAngle(series);
	        }
	       
	        if (!isStockChart(chartType)) {
	            var allLineInfoAreSame = allItemsAreSame(seriesGroup);
	            var is2016Chart = IsSunburstOrTreemapChart(series.ChartType);
	            if (is2016Chart || seriesGroup.length <= 1 || allLineInfoAreSame) {
	                if (!plotItemConfig.style) {
	                    plotItemConfig.style = {};
	                }
	                var seriesLineInfo = getLineFormatInfoForSeries(series, false, true);
	                var seriesLineWidth = seriesLineInfo && seriesLineInfo.width || 0,
	                    seriesLineColor = seriesLineInfo && seriesLineInfo.color;
	                if (seriesLineWidth >= 0 || seriesLineColor) {
	                    if (seriesLineWidth >= 0) {
	                        plotItemConfig.style.strokeWidth = seriesLineWidth;
	                    }
	                   
	                    if (seriesLineColor && !ChartUtility.IsLineChart(series.ChartType)) {
	                        plotItemConfig.style.stroke = seriesLineColor;
	                    }
	                }
	                var markerInfo = getMarkerInfoForSeries(series, false);
	                if (markerInfo) {
	                    plotItemConfig.style.symbolFill = markerInfo.symbolFill;
	                    plotItemConfig.style.symbolStroke = markerInfo.symbolStroke;
	                    if (!isNullOrUndefined(markerInfo.symbolStrokeWidth)) {
	                        plotItemConfig.style.symbolStrokeWidth = markerInfo.symbolStrokeWidth;
	                    }
	                }
	            }
	
	            var rules = [];
	            if (seriesGroup.length > 1 && !allLineInfoAreSame && !is2016Chart) {
	                var isRadar = chartInfo.type === CONST_RADAR;
	                rules = rules.concat(getColorRules(seriesGroup, colorName, chartInfo.type === CONST_LINE || chartInfo.type === CONST_AREA || isRadar));
	            }
	            if (rules.length > 0) {
	                plotItemConfig.rules = rules;
	            }
	        } else if (!isNullOrUndefined(chartInfo.stockType)) {
	            plotItemConfig.style = plotItemConfig.style || {};
	            if (chartInfo.stockType === 1) {
	                plotItemConfig.style.stroke = "#168A16";//TODO
	            } else if (chartInfo.stockType === 0) {
	                plotItemConfig.style.fill = "#666666";
	                plotItemConfig.style.stroke = "#666666";
	            } else if (chartInfo.stockType === 2) {
	                plotItemConfig.style.stroke = "#5B9BD4";//TODO
	            }
	        }
	
	        if (isSunburstChart(chartType)) {
	            plotItemConfig.axisMode = CONST_RADIAL;
	            plotItemConfig.startAngle = -Math.PI / 2;
	           
	            plotItemConfig.innerRadius = 0.3;
	        }
	       
	        if (useAnimation) {
	            var animationOptions;
	            if (ChartUtility.IsAnyPieChart(chartType)) {
	                animationOptions = PIE_ANIMATION;
	            } else if (isColumnChart(chartType) || isBarChart(chartType)) {
	                animationOptions = BAR_ANIMATION;
	            } else if (isLineChart(chartType)) {
	                animationOptions = LINE_ANIMATION;
	            }
	            if (animationOptions) {
	                plotItemConfig.loadAnimation = animationOptions[0];
	                plotItemConfig.updateAnimation = animationOptions[1];
	            }
	        }
	        return plotItemConfig;
	    }
	
	    function allItemsAreSame(seriesGroup) {
	        var lineInfoArray = [], markerInfoArray = [];
	        for (var i = 0; i < seriesGroup.length; i++) {
	            lineInfoArray.push(getLineFormatInfoForSeries(seriesGroup[i], false, true));
	            markerInfoArray.push(getMarkerInfoForSeries(seriesGroup[i], false));
	        }
	        var allAreSame = true;
	        if (lineInfoArray.length > 0) {
	            var firstLineInfo = lineInfoArray[0], firstLineColor = firstLineInfo && firstLineInfo.color,
	                firstLineWidth = firstLineInfo && firstLineInfo.width;
	            var firstMarkerInfo = markerInfoArray[0], firstMarkerFill = firstMarkerInfo && firstMarkerInfo.symbolFill,
	                firstMarkerStroke = firstMarkerInfo && firstMarkerInfo.symbolStroke,
	                firstMarkerStrokeWidth = firstMarkerInfo && firstMarkerInfo.symbolStrokeWidth;
	            for (i = 1; i < lineInfoArray.length; i++) {
	                var lineInfo = lineInfoArray[i], lineColor = lineInfo && lineInfo.color,
	                    lineWidth = lineInfo && lineInfo.width;
	                if (firstLineColor !== lineColor || firstLineWidth !== lineWidth) {
	                    allAreSame = false;
	                    break;
	                }
	                var markerInfo = markerInfoArray[i], markerFill = markerInfo && markerInfo.symbolFill,
	                    markerStroke = markerInfo && markerInfo.symbolStroke,
	                    markerStrokeWidth = markerInfo && markerInfo.symbolStrokeWidth;
	                if (firstMarkerFill !== markerFill || firstMarkerStroke !== markerStroke || firstMarkerStrokeWidth !== markerStrokeWidth) {
	                    allAreSame = false;
	                    break;
	                }
	            }
	        }
	        return allAreSame;
	    }
	
	    function getColorRules(seriesGroup, colorName, forLines) {
	        var rules = [], seriesNameCacheObj = {};
	        for (var i = 0; i < seriesGroup.length; i++) {
	            var series = seriesGroup[i];
	            var seriesLineInfo = getLineFormatInfoForSeries(series, false, true);
	            var seriesLineColor = seriesLineInfo && seriesLineInfo.color,
	                seriesLineWidth = seriesLineInfo && seriesLineInfo.width;
	            var properties = [];
	            if (seriesLineColor) {
	                properties.push({
	                    name: "style.stroke",
	                    value: seriesLineColor
	                });
	            }
	            if (seriesLineWidth || seriesLineWidth === 0) {
	                properties.push({
	                    name: "style.strokeWidth",
	                    value: seriesLineWidth
	                });
	            } else {
	                properties.push({
	                    name: "style.strokeWidth",
	                    value: 0
	                });
	            }
	            var markerInfo = getMarkerInfoForSeries(series, false);
	            if (markerInfo) {
	                properties.push({
	                    name: "style.symbolFill",
	                    value: markerInfo.symbolFill
	                });
	                properties.push({
	                    name: "style.symbolStroke",
	                    value: markerInfo.symbolStroke
	                });
	                if (!isNullOrUndefined(markerInfo.symbolStrokeWidth)) {
	                    properties.push({
	                        name: "style.symbolStrokeWidth",
	                        value: markerInfo.symbolStrokeWidth
	                    });
	                }
	            }
	            var seriesName = getSeriesName(series, seriesNameCacheObj);
	            if (properties.length > 0 && seriesName) {
	               
	                var type = forLines ? "Group" : "DataPoint";
	                rules.push({
	                    condition: "current.items[0]." + colorName + " = \"" + seriesName + "\"",
	                    type: type,
	                    actions: [
	                        {
	                            targetElement: type,
	                            properties: properties
	                        }
	                    ]
	                });
	            }
	        }
	        return rules;
	    }
	
	    function getPlotItem(chartInfo, chartType, name, seriesGroup, categoryName, valueName, colorName, zoomFactor, useAnimation) {
	        var plotItem = {
	            name: name,
	            type: convertPlotChartType(chartInfo)
	        };
	        plotItem.encodings = getPlotEncodings(chartInfo, chartType, valueName, colorName, seriesGroup[0], categoryName);
	        plotItem.config = getPlotConfig(chartInfo, chartType, seriesGroup, categoryName, valueName, colorName, zoomFactor, useAnimation);
	        return plotItem;
	    }
	
	    function convertPlotChartType(chartInfo) {
	        if (chartInfo.type === CONST_SUNBURST) {
	            return CONST_BAR;
	        } else if (chartInfo.type === CONST_RADAR) {
	            if (chartInfo.area) {
	                return CONST_AREA;
	            }
	            return CONST_LINE;
	        }
	        return chartInfo.type;
	    }
	
	    function getPieChartSeriesColors(series, needThemeColor, needRGBA, notAddTransprent) {
	        var seriesPoints = series.Points, pointNumber = seriesPoints.Count;
	        var colors = [];
	        for (var i = 0; i < pointNumber; i++) {
	            var point = seriesPoints.Get(i);
	            var fillColor = point.getFillColor(needThemeColor, needRGBA, notAddTransprent);
	            if (fillColor || fillColor === '') {
	                colors.push(fillColor);
	            }
	        }
	        return colors;
	    }
	
	    function getPieChartSeriesColorsTransparency(series) {
	        var seriesPoints = series.Points, pointNumber = seriesPoints.Count;
	        var colors = [];
	        for (var i = 0; i < pointNumber; i++) {
	            var point = seriesPoints.Get(i);
	            var transparency = point.getFillColorTransparency();
	            if (!isNullOrUndefined(transparency)) {
	                colors.push(transparency);
	            }
	        }
	        return colors;
	    }
	
	    function addPieChartSeriesColors(colors, series, needRGBA) {
	        var pointColors = getPieChartSeriesColors(series, false, needRGBA), length = pointColors.length;
	        colors.length = 0;
	        for (var i = 0; i < length; i++) {
	            colors.push(pointColors[i]);
	        }
	    }
	
	    function addSeriesColors(fillColors, ser, chartInfo) {
	        var seriesLineColor, seriesFillColor;
	        if (chartInfo.type === CONST_LINE) {
	            seriesLineColor = ser.getLineColor(false, true);
	            if (seriesLineColor) {
	                fillColors.push(seriesLineColor);
	            }
	        } else if (chartInfo.type === CONST_RADAR) {
	            if (chartInfo.area) {
	                seriesFillColor = ser.getFillColor(false, true);
	                if (seriesFillColor) {
	                    fillColors.push(seriesFillColor);
	                }
	            } else if (chartInfo.marker) {
	                seriesFillColor = ser.getMarkerFillColor(false, true);
	                if (seriesFillColor) {
	                    fillColors.push(seriesFillColor);
	                }
	            } else {
	                seriesLineColor = ser.getLineColor(false, true);
	                if (seriesLineColor) {
	                    fillColors.push(seriesLineColor);
	                }
	            }
	        } else if (chartInfo.type === CONST_BAR || chartInfo.type === CONST_AREA) {
	            if (chartInfo.radial === true) {
	                addPieChartSeriesColors(fillColors, ser, true);
	            } else {
	                seriesFillColor = ser.getFillColor(false, true);
	                if (seriesFillColor) {
	                    fillColors.push(seriesFillColor);
	                }
	            }
	        } else if (chartInfo.type === CONST_SCATTER) {
	            if (chartInfo.size) {
	                seriesFillColor = ser.getFillColor(false, true);
	                if (seriesFillColor) {
	                    fillColors.push(seriesFillColor);
	                }
	            } else {
	                seriesFillColor = ser.getMarkerFillColor(false, true);
	                if (seriesFillColor) {
	                    fillColors.push(seriesFillColor);
	                }
	            }
	        } else if (chartInfo.type === CONST_SUNBURST || chartInfo.type === CONST_TREEMAP) {
	            var dataPoints = ser.dataPoints();
	            var sprtIndex = ser._chartData2016ModelCalHelper.GetSunBurstOrTreemapOrder();
	            for (var i = 0; i < dataPoints._length(); i++) {
	                var dataPoint = dataPoints._get(sprtIndex[i]);
	                if (dataPoint) {
	                    fillColors[i] = dataPoint.getFillColor(false, true);
	                }
	            }
	        }
	    }
	
	    var XFIELDNAME_SUFFIX = {
	        0 : '',
	        1 : '2'
	    };
	
	    function getXFieldName(series) {
	        return CATEGORY_NAME + XFIELDNAME_SUFFIX[series.AxisGroup];
	    }
	
	   
	   
	   
	    var PaintPriority = {
	        secondaryLine: 1,
	        primaryLine: 2,
	        secondaryOther: 11,
	        primaryOther: 12,
	        secondaryArea: 21,
	        primaryArea: 22
	    };
	
	    function getSeriesPriorityValue(axisGroup, seriesPaintedType) {
	        var priorityValue = 0;
	       
	        if (axisGroup === 0) {
	            if (seriesPaintedType === CONST_LINE) {
	                priorityValue = PaintPriority.primaryLine;
	            } else if (seriesPaintedType === CONST_AREA) {
	                priorityValue = PaintPriority.primaryArea;
	            } else {
	                priorityValue = PaintPriority.primaryOther;
	            }
	        } else if (axisGroup === 1) {
	            if (seriesPaintedType === CONST_LINE) {
	                priorityValue = PaintPriority.secondaryLine;
	            } else if (seriesPaintedType === CONST_AREA) {
	                priorityValue = PaintPriority.secondaryArea;
	            } else {
	                priorityValue = PaintPriority.secondaryOther;
	            }
	        }
	        return priorityValue;
	    }
	
	    function getSeriesPaintOrderInfo(allSers, shapeChartType) {
	        var seriesGroups = {};
	        var seriesGroupsOrder = [], i;
	        for (i = 0; i < allSers.length; i++) {
	            var tempSer = allSers[i], serValues = tempSer.Values;
	           
	            if (serValues && serValues.length > 0) {
	                var currentGroupName = tempSer._getUniqueName();
	                if (!seriesGroups[currentGroupName]) {
	                    seriesGroups[currentGroupName] = [tempSer];
	                    var tempChartInfo = getChartInfo(tempSer, shapeChartType, i === 0);
	                    var seriesPriorityValue = getSeriesPriorityValue(tempSer.AxisGroup, tempChartInfo.type);
	                    seriesGroupsOrder.push({
	                        type: currentGroupName,
	                        value: seriesPriorityValue,
	                        chartInfo: tempChartInfo
	                    });
	                } else {
	                    seriesGroups[currentGroupName].push(tempSer);
	                }
	            }
	        }
	        if (seriesGroupsOrder.length > 1) {
	            seriesGroupsOrder.sort(function (a, b) {
	                return b.value - a.value;
	            });
	        }
	        return {
	            serGroupsOrder: seriesGroupsOrder,
	            serGroups: seriesGroups
	        };
	    }
	
	    function getPlots(seriesPaintOrderInfo, shapeChartType, plotNames, plotNames2, zoomFactor, useAnimation) {
	        var plots = [];
	        var seriesGroupsOrder = seriesPaintOrderInfo.serGroupsOrder,
	            seriesGroups = seriesPaintOrderInfo.serGroups;
	        for (var j = 0; j < seriesGroupsOrder.length; j++) {
	            var groupName = seriesGroupsOrder[j].type, chartInfo = seriesGroupsOrder[j].chartInfo;
	            var serGroup = seriesGroups[groupName];
	            var firstSeries = serGroup[0];
	            var plotItem = getPlotItem(chartInfo, shapeChartType, "plot" + (j + 1), serGroup, getXFieldName(firstSeries), VALUE_NAME + groupName, COLOR_NAME + groupName, zoomFactor, useAnimation);
	            plots.push(plotItem);
	            var axisGroup = firstSeries.AxisGroup;
	            if (axisGroup === 0) {
	                plotNames.push(plotItem.name);
	            } else if (axisGroup === 1) {
	                plotNames2.push(plotItem.name);
	            }
	        }
	        return plots;
	    }
	
	    var stockFieldsMap = {
	        49: ["high", "low", "close"],
	        50: ["open", "high", "low", "close"],
	        51: ["volume", "high", "low", "close"] ,
	        52: ["volume", "open", "high", "low", "close"]
	    };
	
	    function getNotAutoXValues(allSers, axisGroup) {
	        for (var i = 0; i < allSers.length; i++) {
	            var ser = allSers[i];
	            if (ser.AxisGroup === axisGroup && !ser.XValuesIsAuto()) {
	                return ser.XValues;
	            }
	        }
	    }
	
	    var _strRepeat;
	
	    function _repeatString(count) {
	        var s = '', str = '' + this;
	        for (var i = 0; i < count; i++) {
	            s += str;
	        }
	        return s;
	    }
	
	    function getRepeatString(str, count) {
	        if (!_strRepeat) {
	            _strRepeat = ''.repeat || _repeatString;
	        }
	        return _strRepeat.call(str, count);
	    }
	
	    function isDateType(value) {
	        return value instanceof Date;
	    }
	
	    function getUniqueValues(values) {
	        var result = values.slice();
	        var names = {};
	        names[values[0]] = 1;
	        if (isNullOrUndefined(values[0])) {
	            result[0] = '';
	        }
	        if (!isDateType(result[0])) {
	            result[0] = result[0] + '';
	        }
	        for (var i = 1, length = values.length; i < length; i++) {
	            if (!isDateType(result[i])) {
	                var value = values[i], count = names[value];
	                var tempValue = '';
	                if (count) {   
	                    tempValue = getRepeatString(' ', count);
	                    names[value]++;
	                } else {
	                    names[value] = 1;
	                }
	                result[i] = isNullOrUndefined(value) ? tempValue : value + tempValue;
	            }
	        }
	        return result;
	    }
	
	    function getDataImp(chart, allSers, callback) {
	        var i, ser, chartInfo;
	        var shapeChartType = chart.ChartType;
	        var xValues, yValues;
	        if (isStockChart(shapeChartType)) {
	            var seriesNameArray = stockFieldsMap[shapeChartType];
	            var stockData = {};
	            for (i = 0; i < allSers.length; i++) {
	                ser = allSers[i];
	                var seriesName = seriesNameArray[i];
	                xValues = ser.XValues;
	                yValues = ser.Values;
	                if (!stockData.date) {
	                    if (!ChartUtility.AreAllDate(xValues)) {
	                        return;
	                    }
	                    stockData.date = xValues;
	                }
	                stockData[seriesName] = yValues;
	            }
	            var stockDataLength = stockData.date && stockData.date.length;
	            for (i = 0; i < stockDataLength; i++) {
	                var dataItem = {
	                    date: processDate(stockData.date[i], true),
	                    high: stockData.high[i],
	                    low: stockData.low[i],
	                    close: stockData.close[i]
	                };
	                if (stockData.open) {
	                    dataItem.open = stockData.open[i];
	                }
	                if (stockData.volume) {
	                    dataItem.volume = stockData.volume[i];
	                }
	
	                if (callback(dataItem)) {
	                    return;
	                }
	            }
	        } else {
	            var notAutoXValuesInPrimary = getNotAutoXValues(allSers, 0);
	            var notAutoXValuesInSecondary = getNotAutoXValues(allSers, 1);
	            var seriesNameCacheObj = {};
	            var barChartCache = {barChartXvaluesCache:[], axisGroup:null}, isNotHasXValuesRefersBarSeries;
	            for (i = 0; i < allSers.length; i++) {
	                ser = allSers[i];
	                var currentGroupName = ser._getUniqueName();
	                chartInfo = getChartInfo(ser);
	                if (!ser.XValuesIsAuto()) {
	                    xValues = ser.XValues;
	                } else {
	                    xValues = ser.AxisGroup === 0 ? notAutoXValuesInPrimary : notAutoXValuesInSecondary;
	                }
	                isNotHasXValuesRefersBarSeries = isBarChart(ser.ChartType) && isEmptyObject(ser._xValuesRefers);
	                if (isNotHasXValuesRefersBarSeries) {
	                    if (barChartCache.axisGroup === null) {
	                        barChartCache.barChartXvaluesCache = xValues;
	                        barChartCache.axisGroup = ser.AxisGroup;
	                    } else {
	                        xValues = barChartCache.barChartXvaluesCache;
	                    }
	                }
	                var needXNames = chartInfo.needXNames, xInfo;
	                if (needXNames) {
	                    xInfo = {names: ser._xValues};
	                }
	                yValues = ser.Values;
	                var bubbleSizes;
	                if (chartInfo.size) {   
	                    bubbleSizes = ser.GetBubbleSizes();
	                }
	                var axis = chart.Axes.GetAxis(0 , ser.AxisGroup);
	                if (xValues && axis && !axis.IsValueOrDateScaleAxis()) {
	                    xValues = getUniqueValues(xValues);
	                }
	                var serName = getSeriesName(ser, seriesNameCacheObj),
	                    yValuesLength = yValues && yValues.length;
	                for (var j = 0; j < yValuesLength; j++) {
	                    var isAreaChart = chartInfo.type === "Area";
	                    var data = getDataItem(chartInfo.radial, serName, xValues, yValues, j, getXFieldName(ser), VALUE_NAME + currentGroupName, COLOR_NAME + currentGroupName, xInfo, isAreaChart);
	                    if (data) {
	                        if (bubbleSizes && bubbleSizes.length > 0) {
	                            data[BUBBLE_SIZE_NAME] = bubbleSizes[j];
	                        }
	                        if (callback(data, ser)) {
	                            return;
	                        }
	                    }
	                }
	            }
	        }
	    }
	
	    function isNullVauleItem(obj) {
	        if (obj) {
	            for (var key in obj) {    
	                if (!isNullOrUndefined(obj[key])) {
	                    return false;
	                }
	            }
	            return true;
	        }
	        return false;
	    }
	
	    function getCatValue(catArray, arrayIndex, catIndex, valueIndex) {
	        if (!isNullOrUndefined(catArray) && catIndex < catArray.length) {
	            return catArray[arrayIndex];
	        } else if (catIndex === 0) {
	           
	            return 'Branch' + (valueIndex + 1);
	        }
	       
	        return valueIndex + 1;
	    }
	
	    var ChartData2016ModelCalHelper = (function () {
	        function ChartData2016ModelCalHelper(series) {
	            var _this = this;
	            _this._series = series;
	            _this._isHorizontal = _this.GetSeriesOrientation();
	            _this._dataSource = _this.GetDataSourceByCatArrayAndValues(series._xValues, series._values);
	            _this._treeData = _this.CreateTreeData();
	            _this._idx = 0;
	            return _this;
	        }
	
	        var prototype = ChartData2016ModelCalHelper.prototype;
	        prototype.GetSeriesOrientation = function () {
	            var valueRefer = {}, series = this._series;
	            var dataOrientation = series.Chart.Parent.getDataOrientation();
	            if (isNullOrUndefined(dataOrientation) && (series._valuesRefers && series._valuesRefers.length > 0)) {
	                valueRefer = series._valuesRefers[0];
	                return valueRefer.ColumnCount === 1;
	            }
	            return !!dataOrientation;
	        };
	        prototype.GetDataSourceByCatArrayAndValues = function (catArray, values) {
	            if (isNullOrUndefined(catArray)) {
	                catArray = [];
	            }
	            if (isNullOrUndefined(values)) {
	                values = [];
	            }
	           
	            var catCount = this._series.GetCatCount() || 2;
	            var valueLength = values.length;
	            var catValue;
	            var allArray = [];
	            for (var i = 0; i < valueLength; i++) {
	                var itemArray = [], hasValidValue = false;
	                for (var j = 0; j < catCount; j++) {
	                    if (this._isHorizontal) {
	                        catValue = getCatValue(catArray, i * catCount + j, j, i);
	                    } else {
	                        catValue = getCatValue(catArray, i + j * valueLength, j, i);
	                    }
	                    if (hasValidValue === false && !isNullOrUndefined(catValue)) {
	                        hasValidValue = true;
	                    }
	                    itemArray.push(catValue);
	                }
	                if (isNullOrUndefined(values[i])) {
	                    itemArray.push(0);
	                } else {
	                    itemArray.push(values[i]);
	                }
	                if (hasValidValue) {
	                    allArray.push(itemArray);
	                }
	            }
	            return allArray;
	        };
	        prototype.CreateTreeData = function () {
	            var _this = this, dataSource = _this._dataSource;
	            var cacheValue, cacheItem = [];
	            var cacheName = [], cacheNameObj, lastValueObj = {};
	            var rowCount = dataSource.length, colCount = dataSource[0] ? dataSource[0].length : 0;
	            var item, value, allArray = [], nowObj = {}, parentObj;
	            _this._idx = 0;
	            for (var i = 0; i < rowCount; i++) {
	                item = dataSource[i];
	                var isFirstColumnEnpty = false;
	                for (var j = 0; j < colCount; j++) {
	                    value = item[j];
	                    cacheValue = cacheItem[j] = cacheItem[j] || null;
	                    var isLastCatColumn = j === colCount - 2,
	                        isValueColumn = j === colCount - 1,
	                        isFirstColumn = j === 0;
	                    if (value === null && cacheValue === null && !isLastCatColumn) {
	                        if (isFirstColumn) {
	                            isFirstColumnEnpty = true;
	                        }
	                        continue;
	                    }
	                    if (isValueColumn) {
	                        nowObj.data = value;
	                        continue;
	                    }
	                    if (isFirstColumn || isFirstColumnEnpty) {
	                        parentObj = allArray;
	                        isFirstColumnEnpty = false;
	                    } else {
	                        parentObj = nowObj.children;
	                    }
	                    cacheNameObj = cacheName[j] = cacheName[j] || {};
	                    if (isLastCatColumn && value === null && cacheNameObj[value] === true) {
	                        parentObj.push(null);
	                        break;
	                    }
	                   
	                    value = _this.FixNullValue(value, j, cacheItem, !isLastCatColumn);
	                   
	                    if (value !== lastValueObj[j]) {
	                        cacheName.length = j + 1;
	                        cacheItem.length = j + 1;
	                    }
	                   
	                    value = _this.FixRepeatName(value, j, cacheNameObj, lastValueObj, isLastCatColumn);
	                   
	                    nowObj = _this.AddLengthOrAddNewObj(parentObj, value);
	
	                }
	            }
	            return allArray;
	        };
	        prototype.FixNullValue = function (value, index, cacheItem, isNeedFixNull) {
	            var cacheValue = cacheItem[index] = cacheItem[index] || null;
	            if (value === null && isNeedFixNull) {
	                value = cacheValue;
	            } else if (value !== cacheValue) {
	                cacheItem[index] = value;
	            }
	            return value;
	        };
	        prototype.FixRepeatName = function (value, index, cacheNameObj, lastValueObj, alwaysFixRepeat) {
	            if (cacheNameObj[value] === undefined) {
	                lastValueObj[index] = value;
	                cacheNameObj[value] = true;
	            } else if (value !== lastValueObj[index] || alwaysFixRepeat) {
	                var itemImp = value;
	                while (cacheNameObj[itemImp] !== undefined && (itemImp !== lastValueObj[index] || alwaysFixRepeat)) {
	                    itemImp += " ";
	                }
	                cacheNameObj[itemImp] = true;
	                lastValueObj[index] = itemImp;
	                value = itemImp;
	            }
	            return value;
	        };
	        prototype.AddLengthOrAddNewObj = function (array, value) {
	            var result;
	            if (array[array.length - 1] && array[array.length - 1].value === value) {
	                array[array.length - 1].length++;
	                result = array[array.length - 1];
	            } else {
	                result = {length: 1, children: [], value: value};
	                if (!isNullOrUndefined(value)) {
	                    result.idx = this._idx;
	                    this._idx++;
	                }
	                array.push(result);
	            }
	            return result;
	        };
	        prototype.GetSunBurstOrTreemapOrder = function () {
	            var result = queryTreeAllSum(this._treeData);
	            function queryTreeAllSum(tree) {
	                var sum, sumResult = [];
	                for (var index = 0; index < tree.length; index++) {
	                    sum = 0;
	                    var child = tree[index], children = child.children;
	                    if (children && children.length > 0) {
	                        sum = queryItemSum(child, sum);
	                    } else {
	                        sum = child.data;
	                    }
	                    sumResult.push({sum: sum, index: index});
	                }
	                return sumResult;
	            }
	
	            function queryItemSum(item, sum) {
	                if (item.children && item.children.length > 0) {
	                    for (var index = 0; index < item.children.length; index++) {
	                        sum = queryItemSum(item.children[index], sum);
	                    }
	                } else if (item.data) {
	                    sum += item.data;
	                }
	                return sum;
	            }
	            result.sort(function (itemA, itemB) {
	                return itemB.sum - itemA.sum;
	            });
	            for (var i = 0; i < result.length; i++) {
	                result[i] = result[i].index;
	            }
	            return result;
	        };
	        prototype.GetSunBurstOrTreemapData = function () {
	            var array = [];
	            var sortIndex = this.GetSunBurstOrTreemapOrder();
	            var sortDataArray = [];
	            for (var j = 0; j < sortIndex.length; j++) {
	                sortDataArray.push(this._treeData[sortIndex[j]]);
	            }
	            getDataImp({children: sortDataArray}, 0, {});
	            function getDataImp(catObj, deep, cat) {
	                var children = catObj.children, isAllNull = true, catItem;
	                for (var i = 0; i < children.length; i++) {
	                    catItem = {};
	                    $.extend(true, catItem, cat);
	                    var catChildItem = children[i];
	                    if (isNullOrUndefined(catChildItem) || isNullOrUndefined(catChildItem.children)) {
	                        continue;
	                    } else if (catChildItem.children.length > 0) {
	                        catItem['level' + deep] = catChildItem.value;
	                        getDataImp(catChildItem, deep + 1, catItem);
	                        isAllNull = false;
	                    } else if (!isNullOrUndefined(catChildItem.value)) {
	                        catItem['level' + deep] = catChildItem.value;
	                        catItem[CONST_2016_CHART_VALUE_NAME] = catChildItem.data;
	                        array.push(catItem);
	                        isAllNull = false;
	                    }
	                }
	                if (isAllNull) {
	                    var data = 0;
	                    if (catObj.children.length > 0 && !isNullOrUndefined(catObj.children[0].data)) {
	                        data = catObj.children[0].data;
	                    }
	                    catItem = {};
	                    $.extend(true, catItem, cat);
	                    catItem[CONST_2016_CHART_VALUE_NAME] = data;
	                    array.push(catItem);
	                }
	            }
	            return array;
	        };
	
	        return ChartData2016ModelCalHelper;
	    }());
	
	    function getData(chart, sortedSeries) {
	        var values = [];
	        if (sortedSeries && sortedSeries[0] && IsSunburstOrTreemapChart(sortedSeries[0].ChartType) && !isNullOrUndefined(sortedSeries[0]._chartData2016ModelCalHelper)) {
	            values = sortedSeries[0]._chartData2016ModelCalHelper.GetSunBurstOrTreemapData();
	        } else {
	            getDataImp(chart, sortedSeries, function (data) {
	                if (!isNullVauleItem(data)) {
	                    values.push(data);
	                }
	            });
	        }
	        if (values.length > 0) {
	            var chartType = chart.ChartType;
	            var xAxis = chart.Axes.Item(0, 0);
	            if ((ChartUtility.IsLineChart(chartType) || ChartUtility.IsAreaChart(chartType)) && xAxis && xAxis.IsValueOrDateScaleAxis()) {
	                values.sort(function (v1, v2) {
	                    return v1[CATEGORY_NAME] - v2[CATEGORY_NAME];
	                });
	            }
	        }
	        return {
	            values: values
	        };
	    }
	
	    function isEqual(obj1, obj2) {
	        return JSON.stringify(obj1) === JSON.stringify(obj2);
	
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	    }
	
	    function getSeries(chart, selectedValue, field) {
	        if (isNullOrUndefined(selectedValue)) {
	            return;
	        }
	        var series, allSers;
	        var chartType = chart.ChartType;
	        if (isStockChart(chartType)) {
	            var seriesNameArray = stockFieldsMap[chartType];
	            var index = seriesNameArray.indexOf(field);
	            if (index >= 0) {
	                return chart.SeriesCollection.Get(index);
	            }
	        } else if (IsSunburstOrTreemapChart(chartType)) {
	            allSers = getAllSers(chart);
	            series = allSers && allSers.length > 0 && allSers[0];
	        } else {
	            allSers = getAllSers(chart);
	            var seriesPaintOrderInfo = getSeriesPaintOrderInfo(allSers, chart.ChartType);
	            var sortedSeries = getSortedSeries(seriesPaintOrderInfo);
	            getDataImp(chart, sortedSeries, function (data, ser) {
	                if (isEqual(data, selectedValue)) {
	                    series = ser;
	                    return true;
	                }
	            });
	        }
	        return series;
	    }
	
	    function getAutoChartTitleText(chart, allSers) {
	        if (!allSers) {
	            allSers = getAllSers(chart);
	        }
	        if (allSers.length === 1 && !IsSunburstOrTreemapChart(allSers[0].ChartType)) {
	            return allSers[0].Name;
	        }
	    }
	
	    function getChartTitleText(chartTitle, allSers) {
	        return chartTitle.Text || getAutoChartTitleText(chartTitle.Parent, allSers) || chartTitle.DefaultText;
	    }
	
	    function getChartTitleProperties(chartTitle, needThemeColor, allSers, zoomFactor, needRGBA, notAddTransprent) {
	        if (!chartTitle) {
	            return keyword_null;
	        }
	        if (notAddTransprent === undefined) {
	            notAddTransprent = false;
	        }
	        var chartTitleProperties = {
	            text: getChartTitleText(chartTitle, allSers)
	        };
	        var chartText = chartTitle.GetChartTextInternal();
	        if (chartText) {
	            var chartTitleFont = chartText.Font;
	            chartTitleProperties.color = colorFormatToString(chartTitleFont, needThemeColor, needRGBA, notAddTransprent);
	            if (!needRGBA) {
	                chartTitleProperties.transparency = getTransparencyFromColorFormat(chartTitleFont);
	            }
	            chartTitleProperties.fontFamily = chartTitleFont.Name;
	            chartTitleProperties.fontSize = (chartTitleFont.Size || chartTitle.DefaultFontSize) * zoomFactor;
	        }
	        return chartTitleProperties;
	    }
	
	    function getChartTitleConfig(chartTitle, allSers, zoomFactor) {
	        var chartTitleProperties = getChartTitleProperties(chartTitle, false, allSers, zoomFactor, true);
	        if (!chartTitleProperties) {
	            return keyword_null;
	        }
	        var retConfig = {
	            text: chartTitleProperties.text
	        };
	        if (chartTitle.GetChartTextInternal()) {
	            retConfig.headerTextStyle = {
	                color: chartTitleProperties.color,
	                fontFamily: chartTitleProperties.fontFamily
	            };
	            if (chartTitleProperties.fontSize) {
	                retConfig.headerTextStyle.fontSize = (chartTitleProperties.fontSize * zoomFactor) + "";
	            }
	            var titleBackColor = colorFormatToString(chartTitle.Format.Fill, false, true);
	            var headerStyle = {};
	            headerStyle = {
	                backgroundColor: titleBackColor
	            };
	            retConfig.headerStyle = headerStyle;
	            var lineInfo = getLineFormatInfo(chartTitle, false, true);
	            if (lineInfo) {
	                retConfig.headerStyle.strokeWidth = !isNullOrUndefined(lineInfo.width) ? lineInfo.width : 1;
	                retConfig.headerStyle.stroke = lineInfo.color || "transparent";
	               
	               
	               
	               
	            }
	        }
	        return retConfig;
	    }
	
	    function getLegendConfig(legend, zoomFactor, chart, plotNames, plotNames2) {
	        var axes = chart.Axes;
	        var xAxis = axes.Item(0, 0),
	            yAxis = axes.Item(1, 0),
	            xAxis2 = axes.Item(0, 1),
	            yAxis2 = axes.Item(1, 1);
	        var option;
	        if (legend) {
	            option = {
	                position: getLegendPosition(legend.Position),
	                orientation: getLegendOrientation(legend.Position),
	                textStyle: getLegendTextStyle(legend.Font, zoomFactor)
	            };
	        } else {
	            option = {
	                position: 'None'
	            };
	        }
	        var legends = [{title: "", type: "Color"}];
	        if ((xAxis && xAxis2) || (yAxis && yAxis2) || plotNames.length > 1 || plotNames2.length > 1) {
	            legends.push({title: "", type: "Color"});
	        }
	        return {
	            legend: option,
	            legends: legends
	        };
	    }
	
	    function IsLineChart(chart, axisGroup) {
	        if (ChartUtility.IsLineChart(chart.ChartType)) {
	            return true;
	        }
	        if (chart.ChartType === 0) {
	            var series = chart.SeriesCollection.GetValidSers(axisGroup);
	            var allColumn = true;
	            for (var i = 0; i < series.length; i++) {
	                if (!ChartUtility.IsLineChart(series[i].ChartType)) {
	                    allColumn = false;
	                    break;
	                }
	            }
	            return allColumn;
	        }
	        return false;
	    }
	
	    function IsBarChart(chart, axisGroup) {
	        if (ChartUtility.IsBarChart(chart.ChartType)) {
	            return true;
	        }
	        if (chart.ChartType === 0) {
	            var series = chart.SeriesCollection.GetValidSers(axisGroup);
	            var allBar = true;
	            for (var i = 0; i < series.length; i++) {
	                if (!ChartUtility.IsBarChart(series[i].ChartType)) {
	                    allBar = false;
	                    break;
	                }
	            }
	            return allBar;
	        }
	        return false;
	    }
	
	    function IsColumnChart(chart, axisGroup) {
	        if (ChartUtility.IsColumnChart(chart.ChartType)) {
	            return true;
	        }
	        if (chart.ChartType === 0) {
	            var series = chart.SeriesCollection.GetValidSers(axisGroup);
	            var allColumn = true;
	            for (var i = 0; i < series.length; i++) {
	                if (!ChartUtility.IsColumnChart(series[i].ChartType)) {
	                    allColumn = false;
	                    break;
	                }
	            }
	            return allColumn;
	        }
	        return false;
	    }
	
	    function IsRadarChart(chart, axisGroup) {
	        if (ChartUtility.IsRadarChart(chart.ChartType)) {
	            return true;
	        }
	        if (chart.ChartType === 0) {
	            var series;
	            if (isNullOrUndefined(axisGroup)) {
	                series = chart.SeriesCollection.AllSers;
	            } else {
	                series = chart.SeriesCollection.GetValidSers(axisGroup);
	            }
	            var allRadar = true;
	            for (var i = 0; i < series.length; i++) {
	                if (!ChartUtility.IsRadarChart(series[i].ChartType)) {
	                    allRadar = false;
	                    break;
	                }
	            }
	            return allRadar;
	        }
	        return false;
	    }
	
	    function getRadarMaxXvaluesLength(allSers) {
	        var maxLength = 0, serLength = allSers.length || 0, xValueLength = 0;
	        for (var i = 0; i < serLength; i++) {
	            var oneSer = allSers[i];
	            if (ChartUtility.IsRadarChart(oneSer.ChartType)) {
	                if (oneSer._xValues && oneSer._xValues.length) {
	                    xValueLength = oneSer._xValues.length;
	                } else if (oneSer._values && oneSer._values.length) {
	                    xValueLength = oneSer._values.length;
	                } else {
	                    xValueLength = 0;
	                }
	                maxLength = Math.max(maxLength, xValueLength);
	            }
	        }
	        return maxLength;
	    }
	
	    function getAxesConfig(chart, allSers, plotNames, plotNames2, zoomFactor) {
	        var axes = chart.Axes;
	        var axesOptions = [];
	        var chartType = chart.ChartType;
	        var isBarChartInPrimary = IsBarChart(chart, 0),
	            isBarChartInSecondary = IsBarChart(chart, 1),
	            hasOneBarChartInPrimaryOrSecondary = isBarChartInPrimary !== isBarChartInSecondary;
	        var isPieOrDoughnutChart = ChartUtility.IsPieOrDoughnutChart(chartType);
	        var isRadarChartInPrimary = IsRadarChart(chart, 0),
	            isRadarChartInSecondary = IsRadarChart(chart, 1);
	        var isColumnChartInPrimary = IsColumnChart(chart, 0),
	            isColumnChartInSecond = IsColumnChart(chart, 1);
	        var isLineChartInPrimary = IsLineChart(chart, 0),
	            isLineChartInSecondary = IsLineChart(chart, 1);
	        var compareAxisOptions, hasPlot1;
	        var percentageScale = isPercentageScaleType(chart, 0, allSers);
	        if (axes) {
	            var xAxis = axes.Item(0, 0),
	                yAxis = axes.Item(1, 0),
	                xAxis2 = axes.Item(0, 1),
	                yAxis2 = axes.Item(1, 1);
	            var xAxisOptions2, yAxisOptions2;
	            var origin;
	            if (xAxis) {
	                var xAxisOptions = getAxisOptions(isRadarChartInPrimary ? yAxis : xAxis, !isBarChartInPrimary ? "X" : "Y", plotNames, percentageScale, xAxis.IsValueOrDateScaleAxis(), zoomFactor);
	                if (!isBarChartInPrimary && !xAxis.IsValueOrDateScaleAxis() && !isStockChart(chartType) && !isRadarChartInPrimary) {
	                   
	                    xAxisOptions.scale = {
	                        type: "Ordinal"
	                    };
	                    if (!isColumnChartInPrimary) {
	                        var firstPrimarySeries = chart.SeriesCollection.GetValidSers(0 )[0];
	                        xAxisOptions.min = -0.5;
	                        xAxisOptions.max = (firstPrimarySeries ? firstPrimarySeries.XValues.length : 0) - 0.5;
	                    }
	                }
	                if (isLineChartInPrimary && xAxis.IsValueOrDateScaleAxis()) {
	                    xAxisOptions.axisPadding = 0.5;
	                }
	                origin = yAxis && yAxis.GetCustomCrossesAt();
	                if (!isNullOrUndefined(origin)) {
	                    xAxisOptions.origin = origin;
	                }
	                if (isRadarChartInPrimary) {
	                   
	                    xAxisOptions.labelAngle = -90;
	                }
	                if (xAxis.ReversePlotOrder) {
	                    xAxisOptions.reversed = true;
	                }
	                axesOptions.push(xAxisOptions);
	            } else if (isPieOrDoughnutChart) {
	                axesOptions.push({
	                    plots: plotNames,
	                    type: "X",
	                    position: "None"
	                });
	            }
	            if (yAxis) {
	                var yAxisOptions = getAxisOptions(isRadarChartInPrimary ? xAxis : yAxis, !isBarChartInPrimary ? "Y" : "X", plotNames, percentageScale, true, zoomFactor);
	                axesOptions.push(yAxisOptions);
	                origin = xAxis && xAxis.GetCustomCrossesAt();
	                if (!isNullOrUndefined(origin)) {
	                    yAxisOptions.origin = origin;
	                }
	                if (xAxisOptions && !isNullOrUndefined(yAxisOptions.min) && yAxisOptions.min < 0 && yAxisOptions.max >= 0) {
	                    xAxisOptions.origin = 0;
	                }
	                if (yAxis.ReversePlotOrder) {
	                    yAxisOptions.reversed = true;
	                }
	                if (isRadarChartInPrimary) {
	                    var lineInfo = getLineFormatInfo(yAxis, false, true);
	                    yAxisOptions.majorGridStyle = {
	                        stroke: lineInfo.color || "transparent",
	                        strokeWidth: !isNullOrUndefined(lineInfo.width) ? lineInfo.width : 1
	                    };
	                    yAxisOptions.majorGrid = true;
	                    yAxisOptions.min = 0;
	                    yAxisOptions.max = getRadarMaxXvaluesLength(allSers);
	                }
	                if (isSunburstChart(chartType)) {
	                    yAxisOptions.scale = {type: "Percentage"};
	                }
	            } else if (isPieOrDoughnutChart) {
	                axesOptions.push({
	                    plots: plotNames,
	                    type: "Y",
	                    position: "None",
	                    scale: {
	                        type: "Percentage"
	                    }
	                });
	            }
	            percentageScale = isPercentageScaleType(chart, 1, allSers);
	            if (xAxis2) {
	                xAxisOptions2 = getAxisOptions(isRadarChartInSecondary ? yAxis2 : xAxis2, !isBarChartInSecondary ? "X" : "Y", plotNames2, percentageScale, xAxis2.IsValueOrDateScaleAxis(), zoomFactor);
	                if (!isBarChartInSecondary && !xAxis2.IsValueOrDateScaleAxis() && !isStockChart(chartType) && !isRadarChartInSecondary) {
	                   
	                    xAxisOptions2.scale = {
	                        type: "Ordinal"
	                    };
	                    if (!isColumnChartInSecond) {
	                        var firstSecondarySeries = chart.SeriesCollection.GetValidSers(1 )[0];
	                        xAxisOptions2.min = -0.5;
	                        xAxisOptions2.max = (firstSecondarySeries ? firstSecondarySeries.XValues.length : 0) - 0.5;
	                    }
	                }
	                if (isLineChartInSecondary && xAxis2.IsValueOrDateScaleAxis()) {
	                    xAxisOptions2.axisPadding = 0.5;
	                }
	                origin = yAxis2 && yAxis2.GetCustomCrossesAt();
	                if (!isNullOrUndefined(origin)) {
	                    xAxisOptions2.origin = origin;
	                }
	                if (isRadarChartInSecondary) {
	                    xAxisOptions2.majorGrid = false;
	                    xAxisOptions2.labelAngle = -90;
	                }
	                compareAxisOptions = xAxisOptions;
	                if (hasOneBarChartInPrimaryOrSecondary) {
	                    compareAxisOptions = yAxisOptions;
	                }
	               
	                hasPlot1 = plotNames2.indexOf('plot1') > -1;
	                if (!compareAxisOptions || xAxisOptions2.position !== compareAxisOptions.position || isRadarChartInSecondary) {
	                    if (hasPlot1) {
	                        axesOptions.unshift(xAxisOptions2);
	                    } else {
	                        axesOptions.push(xAxisOptions2);
	                    }
	                } else if (hasPlot1) {
	                    compareAxisOptions.plots = xAxisOptions2.plots.concat(compareAxisOptions.plots);
	                } else {
	                    compareAxisOptions.plots = compareAxisOptions.plots.concat(xAxisOptions2.plots);
	                }
	                if (xAxis2.ReversePlotOrder) {
	                    xAxisOptions2.reversed = true;
	                }
	            }
	            if (yAxis2) {
	                yAxisOptions2 = getAxisOptions(isRadarChartInSecondary ? xAxis2 : yAxis2, !isBarChartInSecondary ? "Y" : "X", plotNames2, percentageScale, true, zoomFactor);
	                origin = xAxis2 && xAxis2.GetCustomCrossesAt();
	                if (!isNullOrUndefined(origin)) {
	                    yAxisOptions2.origin = origin;
	                }
	                if (isRadarChartInSecondary) {
	                    var lineInfo2 = getLineFormatInfo(yAxis2, false, true);
	                    yAxisOptions2.majorGridStyle = {
	                        stroke: lineInfo2.color || "transparent",
	                        strokeWidth: !isNullOrUndefined(lineInfo2.width) ? lineInfo2.width : 1
	                    };
	                    yAxisOptions2.majorGrid = true;
	                    yAxisOptions2.min = 0;
	                    yAxisOptions2.max = getRadarMaxXvaluesLength(allSers);
	                }
	                compareAxisOptions = yAxisOptions;
	                if (hasOneBarChartInPrimaryOrSecondary) {
	                    compareAxisOptions = xAxisOptions;
	                }
	               
	                hasPlot1 = plotNames2.indexOf('plot1') > -1;
	                if (!compareAxisOptions || yAxisOptions2.position !== compareAxisOptions.position || yAxisOptions2.position === 'None' || (isRadarChartInPrimary !== isRadarChartInSecondary)) {
	                    if (hasPlot1) {
	                        axesOptions.unshift(yAxisOptions2);
	                    } else {
	                        axesOptions.push(yAxisOptions2);
	                    }
	                } else if (hasPlot1) {
	                    compareAxisOptions.plots = yAxisOptions2.plots.concat(compareAxisOptions.plots);
	                } else {
	                    compareAxisOptions.plots = compareAxisOptions.plots.concat(yAxisOptions2.plots);
	                }
	                if (yAxis2.ReversePlotOrder) {
	                    yAxisOptions2.reversed = true;
	                }
	            }
	
	        }
	        return axesOptions;
	    }
	
	    function getSeriesGapConfig(chart) {
	        var tempGroup = getColumnGroupOrBarGroup(chart);
	        if (tempGroup) {
	            var serArray = tempGroup.GetSers(), serNumber = serArray && serArray.length;
	            var overlap = tempGroup.Overlap, gapWidth = tempGroup.GapWidth;
	            var gapConfig = {};
	            var calcNumber = ChartUtility.IsStackedChart(serArray[0].ChartType) ? 1 : serNumber;
	            if (!isNullOrUndefined(overlap)) {
	                gapConfig.overlap = overlap / 100;
	            }
	            if (!isNullOrUndefined(gapWidth)) {
	                gapConfig.width = calcNumber / (calcNumber + gapWidth / 100);
	            }
	            return gapConfig;
	        }
	        return keyword_null;
	    }
	
	    function getConfig(chart, allSers, sheet, plotNames, plotNames2, seriesFillColors, zoomFactor) {
	        var chartAreaStyle = getChartAreaStyle(chart.ChartArea, false, zoomFactor, true);
	        var canSelectSeries = sheet._canSelectFloatingObject(chart.Parent);
	        var config = {
	            style: chartAreaStyle.style,
	            textStyle: chartAreaStyle.textStyle,
	           
	            selectionMode: isStockChart(chart.ChartType) ? "Custom" : "Group",
	            selectedStyle: {
	                adorners: canSelectSeries
	            }
	        };
	        if (seriesFillColors.length > 0) {
	            config.palette = seriesFillColors;
	        }
	        var borderStyle = getChartAreaBorder(chart.ChartArea, sheet);
	        if (borderStyle) {
	            config.borderStyle = borderStyle;
	        }
	       
	        var chartTitleConfig = getChartTitleConfig(chart.ChartTitle, allSers, zoomFactor);
	        if (chartTitleConfig) {
	            config.header = {width: "Auto"};
	            if (chartTitleConfig.text) {
	                config.header.title = chartTitleConfig.text;
	            }
	            if (chartTitleConfig.headerTextStyle) {
	                config.header.textStyle = chartTitleConfig.headerTextStyle;
	            }
	            if (chartTitleConfig.headerStyle) {
	                config.header.style = chartTitleConfig.headerStyle;
	            }
	        }
	       
	        var axesOptions = getAxesConfig(chart, allSers, plotNames, plotNames2, zoomFactor);
	        if (axesOptions.length > 0) {
	            var fillFormat = chart.PlotArea.Format.Fill;
	            var fill = getGradientFill(fillFormat);
	           
	            var plotAreaStyle = IsSunburstOrTreemapChart(chart.ChartType) ? {} : {backgroundColor: fill};
	           
	            var lineInfo = getLineFormatInfo(chart.PlotArea, false, true);
	            if (lineInfo) {
	                plotAreaStyle.innerStroke = lineInfo.color || "transparent";
	                plotAreaStyle.innerStrokeWidth = !isNullOrUndefined(lineInfo.width) ? lineInfo.width : 1;
	            }
	            var plotAreaConfig = {
	                axes: axesOptions,
	                style: plotAreaStyle
	            };
	           
	            var legendConfig = getLegendConfig(chart.Legend, zoomFactor, chart, plotNames, plotNames2);
	            if (legendConfig) {
	                plotAreaConfig.legend = legendConfig.legend;
	                var legendLineInfo = getLineFormatInfo(chart.Legend, false, true);
	                if (legendLineInfo) {
	                    plotAreaConfig.legend.borderStyle = {
	                        strokeWidth: !isNullOrUndefined(legendLineInfo.width) ? legendLineInfo.width : 0,
	                        stroke: legendLineInfo.color || "transparent"
	                    };
	                }
	                if (chart.Legend && chart.Legend.Format) {
	                    var backgroundColor = colorFormatToString(chart.Legend.Format.Fill, false, true);
	                    if (backgroundColor) {
	                        plotAreaConfig.legend.style = {backgroundColor: backgroundColor};
	                    }
	                }
	                plotAreaConfig.legends = legendConfig.legends;
	                if (ChartUtility.IsBubbleChart(chart.ChartType)) {
	                    plotAreaConfig.legends.push({
	                        "type": "Size",
	                        "position": "None"
	                    });
	                }
	            }
	
	            config.plotAreas = [plotAreaConfig];
	        }
	       
	        var seriesGapConfig = getSeriesGapConfig(chart);
	        if (seriesGapConfig) {
	            config.bar = seriesGapConfig;
	        }
	       
	        if (ChartUtility.IsPieChart(chart.ChartType) || ChartUtility.IsSunburstChart(chart.ChartType)) {
	            config.bar = {width: 1};
	        }
	        config.padding = getConfigPadding(chart);
	        return config;
	    }
	
	    function getConfigPadding(chart) {
	        var paddingLeft = 0, paddingRight = 0;
	        var chartType = chart.ChartType;
	        var legend = chart.Legend;
	        var isLegendLeft = legend && legend.visible && legend.position === 3;
	        var isLegendRight = legend && legend.visible && legend.position === 2;
	        var isPieGrounpOrRadarChart = ChartUtility.IsPieOrDoughnutChart(chartType) || ChartUtility.IsRadarChart(chartType);
	        var isSunburstOrTreemap = ChartUtility.IsSunburstOrTreemapChart(chartType);
	        if (isPieGrounpOrRadarChart) {
	            paddingLeft = isLegendLeft ? 0 : 8;
	            paddingRight = isLegendRight ? 0 : 8;
	        } else if (isSunburstOrTreemap) {
	            paddingLeft = isLegendLeft ? 0 : 5;
	            paddingRight = isLegendRight ? 0 : 5;
	        } else if (isColumnChart(chartType)) {
	            var axes = chart.Axes;
	            var yAxis = axes.Item(1, 0),
	                yAxis2 = axes.Item(1, 1);
	            paddingLeft = yAxis ? 0 : 20;
	            paddingRight = yAxis2 ? 0 : 20;
	        }
	        var result = {};
	        if (paddingRight !== 0) {
	            result.right = paddingRight;
	        }
	        if (paddingLeft !== 0) {
	            result.left = paddingLeft;
	        }
	        return result;
	    }
	
	    function getGradientFill(fillFormat) {
	        var colorFormats = fillFormat._gradientStops || [];
	        var colorStops = getColorsStopString(colorFormats.GradientStopList);
	        var fill;
	        if (fillFormat._isLinearShade === true) {
	            fill = getLinearFill(fillFormat.GradientAngle, colorStops);
	        } else if (fillFormat._pathShapeType === 1) {
	            fill = getRadialFill(fillFormat._gradientStyle, colorStops);
	        }// TODO else if (fillFormat._pathShapeType === 2 || fillFormat._pathShapeType === 0)
	        if (isNullOrUndefined(fill)) {
	            fill = colorFormatToString(fillFormat, false, true);
	        }
	        return fill;
	    }
	
	    function getColorsStopString(gradientStopList) {
	        if (isNullOrUndefined(gradientStopList) || gradientStopList.length === 0) {
	            return '';
	        }
	        var colorString = '', colorStops = '', color, position, item;
	        for (var i = 0; i < gradientStopList.length; i++) {
	            item = gradientStopList[i];
	            position = ' ' + item.Position * 100 + '%';
	            color = colorFormatToString(item, false, true);
	            colorString = ColorHelper._toString(ColorHelper._fromString(color)) + position + ((i === gradientStopList.length - 1) ? '' : ',');
	            colorStops += colorString;
	        }
	        return colorStops;
	    }
	
	    function getLinearFill(gradientAngle, colorStops) {
	        var type = "linear-gradient", angle, fill, angleDescArray;
	        var realTypeIndex = parseInt(gradientAngle / 45);
	        angleDescArray = ["to right", "to right bottom", "to bottom", "to left bottom", "to left", "to left top", "to top", "to right top"];
	        angle = angleDescArray[realTypeIndex];
	        fill = type + '(' + angle + ',' + colorStops + ')';
	        return fill;
	    }
	
	    function getRadialFill(gradientStyle, colorStops) {
	        var type = "radial-gradient", extentKeyword = "closest-corner at center",
	            angleDescArray = ["at left top", "at right top", "at left bottom", "at right bottom"],
	            angle, fill;
	        if (gradientStyle === 4) {
	            angle = angleDescArray[gradientStyle - 1];
	            fill = type + '(' + angle + ',' + colorStops + ')';
	        } else if (gradientStyle === 6) {
	            fill = type + '(' + extentKeyword + ',' + colorStops + ')';
	        }
	        return fill;
	    }
	
	    function getSortedSeries(seriesPaintOrderInfo) {
	        var seriesGroupsOrder = seriesPaintOrderInfo.serGroupsOrder,
	            seriesGroups = seriesPaintOrderInfo.serGroups;
	        var sortedSeries = [];
	        for (var i = 0, tempLength = seriesGroupsOrder.length; i < tempLength; i++) {
	            var groupName = seriesGroupsOrder[i].type;
	            var serGroup = seriesGroups[groupName];
	            for (var j = 0, serGroupLength = serGroup.length; j < serGroupLength; j++) {
	                sortedSeries.push(serGroup[j]);
	            }
	        }
	        return sortedSeries;
	    }
	
	    function getSeriesFillColors(seriesPaintOrderInfo) {
	        var seriesGroupsOrder = seriesPaintOrderInfo.serGroupsOrder,
	            seriesGroups = seriesPaintOrderInfo.serGroups;
	        var seriesFillColors = [];
	        for (var i = 0, tempLength = seriesGroupsOrder.length; i < tempLength; i++) {
	            var groupName = seriesGroupsOrder[i].type, chartInfo = seriesGroupsOrder[i].chartInfo;
	            var serGroup = seriesGroups[groupName];
	            for (var j = 0, serGroupLength = serGroup.length; j < serGroupLength; j++) {
	                addSeriesColors(seriesFillColors, serGroup[j], chartInfo);
	                if (chartInfo.type === CONST_SUNBURST || chartInfo.type === CONST_TREEMAP) {
	                    return seriesFillColors;
	                }
	            }
	           
	            if (!isNullOrUndefined(seriesGroupsOrder[i + 1]) && chartInfo.type === CONST_RADAR) {
	                groupName = seriesGroupsOrder[i + 1].type;
	                serGroup = seriesGroups[groupName];
	                for (j = 0, serGroupLength = serGroup.length; j < serGroupLength; j++) {
	                    seriesFillColors.push('transparent');
	                }
	            }
	        }
	        return seriesFillColors;
	    }
	
	    function getChartModelData(chart, sheet) {
	        var zoomFactor = sheet.zoom();
	        var plotNames = [], plotNames2 = [];
	
	        var retValue = {};
	        var allSers = getAllSers(chart), shapeChartType = chart.ChartType;
	        var seriesPaintOrderInfo = getSeriesPaintOrderInfo(allSers, shapeChartType);
	        var sortedSeries = getSortedSeries(seriesPaintOrderInfo);
	        var seriesFillColors = getSeriesFillColors(seriesPaintOrderInfo);
	
	        retValue.plots = getPlots(seriesPaintOrderInfo, shapeChartType, plotNames, plotNames2, zoomFactor, chart.UseAnimation);
	        var data = retValue.data = getData(chart, sortedSeries);
	        var noData = data.values.length === 0;
	        retValue.config = getConfig(chart, allSers, sheet, plotNames, plotNames2, seriesFillColors, zoomFactor);
	        if (noData) {
	           
	           
	           
	           
	            retValue.config.header = {title: ""};
	            retValue.plots = [];
	            delete retValue.config.plotAreas;
	        } else if (!isStockChart(shapeChartType)) {
	            retValue.data.dateFormats = false; 
	        }
	        return retValue;
	    }
	
	
	    function isMarkerScatterChart(chartType) {
	        return [1 , 33 , 35 , 26, 27, 28, 42].indexOf(chartType) >= 0;
	    }
	
	    function getSeriesProperties(series, isFirstSeries, needRGBA, notAddTransprent) {
	        var seriesChartType = series.ChartType;
	       
	       
	        var chartInfo = getChartInfo(series, series.SeriesCollection.Parent.ChartType, isFirstSeries);
	
	        var seriesProperties = {
	            chartType: seriesChartType,
	            axisGroup: series.AxisGroup
	        };
	
	       
	        var fillColor, seriesFillColor;
	        if (chartInfo.radial) {
	            fillColor = getPieChartSeriesColors(series, true, needRGBA, notAddTransprent).join(',');
	        }else if (isMarkerScatterChart(series.ChartType)) {
	            seriesFillColor = series.getMarkerFillColor(true, needRGBA, notAddTransprent);
	            if (seriesFillColor || seriesFillColor === '') {
	                fillColor = seriesFillColor;
	            }
	        } else {
	            seriesFillColor = series.getFillColor(true, needRGBA, notAddTransprent);
	            if (seriesFillColor || seriesFillColor === '') {
	                fillColor = seriesFillColor;
	            }
	        }
	       
	        seriesProperties.backColor = fillColor;
	       
	        if (!needRGBA) {
	            var fillColorTransparency;
	            if (chartInfo.radial) {
	                fillColorTransparency = getPieChartSeriesColorsTransparency(series).join(',');
	            } else if (isMarkerScatterChart(series.ChartType)) {
	                fillColorTransparency = series.getMarkerColorTransparency();
	            } else {
	                var seriesFillColorTransparency = series.getFillColorTransparency();
	                if (!isNullOrUndefined(seriesFillColorTransparency)) {
	                    fillColorTransparency = seriesFillColorTransparency;
	                }
	            }
	           
	            seriesProperties.backColorTransparency = fillColorTransparency;
	        }
	
	       
	        var border = seriesProperties.border = {}, tempWidth;
	        if (chartInfo.radial) {
	            var seriesPoints = series.Points;
	            if (seriesPoints.Count > 0) {
	                var point = seriesPoints.Get(0);
	                var borderColor = point.getLineColor(true, needRGBA, notAddTransprent);
	                if (borderColor || borderColor === '') {
	                    border.color = borderColor;
	                }
	                if (!needRGBA) {
	                    var borderTransparency = point.getLineColorTransparency();
	                    if (!isNullOrUndefined(borderTransparency)) {
	                        border.transparency = borderTransparency;
	                    }
	                }
	                tempWidth = point.Format.Line.Weight;
	            }
	        } else {
	            tempWidth = series.LineWidth;
	            var lineColor = series.getLineColor(true, needRGBA, notAddTransprent);
	            if (lineColor || lineColor === '') {
	                border.color = lineColor;
	            }
	            if (!needRGBA) {
	                var lineTransparency = series.getLineColorTransparency();
	                if (!isNullOrUndefined(lineTransparency)) {
	                    border.transparency = lineTransparency;
	                }
	            }
	        }
	        if (!isNullOrUndefined(tempWidth) && tempWidth >= 0) {
	            border.width = tempWidth;
	        }
	
	       
	        if (chartInfo.radial) {
	            seriesProperties.startAngle = series.Parent.FirstSliceAngle;
	        }
	
	       
	        var nameFormula = series.GetNameFormula();
	        if (nameFormula) {
	            seriesProperties.name = nameFormula;
	        } else {
	            seriesProperties.name = "\"" + getSeriesName(series) + "\"";
	        }
	       
	        var xValuesFormula = series.GetXValuesFormula();
	        if (xValuesFormula) {
	            seriesProperties.xValues = xValuesFormula;
	        }
	       
	        var yValuesFormula = series.GetValuesFormula();
	        if (yValuesFormula) {
	            seriesProperties.yValues = yValuesFormula;
	        }
	       
	        var bubbleSizeFormula = series.GetBubbleSizesFormula();
	        if (bubbleSizeFormula) {
	            seriesProperties.bubbleSizes = bubbleSizeFormula;
	        }
	
	        return seriesProperties;
	    }
	
	
	    var dv = __webpack_require__(1);
	    if (dv) {
	        var customStringFormatting = {
	            format: function (format, object) {
	               
	                if (format === "General" && typeof object === 'number' && Math.abs(object - parseFloat(object.toFixed(2))) < 1e-10) {
	                    object = object.toFixed(2);
	                }
	
	                return new GeneralFormatter(format).format(object);
	            },
	            defaultFormat: function (dataType, percentage) {
	                return dataType === 4  ? 'mm/dd/yyyy' : 'General';
	            }
	        };
	
	        var plugin = {
	            create: function () {
	                return customStringFormatting;
	            }
	        };
	
	        var dv_plugins = dv.plugins;
	
	        var customerValueEncodingExcludeNullsFilter = {
	            filter: function (value, key) {
	                return value[key] !== undefined;
	            }
	        };
	
	        var customerValueEncodingExcludeNullsFilterPlugin = {
	            create: function () {
	                return customerValueEncodingExcludeNullsFilter;
	            }
	        };
	        dv_plugins.unregisterStringFormatting('Default');
	        dv_plugins.registerStringFormatting('Default', plugin);
	        dv_plugins.unregisterFilter('ValueEncodingExcludeNulls');
	        dv_plugins.registerFilter('ValueEncodingExcludeNulls', customerValueEncodingExcludeNullsFilterPlugin);
	        dv_plugins.unregisterFilter('CategoryEncodingExcludeNulls');
	        dv_plugins.registerFilter('CategoryEncodingExcludeNulls', customerValueEncodingExcludeNullsFilterPlugin);
	        dv_plugins.unregisterRenderEngine('Canvas');
	        dv_plugins.registerRenderEngine('Canvas', new dv_plugins.PureCanvasRenderEnginePlugin());
	
	       
	        var dv_FlexDV_prototype = dv.FlexDV.prototype;
	        var oldLoad = dv_FlexDV_prototype.load;
	        dv_FlexDV_prototype.load = function () {
	            try {
	                oldLoad.apply(this, arguments);
	            } catch (ex) {
	               
	            }
	        };
	        var oldRefresh = dv_FlexDV_prototype.refresh;
	        dv_FlexDV_prototype.refresh = function () {
	            try {
	                if (this.devicePixelRatioIsAuto) {
	                    this.devicePixelRatio = Core._DPIHelper._getDevicePixel();
	                }
	                oldRefresh.apply(this, arguments);
	            } catch (ex) {
	               
	            }
	        };
	        var oldSelect = dv_FlexDV_prototype.select;
	        dv_FlexDV_prototype.select = function () {
	            try {
	                oldSelect.apply(this, arguments);
	            } catch (ex) {
	               
	            }
	        };
	    }
	
	    Charts.ChartHelper = {
	        getChartModelData: getChartModelData,
	        getSeries: getSeries,
	        getChartAreaStyle: getChartAreaStyle,
	        colorFormatToString: colorFormatToString,
	        getChartTitleProperties: getChartTitleProperties,
	        getSeriesProperties: getSeriesProperties,
	        getAxisProperties: getAxisProperties,
	        isPercentageScaleType: isPercentageScaleType,
	        getChartTitleText: getChartTitleText,
	        chartData2016ModelCalHelper: ChartData2016ModelCalHelper,
	        getTransparencyFromColorFormat: getTransparencyFromColorFormat
	    };
	    module.exports = Charts;
	
	}());

/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

	(function () {
	    'use strict';
	
	    var Charts = __webpack_require__(3);
	    var $ = __webpack_require__(6).GC$,
	        $_inherit = $.inherit,
	        COMMON_MODULE = Charts,
	        ChartConstants = COMMON_MODULE.ChartConstants,
	        ChartUtility = COMMON_MODULE.ChartUtility,
	        defineProperty = ChartUtility.defineProperty,
	        ChartElementBase = COMMON_MODULE.ChartElementBase,
	        UnitHelper = COMMON_MODULE.UnitHelper,
	        isNullOrUndefined = UnitHelper.isNullOrUndefined,
	        ChartFormat = __webpack_require__(7).ChartFormat;
	    var keyword_null = null;
	
	    var ChartLines = (function (_super) {
	        $_inherit(ChartLines, _super);
	        function ChartLines(chartGroup, linesType) {
	            var _this = _super.call(this) || this;
	            _this._ooLines = keyword_null;
	            _this._chartGroup = chartGroup;
	            _this._linesType = linesType;
	            return _this;
	        }
	
	        var ChartLines_prototype = ChartLines.prototype;
	        defineProperty(ChartLines_prototype, "Format", {
	            get: function () {
	                return this.ChartFormat;
	            }
	        });
	        ChartLines_prototype.GetDefaultFormat = function () {
	            var _this = this;
	            switch (_this._linesType) {
	                case 0:
	                    return _this.GetDefaultDropLinesFormat();
	                case 1:
	                    return _this.GetDefaultHiLoLinesFormat();
	                case 2:
	                    return _this.GetOfPieDefaultSerLinesFormat();
	                case 3:
	                    return _this.GetDlblsDefaultLeaderLines();
	            }
	            return _super.prototype.GetDefaultFormat.call(_this);
	        };
	        ChartLines_prototype.GetOfPieDefaultSerLinesFormat = function () {
	            var format = _super.prototype.GetDefaultFormat.call(this);
	            var line = format.Line, color = line.Color;
	            color.ObjectThemeColor = 1;
	            color.Brightness = 0.65;
	            line.Weight = 1 ;
	            return format;
	        };
	        ChartLines_prototype.GetDefaultHiLoLinesFormat = function () {
	            var format = _super.prototype.GetDefaultFormat.call(this);
	            var line = format.Line, color = line.Color;
	            color.ObjectThemeColor = 1;
	            color.Brightness = 0.25;
	            line.Weight = 1 ;
	            return format;
	        };
	        ChartLines_prototype.GetDefaultDropLinesFormat = function () {
	            var format = _super.prototype.GetDefaultFormat.call(this);
	            var line = format.Line, color = line.Color;
	            color.ObjectThemeColor = 1;
	            color.Brightness = 0.65;
	            line.Weight = 1 ;
	            return format;
	        };
	        ChartLines_prototype.GetDlblsDefaultLeaderLines = function () {
	            var format = _super.prototype.GetDefaultFormat.call(this);
	            var line = format.Line, color = line.Color;
	            color.ObjectThemeColor = 1;
	            color.Brightness = 0.65;
	            line.Weight = 1 ;
	            return format;
	        };
	        ChartLines_prototype.Delete = function () {
	            var _this = this, linesType = _this._linesType, chartGroup = _this._chartGroup;
	            if (linesType === 0) {
	                chartGroup.HasDropLines = false;
	            } else if (linesType === 1) {
	                chartGroup.HasHiLoLines = false;
	            } else if (linesType === 2) {
	                chartGroup.HasSeriesLines = false;
	            }
	        };
	        ChartLines_prototype.FromOOModel = function (t ) {
	            this._ooLines = t;
	            if (isNullOrUndefined(t)) {
	                _super.prototype.ClearFormat.call(this);
	            } else {
	                _super.prototype.FromShapeProperties.call(this, t.spPr);
	            }
	        };
	        ChartLines_prototype.ToOOModel = function () {
	            var lines = this._ooLines || {} ;
	            lines.spPr = _super.prototype.ToShapeProperties.call(this);
	            return lines;
	        };
	        ChartLines_prototype.CreateFormat = function () {
	            return new ChartFormat(this._chartGroup.Parent);
	        };
	        return ChartLines;
	    }(ChartElementBase));
	    Charts.ChartLines = ChartLines;
	
	    Charts.BarType = {
	        Up: 0,
	        Down: 1
	    };
	    var ChartBars = (function (_super) {
	        $_inherit(ChartBars, _super);
	        function ChartBars(chartGroup, type) {
	            var _this = _super.call(this) || this;
	            _this._ooBar = keyword_null;
	            _this._chartGroup = chartGroup;
	            _this._type = type;
	            return _this;
	        }
	
	        var ChartBars_prototype = ChartBars.prototype;
	        defineProperty(ChartBars_prototype, "Format", {
	            get: function () {
	                return this.ChartFormat;
	            }
	        });
	        defineProperty(ChartBars_prototype, "Parent", {
	            get: function () {
	                return this._chartGroup;
	            }
	        });
	        ChartBars_prototype.GetDefaultFormat = function () {
	            if (this._type === 0) {
	                return this.GetDefaultUpBarsFormat();
	            }
	            return this.GetDefaultDownBarsFormat();
	        };
	        ChartBars_prototype.GetDefaultUpBarsFormat = function () {
	            var format = _super.prototype.GetDefaultFormat.call(this);
	            format.Fill.Color.ObjectThemeColor = 0;
	            var line = format.Line, color = line.Color;
	            color.ObjectThemeColor = 1;
	            color.Brightness = 0.35;
	            line.Weight = 1 ;
	            return format;
	        };
	        ChartBars_prototype.GetDefaultDownBarsFormat = function () {
	            var format = _super.prototype.GetDefaultFormat.call(this);
	            format.Fill.Color.ObjectThemeColor = 1;
	            var line = format.Line, color = line.Color;
	            color.ObjectThemeColor = 1;
	            color.Brightness = 0.35;
	            line.Weight = 1 ;
	            return format;
	        };
	        ChartBars_prototype.Delete = function () {
	            this._chartGroup.HasUpDownBars = false;
	        };
	        ChartBars_prototype.FromOOModel = function (t ) {
	            this._ooBar = t;
	            if (isNullOrUndefined(t)) {
	                _super.prototype.ClearFormat.call(this);
	            } else {
	                _super.prototype.FromShapeProperties.call(this, t.spPr);
	            }
	        };
	        ChartBars_prototype.ToOOModel = function () {
	            var bar = this._ooBar || {} ;
	            bar.spPr = _super.prototype.ToShapeProperties.call(this);
	            return bar;
	        };
	        ChartBars_prototype.CreateFormat = function () {
	            return new ChartFormat(this._chartGroup.Parent);
	        };
	        return ChartBars;
	    }(ChartElementBase));
	    Charts.ChartBars = ChartBars;
	
	    var ChartGroup = (function () {
	        function ChartGroup(chart, groupType, axisGroup) {
	            var _this = this;
	            _this._secondPlotSize = 75;
	            _this._pieSplitType = 0;
	            _this._splitValue = 2;
	            _this._doughnutHoleSize = 75;
	            _this._varyByCategories = false;
	            _this._hasDroplines = false;
	            _this._hasHiLoLines = false;
	            _this._hasSeriesLines = false;
	            _this._hasUpDownBars = false;
	            _this._sizeRepresents = 0;
	            _this._bubbleScale = 100;
	            _this._firstSliceAngle = 0;
	            _this._gapWidth = 0;
	            _this._chart = chart;
	            _this._groupType = groupType;
	            _this._axisGroup = axisGroup;
	            _this.Init();
	        }
	
	        var ChartGroup_prototype = ChartGroup.prototype;
	        defineProperty(ChartGroup_prototype, "AxisGroup", {
	            get: function () {
	                return this._axisGroup;
	            },
	            set: function (value) {
	                var _this = this;
	                if (value !== _this._axisGroup) {
	                    _this._axisGroup = value;
	                    _this._chart.SuspendElementChanged();
	                    for (var _i = 0, _a = _this.GetSers(); _i < _a.length; _i++) {
	                        var item = _a[_i];
	                        item.AxisGroup = value;
	                    }
	                    _this._chart.ResumeElementChanged(17, keyword_null, ChartConstants.AxisGroup);
	                }
	            }
	        });
	        defineProperty(ChartGroup_prototype, "BubbleScale", {
	            get: function () {
	                return this._bubbleScale;
	            },
	            set: function (value) {
	                if (value !== this._bubbleScale && value >= 0 && value <= 300) {
	                    this._bubbleScale = value;
	                }
	            }
	        });
	        defineProperty(ChartGroup_prototype, "DoughnutHoleSize", {
	            get: function () {
	                return this._doughnutHoleSize;
	            },
	            set: function (value) {
	                if (value !== this._doughnutHoleSize && value >= 10 && value <= 90) {
	                    this._doughnutHoleSize = value;
	                }
	            }
	        });
	        defineProperty(ChartGroup_prototype, "FirstSliceAngle", {
	            get: function () {
	                return this._firstSliceAngle;
	            },
	            set: function (value) {
	                if (value !== this._firstSliceAngle && value >= 0 && value <= 360) {
	                    this._firstSliceAngle = value;
	                }
	            }
	        });
	        defineProperty(ChartGroup_prototype, "GapWidth", {
	            get: function () {
	                return this._gapWidth;
	            },
	            set: function (value) {
	                if (value !== this._gapWidth && value >= 0 && value <= 500) {
	                    this._gapWidth = value;
	                }
	            }
	        });
	        defineProperty(ChartGroup_prototype, "HasDropLines", {
	            get: function () {
	                return this._hasDroplines;
	            },
	            set: function (value) {
	                var _this = this;
	                if (value !== _this._hasDroplines) {
	                    _this._hasDroplines = value;
	                    if (value && isNullOrUndefined(_this._dropLines)) {
	                        _this._dropLines = new ChartLines(_this, 0);
	                    }
	                }
	            }
	        });
	        defineProperty(ChartGroup_prototype, "HasHiLoLines", {
	            get: function () {
	                return this._hasHiLoLines;
	            },
	            set: function (value) {
	                var _this = this;
	                if (value !== _this._hasHiLoLines) {
	                    _this._hasHiLoLines = value;
	                    if (value && isNullOrUndefined(_this._hiLoLines)) {
	                        _this._hiLoLines = new ChartLines(_this, 1);
	                    }
	                }
	            }
	        });
	        defineProperty(ChartGroup_prototype, "HasSeriesLines", {
	            get: function () {
	                return this._hasSeriesLines;
	            },
	            set: function (value) {
	                var _this = this;
	                if (value !== _this._hasSeriesLines) {
	                    _this._hasSeriesLines = value;
	                    if (value && isNullOrUndefined(_this._serLines)) {
	                        _this._serLines = new ChartLines(_this, 2);
	                    }
	                }
	            }
	        });
	        defineProperty(ChartGroup_prototype, "HasUpDownBars", {
	            get: function () {
	                return this._hasUpDownBars;
	            },
	            set: function (value) {
	                var _this = this;
	                if (value !== _this._hasUpDownBars) {
	                    _this._hasUpDownBars = value;
	                    if (value && isNullOrUndefined(_this._upBars)) {
	                        _this._upBars = new ChartBars(_this, 0);
	                    }
	                    if (value && isNullOrUndefined(_this._downBars)) {
	                        _this._downBars = new ChartBars(_this, 1);
	                    }
	                }
	            }
	        });
	        defineProperty(ChartGroup_prototype, "Overlap", {
	            get: function () {
	                return this._overlap;
	            },
	            set: function (value) {
	                if (value !== this._overlap && value >= -100 && value <= 100) {
	                    this._overlap = value;
	                }
	            }
	        });
	        defineProperty(ChartGroup_prototype, "Parent", {
	            get: function () {
	                return this._chart;
	            }
	        });
	        defineProperty(ChartGroup_prototype, "SecondPlotSize", {
	            get: function () {
	                return this._secondPlotSize;
	            },
	            set: function (value) {
	                if (value !== this._secondPlotSize && value >= 5 && value <= 200) {
	                    this._secondPlotSize = value;
	                }
	            }
	        });
	        defineProperty(ChartGroup_prototype, "SeriesLines", {
	            get: function () {
	                if (!this.HasSeriesLines) {
	                    return keyword_null;
	                }
	                return this._serLines;
	            }
	        });
	        defineProperty(ChartGroup_prototype, "HiLoLines", {
	            get: function () {
	                if (!this.HasHiLoLines) {
	                    return keyword_null;
	                }
	                return this._hiLoLines;
	            }
	        });
	        defineProperty(ChartGroup_prototype, "DropLines", {
	            get: function () {
	                if (!this.HasDropLines) {
	                    return keyword_null;
	                }
	                return this._dropLines;
	            }
	        });
	        defineProperty(ChartGroup_prototype, "SizeRepresents", {
	            get: function () {
	                return this._sizeRepresents;
	            },
	            set: function (value) {
	                this._sizeRepresents = value;
	            }
	        });
	        defineProperty(ChartGroup_prototype, "SplitType", {
	            get: function () {
	                return this._pieSplitType;
	            },
	            set: function (value) {
	                var _this = this;
	                if (value !== _this._pieSplitType) {
	                    _this._pieSplitType = value;
	                    var dict = {
	                        0: 2,
	                        1: 50,
	                        2:  10
	                    };
	                    _this._splitValue = dict[_this._pieSplitType] || _this._splitValue;
	                    _this._chart.HandleElementChanged(17, _this, ChartConstants.SplitType);
	                }
	            }
	        });
	        defineProperty(ChartGroup_prototype, "SplitValue", {
	            get: function () {
	                return this._splitValue;
	            },
	            set: function (value) {
	                var _this = this;
	                if (value !== _this._splitValue) {
	                    _this._splitValue = value;
	                    _this._chart.HandleElementChanged(17, _this, ChartConstants.SplitValue);
	                }
	            }
	        });
	        defineProperty(ChartGroup_prototype, "UpBars", {
	            get: function () {
	                if (!this.HasUpDownBars) {
	                    return keyword_null;
	                }
	                return this._upBars;
	            }
	        });
	        defineProperty(ChartGroup_prototype, "DownBars", {
	            get: function () {
	                if (!this.HasUpDownBars) {
	                    return keyword_null;
	                }
	                return this._downBars;
	            }
	        });
	        defineProperty(ChartGroup_prototype, "VaryByCategories", {
	            get: function () {
	                return this._varyByCategories;
	            },
	            set: function (value) {
	                var _this = this;
	                if (value !== _this._varyByCategories) {
	                    _this._varyByCategories = value;
	                    if (value) {
	                        for (var _i = 0, _a = _this.GetSers(); _i < _a.length; _i++) {
	                            var ser = _a[_i], color;
	                            var innerChartType = ser.InnerChartType;
	                            if (ChartUtility.IsFillSeries(innerChartType)) {
	                                color = ser.Format.Fill.Color;
	                                if (color.ColorType !== 1) {
	                                    color.ColorType = 1;
	                                }
	                            } else if (ChartUtility.IsLineSeries(innerChartType) && !ChartUtility.IsStockChart(_this._chart.ChartType)) {
	                                color = ser.Format.Line.Color;
	                                if (color.ColorType !== 1) {
	                                    color.ColorType = 1;
	                                }
	                            }
	                        }
	                    }
	                }
	            }
	        });
	        defineProperty(ChartGroup_prototype, "SeriesCollection", {
	            get: function () {
	                return this.GetSers();
	            }
	        });
	        ChartGroup_prototype.Equals = function (group) {
	            return !isNullOrUndefined(group) && group.AxisGroup === this._axisGroup && group._groupType === this._groupType;
	        };
	        defineProperty(ChartGroup_prototype, "Marker", {
	            get: function () {
	                return this._marker;
	            },
	            set: function (value) {
	                this._marker = value;
	            }
	        });
	        defineProperty(ChartGroup_prototype, "Count", {
	            get: function () {
	                return this.GetSers().length;
	            }
	        });
	        defineProperty(ChartGroup_prototype, "GroupType", {
	            get: function () {
	                return this._groupType;
	            }
	        });
	        ChartGroup_prototype.IsStacked = function () {
	            var series = this.GetSers();
	            for (var _i = 0, series_1 = series; _i < series_1.length; _i++) {
	                var ser = series_1[_i];
	                if (ChartUtility.IsStackedChart(ser.InnerChartType)) {
	                    return true;
	                }
	            }
	            return false;
	        };
	        ChartGroup_prototype.GetSers = function () {
	            var seriesCollection = this._chart.SeriesCollection;
	            var series = [];
	            for (var i = 0, count = seriesCollection.Count; i < count; i++) {
	                var item = seriesCollection.Get(i);
	                if (this._axisGroup === item.AxisGroup &&
	                    ChartUtility.MapToGroupType(item.InnerChartType) === this._groupType) {
	                    series.push(item);
	                }
	            }
	            return series;
	        };
	        ChartGroup_prototype.Init = function () {
	            var _this = this;
	            var chartType = _this._chart.ChartType, groupType = _this._groupType;
	            if (groupType === 8) {
	                if (ChartUtility.IsStackedChart(chartType) || _this.IsStacked()) {
	                    _this._gapWidth = 150;
	                    _this._overlap = 100;
	                } else {
	                    _this._gapWidth = 182;
	                    _this._overlap = 0;
	                }
	            } else if (groupType === 9 ||
	                groupType === 3 ||
	                groupType === 2) {
	                if (ChartUtility.IsStackedChart(chartType) || _this.IsStacked()) {
	                    _this._gapWidth = 150;
	                    _this._overlap = 100;
	                } else {
	                    _this._gapWidth = 150;
	                    _this._overlap = -27;
	                }
	            } else if (groupType === 11) {
	                _this._gapWidth = 150;
	            } else if (groupType === 12) {
	                if (ChartUtility.IsOfPieChart(chartType)) {
	                    _this._gapWidth = 100;
	                    _this._hasSeriesLines = true;
	                } else {
	                    _this._hasSeriesLines = false;
	                }
	            }
	            if (ChartUtility.IsDoughnutChart(chartType) && ChartUtility.IsExplodedChart(chartType)) {
	                _this._doughnutHoleSize = 50;
	            } else {
	                _this._doughnutHoleSize = 75;
	            }
	            if (ChartUtility.IsLineMarkerChart(chartType)) {
	                _this._marker = true;
	            } else if (groupType === 11) {
	                var seriesArray = _this.GetSers();
	                var hasMarker = seriesArray.some(function (series) {
	                    return series.MarkerStyle !== 4 ;
	                });
	                if (hasMarker) {
	                    _this._marker = true;
	                }
	            }
	            _this._hasSeriesLines = ChartUtility.HasSeriesLines(chartType);
	            _this._serLines = _this._hasSeriesLines ? new ChartLines(_this, 2) : keyword_null;
	            _this._hasHiLoLines = ChartUtility.HasHiLoLines(chartType);
	            _this._hiLoLines = _this._hasHiLoLines ? new ChartLines(_this, 1) : keyword_null;
	            _this._hasUpDownBars = ChartUtility.HasUpDownBars(chartType);
	            _this._upBars = _this._hasUpDownBars ? new ChartBars(_this, 0) : keyword_null;
	            _this._downBars = _this._hasUpDownBars ? new ChartBars(_this, 1) : keyword_null;
	            _this._varyByCategories = (_this._groupType === 12 ||
	            _this._groupType === 5 ||
	            _this._groupType === 10);
	        };
	        ChartGroup_prototype.Restore = function (ooPlotArea ) {
	            var _this = this;
	            switch (_this._groupType) {
	                case 1:
	                    _this.RestoreArea3DGroup(ooPlotArea);
	                    break;
	                case 2:
	                    _this.RestoreBar3DGroup(ooPlotArea);
	                    break;
	                case 3:
	                    _this.RestoreBar3DGroup(ooPlotArea);
	                    break;
	                case 4:
	                    _this.RestoreLine3DGroup(ooPlotArea);
	                    break;
	                case 5:
	                    _this.RestorePie3DGroup(ooPlotArea);
	                    break;
	                case 7:
	                    _this.RestoreAreaGroup(ooPlotArea);
	                    break;
	                case 8:
	                    _this.RestoreBarGroup(ooPlotArea, true);
	                    break;
	                case 9:
	                    _this.RestoreBarGroup(ooPlotArea, false);
	                    break;
	                case 10:
	                    _this.RestoreDoughnutGroup(ooPlotArea);
	                    break;
	                case 11:
	                    if (ChartUtility.IsStockChart(_this._chart.ChartType)) {
	                        _this.RestoreStockGroup(ooPlotArea);
	                        _this.RestoreBarGroup(ooPlotArea, false);
	                    } else {
	                        _this.RestoreLineGroup(ooPlotArea);
	                    }
	                    break;
	                case 12:
	                    _this.RestorePieGroup(ooPlotArea);
	                    _this.RestoreOfPieGroup(ooPlotArea);
	                    break;
	                case 13:
	                    _this.RestoreRadarGroup(ooPlotArea);
	                    break;
	                case 14:
	                    _this.RestoreXYGroup(ooPlotArea);
	                    _this.RestoreBubbleGroup(ooPlotArea);
	                    break;
	            }
	        };
	        ChartGroup_prototype.RestoreBarGroup = function (ooPlotArea , isBar) {
	            var _this = this;
	            var charts = _this.GetBarCharts(ooPlotArea, _this._axisGroup, isBar);
	            if (charts.length > 0) {
	                var firstChart = charts[0];
	                _this.RestoreBarBaseGroup(firstChart);
	                if (!isNullOrUndefined(firstChart.overlap)) {
	                    _this.Overlap = firstChart.overlap;
	                } else {
	                    _this.Overlap = 0;
	                }
	                if (firstChart.serLines && firstChart.serLines.length > 0) {
	                    _this.HasSeriesLines = true;
	                    _this._serLines.FromOOModel(firstChart.serLines[0]);
	                } else {
	                    _this.HasSeriesLines = false;
	                }
	            }
	        };
	        ChartGroup_prototype.RestoreBarBaseGroup = function (ooBarChart ) {
	            if (!isNullOrUndefined(ooBarChart.gapWidth)) {
	                this.GapWidth = ooBarChart.gapWidth;
	            }
	            if (!isNullOrUndefined(ooBarChart.varyColors)) {
	                this._varyByCategories = ooBarChart.varyColors;
	            }
	        };
	        ChartGroup_prototype.GetBarCharts = function (ooPlotArea , axisGroup, isBar) {
	            var charts = this.GetCharts(6, ooPlotArea, axisGroup);
	            var result = [];
	            for (var _i = 0, charts_1 = charts; _i < charts_1.length; _i++) {
	                var item = charts_1[_i];
	                var barDir = item.barDir;
	                if (isBar) {
	                    if (barDir === 0) {
	                        result.push(item);
	                    }
	                } else if (isNullOrUndefined(barDir) || barDir === 1) {
	                    result.push(item);
	                }
	            }
	            return result;
	        };
	        ChartGroup_prototype.RestoreLineGroup = function (ooPlotArea ) {
	            var _this = this;
	            var charts = _this.GetCharts(8, ooPlotArea, _this._axisGroup);
	            if (charts.length > 0) {
	                var firstChart = charts[0];
	                _this.RestoreLineBaseGroup(firstChart);
	                var hiLowLines = firstChart.hiLowLines;
	                if (!isNullOrUndefined(hiLowLines)) {
	                    _this.HasHiLoLines = true;
	                    _this._hiLoLines.FromOOModel(hiLowLines);
	                } else {
	                    _this.HasHiLoLines = false;
	                }
	                var upDownBars = firstChart.upDownBars;
	                if (!isNullOrUndefined(upDownBars)) {
	                    _this.HasUpDownBars = true;
	                    _this._upBars.FromOOModel(upDownBars.upBars);
	                    _this._downBars.FromOOModel(upDownBars.downBars);
	                } else {
	                    _this.HasUpDownBars = false;
	                }
	                var marker = firstChart.marker;
	                if (!isNullOrUndefined(marker)) {
	                    _this.Marker = marker;
	                } else {
	                    _this.Marker = false;
	                }
	            }
	        };
	        ChartGroup_prototype.RestoreLineBaseGroup = function (ooLineChart ) {
	            var _this = this;
	            var varyColors = ooLineChart.varyColors;
	            if (!isNullOrUndefined(varyColors)) {
	                _this._varyByCategories = varyColors;
	            }
	            var dropLines = ooLineChart.dropLines;
	            if (!isNullOrUndefined(dropLines)) {
	                _this.HasDropLines = true;
	                _this._dropLines.FromOOModel(dropLines);
	            } else {
	                _this.HasDropLines = false;
	            }
	        };
	        ChartGroup_prototype.RestoreStockGroup = function (ooPlotArea ) {
	            var _this = this;
	            var charts = _this.GetCharts(0, ooPlotArea, _this._axisGroup);
	            if (charts.length > 0) {
	                var firstChart = charts[0];
	                var dropLines = firstChart.dropLines;
	                if (!isNullOrUndefined(dropLines)) {
	                    _this.HasDropLines = true;
	                    _this._dropLines.FromOOModel(dropLines);
	                } else {
	                    _this.HasDropLines = false;
	                }
	                var hiLowLines = firstChart.hiLowLines;
	                if (!isNullOrUndefined(hiLowLines)) {
	                    _this.HasHiLoLines = true;
	                    _this._hiLoLines.FromOOModel(hiLowLines);
	                } else {
	                    _this.HasHiLoLines = false;
	                }
	                var upDownBars = firstChart.upDownBars;
	                if (!isNullOrUndefined(upDownBars)) {
	                    _this.HasUpDownBars = true;
	                    _this._upBars.FromOOModel(upDownBars.upBars);
	                    _this._downBars.FromOOModel(upDownBars.downBars);
	                    if (!isNullOrUndefined(upDownBars.gapWidth)) {
	                        _this.GapWidth = upDownBars.gapWidth;
	                    }
	                } else {
	                    _this.HasUpDownBars = false;
	                }
	            }
	        };
	        ChartGroup_prototype.RestoreXYGroup = function (ooPlotArea ) {
	            var charts = this.GetCharts(1, ooPlotArea, this._axisGroup);
	            if (charts.length > 0) {
	                var firstChart = charts[0];
	                var varyColors = firstChart.varyColors;
	                if (varyColors) {
	                    this._varyByCategories = varyColors;
	                }
	            }
	        };
	        ChartGroup_prototype.RestoreBubbleGroup = function (ooPlotArea ) {
	            var _this = this;
	            var charts = _this.GetCharts(3, ooPlotArea, _this._axisGroup);
	            if (charts.length > 0) {
	                var firstChart = charts[0];
	                var varyColors = firstChart.varyColors;
	                if (varyColors) {
	                    _this._varyByCategories = varyColors;
	                }
	                var bubbleScale = firstChart.bubbleScale;
	                if (!isNullOrUndefined(bubbleScale)) {
	                    _this._bubbleScale = bubbleScale;
	                }
	                var showNegBubbles = firstChart.showNegBubbles;
	                if (!isNullOrUndefined(showNegBubbles)) {
	                    _this.ShowNegativeBubbles = showNegBubbles;
	                }
	                var sizeRepresents = firstChart.sizeRepresents;
	                if (!isNullOrUndefined(sizeRepresents)) {
	                    _this.SizeRepresents = sizeRepresents;
	                }
	            }
	        };
	        ChartGroup_prototype.RestorePieGroup = function (ooPlotArea ) {
	            var firstChart = keyword_null;
	            var pieChart = ChartUtility.GetPieChart(ooPlotArea);
	            if (this._axisGroup === 0) {
	                if (pieChart.length > 0) {
	                    firstChart = pieChart[0];
	                }
	            } else {
	                var pieCharts = ChartUtility.GetPieCharts(ooPlotArea);
	                var primPieChart = ChartUtility.GetPrimaryPieChart(pieCharts);
	                if (primPieChart.chartType === 10) {
	                    if (pieChart.length > 1) {
	                        firstChart = pieChart[1];
	                    }
	                } else if (pieChart.length > 0) {
	                    firstChart = pieChart[0];
	                }
	            }
	            if (!isNullOrUndefined(firstChart)) {
	                this.RestorePieBaseGroup(firstChart);
	            }
	        };
	        function containsPoint(secondPiePt, p) {
	            return secondPiePt.some(function (item) {
	                return item === p.Index;
	            });
	        }
	        ChartGroup_prototype.RestoreOfPieGroup = function (ooPlotArea ) {
	            var _this = this;
	            var firstChart = keyword_null;
	            var ofPieChart = ChartUtility.GetOfPieChart(ooPlotArea);
	            if (_this._axisGroup === 0) {
	                if (ofPieChart.length > 0) {
	                    firstChart = ofPieChart[0];
	                }
	            } else {
	                var pieCharts = ChartUtility.GetPieCharts(ooPlotArea);
	                var primPieChart = ChartUtility.GetPrimaryPieChart(pieCharts);
	                if (primPieChart.chartType === 13) {
	                    if (ofPieChart.length > 1) {
	                        firstChart = ofPieChart[1];
	                    }
	                } else if (ofPieChart.length > 0) {
	                    firstChart = ofPieChart[0];
	                }
	            }
	            if (firstChart) {
	                _this.RestorePieBaseGroup(firstChart);
	                var serLines = firstChart.serLines;
	                if (!isNullOrUndefined(serLines) && serLines.length > 0) {
	                    _this.HasSeriesLines = true;
	                    _this._serLines.FromOOModel(serLines[0]);
	                } else {
	                    _this.HasSeriesLines = false;
	                }
	                var secondPieSize = firstChart.secondPieSize;
	                if (!isNullOrUndefined(secondPieSize)) {
	                    _this.SecondPlotSize = secondPieSize;
	                }
	                var gapWidth = firstChart.gapWidth;
	                if (!isNullOrUndefined(gapWidth)) {
	                    _this.GapWidth = gapWidth;
	                }
	                var splitType = firstChart.splitType;
	                if (!isNullOrUndefined(splitType)) {
	                    _this._pieSplitType = splitType;
	                }
	                var splitPos = firstChart.splitPos;
	                if (!isNullOrUndefined(splitPos)) {
	                    _this._splitValue = splitPos;
	                }
	                if (_this._pieSplitType === 3) {
	                    var custSplit = firstChart.custSplit, secondPiePt = custSplit && custSplit.secondPiePt;
	                    if (secondPiePt && secondPiePt.length > 0) {
	                        for (var _i = 0, _a = _this.GetSers(); _i < _a.length; _i++) {
	                            var ser = _a[_i];
	                            var points = ser.Points;
	                            for (var i = 0, count = points.Count; i < count; i++) {
	                                var p = points.Get(i);
	                                p.SetSecondaryPlotInteral(containsPoint(secondPiePt, p));
	                            }
	                        }
	                    }
	                } else {
	                    for (var _b = 0, _c = _this.GetSers(); _b < _c.length; _b++) {
	                        ser = _c[_b];
	                        ser.UpdateSecondPlotPoints();
	                    }
	                }
	            }
	        };
	        ChartGroup_prototype.RestoreDoughnutGroup = function (ooPlotArea ) {
	            var firstChart = keyword_null;
	            var doughnutChart = ChartUtility.GetDoughnutChart(ooPlotArea);
	            if (this._axisGroup === 0) {
	                if (doughnutChart.length > 0) {
	                    firstChart = doughnutChart[0];
	                }
	            } else {
	                var pieCharts = ChartUtility.GetPieCharts(ooPlotArea);
	                var primPieChart = ChartUtility.GetPrimaryPieChart(pieCharts);
	                if (primPieChart.chartType === 12) {
	                    if (doughnutChart.length > 1) {
	                        firstChart = doughnutChart[1];
	                    }
	                } else if (doughnutChart.length > 0) {
	                    firstChart = doughnutChart[0];
	                }
	            }
	            if (firstChart) {
	                this.RestorePieBaseGroup(firstChart);
	                var holeSize = firstChart.holeSize;
	                if (!isNullOrUndefined(holeSize)) {
	                    this.DoughnutHoleSize = holeSize;
	                }
	            }
	        };
	        ChartGroup_prototype.RestorePieBaseGroup = function (ooPieChart ) {
	            var varyColors = ooPieChart.varyColors;
	            if (!isNullOrUndefined(varyColors)) {
	                this._varyByCategories = varyColors;
	            }
	            var firstSliceAng = ooPieChart.firstSliceAng;
	            if (!isNullOrUndefined(firstSliceAng)) {
	                this._firstSliceAngle = firstSliceAng;
	            }
	        };
	        ChartGroup_prototype.RestoreRadarGroup = function (ooPlotArea ) {
	            var charts = this.GetCharts(2, ooPlotArea, this._axisGroup);
	            if (charts.length > 0) {
	                var firstChart = charts[0];
	                var varyColors = firstChart.varyColors;
	                if (!isNullOrUndefined(varyColors)) {
	                    this._varyByCategories = varyColors;
	                }
	            }
	        };
	        ChartGroup_prototype.RestoreAreaGroup = function (ooPlotArea ) {
	            var charts = this.GetCharts(4, ooPlotArea, this._axisGroup);
	            if (charts.length > 0) {
	                this.RestoreAreaBaseGroup(charts[0]);
	            }
	        };
	        ChartGroup_prototype.RestoreAreaBaseGroup = function (ooAreaChart ) {
	            var _this = this;
	            var varyColors = ooAreaChart.varyColors;
	            if (!isNullOrUndefined(varyColors)) {
	                _this._varyByCategories = varyColors;
	            }
	            var dropLines = ooAreaChart.dropLines;
	            if (!isNullOrUndefined(dropLines)) {
	                _this.HasDropLines = true;
	                _this._dropLines.FromOOModel(dropLines);
	            } else {
	                _this.HasDropLines = false;
	            }
	        };
	        ChartGroup_prototype.RestoreArea3DGroup = function (ooPlotArea ) {
	            var area3DChart = ChartUtility.GetArea3DChart(ooPlotArea);
	            if (!isNullOrUndefined(area3DChart)) {
	                var firstChart = area3DChart;
	                this.RestoreAreaBaseGroup(firstChart);
	                var gapDepth = firstChart.gapDepth;
	                if (!isNullOrUndefined(gapDepth)) {
	                    this._chart.GapDepth = gapDepth;
	                }
	            }
	        };
	        ChartGroup_prototype.RestoreBar3DGroup = function (ooPlotArea ) {
	            var bar3DChart = ChartUtility.GetBar3DChart(ooPlotArea);
	            if (!isNullOrUndefined(bar3DChart)) {
	                var firstChart = bar3DChart;
	                this.RestoreBarBaseGroup(firstChart);
	                var gapDepth = firstChart.gapDepth;
	                if (!isNullOrUndefined(gapDepth)) {
	                    this._chart.GapDepth = gapDepth;
	                }
	                var shape = firstChart.shape;
	                if (!isNullOrUndefined(shape)) {
	                    this._chart.SetBarShapeInternal(shape);
	                }
	            }
	        };
	        ChartGroup_prototype.RestoreLine3DGroup = function (ooPlotArea ) {
	            var line3DChart = ChartUtility.GetLine3DChart(ooPlotArea);
	            if (!isNullOrUndefined(line3DChart)) {
	                this.RestoreLineBaseGroup(line3DChart);
	                var gapDepth = line3DChart.gapDepth;
	                if (!isNullOrUndefined(gapDepth)) {
	                    this._chart.GapDepth = gapDepth;
	                }
	            }
	        };
	        ChartGroup_prototype.RestorePie3DGroup = function (ooPlotArea ) {
	            var pie3DChart = ChartUtility.GetPie3DChart(ooPlotArea);
	            if (!isNullOrUndefined(pie3DChart)) {
	                this.RestorePieBaseGroup(pie3DChart);
	            }
	        };
	        ChartGroup_prototype.GetCharts = function (chartType, ooPlotArea , axisGroup) {
	            var pAxes = ChartUtility.GetPrimaryAxises(ooPlotArea);
	            var pCharts = [];
	            var sCharts = [];
	            for (var _i = 0, _a = ooPlotArea.chartGroups; _i < _a.length; _i++) {
	                var item = _a[_i];
	                if (item.chartType === chartType) {
	                    var chart = item;
	                    for (var _b = 0, _c = chart.axId; _b < _c.length; _b++) {
	                        var ax = _c[_b];
	                        if (pAxes.indexOf(ax) === -1 && sCharts.indexOf(chart) === -1) {
	                            sCharts.push(chart);
	                        } else if (pCharts.indexOf(chart) === -1) {
	                            pCharts.push(chart);
	                        }
	                    }
	                }
	            }
	            return axisGroup === 0 ? pCharts : sCharts;
	        };
	        return ChartGroup;
	    }());
	    Charts.ChartGroup = ChartGroup;
	    var ChartGroups = (function () {
	        function ChartGroups(chart, groupType) {
	            this._cachedChartGroups = [];
	            this._chart = chart;
	            this._groupType = groupType;
	        }
	        var ChartGroups_prototype = ChartGroups.prototype;
	        defineProperty(ChartGroups_prototype, "Count", {
	            get: function () {
	                return this.GetChartGroups().length;
	            }
	        });
	        defineProperty(ChartGroups_prototype, "Parent", {
	            get: function () {
	                return this._chart;
	            }
	        });
	        ChartGroups_prototype.Get = function (index) {
	            var chartGroups = this.GetChartGroups();
	            if (index >= 0 && index < chartGroups.length) {
	                return chartGroups[index];
	            }
	            return keyword_null;
	        };
	        ChartGroups_prototype.GetChartGroups = function () {
	            var _this = this;
	            var result = _this.GetValidChartGroups();
	            if (result.length === 0 && ChartUtility.MapToGroupType(_this._chart.ChartType) === _this._groupType) {
	                var defaultGroup = _this.TryGetCachedGroup(0);
	                result.push(defaultGroup);
	            }
	            return result;
	        };
	        ChartGroups_prototype.TryGetCachedGroup = function (axisGroup) {
	            var _this = this;
	            for (var _i = 0, _a = _this._cachedChartGroups; _i < _a.length; _i++) {
	                var item = _a[_i];
	                if (item.GroupType === _this._groupType &&
	                    item.AxisGroup === axisGroup) {
	                    return item;
	                }
	            }
	            var newGroup = new ChartGroup(_this._chart, _this._groupType, axisGroup);
	            _this._cachedChartGroups.push(newGroup);
	            return newGroup;
	        };
	        ChartGroups_prototype.GetValidChartGroups = function () {
	            var result = [];
	            var group1 = this.TryGetCachedGroup(0);
	            if (!isNullOrUndefined(group1) && group1.Count > 0) {
	                result.push(group1);
	            }
	            var group2 = this.TryGetCachedGroup(1);
	            if (!isNullOrUndefined(group2) && group2.Count > 0) {
	                result.push(group2);
	            }
	            return result;
	        };
	        ChartGroups_prototype.Reset = function () {
	            for (var _i = 0, _a = this._cachedChartGroups; _i < _a.length; _i++) {
	                var group = _a[_i];
	                group.Init();
	            }
	        };
	        return ChartGroups;
	    }());
	    Charts.ChartGroups = ChartGroups;
	    var FullChartGroups = (function () {
	        function FullChartGroups(chart) {
	            this._chart = chart;
	            this._needCache = false;
	            this._cachedChartGroups = keyword_null;
	        }
	
	        var FullChartGroups_prototype = FullChartGroups.prototype;
	        defineProperty(FullChartGroups_prototype, "Count", {
	            get: function () {
	                return this.GetAllChartGroups().length;
	            }
	        });
	        defineProperty(FullChartGroups_prototype, "Parent", {
	            get: function () {
	                return this._chart;
	            }
	        });
	        FullChartGroups_prototype.Get = function (index) {
	            var allGroups = this.GetAllChartGroups();
	            if (index >= 0 && index < allGroups.length) {
	                return allGroups[index];
	            }
	            return keyword_null;
	        };
	        FullChartGroups_prototype.GetAllChartGroups = function () {
	            var _this = this;
	            if (_this._needCache && _this._cachedChartGroups) {
	                return _this._cachedChartGroups;
	            }
	
	            var allGroups = [];
	            var area3DGroup = _this._chart.Area3DGroup;
	            if (!isNullOrUndefined(area3DGroup)) {
	                allGroups.push(area3DGroup);
	            }
	            var bar3DGroup = _this._chart.Bar3DGroup;
	            if (!isNullOrUndefined(bar3DGroup)) {
	                allGroups.push(bar3DGroup);
	            }
	            var column3DGroup = _this._chart.Column3DGroup;
	            if (!isNullOrUndefined(column3DGroup)) {
	                allGroups.push(column3DGroup);
	            }
	            var line3DGroup = _this._chart.Line3DGroup;
	            if (!isNullOrUndefined(line3DGroup)) {
	                allGroups.push(line3DGroup);
	            }
	            var pie3DGroup = _this._chart.Pie3DGroup;
	            if (!isNullOrUndefined(pie3DGroup)) {
	                allGroups.push(pie3DGroup);
	            }
	            var surfaceGroup = _this._chart.SurfaceGroup;
	            if (!isNullOrUndefined(surfaceGroup)) {
	                allGroups.push(surfaceGroup);
	            }
	            var areaGroups = _this._chart.AreaGroups;
	            if (!isNullOrUndefined(areaGroups)) {
	                _this._pushChartGroups(allGroups, areaGroups);
	            }
	            var barGroups = _this._chart.BarGroups;
	            if (!isNullOrUndefined(barGroups)) {
	                _this._pushChartGroups(allGroups, barGroups);
	            }
	            var columnGroups = _this._chart.ColumnGroups;
	            if (!isNullOrUndefined(columnGroups)) {
	                _this._pushChartGroups(allGroups, columnGroups);
	            }
	            var doughnutGroups = _this._chart.DoughnutGroups;
	            if (!isNullOrUndefined(doughnutGroups)) {
	                _this._pushChartGroups(allGroups, doughnutGroups);
	            }
	            var lineGroups = _this._chart.LineGroups;
	            if (!isNullOrUndefined(lineGroups)) {
	                _this._pushChartGroups(allGroups, lineGroups);
	            }
	            var pieGroups = _this._chart.PieGroups;
	            if (!isNullOrUndefined(pieGroups)) {
	                _this._pushChartGroups(allGroups, pieGroups);
	            }
	            var radarGroups = _this._chart.RadarGroups;
	            if (!isNullOrUndefined(radarGroups)) {
	                _this._pushChartGroups(allGroups, radarGroups);
	            }
	            var xyGroups = _this._chart.XYGroups;
	            if (!isNullOrUndefined(xyGroups)) {
	                _this._pushChartGroups(allGroups, xyGroups);
	            }
	
	            if (_this._needCache) {
	                _this._cachedChartGroups = allGroups;
	            }
	            return allGroups;
	        };
	        FullChartGroups_prototype.startCache = function () {
	            this._needCache = true;
	            this._cachedChartGroups = keyword_null;
	        };
	        FullChartGroups_prototype.endCache = function () {
	            this._needCache = false;
	            this._cachedChartGroups = keyword_null;
	        };
	        FullChartGroups_prototype._pushChartGroups = function (allGroups, groups) {
	            for (var i = 0, length = groups.Count; i < length; i++) {
	                allGroups.push(groups.Get(i));
	            }
	        };
	        FullChartGroups_prototype.Reset = function () {
	            var allGroups = this.GetAllChartGroups();
	            for (var _i = 0, allGroups_1 = allGroups; _i < allGroups_1.length; _i++) {
	                var group = allGroups_1[_i];
	                group.Init();
	            }
	        };
	        return FullChartGroups;
	    }());
	    Charts.FullChartGroups = FullChartGroups;
	    Charts.ChartGroupType = {
	        UnKnown: 0,
	        Area3DGroup: 1,
	        Bar3DGroup: 2,
	        Column3DGroup: 3,
	        Line3DGroup: 4,
	        Pie3DGroup: 5,
	        SurfaceGroup: 6,
	        AreaGroup: 7,
	        BarGroup: 8,
	        ColumnGroup: 9,
	        DoughnutGroup: 10,
	        LineGroup: 11,
	        PieGroup: 12,
	        RadarGroup: 13,
	        XYGroup: 14
	    };
	    Charts.ChartLinesType = {
	        DropLines: 0,
	        HiLoLines: 1,
	        SeriesLines: 2,
	        DlblsLeaderLines: 3
	    };
	
	    module.exports = Charts;
	}());

/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

	(function () {
	    'use strict';
	
	    var Common = __webpack_require__(11);
	    var Types = Common._Types;
	    var inherit = Types._inherit;
	
	    var Charts = __webpack_require__(3);
	    var ChartCommon = Charts,
	        ChartElementBase = ChartCommon.ChartElementBase,
	        ChartUtility = ChartCommon.ChartUtility,
	        defineProperty = ChartUtility.defineProperty,
	        UnitHelper = ChartCommon.UnitHelper,
	        isNullOrUndefined = UnitHelper.isNullOrUndefined;
	
	    var DrawingText = Charts.DrawingText;
	    var ChartFormat = __webpack_require__(7).ChartFormat;
	
	    var keyword_null = null,
	        keyword_undefined = void 0;
	
	    var LegendKey = (function (_super) {
	        inherit(LegendKey, _super);
	
	        function LegendKey(legendEntry, ser, point) {
	            if (point === keyword_undefined) {
	                point = -1;
	            }
	            _super.call(this);
	            var _this = this;
	            _this._legendEntry = legendEntry;
	            _this._ser = ser;
	            _this._point = point;
	            return _this;
	        }
	
	        var prototype = LegendKey.prototype;
	
	        prototype.Equals = function (obj) {
	            return obj && this._ser === obj._ser && this._point === obj._point || false;
	        };
	        defineProperty(prototype, "Format", {
	            get: function () {
	                var _this = this;
	                var point = _this._point;
	                if (point === -1) {
	                    return _this._ser.Format;
	                } else if (point >= 0 && point < _this._ser.PointsCount) {
	                    return _this._ser.Points.Get(point).Format;
	                }
	                return keyword_null;
	            }
	        });
	        defineProperty(prototype, "Parent", {
	            get: function () {
	                return this._legendEntry;
	            }
	        });
	        prototype.ClearFormats = function () {
	
	        };
	        prototype.Delete = function () {
	
	        };
	        defineProperty(prototype, "Series", {
	            get: function () {
	                return this._ser;
	            }
	        });
	        defineProperty(prototype, "Point", {
	            get: function () {
	                return this._point;
	            }
	        });
	        prototype.CreateFormat = function () {
	            return new ChartFormat(this._legendEntry.Parent.Parent, this._legendEntry.Parent.Format);
	        };
	        return LegendKey;
	    }(ChartElementBase));
	    Charts.LegendKey = LegendKey;
	    var LegendEntry = (function () {
	        function LegendEntry(legend, series, point) {
	            if (point === keyword_undefined) {
	                point = -1;
	            }
	            var _this = this;
	            _this._deleted = keyword_null;
	            _this._legendKey = keyword_null;
	            _this._drawingText = keyword_null;
	            _this._ooEntry = keyword_null;
	            _this._legend = legend;
	            _this._legendKey = new LegendKey(_this, series, point);
	        }
	
	        var prototype = LegendEntry.prototype;
	
	        defineProperty(prototype, "Font", {
	            get: function () {
	                var _this = this;
	                if (!_this._drawingText) {
	                    _this._drawingText = new DrawingText(_this._legend.Parent.Parent, _this._legend.Font);
	                }
	                return _this._drawingText.Font;
	            }
	        });
	        defineProperty(prototype, "Format", {
	            get: function () {
	                return this._legendKey.Format;
	            }
	        });
	        defineProperty(prototype, "Parent", {
	            get: function () {
	                return this._legend;
	            }
	        });
	        defineProperty(prototype, "Deleted", {
	            get: function () {
	                return this._deleted || false;
	            }
	        });
	        defineProperty(prototype, "SourceIndex", {
	            get: function () {
	                return this._legend.LegendEntries.IndexOfSource(this);
	            }
	        });
	        defineProperty(prototype, "LegendKey", {
	            get: function () {
	                return this._legendKey;
	            }
	        });
	        prototype.Delete = function () {
	            this._deleted = true;
	        };
	        prototype.FromOOModel = function (t  ) {
	            if (isNullOrUndefined(t)) {
	                this._deleted = false;
	                this._drawingText = keyword_null;
	                return;
	            }
	            if (!isNullOrUndefined(t.delete)) {
	                this._deleted = t.delete;
	            }
	            if (!this.Deleted) {
	                if (!isNullOrUndefined(t.txPr)) {
	                    this._drawingText = new DrawingText(this._legend.Parent.Parent, this._legend.Font);
	                    var tx = {}  ;
	                    tx.rich = t.txPr;
	                    this._drawingText.FromOOModel(tx);
	                } else {
	                    this._drawingText = keyword_null;
	                }
	            }
	        };
	        prototype.ToOOModel = function () {
	            var ooEntry = this._ooEntry;
	            if (isNullOrUndefined(ooEntry) &&
	                (!isNullOrUndefined(this._drawingText) && this._drawingText.Font.IsDirtyIncludingParent(false)) || !isNullOrUndefined(this._deleted)) {
	                ooEntry = {}  ;
	            }
	            if (isNullOrUndefined(ooEntry)) {
	                return keyword_null;
	            }
	            if (!isNullOrUndefined(this._deleted)) {
	                ooEntry.delete = this._deleted;
	            }
	            ooEntry.idx = this.SourceIndex;
	            if (!this.Deleted && !isNullOrUndefined(this._drawingText)) {
	                ooEntry.txPr = this._drawingText.ToOOModel().rich;
	            }
	            return ooEntry;
	        };
	        return LegendEntry;
	    }());
	    Charts.LegendEntry = LegendEntry;
	    var LegendEntries = (function () {
	        function LegendEntries(legend) {
	            this._entries = [];
	            this._legend = legend;
	            this._sers = legend.Parent.SeriesCollection;
	        }
	        var prototype = LegendEntries.prototype;
	
	        prototype.FindEntryByKey = function (ser, point) {
	            for (var _i = 0, _a = this._entries; _i < _a.length; _i++) {
	                var item = _a[_i];
	                var relatedSeries = item.LegendKey.Series;
	                var relatedPoint = item.LegendKey.Point;
	                if (!isNullOrUndefined(relatedSeries) && this._sers.IndexOf(relatedSeries) !== -1 && point === relatedPoint) {
	                    return item;
	                }
	            }
	            return keyword_null;
	        };
	        prototype.UpdateEntries = function (cleanAll) {
	            var entries = [];
	            var _this = this;
	            var sers = _this._sers,
	                legend = _this._legend;
	            if (sers.Count > 0) {
	                var firstSer = sers.Get(0);
	                if (ChartUtility.IsAnyPieChart(firstSer.InnerChartType)) {
	                    var pointsCount = firstSer.PointsCount;
	                    for (var i = 0; i < pointsCount; i++) {
	                        if (cleanAll) {
	                            entries.push(new LegendEntry(legend, firstSer, i));
	                        } else {
	                            entries.push(_this.GetEntry(firstSer, i));
	                        }
	                    }
	                } else {
	                    i = 0;
	                    for (var length = sers.Count; i < length; i++) {
	                        var series = sers.Get(i);
	                        if (cleanAll) {
	                            entries.push(new LegendEntry(legend, series));
	                        } else {
	                            entries.push(_this.GetEntry(series, -1));
	                        }
	                    }
	                }
	            }
	            _this._entries = entries;
	        };
	        prototype.GetEntry = function (ser, point) {
	            return this.FindEntryByKey(ser, point) || new LegendEntry(this._legend, ser, point);
	        };
	        defineProperty(LegendEntries.prototype, "Count", {
	            get: function () {
	                var count = 0;
	                for (var _i = 0, _a = this._entries; _i < _a.length; _i++) {
	                    var entry = _a[_i];
	                    count += entry.Deleted ? 0 : 1;
	                }
	                return count;
	            }
	        });
	        defineProperty(LegendEntries.prototype, "Parent", {
	            get: function () {
	                return this._legend;
	            }
	        });
	        prototype.Get = function (index) {
	            return this.GetItem(index);
	        };
	        prototype.GetAllExistingEntries = function () {
	            return this._entries;
	        };
	        prototype.IndexOfSource = function (entry) {
	            return this._entries.indexOf(entry);
	        };
	        prototype.GetItem = function (viewIndex) {
	            var count = 0;
	            for (var _i = 0, _a = this._entries; _i < _a.length; _i++) {
	                var entry = _a[_i];
	                if (!entry.Deleted && count === viewIndex) {
	                    return entry;
	                }
	                if (!entry.Deleted) {
	                    count++;
	                }
	            }
	            return keyword_null;
	        };
	        prototype.RestorEntries = function (ooEntries) {
	            if (isNullOrUndefined(ooEntries) || ooEntries.length === 0) {
	                this.UpdateEntries(true);
	                return;
	            }
	            var entries = this._entries,
	                entriesCount = entries.length;
	            for (var _i = 0, ooEntries_1 = ooEntries; _i < ooEntries_1.length; _i++) {
	                var item = ooEntries_1[_i];
	                if (!isNullOrUndefined(item.idx)) {
	                    var index = item.idx;
	                    var entry;
	                    if (index < entriesCount) {
	                        entry = entries[index];
	                        if (!isNullOrUndefined(entry)) {
	                            entry.FromOOModel(item);
	                        }
	                    }
	                }
	            }
	        };
	        return LegendEntries;
	    }());
	    Charts.LegendEntries = LegendEntries;
	
	    var Legend = (function (_super) {
	        inherit(Legend, _super);
	
	        function Legend(chart) {
	            _super.call(this);
	            var _this = this;
	            _this.DefaultFontSize = UnitHelper.pointToPixel(9);
	            _this._position = 2  ;
	            _this._ooModel = keyword_null;
	            _this._chart = chart;
	            _this._chartText = new DrawingText(chart.Parent, chart.ChartArea.Font);
	            _this._chartText.Font.Size = UnitHelper.pointToPixel(9);
	            _this._entries = new LegendEntries(_this);
	            _this.Position = 4 ;
	           
	            return _this;
	        }
	
	        var prototype = Legend.prototype;
	
	        defineProperty(prototype, "Font", {
	            get: function () {
	                var _this = this;
	                if (!_this._chartText) {
	                    _this._chartText = new DrawingText(_this._chart.Parent, _this._chart.ChartArea.Font);
	                }
	
	                return _this._chartText.Font;
	            }
	        });
	        defineProperty(prototype, "Format", {
	            get: function () {
	                return this.ChartFormat;
	            }
	        });
	        defineProperty(prototype, "LegendEntries", {
	            get: function () {
	                return this._entries;
	            }
	        });
	        defineProperty(prototype, "Parent", {
	            get: function () {
	                return this._chart;
	            }
	        });
	        defineProperty(prototype, "Position", {
	            get: function () {
	                return this._position;
	            },
	            set: function (value) {
	                this._position = value;
	                if (this._ooModel && value !== 0  ) {
	                    this._ooModel.layout = keyword_null;
	                }
	            }
	        });
	        prototype.Delete = function () {
	            this._chart.HasLegend = false;
	        };
	        prototype.From2016ChartOOModel = function (t  ) {
	            var _this = this;
	            _this._ooModel = t;
	            if (!isNullOrUndefined(t.align)) {
	                _this._align = t.align;
	            }
	            if (!isNullOrUndefined(t.legendPos)) {
	                _this._position = t.legendPos;
	            }
	            if (!isNullOrUndefined(t.overlay)) {
	                _this.IncludeInLayout = t.overlay;
	            }
	            _super.prototype.FromShapeProperties.call(_this, t.spPr);
	            if (!isNullOrUndefined(t.txPr)) {
	                var tx = {
	                    
	                    rich: t.txPr
	                };
	                _this._chartText.FromOOModel(tx);
	            }
	        };
	        prototype.FromOOModel = function (t  ) {
	            var _this = this;
	            _this._ooModel = t;
	            if (!isNullOrUndefined(t.legendPos)) {
	                _this._position = t.legendPos;
	            }
	            if (!isNullOrUndefined(t.overlay)) {
	                _this.IncludeInLayout = t.overlay;
	            }
	                _super.prototype.FromShapeProperties.call(_this, t.spPr);
	            if (!isNullOrUndefined(t.txPr)) {
	                var tx = { 
	                    rich: t.txPr
	                };
	                _this._chartText.FromOOModel(tx);
	            }
	            _this._entries.RestorEntries(t.legendEntry);
	        };
	        prototype.ToOOModel = function () {
	            var _this = this;
	            var ooLegend = _this._ooModel || {} ;
	            if (_this._align) {
	                ooLegend.align = _this._align;
	            }
	            if (_this.Position) {
	                ooLegend.legendPos = _this.Position;
	            }
	            ooLegend.overlay = _this.IncludeInLayout;
	            ooLegend.spPr = _super.prototype.ToShapeProperties.call(_this);
	            if (!isNullOrUndefined(_this._chartText)) {
	                var tx = _this._chartText.ToOOModel();
	                if (!isNullOrUndefined(tx)) {
	                    ooLegend.txPr = tx.rich;
	                } else {
	                    ooLegend.txPr = keyword_null;
	                }
	            }
	           
	           
	           
	            var legendEntry = [];
	            for (var _i = 0, _a = _this._entries.GetAllExistingEntries(); _i < _a.length; _i++) {
	                var item = _a[_i];
	                var model = item.ToOOModel();
	                if (!isNullOrUndefined(model)) {
	                    legendEntry.push(model);
	                }
	            }
	            if (legendEntry.length > 0) {
	                ooLegend.legendEntry = legendEntry;
	            }
	            return ooLegend;
	        };
	        prototype.CreateFormat = function () {
	            var format = new ChartFormat(this._chart);
	            format.Fill.Color.ColorType = 0;
	            return format;
	        };
	        return Legend;
	    }(ChartElementBase));
	    Charts.Legend = Legend;
	
	    module.exports = Charts;
	}());

/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

	(function () {
	    'use strict';
	
	    var Common = __webpack_require__(11);
	    var Types = Common._Types;
	    var inherit = Types._inherit;
	
	    var Charts = __webpack_require__(3);
	    var DrawingInterface = Charts,
	        ColorSchemeIndex = DrawingInterface.ColorSchemeIndex;
	    var ChartCommon = Charts,
	        ChartElementBase = ChartCommon.ChartElementBase,
	        ChartUtility = ChartCommon.ChartUtility,
	        defineProperty = ChartUtility.defineProperty,
	        UnitHelper = ChartCommon.UnitHelper,
	        isNullOrUndefined = UnitHelper.isNullOrUndefined;
	
	    var ChartFormat = __webpack_require__(7).ChartFormat;
	
	    var keyword_null = null, keyword_undefined = void 0;
	
	    var PlotArea = (function (_super) {
	        inherit(PlotArea, _super);
	        function PlotArea(chart) {
	            _super.call(this);
	            var _this = this;
	            _this._ooPlotArea = keyword_null;
	            _this._chart = chart;
	            _this._format = _this.GetDefaultFormat();
	            return _this;
	        }
	        var prototype = PlotArea.prototype;
	        prototype.GetDefaultFormat = function () {
	            var format = _super.prototype.GetDefaultFormat.call(this);
	            format.Fill.Color.ColorType = 0 ;
	            format.Line.Color.ColorType = 0 ;
	            return format;
	        };
	        prototype.CreateFormat = function () {
	            return new ChartFormat(this._chart);
	        };
	        defineProperty(prototype, "Format", {
	            get: function () {
	                return this.ChartFormat;
	            }
	        });
	        defineProperty(prototype, "Parent", {
	            get: function () {
	                return this._chart;
	            }
	        });
	        defineProperty(prototype, "PrimaryCatAxis", {
	            get: function () {
	                return this._chart.Axes.Item(0 , 0 );
	            }
	        });
	        defineProperty(prototype, "PrimaryValAxis", {
	            get: function () {
	                return this._chart.Axes.Item(1 , 0 );
	            }
	        });
	        defineProperty(prototype, "SecondaryCatAxis", {
	            get: function () {
	                return this._chart.Axes.Item(0 , 1 );
	            }
	        });
	        defineProperty(prototype, "SecondaryValAxis", {
	            get: function () {
	                return this._chart.Axes.Item(1 , 1 );
	            }
	        });
	        defineProperty(prototype, "SerAxis", {
	            get: function () {
	                return this._chart.Axes.Item(2 , 0 );
	            }
	        });
	        defineProperty(prototype, "SeriesCollection", {
	            get: function () {
	                return this._chart.SeriesCollection;
	            }
	        });
	        prototype.FromOOModel = function (t ) {
	            var _this = this;
	            _this._ooPlotArea = t;
	            if (!t.axes) {
	               
	                t.axes = [];
	            }
	            _this.FromShapeProperties(t.spPr);
	            _this._chart.SeriesCollection.RestoreSeries(t);
	            var is2016Chart = ChartUtility.GetIs2016ChartByPlotArea(t);
	            if (is2016Chart) {
	                _this._chart.Axes.Restore2016ChartAxes(t);
	            } else {
	                _this._chart.Axes.RestoreAxes(t);
	            }
	        };
	        prototype.ToOOModel = function () {
	            var _this = this;
	            var chartType = _this._chart.ChartType;
	            var is2016Chart = ChartUtility.GetIs2016ChartByChartType(chartType);
	            var ooModel, plotArea;
	            if (!is2016Chart) {
	                ooModel = _this._ooPlotArea || {} ;
	                plotArea = _this.ToCT_ChartPlotArea(chartType);
	                if (!isNullOrUndefined(plotArea)) {
	                    _this.SyncPlotAreaCharts(plotArea, ooModel);
	                    ooModel.spPr = _this.ToShapeProperties();
	                }
	            } else {
	                ooModel = {plotAreaRegion: {}};
	                ooModel.spPr = _this.ToShapeProperties();
	                ooModel.plotAreaRegion.series = _this.ToCT_Series();
	                ooModel.axes = _this.Update2016ChartAxes(_this.PrimaryCatAxis, _this.PrimaryValAxis, this.SecondaryCatAxis, this.SecondaryValAxis);
	            }
	            return ooModel;
	        };
	        prototype.Update2016ChartAxes = function (PrimaryCatAxis, PrimaryValAxis, SecondaryCatAxis, SecondaryValAxis) {
	            var axes = [];
	            if (!isNullOrUndefined(PrimaryCatAxis) && !isNullOrUndefined(PrimaryCatAxis._id) ) {
	                axes.push(PrimaryCatAxis.To2016ChartOOModel());
	            }
	            if (!isNullOrUndefined(PrimaryValAxis) && !isNullOrUndefined(PrimaryValAxis._id)) {
	                axes.push(PrimaryValAxis.To2016ChartOOModel());
	            }
	            if (!isNullOrUndefined(SecondaryCatAxis) && !isNullOrUndefined(SecondaryCatAxis._id)) {
	                axes.push(SecondaryCatAxis.To2016ChartOOModel());
	            }
	            if (!isNullOrUndefined(SecondaryValAxis) && !isNullOrUndefined(SecondaryValAxis._id)) {
	                axes.push(SecondaryValAxis.To2016ChartOOModel());
	            }
	            return axes;
	        };
	        prototype.ToCT_Series = function () {
	            var seriesResult = [], toSeries = this.SeriesCollection.AllSers;
	            if (!isNullOrUndefined(toSeries) && toSeries.length > 0) {
	                for (var i = 0; i < toSeries.length; i++) {
	                    var seriesItem = toSeries[i];
	                    seriesResult.push(seriesItem.ToOOModel());
	                }
	            }
	            return seriesResult;
	        };
	        prototype.ToCT_ChartPlotArea = function (chartType, axisGroup, toAxis) {
	            if (axisGroup === keyword_undefined) { axisGroup = keyword_null; }
	            if (toAxis === keyword_undefined) { toAxis = true; }
	            var plotArea = {
	                chartGroups: [],
	                axes: []
	            } ;
	            var toPrimay = isNullOrUndefined(axisGroup) || axisGroup === 0 ;
	            var toSecondary = true;
	            if (ChartUtility.IsStockChart(chartType)) {
	                toSecondary = this.HasSecondarySeries(9 );
	            } else {
	                toSecondary = (isNullOrUndefined(axisGroup) || axisGroup === 1 ) &&
	                    this.HasSecondarySeries(chartType) && !ChartUtility.Is3DChart(chartType) && !ChartUtility.IsSurfaceChart(chartType);
	            }
	            if (ChartUtility.IsAnyPieChart(chartType)) {
	                toAxis = false;
	            }
	            var primaryChart = keyword_null;
	            var secondaryChart = keyword_null;
	            switch (chartType) {
	                case 0 :
	                    plotArea = this.ToComboChartPlotArea();
	                    break;
	                case 12 :
	                case 13 :
	                case 14 :
	                case 18 :
	                case 19 :
	                case 20 :
	                case 15 :
	                case 16 :
	                case 17 :
	                case 6 :
	                case 21 :
	                case 22 :
	                case 23 :
	                    if (toPrimay) {
	                        primaryChart = this.ToCT_BarChart(chartType, 0 );
	                    }
	                    if (toSecondary) {
	                        secondaryChart = this.ToCT_BarChart(chartType, 1 );
	                    }
	                    break;
	                case 9 :
	                case 24 :
	                case 25 :
	                case 26 :
	                case 27 :
	                case 28 :
	                case 5 :
	                    if (toPrimay) {
	                        primaryChart = this.ToCT_LineChart(chartType, 0 );
	                    }
	                    if (toSecondary) {
	                        secondaryChart = this.ToCT_LineChart(chartType, 1 );
	                    }
	                    break;
	                case 10 :
	                case 30 :
	                case 31 :
	                case 4 :
	                case 29 :
	                case 32 :
	                case 3 :
	                case 41 :
	                    if (toPrimay) {
	                        primaryChart = this.ToCT_PieChart(chartType, 0 );
	                    }
	                    if (toSecondary) {
	                        secondaryChart = this.ToCT_PieChart(chartType, 1 );
	                    }
	                    break;
	                case 8 :
	                case 37 :
	                case 38 :
	                case 39 :
	                case 40 :
	                case 7 :
	                    if (toPrimay) {
	                        primaryChart = this.ToCT_AreaChart(chartType, 0 );
	                    }
	                    if (toSecondary) {
	                        secondaryChart = this.ToCT_AreaChart(chartType, 1 );
	                    }
	                    break;
	                case 2 :
	                case 42 :
	                case 43 :
	                    if (toPrimay) {
	                        primaryChart = this.ToCT_RadarChart(chartType, 0 );
	                    }
	                    if (toSecondary) {
	                        secondaryChart = this.ToCT_RadarChart(chartType, 1 );
	                    }
	                    break;
	                case 1 :
	                case 33 :
	                case 34 :
	                case 35 :
	                case 36 :
	                    if (toPrimay) {
	                        primaryChart = this.ToCT_ScatterChart(chartType, 0 );
	                    }
	                    if (toSecondary) {
	                        secondaryChart = this.ToCT_ScatterChart(chartType, 1 );
	                    }
	                    break;
	                case 11 :
	                case 48 :
	                    if (toPrimay) {
	                        primaryChart = this.ToCT_BubbleChart(chartType, 0 );
	                    }
	                    if (toSecondary) {
	                        secondaryChart = this.ToCT_BubbleChart(chartType, 1 );
	                    }
	                    break;
	                case 44 :
	                case 45 :
	                case 46 :
	                case 47 :
	                    if (toPrimay) {
	                        primaryChart = this.ToCT_SurfaceChartBase(chartType, 0 );
	                    }
	                    break;
	                case 49 :
	                case 50 :
	                    if (toPrimay) {
	                        primaryChart = this.ToCT_StockChart(chartType, 0 );
	                    }
	                    if (toSecondary) {
	                        secondaryChart = this.ToCT_StockChart(chartType, 1 );
	                    }
	                    break;
	                case 51 :
	                case 52 :
	                    if (toPrimay) {
	                        var sers = this.SeriesCollection.GetSers(false, 0 );
	                        if (sers.length > 0) {
	                            var volSerChartType = sers[0].InnerChartType;
	                           
	                            primaryChart = this.ToCT_ChartBase(volSerChartType, 0 );
	                        }
	                    }
	                    if (toSecondary) {
	                        secondaryChart = this.ToCT_StockChart(chartType, 1 );
	                    }
	                    break;
	            }
	            if (!isNullOrUndefined(primaryChart)) {
	                plotArea.chartGroups.push(primaryChart);
	                if (toAxis) {
	                    var axesIds = this.SetPlotAreaAxies(plotArea, this.PrimaryCatAxis, this.PrimaryValAxis, this.SerAxis);
	                    primaryChart.axId = primaryChart.axId.concat(axesIds);
	                }
	            }
	            if (!isNullOrUndefined(secondaryChart)) {
	                plotArea.chartGroups.push(secondaryChart);
	                if (toAxis) {
	                    axesIds = this.SetPlotAreaAxies(plotArea, this.SecondaryCatAxis, this.SecondaryValAxis, this.SerAxis);
	                    secondaryChart.axId = secondaryChart.axId.concat(axesIds);
	                }
	            }
	            return plotArea;
	        };
	        prototype.ToCT_ChartBase = function (chartType, axisGroup) {
	           
	            switch (chartType) {
	               
	               
	                case 12 :
	                case 13 :
	                case 14 :
	                    return this.ToCT_BarChart(chartType, axisGroup);
	                case 15 :
	                case 16 :
	                case 17 :
	                case 6 :
	                    return this.ToCT_BarChart(chartType, axisGroup);
	                case 18 :
	                case 19 :
	                case 20 :
	                    return this.ToCT_BarChart(chartType, axisGroup);
	                case 21 :
	                case 22 :
	                case 23 :
	                    return this.ToCT_BarChart(chartType, axisGroup);
	                case 9 :
	                case 24 :
	                case 25 :
	                case 26 :
	                case 27 :
	                case 28 :
	                    return this.ToCT_LineChart(chartType, axisGroup);
	                case 5 :
	                    return this.ToCT_LineChart(chartType, axisGroup);
	                case 10 :
	                case 30 :
	                    return this.ToCT_PieChart(chartType, axisGroup);
	                case 31 :
	                case 4 :
	                    return this.ToCT_PieChart(chartType, axisGroup);
	                case 29 :
	                case 32 :
	                    return this.ToCT_PieChart(chartType, axisGroup);
	                case 1 :
	                case 33 :
	                case 34 :
	                case 35 :
	                case 36 :
	                    return this.ToCT_ScatterChart(chartType, axisGroup);
	                case 8 :
	                case 37 :
	                case 38 :
	                    return this.ToCT_AreaChart(chartType, axisGroup);
	                case 39 :
	                case 40 :
	                case 7 :
	                    return this.ToCT_AreaChart(chartType, axisGroup);
	                case 3 :
	                case 41 :
	                    return this.ToCT_PieChart(chartType, axisGroup);
	                case 2 :
	                case 42 :
	                case 43 :
	                    return this.ToCT_RadarChart(chartType, axisGroup);
	                case 44 :
	                case 45 :
	                    return this.ToCT_SurfaceChartBase(chartType, axisGroup);
	                case 46 :
	                case 47 :
	                    return this.ToCT_SurfaceChartBase(chartType, axisGroup);
	                case 11 :
	                case 48 :
	                    return this.ToCT_BubbleChart(chartType, axisGroup);
	               
	               
	               
	               
	               
	               
	               
	               
	            }
	           
	        };
	        prototype.SyncPlotAreaCharts = function (from , to ) {
	            to.axes = from.axes;
	            to.chartGroups = from.chartGroups;
	           
	            var bandFmts3dLossless = keyword_null;
	            var surface3DChart = ChartUtility.GetSurface3DChart(to);
	            if (!isNullOrUndefined(surface3DChart) && !isNullOrUndefined(surface3DChart.bandFmts)) {
	                bandFmts3dLossless = surface3DChart.bandFmts;
	            }
	            var bandFmtsLossless = keyword_null;
	            var surfaceChart = ChartUtility.GetSurfaceChart(to);
	            if (!isNullOrUndefined(surfaceChart) && !isNullOrUndefined(surfaceChart.bandFmts)) {
	                bandFmtsLossless = surfaceChart.bandFmts;
	            }
	            if (!isNullOrUndefined(surface3DChart) && !isNullOrUndefined(bandFmts3dLossless)) {
	                surface3DChart.bandFmts = bandFmts3dLossless;
	            }
	            if (!isNullOrUndefined(surfaceChart) && !isNullOrUndefined(bandFmtsLossless)) {
	                surfaceChart.bandFmts = bandFmtsLossless;
	            }
	        };
	        prototype.ToComboChartPlotArea = function () {
	            var primaryPlotArea = this.ConvertAxisGroupToComboChartPlotArea(0 );
	            var secondaryPlotArea = this.ConvertAxisGroupToComboChartPlotArea(1 );
	            if (!isNullOrUndefined(primaryPlotArea) && !isNullOrUndefined(secondaryPlotArea)) {
	                return this.MergePrimeSecondPlotArea(primaryPlotArea, secondaryPlotArea);
	            } else if (!isNullOrUndefined(primaryPlotArea)) {
	                return primaryPlotArea;
	            } else if (!isNullOrUndefined(secondaryPlotArea)) {
	                return secondaryPlotArea;
	            }
	            return null;
	        };
	        prototype.ConvertAxisGroupToComboChartPlotArea = function (axisGroup) {
	            var chartTypes = [];
	            var sers = this.SeriesCollection.GetSers(false, axisGroup);
	            for (var _i = 0, sers_1 = sers; _i < sers_1.length; _i++) {
	                var ser = sers_1[_i];
	                if (chartTypes.indexOf(ser.InnerChartType) < 0) {
	                    chartTypes.push(ser.InnerChartType);
	                }
	            }
	            var plotAreas = [];
	            var firstNotPiePlotArea = keyword_null;
	            for (var _a = 0, chartTypes_1 = chartTypes; _a < chartTypes_1.length; _a++) {
	                var chartType = chartTypes_1[_a];
	                if (isNullOrUndefined(firstNotPiePlotArea) && !ChartUtility.IsAnyPieChart(chartType)) {
	                    firstNotPiePlotArea = this.ToCT_ChartPlotArea(chartType, axisGroup);
	                    plotAreas.push(firstNotPiePlotArea);
	                } else {
	                    plotAreas.push(this.ToCT_ChartPlotArea(chartType, axisGroup, false));
	                }
	            }
	            if (plotAreas.length > 0) {
	                return this.ProcessComboPlotAreas(plotAreas);
	            }
	            return null;
	        };
	        prototype.ProcessComboPlotAreas = function (plotAreas) {
	            var firstPlotArea = keyword_null;
	            for (var _i = 0, plotAreas_1 = plotAreas; _i < plotAreas_1.length; _i++) {
	                var item = plotAreas_1[_i];
	                var chartType = ChartUtility.GetChartType(item);
	                if (!ChartUtility.IsAnyPieChart(chartType)) {
	                    firstPlotArea = item;
	                    break;
	                }
	            }
	            if (isNullOrUndefined(firstPlotArea) && plotAreas.length > 0) {
	                firstPlotArea = plotAreas[0];
	                plotAreas.splice(0, 1);
	            } else {
	                plotAreas.splice(plotAreas.indexOf(firstPlotArea), 1);
	            }
	            if (!isNullOrUndefined(firstPlotArea) && plotAreas.length > 0) {
	                var axisIds = [];
	                if (!isNullOrUndefined(firstPlotArea.axes)) {
	                    for (var _a = 0, _b = firstPlotArea.axes; _a < _b.length; _a++) {
	                        var item_1 = _b[_a];
	                        axisIds.push(item_1.axId);
	                    }
	                }
	                for (var i = 0; i < plotAreas.length; i++) {
	                    var p = plotAreas[i];
	                    var area3DChart = ChartUtility.GetArea3DChart(p);
	                    if (!isNullOrUndefined(area3DChart) && isNullOrUndefined(area3DChart)) {
	                        area3DChart.axId = axisIds;
	                        firstPlotArea.chartGroups.push(area3DChart);
	                    }
	                    var areaChart = ChartUtility.GetAreaChart(p);
	                    if (!isNullOrUndefined(areaChart)) {
	                        for (var _c = 0, areaChart_1 = areaChart; _c < areaChart_1.length; _c++) {
	                            var item_2 = areaChart_1[_c];
	                            item_2.axId = axisIds;
	                            var firstPlotArea_AreaChart = ChartUtility.GetAreaChart(firstPlotArea);
	                            if (firstPlotArea_AreaChart.length === 0 ||
	                                ChartUtility.GetChartTypeByAreaChart(firstPlotArea_AreaChart[0]) !== ChartUtility.GetChartTypeByAreaChart(item_2)) {
	                                firstPlotArea.chartGroups.push(item_2);
	                            } else {
	                                for (var _d = 0, _e = item_2.ser; _d < _e.length; _d++) {
	                                    var ser = _e[_d];
	                                    firstPlotArea_AreaChart[0].ser.push(ser);
	                                }
	                            }
	                        }
	                    }
	                    var bar3DChart = ChartUtility.GetBar3DChart(p);
	                    var firstPlotArea_area3DChart = ChartUtility.GetBar3DChart(firstPlotArea);
	                    if (!isNullOrUndefined(bar3DChart) && isNullOrUndefined(firstPlotArea_area3DChart)) {
	                        bar3DChart.axId = axisIds;
	                        firstPlotArea.chartGroups.push(area3DChart);
	                    }
	                    var barChart = ChartUtility.GetBarChart(p);
	                    if (!isNullOrUndefined(barChart)) {
	                        for (var _f = 0, barChart_1 = barChart; _f < barChart_1.length; _f++) {
	                            var item_3 = barChart_1[_f];
	                            item_3.axId = axisIds;
	                            var firstPlotArea_BarChart = ChartUtility.GetBarChart(firstPlotArea);
	                            if (firstPlotArea_BarChart.length === 0 ||
	                                ChartUtility.GetChartTypeByBarChart(firstPlotArea_BarChart[0]) !== ChartUtility.GetChartTypeByBarChart(item_3)) {
	                                firstPlotArea.chartGroups.push(item_3);
	                            } else {
	                                for (var _g = 0, _h = item_3.ser; _g < _h.length; _g++) {
	                                    ser = _h[_g];
	                                    firstPlotArea_BarChart[0].ser.push(ser);
	                                }
	                            }
	                        }
	                    }
	                    var bubbleChart = ChartUtility.GetBubbleChart(p);
	                    if (!isNullOrUndefined(bubbleChart)) {
	                        for (var _j = 0, bubbleChart_1 = bubbleChart; _j < bubbleChart_1.length; _j++) {
	                            var item_4 = bubbleChart_1[_j];
	                            item_4.axId = axisIds;
	                            var firstPlotArea_BubbleChart = ChartUtility.GetBubbleChart(firstPlotArea);
	                            if (firstPlotArea_BubbleChart.length === 0 ||
	                                ChartUtility.GetChartTypeByBubbleChart(firstPlotArea_BubbleChart[0]) !== ChartUtility.GetChartTypeByBubbleChart(item_4)) {
	                                firstPlotArea.chartGroups.push(item_4);
	                            } else {
	                                for (var _k = 0, _l = item_4.ser; _k < _l.length; _k++) {
	                                    ser = _l[_k];
	                                    firstPlotArea_BubbleChart[0].ser.push(ser);
	                                }
	                            }
	                        }
	                    }
	                    var doughnutChart = ChartUtility.GetDoughnutChart(p);
	                    if (!isNullOrUndefined(doughnutChart)) {
	                        for (var _m = 0, doughnutChart_1 = doughnutChart; _m < doughnutChart_1.length; _m++) {
	                            var item_5 = doughnutChart_1[_m];
	                            var firstPlotArea_DoughnutChart = ChartUtility.GetDoughnutChart(firstPlotArea);
	                            if (firstPlotArea_DoughnutChart.length === 0 ||
	                                ChartUtility.GetChartTypeByPieChart(firstPlotArea_DoughnutChart[0], null) !== ChartUtility.GetChartTypeByPieChart(item_5, null)) {
	                                firstPlotArea.chartGroups.push(item_5);
	                            } else {
	                                for (var _o = 0, _p = item_5.ser; _o < _p.length; _o++) {
	                                    ser = _p[_o];
	                                    firstPlotArea_DoughnutChart[0].ser.push(ser);
	                                }
	                            }
	                        }
	                    }
	                    var line3DChart = ChartUtility.GetLine3DChart(p);
	                    var firstPlotArea_Line3DChart = ChartUtility.GetLine3DChart(firstPlotArea);
	                    if (!isNullOrUndefined(line3DChart) && isNullOrUndefined(firstPlotArea_Line3DChart)) {
	                        line3DChart.axId = axisIds;
	                        firstPlotArea.chartGroups.push(line3DChart);
	                    }
	                    var lineChart = ChartUtility.GetLineChart(p);
	                    if (!isNullOrUndefined(lineChart)) {
	                        for (var _q = 0, lineChart_1 = lineChart; _q < lineChart_1.length; _q++) {
	                            var item_6 = lineChart_1[_q];
	                            item_6.axId = axisIds;
	                            var firstPlotArea_LineChart = ChartUtility.GetLineChart(firstPlotArea);
	                            if (firstPlotArea_LineChart.length === 0 ||
	                                ChartUtility.GetChartTypeByLineChart(firstPlotArea_LineChart[0], null) !== ChartUtility.GetChartTypeByLineChart(item_6, null)) {
	                                firstPlotArea.chartGroups.push(item_6);
	                            } else {
	                                for (var _r = 0, _s = item_6.ser; _r < _s.length; _r++) {
	                                    ser = _s[_r];
	                                    firstPlotArea_LineChart[0].ser.push(ser);
	                                }
	                            }
	                        }
	                    }
	                    var ofPieChart = ChartUtility.GetOfPieChart(p);
	                    if (!isNullOrUndefined(ofPieChart)) {
	                        for (var _t = 0, ofPieChart_1 = ofPieChart; _t < ofPieChart_1.length; _t++) {
	                            var item_7 = ofPieChart_1[_t];
	                            var firstPlotArea_OfPieChart = ChartUtility.GetOfPieChart(firstPlotArea);
	                            if (firstPlotArea_OfPieChart.length === 0 ||
	                                ChartUtility.GetChartTypeByPieChart(firstPlotArea_OfPieChart[0], null) !== ChartUtility.GetChartTypeByPieChart(item_7, null)) {
	                                firstPlotArea.chartGroups.push(item_7);
	                            } else {
	                                for (var _u = 0, _v = item_7.ser; _u < _v.length; _u++) {
	                                    ser = _v[_u];
	                                    firstPlotArea_OfPieChart[0].ser.push(ser);
	                                }
	                            }
	                        }
	                    }
	                    var pie3DChart = ChartUtility.GetPie3DChart(p);
	                    var firstPlotArea_Pie3DChart = ChartUtility.GetPie3DChart(firstPlotArea);
	                    if (!isNullOrUndefined(pie3DChart) && isNullOrUndefined(firstPlotArea_Pie3DChart)) {
	                        firstPlotArea.chartGroups.push(pie3DChart);
	                    }
	                    var pieChart = ChartUtility.GetPieChart(p);
	                    if (!isNullOrUndefined(pieChart)) {
	                        for (var _w = 0, pieChart_1 = pieChart; _w < pieChart_1.length; _w++) {
	                            var item_8 = pieChart_1[_w];
	                            var firstPlotArea_PieChart = ChartUtility.GetPieChart(firstPlotArea);
	                            if (firstPlotArea_PieChart.length === 0 ||
	                                ChartUtility.GetChartTypeByPieChart(firstPlotArea_PieChart[0], null) !== ChartUtility.GetChartTypeByPieChart(item_8, null)) {
	                                firstPlotArea.chartGroups.push(item_8);
	                            } else {
	                                for (var _x = 0, _y = item_8.ser; _x < _y.length; _x++) {
	                                    ser = _y[_x];
	                                    firstPlotArea_PieChart[0].ser.push(ser);
	                                }
	                            }
	                        }
	                    }
	                    var radarChart = ChartUtility.GetRadarChart(p);
	                    if (!isNullOrUndefined(radarChart)) {
	                        for (var _z = 0, radarChart_1 = radarChart; _z < radarChart_1.length; _z++) {
	                            var item_9 = radarChart_1[_z];
	                            item_9.axId = axisIds;
	                            var firstPlotArea_RadarChart = ChartUtility.GetRadarChart(firstPlotArea);
	                            if (firstPlotArea_RadarChart.length === 0 ||
	                                ChartUtility.GetChartTypeByRadarChart(firstPlotArea_RadarChart[0], null) !== ChartUtility.GetChartTypeByRadarChart(item_9, null)) {
	                                firstPlotArea.chartGroups.push(item_9);
	                            } else {
	                                for (var _0 = 0, _1 = item_9.ser; _0 < _1.length; _0++) {
	                                    ser = _1[_0];
	                                    firstPlotArea_RadarChart[0].ser.push(ser);
	                                }
	                            }
	                        }
	                    }
	                    var scatterChart = ChartUtility.GetScatterChart(p);
	                    if (!isNullOrUndefined(scatterChart)) {
	                        for (var _2 = 0, scatterChart_1 = scatterChart; _2 < scatterChart_1.length; _2++) {
	                            var item_10 = scatterChart_1[_2];
	                            item_10.axId = axisIds;
	                            var firstPlotArea_ScatterChart = ChartUtility.GetScatterChart(firstPlotArea);
	                            if (firstPlotArea_ScatterChart.length === 0 ||
	                                ChartUtility.GetChartTypeByScatterChart(firstPlotArea_ScatterChart[0]) !== ChartUtility.GetChartTypeByScatterChart(item_10)) {
	                                firstPlotArea.chartGroups.push(item_10);
	                            } else {
	                                for (var _3 = 0, _4 = item_10.ser; _3 < _4.length; _3++) {
	                                    ser = _4[_3];
	                                    firstPlotArea_ScatterChart[0].ser.push(ser);
	                                }
	                            }
	                        }
	                    }
	                }
	            }
	            return firstPlotArea;
	        };
	       
	       
	       
	       
	       
	       
	       
	        prototype.MergePrimeSecondPlotArea = function (primaryPlotArea , secondaryPlotArea ) {
	            if (!isNullOrUndefined(secondaryPlotArea.axes)) {
	                primaryPlotArea.axes = primaryPlotArea.axes.concat(secondaryPlotArea.axes);
	            }
	            var secondaryPlotArea_Area3DChart = ChartUtility.GetArea3DChart(secondaryPlotArea);
	            var primaryPlotArea_Area3DChart = ChartUtility.GetArea3DChart(primaryPlotArea);
	            if (!isNullOrUndefined(secondaryPlotArea_Area3DChart) && isNullOrUndefined(primaryPlotArea_Area3DChart)) {
	                primaryPlotArea.chartGroups.push(secondaryPlotArea_Area3DChart);
	            }
	            var secondaryPlotArea_AreaChart = ChartUtility.GetAreaChart(secondaryPlotArea);
	            primaryPlotArea.chartGroups = primaryPlotArea.chartGroups.concat(secondaryPlotArea_AreaChart);
	            var secondaryPlotArea_Bar3DChart = ChartUtility.GetBar3DChart(secondaryPlotArea);
	            var primaryPlotArea_Bar3DChart = ChartUtility.GetBar3DChart(primaryPlotArea);
	            if (!isNullOrUndefined(secondaryPlotArea_Bar3DChart) && isNullOrUndefined(primaryPlotArea_Bar3DChart)) {
	                primaryPlotArea.chartGroups.push(secondaryPlotArea_Bar3DChart);
	            }
	            var secondaryPlotArea_BarChart = ChartUtility.GetBarChart(secondaryPlotArea);
	            primaryPlotArea.chartGroups = primaryPlotArea.chartGroups.concat(secondaryPlotArea_BarChart);
	            var secondaryPlotArea_BubbleChart = ChartUtility.GetBubbleChart(secondaryPlotArea);
	            primaryPlotArea.chartGroups = primaryPlotArea.chartGroups.concat(secondaryPlotArea_BubbleChart);
	            var secondaryPlotArea_DoughnutChart = ChartUtility.GetDoughnutChart(secondaryPlotArea);
	            primaryPlotArea.chartGroups = primaryPlotArea.chartGroups.concat(secondaryPlotArea_DoughnutChart);
	            var primaryPlotArea_Line3DChart = ChartUtility.GetLine3DChart(primaryPlotArea);
	            var secondaryPlotArea_Line3DChart = ChartUtility.GetLine3DChart(secondaryPlotArea);
	            if (!isNullOrUndefined(secondaryPlotArea_Line3DChart) && isNullOrUndefined(primaryPlotArea_Line3DChart)) {
	                primaryPlotArea.chartGroups.push(secondaryPlotArea_Line3DChart);
	            }
	            var secondaryPlotArea_LineChart = ChartUtility.GetLineChart(secondaryPlotArea);
	            primaryPlotArea.chartGroups = primaryPlotArea.chartGroups.concat(secondaryPlotArea_LineChart);
	            var secondaryPlotArea_OfPieChart = ChartUtility.GetOfPieChart(secondaryPlotArea);
	            primaryPlotArea.chartGroups = primaryPlotArea.chartGroups.concat(secondaryPlotArea_OfPieChart);
	            var primaryPlotArea_Pie3DChart = ChartUtility.GetPie3DChart(primaryPlotArea);
	            var secondaryPlotArea_Pie3DChart = ChartUtility.GetPie3DChart(secondaryPlotArea);
	            if (!isNullOrUndefined(secondaryPlotArea_Pie3DChart) && isNullOrUndefined(primaryPlotArea_Pie3DChart)) {
	                primaryPlotArea.chartGroups.push(secondaryPlotArea_Pie3DChart);
	            }
	            var secondaryPlotArea_PieChart = ChartUtility.GetPieChart(secondaryPlotArea);
	            primaryPlotArea.chartGroups = primaryPlotArea.chartGroups.concat(secondaryPlotArea_PieChart);
	            var secondaryPlotArea_RadarChart = ChartUtility.GetRadarChart(secondaryPlotArea);
	            primaryPlotArea.chartGroups = primaryPlotArea.chartGroups.concat(secondaryPlotArea_RadarChart);
	            var secondaryPlotArea_ScatterChart = ChartUtility.GetScatterChart(secondaryPlotArea);
	            primaryPlotArea.chartGroups = primaryPlotArea.chartGroups.concat(secondaryPlotArea_ScatterChart);
	            return primaryPlotArea;
	        };
	        prototype.SetPlotAreaAxies = function (plotArea , catAxis, valAxis, serAxis) {
	            if (serAxis === keyword_undefined) { serAxis = keyword_null; }
	            var ct_CatAx = keyword_null, ct_ValAx = keyword_null, ct_SerAx;
	            var axesIds = [];
	            if (!isNullOrUndefined(catAxis)) {
	                ct_CatAx = catAxis.ToOOModel();
	                if (!isNullOrUndefined(ct_CatAx)) {
	                    axesIds.push(ct_CatAx.axId);
	                    plotArea.axes.push(ct_CatAx);
	                }
	            }
	            if (!isNullOrUndefined(valAxis) && !isNullOrUndefined(catAxis)) {
	                ct_ValAx = valAxis.ToOOModel();
	                axesIds.push(ct_ValAx.axId);
	                plotArea.axes.push(ct_ValAx);
	                if (valAxis.Crosses === 0 ) {
	                    ct_CatAx.crossesAt = valAxis.CrossesAt;
	                } else {
	                    ct_CatAx.crosses = valAxis.Crosses;
	                }
	                if (catAxis.Crosses === 0 ) {
	                    ct_ValAx.crossesAt = catAxis.CrossesAt;
	                } else {
	                    ct_ValAx.crosses = catAxis.Crosses;
	                }
	                if (catAxis.ReversePlotOrder) {
	                    if (ChartUtility.IsBarChart(this._chart.ChartType)) {
	                        ct_ValAx.axPos = 0 ;
	                    } else {
	                        ct_ValAx.axPos = 2 ;
	                    }
	                }
	                (ct_ValAx ).crossBetween = catAxis.AxisBetweenCategories ? 0  : 1 ;
	            }
	            if (!isNullOrUndefined(ct_CatAx) && !isNullOrUndefined(ct_ValAx)) {
	                ct_CatAx.crossAx = ct_ValAx.axId;
	                ct_ValAx.crossAx = ct_CatAx.axId;
	            }
	            if (!isNullOrUndefined(serAxis)) {
	                ct_SerAx = serAxis.ToOOModel();
	                plotArea.axes.push(ct_SerAx);
	                axesIds.push(ct_SerAx.axId);
	                if (!isNullOrUndefined(ct_ValAx)) {
	                    ct_SerAx.crossAx = ct_ValAx.axId;
	                }
	                ct_SerAx.crosses = 1 ;
	            } else if (ChartUtility.Is3DChart(this._chart.ChartType)) {
	                axesIds.push(0);
	            }
	            return axesIds;
	        };
	        prototype.ToCT_BarChart = function (barChartType, axisGroup) {
	            if (ChartUtility.Is3DChart(barChartType)) {
	                var bar3DChart = this.ToCT_BarChartBase(barChartType, axisGroup);
	                if (!isNullOrUndefined(bar3DChart)) {
	                    bar3DChart.gapDepth = this._chart.GapDepth;
	                }
	                return bar3DChart;
	            }
	
	            var barChart = this.ToCT_BarChartBase(barChartType, axisGroup);
	            if (!isNullOrUndefined(barChart)) {
	                var chartGroup = this._chart.FindChartGroup(barChartType, axisGroup);
	                if (!isNullOrUndefined(chartGroup)) {
	                    barChart.overlap = chartGroup.Overlap;
	                    if (chartGroup.HasSeriesLines) {
	                        barChart.serLines = [];
	                        barChart.serLines.push(chartGroup.SeriesLines.ToOOModel());
	                    }
	                }
	            }
	            return barChart;
	        };
	        prototype.ToCT_BarChartBase = function (barChartType, axisGroup) {
	            var barChartBase;
	            var isBarChart = ChartUtility.IsBarChart(barChartType);
	            if (ChartUtility.Is3DChart(barChartType)) {
	                barChartBase = {
	                    chartType: 7 ,
	                    ser: [],
	                    axId: []
	                };
	            } else {
	                barChartBase = {
	                    chartType: 6 ,
	                    ser: [],
	                    serLines: [],
	                    axId: []
	                };
	            }
	            barChartBase.barDir = isBarChart ? 0  : 1 ;
	            var sers = this.SeriesCollection.GetSers(false, axisGroup);
	            for (var _i = 0, sers_2 = sers; _i < sers_2.length; _i++) {
	                var ser = sers_2[_i];
	                var serTemp = ser;
	                if (serTemp.InnerChartType !== barChartType) {
	                    continue;
	                }
	                var barSer = serTemp.ToOOModel() ;
	                if (!isNullOrUndefined(barSer)) {
	                    barChartBase.ser.push(barSer);
	                }
	            }
	            switch (barChartType) {
	                case 19 :
	                case 13 :
	                case 16 :
	                case 22 :
	                    barChartBase.grouping = 3 ;
	                    break;
	                case 20 :
	                case 14 :
	                case 17 :
	                case 23 :
	                    barChartBase.grouping = 0 ;
	                    break;
	                case 6 :
	                    barChartBase.grouping = 2 ;
	                    break;
	                case 18 :
	                case 12 :
	                case 21 :
	                case 15 :
	                    barChartBase.grouping = 1 ;
	                    break;
	                default:
	                    barChartBase.grouping = 1 ;
	                    break;
	            }
	            var chartGroup = this._chart.FindChartGroup(barChartType, axisGroup);
	            if (!isNullOrUndefined(chartGroup)) {
	                barChartBase.gapWidth = chartGroup.GapWidth;
	                barChartBase.varyColors = chartGroup.VaryByCategories;
	            }
	            return barChartBase;
	        };
	        prototype.ToCT_LineChart = function (lineChartType, axisGroup) {
	            var _this = this;
	            if (ChartUtility.Is3DChart(lineChartType)) {
	                var line3DChart = _this.ToCT_LineChartBase(lineChartType, axisGroup);
	                if (!isNullOrUndefined(line3DChart)) {
	                    line3DChart.gapDepth = _this._chart.GapDepth;
	                }
	                return line3DChart;
	            }
	
	            var lineChart = _this.ToCT_LineChartBase(lineChartType, axisGroup);
	            if (!isNullOrUndefined(lineChart)) {
	                lineChart.smooth = ChartUtility.IsSmoothLine(lineChartType);
	                var chartGroup = _this._chart.FindChartGroup(lineChartType, axisGroup);
	                if (!isNullOrUndefined(chartGroup)) {
	                    if (chartGroup.HasHiLoLines) {
	                        lineChart.hiLowLines = chartGroup.HiLoLines.ToOOModel();
	                    }
	                    if (chartGroup.HasUpDownBars) {
	                        lineChart.upDownBars = _this.ToCT_UpDownBars(chartGroup);
	                    }
	                    lineChart.marker = chartGroup.Marker;
	                }
	            }
	            return lineChart;
	        };
	        prototype.ToCT_LineChartBase = function (lineChartType, axisGroup) {
	            var lineChartBase;
	            if (ChartUtility.Is3DChart(lineChartType)) {
	                lineChartBase = {
	                    chartType: 9 ,
	                    ser: [],
	                    axId: []
	                };
	            } else {
	                lineChartBase = {
	                    chartType: 8 ,
	                    ser: [],
	                    axId: []
	                };
	            }
	            var sers = this.SeriesCollection.GetSers(false, axisGroup);
	            for (var _i = 0, sers_3 = sers; _i < sers_3.length; _i++) {
	                var ser = sers_3[_i];
	                var serTemp = ser;
	                if (serTemp.InnerChartType !== lineChartType) {
	                    continue;
	                }
	                var barSer = serTemp.ToOOModel() ;
	                if (!isNullOrUndefined(barSer)) {
	                    lineChartBase.ser.push(barSer);
	                }
	            }
	            switch (lineChartType) {
	                case 27 :
	                case 24 :
	                    lineChartBase.grouping = 2 ;
	                    break;
	                case 28 :
	                case 25 :
	                    lineChartBase.grouping = 0 ;
	                    break;
	                default:
	                    lineChartBase.grouping = 1 ;
	                    break;
	            }
	            var chartGroup = this._chart.FindChartGroup(lineChartType, axisGroup);
	            if (!isNullOrUndefined(chartGroup)) {
	                lineChartBase.varyColors = chartGroup.VaryByCategories;
	                if (chartGroup.HasDropLines) {
	                    lineChartBase.dropLines = chartGroup.DropLines.ToOOModel();
	                }
	            }
	            return lineChartBase;
	        };
	        prototype.ToCT_PieChart = function (pieChartType, axisGroup) {
	            var _this = this;
	            var chartGroup = _this._chart.FindChartGroup(pieChartType, axisGroup);
	            if (ChartUtility.Is3DChart(pieChartType)) {
	                return _this.ToCT_PieChartBase(pieChartType, axisGroup);
	            } else if (ChartUtility.IsOfPieChart(pieChartType)) {
	                var ofPieChart = _this.ToCT_PieChartBase(pieChartType, axisGroup);
	                if (!isNullOrUndefined(ofPieChart)) {
	                    ofPieChart.ofPieType = pieChartType === 32  ? 1  : 0 ;
	                    if (!isNullOrUndefined(chartGroup)) {
	                        if (chartGroup.HasSeriesLines) {
	                            ofPieChart.serLines.push(chartGroup.SeriesLines.ToOOModel());
	                        }
	                        ofPieChart.secondPieSize = chartGroup.SecondPlotSize;
	                        ofPieChart.gapWidth = chartGroup.GapWidth;
	                        ofPieChart.splitType = chartGroup.SplitType;
	                        if (chartGroup.SplitType === 3 ) {
	                            ofPieChart.custSplit = { secondPiePt: [] } ;
	                           
	                               
	                            var ser = chartGroup.SeriesCollection[0];
	                            if(ser) {
	                                var points = ser.Points.GetPoints();
	                                for (var key in points) { 
	                                    var p = points[key];
	                                    if (p.SecondaryPlot) {
	                                        ofPieChart.custSplit.secondPiePt.push(p.Index);
	                                    }
	                                }
	                            }
	                               
	                           
	                        } else {
	                            ofPieChart.splitPos = chartGroup.SplitValue;
	                        }
	                    }
	                }
	                return ofPieChart;
	            } else if (ChartUtility.IsDoughnutChart(pieChartType)) {
	                var doughnutChart = _this.ToCT_PieChartBase(pieChartType, axisGroup);
	                if (!isNullOrUndefined(doughnutChart) &&
	                    !isNullOrUndefined(chartGroup)) {
	                    doughnutChart.holeSize = chartGroup.DoughnutHoleSize;
	                }
	                return doughnutChart;
	            }
	            return _this.ToCT_PieChartBase(pieChartType, axisGroup);
	        };
	        prototype.ToCT_PieChartBase = function (pieChartType, axisGroup) {
	            var pieChartBase;
	            if (ChartUtility.Is3DChart(pieChartType)) {
	                pieChartBase = {
	                    chartType: 11 ,
	                    ser: [],
	                    axId: []
	                };
	            } else if (ChartUtility.IsOfPieChart(pieChartType)) {
	                pieChartBase = {
	                    chartType: 13 ,
	                    ser: [],
	                    serLines: [],
	                    axId: []
	                };
	            } else if (ChartUtility.IsDoughnutChart(pieChartType)) {
	                pieChartBase = {
	                    chartType: 12 ,
	                    ser: [],
	                    axId: []
	                };
	            } else {
	                pieChartBase = {
	                    chartType: 10 ,
	                    ser: [],
	                    axId: []
	                };
	            }
	            pieChartBase.varyColors = true;
	            var sers = this.SeriesCollection.GetSers(false, axisGroup);
	            for (var _i = 0, sers_4 = sers; _i < sers_4.length; _i++) {
	                var ser = sers_4[_i];
	                var serTemp = ser;
	                if (serTemp.InnerChartType !== pieChartType) {
	                    continue;
	                }
	                var pieSer = serTemp.ToOOModel() ;
	                if (!isNullOrUndefined(pieSer)) {
	                    pieChartBase.ser.push(pieSer);
	                }
	            }
	            var chartGroup = this._chart.FindChartGroup(pieChartType, axisGroup);
	            if (!isNullOrUndefined(chartGroup)) {
	                pieChartBase.varyColors = chartGroup.VaryByCategories;
	                pieChartBase.firstSliceAng = chartGroup.FirstSliceAngle;
	            }
	            return pieChartBase;
	        };
	        prototype.ToCT_AreaChart = function (areaChartType, axisGroup) {
	            if (ChartUtility.Is3DChart(areaChartType)) {
	                var area3DChart = this.ToCT_AreaChartBase(areaChartType, axisGroup);
	                if (!isNullOrUndefined(area3DChart)) {
	                    area3DChart.gapDepth = this._chart.GapDepth;
	                }
	                return area3DChart;
	            }
	            return this.ToCT_AreaChartBase(areaChartType, axisGroup);
	        };
	        prototype.ToCT_AreaChartBase = function (areaChartType, axisGroup) {
	            var areaChartBase;
	            if (ChartUtility.Is3DChart(areaChartType)) {
	                areaChartBase = {
	                    chartType: 5 ,
	                    ser: [],
	                    axId: []
	                };
	            } else {
	                areaChartBase = {
	                    chartType: 4 ,
	                    ser: [],
	                    axId: []
	                };
	            }
	            areaChartBase.varyColors = false;
	            var sers = this.SeriesCollection.GetSers(false, axisGroup);
	            for (var _i = 0, sers_5 = sers; _i < sers_5.length; _i++) {
	                var ser = sers_5[_i];
	                var serTemp = ser;
	                if (serTemp.InnerChartType !== areaChartType) {
	                    continue;
	                }
	                var barSer = serTemp.ToOOModel() ;
	                if (!isNullOrUndefined(barSer)) {
	                    areaChartBase.ser.push(barSer);
	                }
	            }
	            switch (areaChartType) {
	                case 39 :
	                case 37 :
	                    areaChartBase.grouping = 2 ;
	                    break;
	                case 40 :
	                case 38 :
	                    areaChartBase.grouping = 0 ;
	                    break;
	                default:
	                    areaChartBase.grouping = 1 ;
	                    break;
	            }
	            var chartGroup = this._chart.FindChartGroup(areaChartType, axisGroup);
	            if (!isNullOrUndefined(chartGroup)) {
	                areaChartBase.varyColors = chartGroup.VaryByCategories;
	                if (chartGroup.HasDropLines) {
	                    areaChartBase.dropLines = chartGroup.DropLines.ToOOModel();
	                }
	            }
	            return areaChartBase;
	        };
	        prototype.ToCT_RadarChart = function (radarChartType, axisGroup) {
	            var radarChart = {
	                chartType: 2 ,
	                ser: [],
	                axId: []
	            };
	            var sers = this.SeriesCollection.GetSers(false, axisGroup);
	            for (var _i = 0, sers_6 = sers; _i < sers_6.length; _i++) {
	                var ser = sers_6[_i];
	                var serTemp = ser;
	                if (serTemp.InnerChartType !== radarChartType) {
	                    continue;
	                }
	                var radarSer = serTemp.ToOOModel() ;
	                if (!isNullOrUndefined(radarSer)) {
	                    radarChart.ser.push(radarSer);
	                }
	            }
	            if (radarChartType === 2 ) {
	                radarChart.radarStyle = 1 ;
	            } else if (radarChartType === 43 ) {
	                radarChart.radarStyle = 2 ;
	            } else if (radarChartType === 42 ) {
	                radarChart.radarStyle = 1 ;
	            }
	            var chartGroup = this._chart.FindChartGroup(radarChartType, axisGroup);
	            if (!isNullOrUndefined(chartGroup)) {
	                radarChart.varyColors = chartGroup.VaryByCategories;
	            }
	            return radarChart;
	        };
	        prototype.ToCT_ScatterChart = function (scatterChartType, axisGroup) {
	            var scatterChart = {
	                chartType: 1 ,
	                ser: [],
	                axId: []
	            };
	            switch (scatterChartType) {
	                case 1 :
	                case 35 :
	                    scatterChart.scatterStyle = 2 ;
	                    break;
	                case 36 :
	                    scatterChart.scatterStyle = 1 ;
	                    break;
	                case 33 :
	                    scatterChart.scatterStyle = 5 ;
	                    break;
	                case 34 :
	                    scatterChart.scatterStyle = 4 ;
	                    break;
	                default:
	                    scatterChart.scatterStyle = 2 ;
	                    break;
	            }
	            var sers = this.SeriesCollection.GetSers(false, axisGroup);
	            for (var _i = 0, sers_7 = sers; _i < sers_7.length; _i++) {
	                var ser = sers_7[_i];
	                var serTemp = ser;
	                if (serTemp.InnerChartType !== scatterChartType) {
	                    continue;
	                }
	                var scatterSer = serTemp.ToOOModel() ;
	                if (!isNullOrUndefined(scatterSer)) {
	                    scatterChart.ser.push(scatterSer);
	                }
	            }
	            var chartGroup = this._chart.FindChartGroup(scatterChartType, axisGroup);
	            if (!isNullOrUndefined(chartGroup)) {
	                scatterChart.varyColors = chartGroup.VaryByCategories;
	            }
	            return scatterChart;
	        };
	        prototype.ToCT_BubbleChart = function (bubbleChartType, axisGroup) {
	            var bubbleChart = {
	                chartType: 3 ,
	                ser: [],
	                axId: []
	            };
	            var sers = this.SeriesCollection.GetSers(false, axisGroup);
	            for (var _i = 0, sers_8 = sers; _i < sers_8.length; _i++) {
	                var ser = sers_8[_i];
	                var serTemp = ser;
	                if (serTemp.InnerChartType !== bubbleChartType) {
	                    continue;
	                }
	                var scatterSer = serTemp.ToOOModel() ;
	                if (!isNullOrUndefined(scatterSer)) {
	                    bubbleChart.ser.push(scatterSer);
	                }
	            }
	            var chartGroup = this._chart.FindChartGroup(bubbleChartType, axisGroup);
	            if (!isNullOrUndefined(chartGroup)) {
	                bubbleChart.varyColors = chartGroup.VaryByCategories;
	                bubbleChart.bubbleScale = chartGroup.BubbleScale;
	                bubbleChart.showNegBubbles = chartGroup.ShowNegativeBubbles;
	                bubbleChart.sizeRepresents = chartGroup.SizeRepresents;
	            }
	            return bubbleChart;
	        };
	        prototype.ToCT_StockChart = function (stockChartType, axisGroup) {
	            var stockChart = {
	                chartType: 0 ,
	                ser: [],
	                axId: []
	            };
	            var sers = this.SeriesCollection.GetSers(false, axisGroup);
	            for (var _i = 0, sers_9 = sers; _i < sers_9.length; _i++) {
	                var ser = sers_9[_i];
	                var serTemp = ser;
	                if (serTemp.InnerChartType !== 9 ) {
	                    continue;
	                }
	                var lineSer = serTemp.ToOOModel() ;
	                if (!isNullOrUndefined(lineSer)) {
	                    stockChart.ser.push(lineSer);
	                }
	            }
	            var chartGroup = this._chart.FindChartGroup(stockChartType, axisGroup);
	            if (!isNullOrUndefined(chartGroup)) {
	                if (chartGroup.HasHiLoLines) {
	                    stockChart.hiLowLines = chartGroup.HiLoLines.ToOOModel();
	                }
	                if (chartGroup.HasDropLines) {
	                   
	                    stockChart.dropLines = chartGroup.DropLines.ToOOModel();
	                }
	                if (chartGroup.HasUpDownBars) {
	                    stockChart.upDownBars = this.ToCT_UpDownBars(chartGroup);
	                }
	            }
	            return stockChart;
	        };
	        prototype.ToCT_UpDownBars = function (chartGroup) {
	            var upDownBars = {} ;
	            upDownBars.upBars = chartGroup.UpBars.ToOOModel();
	            upDownBars.downBars = chartGroup.DownBars.ToOOModel();
	            upDownBars.gapWidth = chartGroup.GapWidth;
	            return upDownBars;
	        };
	        prototype.ToCT_SurfaceChartBase = function (surfaceChartType, axisGroup) {
	            var surfaceChartBase;
	            if (ChartUtility.IsSurface3DChart(surfaceChartType)) {
	                surfaceChartBase = {
	                    chartType: 15 ,
	                    ser: [],
	                    axId: []
	                };
	            } else {
	                surfaceChartBase = {
	                    chartType: 14 ,
	                    ser: [],
	                    axId: []
	                };
	            }
	            var sers = this.SeriesCollection.GetSers(false, axisGroup);
	            for (var _i = 0, sers_10 = sers; _i < sers_10.length; _i++) {
	                var ser = sers_10[_i];
	                var serTemp = ser;
	                if (serTemp.InnerChartType !== surfaceChartType) {
	                    continue;
	                }
	                var barSer = serTemp.ToOOModel() ;
	                if (!isNullOrUndefined(barSer)) {
	                    surfaceChartBase.ser.push(barSer);
	                }
	            }
	            var wireFrame = (surfaceChartType === 47  ||
	                surfaceChartType === 45 );
	
	            surfaceChartBase.wireframe = wireFrame;
	            surfaceChartBase.bandFmts = { bandFmt: this.GenerateBands(wireFrame) };
	            return surfaceChartBase;
	        };
	
	        prototype.GenerateBands = function (wireFrame) {
	            var bands = [];
	            var schemeClr;
	            for (var i = 0; i < 6; i++) {
	                var band = {} ;
	                band.idx = i;
	                band.spPr = {};
	                var fill = {
	                   
	                };
	                schemeClr = fill.schemeClr = {};
	                schemeClr.val = ColorSchemeIndex["Accent" + (i % 6 + 1)];
	                if (wireFrame) {
	                    band.spPr.ln = {
	                        solidFill: fill,
	                        cap: 0 ,
	                        w: 1 
	                    };
	                } else {
	                    band.spPr.solidFill = fill;
	                }
	                bands.push(band);
	            }
	            for (i = 6; i < 12; i++) {
	                band = {} ;
	                band.idx = i;
	                band.spPr = {};
	                band.spPr.solidFill = {
	                   
	                };
	                schemeClr = band.spPr.solidFill.schemeClr = {};
	                schemeClr.val = ColorSchemeIndex["Accent" + (i % 6 + 1)];
	                schemeClr.lumMod = [60000];
	                bands.push(band);
	            }
	            for (i = 12; i < 15; i++) {
	                band = {} ;
	                band.idx = i;
	                band.spPr = {};
	                band.spPr.solidFill = {
	                   
	                };
	                schemeClr = band.spPr.solidFill.schemeClr = {};
	                schemeClr.val = ColorSchemeIndex["Accent" + (i % 6 + 1)];
	                schemeClr.lumMod = [80000];
	                schemeClr.lumOff = [20000];
	                bands.push(band);
	            }
	            return bands;
	        };
	        prototype.HasSecondarySeries = function (chartType) {
	            return this._chart.SeriesCollection.AllSers.some(function (item) { return item.AxisGroup === 1  && item.InnerChartType === chartType; });
	        };
	        return PlotArea;
	    }(ChartElementBase));
	    Charts.PlotArea = PlotArea;
	
	    module.exports = Charts;
	}());

/***/ }),
/* 19 */
/***/ (function(module, exports, __webpack_require__) {

	(function () {
	    'use strict';
	
	    var Charts = __webpack_require__(3),
	        Sheets = __webpack_require__(6),
	        FloatingObjects = __webpack_require__(4),
	        FORMULA_TEXTBOX_MODULE = __webpack_require__(20),
	        COMMON_MODULE = Charts,
	        DateTimeExtension = COMMON_MODULE.DateTimeExtension,
	        AxisTitle = __webpack_require__(8).AxisTitle,
	        ChartModel = __webpack_require__(9).ChartModel,
	        ChartHelper = __webpack_require__(15).ChartHelper,
	        ARGBColor = Charts.ARGBColor;
	    var $ = Sheets.GC$,
	        getChartModelData = ChartHelper.getChartModelData,
	        colorFormatToString = ChartHelper.colorFormatToString,
	        getTransparencyFromColorFormat = ChartHelper.getTransparencyFromColorFormat,
	        getChartTitleText = ChartHelper.getChartTitleText,
	        createRange = Sheets._createRange,
	        formulaToRanges = Sheets.CalcEngine.formulaToRanges,
	        Reference = COMMON_MODULE.Reference,
	        UnitHelper = COMMON_MODULE.UnitHelper,
	        isNullOrUndefined = UnitHelper.isNullOrUndefined,
	        ChartUtility = COMMON_MODULE.ChartUtility,
	        IsSunburstOrTreemapChart = ChartUtility.IsSunburstOrTreemapChart,
	        $_isEmptyObject = $.isEmptyObject,
	        getLineFormatInfo = ChartUtility.getLineFormatInfo;
	    var keyword_null = null, keyword_undefined = void 0;
	
	
	    function generateName(sheet, prefix) {
	        var i = 1, shapeName;
	        if (!sheet) {
	            return prefix + i;
	        }
	        do {
	            shapeName = prefix + i++;
	        } while (sheet.charts.get(shapeName));
	        return shapeName;
	    }
	
	    function updateDataLabels(chart, option, sheet) {
	        if (chart && option) {
	            var showValue = option.showValue,
	                showSeriesName = option.showSeriesName,
	                showCategoryName = option.showCategoryName,
	                showPercentage = option.showPercentage,
	                position = option.position,
	                format = option.format,
	                color = option.color,
	                transparency = option.transparency;
	            var changedProperties = {}, isChangeSaved = false;
	
	            chart.SeriesCollection.AllSers.forEach(function (series) {
	                var dataLabels = series.DataLabels;
	                if (dataLabels) {
	                    if (showValue !== keyword_undefined) {
	                        if (!isChangeSaved) {
	                            changedProperties.showValue = dataLabels.ShowValue;
	                        }
	                        dataLabels.ShowValue = showValue;
	                    }
	                    if (showSeriesName !== keyword_undefined) {
	                        if (!isChangeSaved) {
	                            changedProperties.showSeriesName = dataLabels.ShowSeriesName;
	                        }
	                        dataLabels.ShowSeriesName = showSeriesName;
	                    }
	                    if (showCategoryName !== keyword_undefined) {
	                        if (!isChangeSaved) {
	                            changedProperties.showCategoryName = dataLabels.ShowCategoryName;
	                        }
	                        dataLabels.ShowCategoryName = showCategoryName;
	                    }
	                    if (showPercentage !== keyword_undefined) {
	                        if (!isChangeSaved) {
	                            changedProperties.showPercentage = dataLabels.ShowPercentage;
	                        }
	                        dataLabels.ShowPercentage = showPercentage;
	                    }
	                   
	                    var showSeriesDataLabels = dataLabels.ShowValue || dataLabels.ShowSeriesName || dataLabels.ShowCategoryName || dataLabels.ShowPercentage;
	                    if (!series.HasDataLabels && showSeriesDataLabels) {
	                        series.HasDataLabels = true;
	                    } else if (series.HasDataLabels && !showSeriesDataLabels) {
	                        series.HasDataLabels = false;
	                    }
	                    if (!isNullOrUndefined(position)) {
	                        if (!isChangeSaved) {
	                            changedProperties.position = dataLabels.Position;
	                        }
	                        dataLabels.Position = position;
	                    }
	                    if (format) {
	                        if (!isChangeSaved) {
	                            changedProperties.format = dataLabels.NumberFormat;
	                        }
	                        dataLabels.NumberFormat = format;
	                    }
	                    if (color) {
	                        if (!isChangeSaved) {
	                            changedProperties.color = colorFormatToString(dataLabels.Font, true);
	                        }
	                        dataLabels.Font.Color.setColor(sheet, color);
	                    } else if ((color === null || color === '')) {
	                        if (!isChangeSaved) {
	                            changedProperties.color = colorFormatToString(dataLabels.Font, true);
	                        }
	                        dataLabels.Font.Color.ColorType = 0;
	                    }
	                    if (!isNullOrUndefined(transparency)) {
	                        if (!isChangeSaved) {
	                            changedProperties.transparency = getTransparencyFromColorFormat(dataLabels.Font);
	                        }
	                        dataLabels.Font.Color.Transparency = transparency;
	                    }
	                    isChangeSaved = true;
	                    series._removeJSONCache();
	                }
	            });
	            chart.Parent._backup('dataLabels', changedProperties);
	        }
	    }
	
	    function setGridlineWidthColor(line, option, sheet, changedGridline) {
	        if (!isNullOrUndefined(option.width)) {
	            changedGridline.width = line.Weight;
	            line.Weight = option.width;
	        }
	        if (option.color) {
	            changedGridline.color = colorFormatToString(line, true);
	            line.Color.setColor(sheet, option.color);
	        } else if (option.color === null || option.color === '') {
	            line.Color.ColorType = 0;
	        }
	        if (!isNullOrUndefined(option.transparency)) {
	            changedGridline.transparency = getTransparencyFromColorFormat(line);
	            line.Color.Transparency = option.transparency;
	        }
	    }
	
	    function isXAxisContainsNumberValues(axis, axisGroup) {
	        var firstSeries = axis.SeriesCollection.GetValidSers(axisGroup)[0];
	        if (firstSeries) {
	            var numbers = [];
	            return ChartUtility.TryAllToNumbers(firstSeries._xValues, numbers, true);
	        }
	        return false;
	    }
	
	    function setAxisOptions(axis, options, sheet, axes, axisType, axisGroup) {
	        if (!options) {
	           
	            return;
	        }
	        var changedProperties = {};
	        if (!axis) {
	           
	            axis = axes.Add(axisType, axisGroup);
	            changedProperties.removed = true;     
	        }
	        if (options.removed) {
	            axes.Remove(axisType, axisGroup);
	        }
	        if (axisType === 0 ) {
	            var actualCategoryType = options.categoryType;
	            if ((axis.ActualCategoryType !== 3 ) &&
	                (axis.IsValueOrDateScaleAxis() || isXAxisContainsNumberValues(axis, axisGroup)) &&
	                (actualCategoryType === 2  || actualCategoryType === 1 )) {
	                changedProperties.categoryType = axis.ActualCategoryType;
	                axis.ActualCategoryType = actualCategoryType;
	            }
	        }
	        if (!isNullOrUndefined(options.visible)) {
	            changedProperties.visible = axis.Visible;
	            axis.Visible = !!options.visible;
	        }
	        if (!isNullOrUndefined(options.tickLabelPosition)) {
	            changedProperties.tickLabelPosition = axis.TickLabelPosition;
	            axis.TickLabelPosition = options.tickLabelPosition;
	        }
	        var lineFormat = axis.Format.Line, lineStyle = options.lineStyle;
	        if (lineStyle) {
	            var changedLineStyle = changedProperties.lineStyle = {};
	            if (!isNullOrUndefined(lineStyle.width)) {
	                changedLineStyle.width = lineFormat.Weight;
	                lineFormat.Weight = lineStyle.width;
	            }
	            if (lineStyle.color) {
	                changedLineStyle.color = colorFormatToString(lineFormat, true);
	                lineFormat.Color.setColor(sheet, lineStyle.color);
	            } else if (lineStyle.color === null || lineStyle.color === '') {
	                lineFormat.Color.ColorType = 0;
	            }
	            if (!isNullOrUndefined(lineStyle.transparency)) {
	                changedLineStyle.transparency = getTransparencyFromColorFormat(lineFormat);
	                lineFormat.Color.Transparency = lineStyle.transparency;
	            }
	        }
	        var fontFormat = axis.TickLabels.Font, style = options.style;
	        if (style) {
	            var changedStyle = changedProperties.style = {};
	            if (style.color) {
	                changedStyle.color = colorFormatToString(fontFormat, true);
	                fontFormat.Color.setColor(sheet, style.color);
	            } else if (style.color === null || style.color === '') {
	                fontFormat.Color.ColorType = 0;
	            }
	            if (!isNullOrUndefined(style.transparency)) {
	                changedStyle.transparency = getTransparencyFromColorFormat(fontFormat);
	                fontFormat.Color.Transparency = style.transparency;
	            }
	            if (style.fontFamily) {
	                changedStyle.fontFamily = fontFormat.Name;
	                fontFormat.Name = style.fontFamily;
	            }
	            if (!isNullOrUndefined(style.fontSize)) {
	                changedStyle.fontSize = fontFormat.Size;
	                fontFormat.Size = style.fontSize;
	            }
	        }
	        if (!isNullOrUndefined(options.majorTickPosition)) {
	            changedProperties.majorTickPosition = axis.MajorTickMark;
	            axis.MajorTickMark = options.majorTickPosition;
	        }
	        if (!isNullOrUndefined(options.minorTickPosition)) {
	            changedProperties.minorTickPosition = axis.MinorTickMark;
	            axis.MinorTickMark = options.minorTickPosition;
	        }
	       
	        if (!axis.MajorUnitIsAuto) {
	            changedProperties.majorUnit = axis.MajorUnit;
	        }
	        if (!isNullOrUndefined(options.majorUnit)) {
	            axis.MajorUnit = options.majorUnit;
	        } else {
	            axis.MajorUnitIsAuto = true;
	        }
	       
	        if (!axis.MinorUnitIsAuto) {
	            changedProperties.minorUnit = axis.MinorUnit;
	        }
	        if (!isNullOrUndefined(options.minorUnit)) {
	            axis.MinorUnit = options.minorUnit;
	        } else {
	            axis.MinorUnitIsAuto = true;
	        }
	        if (axis.IsValueOrDateScaleAxis() && !ChartHelper.isPercentageScaleType(axis.Chart, axis.AxisGroup)) {
	            var min = options.min, max = options.max, isTimeScale = axis.IsTimeScale();
	           
	            if (!axis.MinimumScaleIsAuto) {
	                changedProperties.min = axis.MinimumScale;
	            }
	            if (isNullOrUndefined(min)) {
	                axis.MinimumScaleIsAuto = true;
	            } else {
	                if (isTimeScale) {
	                    min = DateTimeExtension.ToOADate(min);
	                }
	                axis.MinimumScale = min;
	            }
	           
	            if (!axis.MaximumScaleIsAuto) {
	                changedProperties.max = axis.MaximumScale;
	            }
	            if (isNullOrUndefined(max)) {
	                axis.MaximumScaleIsAuto = true;
	            } else {
	                if (isTimeScale) {
	                    max = DateTimeExtension.ToOADate(max);
	                }
	                axis.MaximumScale = max;
	            }
	        }
	        if (options.format) {
	            changedProperties.format = axis.TickLabels.NumberFormat;
	            axis.TickLabels.NumberFormat = options.format;
	        }
	
	        var title = options.title;
	        if (title) {
	            var axisTitle = axis.AxisTitle;
	            var changedTitle = changedProperties.title = {};
	            if (!axisTitle) {
	                changedTitle.removed = true;
	                axisTitle = axis.AxisTitle = new AxisTitle(axis._axes.Parent, axis._axisGroup, axis._type);
	            }
	            if (title.removed) {
	                axis.AxisTitle = keyword_null;
	            }
	            var text = title.text;
	            if (!isNullOrUndefined(text)) {
	                changedTitle.text = axisTitle.Text;
	                axisTitle.Text = text;
	                axis.HasTitle = text.length > 0;
	            }
	
	            var axisTitleFontFormat = axisTitle.Font;
	
	            if (title.fontFamily) {
	                changedTitle.fontFamily = axisTitleFontFormat.Name;
	                axisTitleFontFormat.Name = title.fontFamily;
	            }
	            if (!isNullOrUndefined(title.fontSize)) {
	                changedTitle.fontSize = axisTitleFontFormat.Size;
	                axisTitleFontFormat.Size = title.fontSize;
	            }
	            if (title.color) {
	                changedTitle.color = colorFormatToString(axisTitleFontFormat, true);
	                axisTitleFontFormat.Color.setColor(sheet, title.color);
	            } else if (title.color === null || title.color === '') {
	                axisTitleFontFormat.Color.ColorType = 0;
	            }
	            if (!isNullOrUndefined(title.transparency)) {
	                changedTitle.transparency = getTransparencyFromColorFormat(axisTitleFontFormat);
	                axisTitleFontFormat.Color.Transparency = title.transparency;
	            }
	        }
	
	        var majorGridLine = options.majorGridLine;
	        if (majorGridLine) {
	            var changedMajorGridline = changedProperties.majorGridLine = {};
	            if (!isNullOrUndefined(majorGridLine.visible)) {
	                changedMajorGridline.visible = axis.HasMajorGridlines;
	                axis.HasMajorGridlines = majorGridLine.visible;
	            }
	            setGridlineWidthColor(axis._getMajorGridlines(true).Format.Line, majorGridLine, sheet, changedMajorGridline);
	        }
	        var minorGridLine = options.minorGridLine;
	        if (minorGridLine) {
	            var changedMinorGridline = changedProperties.minorGridLine = {};
	            if (!isNullOrUndefined(minorGridLine.visible)) {
	                changedMinorGridline.visible = axis.HasMinorGridlines;
	                axis.HasMinorGridlines = minorGridLine.visible;
	            }
	            setGridlineWidthColor(axis._getMinorGridlines(true).Format.Line, minorGridLine, sheet, changedMinorGridline);
	        }
	        if (!$_isEmptyObject(changedProperties)) {
	            axis._backup(changedProperties);
	        }
	    }
	
	    function updateChartRefers(sheet) {
	        var formulaTextBox = sheet._formulaTextBoxForChart;
	        var series = formulaTextBox.series;
	        if (series) {
	            var result = formulaToRanges(sheet, formulaTextBox.text(), sheet._activeRowIndex, sheet._activeColIndex);
	            if (result[0]) {
	                var ranges = result[0].ranges;
	                var range = ranges[0];
	                var refer = new COMMON_MODULE.Reference(sheet.name(), range.row, range.col, range.row + range.rowCount - 1, range.col + range.colCount - 1);
	                series.SetValuesRefers([refer]);
	
	                range = ranges[1];
	                if (range) {
	                    refer = new COMMON_MODULE.Reference(sheet.name(), range.row, range.col, range.row + range.rowCount - 1, range.col + range.colCount - 1);
	                    series.SetNameRefer(refer);
	                }
	
	                range = ranges[2];
	                if (range) {
	                    refer = new COMMON_MODULE.Reference(sheet.name(), range.row, range.col, range.row + range.rowCount - 1, range.col + range.colCount - 1);
	                    series.SetXValuesRefers([refer]);
	                }
	
	                range = ranges[3];
	                if (range) {
	                    refer = new COMMON_MODULE.Reference(sheet.name(), range.row, range.col, range.row + range.rowCount - 1, range.col + range.colCount - 1);
	                    series.SetBubbleSizesRefers([refer]);
	                }
	
	                formulaTextBox.chartView._updateChartModel(true);
	            }
	        }
	    }
	
	    function getChartSelectedType(ElementType) {
	        var type;
	        switch (ElementType) {
	            case 1:
	            case 2:
	                type = 5;
	                break;
	            case 4:
	            case 260:
	            case 516:
	                type = 3;
	                break;
	            case 9:
	            case 265:
	            case 521:
	                type = 1;
	                break;
	            case 7:
	            case 263:
	            case 8:
	                type = 0;
	                break;
	            default:
	                type = 7;
	                break;
	        }
	        return type;
	    }
	
	    Charts.ElementType = {
	        series: 0,
	        axis: 1,
	       
	        legend: 3,
	        label: 4,
	        chartTitle: 5,
	       
	        plotArea: 7,
	        chartArea: 8
	    };
	
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	
	    function getSeriesClickedInfo(chart, args) {
	        var selectedValue = null;
	        if (args.model && args.model.items && args.model.items.length > 0) {
	            selectedValue = args.model.items[0];
	        }
	        var series = chart._getSelectedSeries(selectedValue, args.field);
	        var info = series ? {index: series.Index} : {};
	        if (IsSunburstOrTreemapChart(chart.chartType()) && selectedValue) {
	            var treeData = series._chartData2016ModelCalHelper && series._chartData2016ModelCalHelper._treeData;
	            treeData = treeData || [];
	            for (var i = 0; i < treeData.length; i++) {
	                var treeItem = treeData[i];
	                if (treeItem && treeItem.value && treeItem.value === selectedValue.level0) {
	                    info.dataPointIndex = i;
	                    return info;
	                }
	            }
	        }
	        return info;
	    }
	
	    function getAxisClickedInfo(chart, args) {
	        var model = args.model;
	        if ((model.type === 265 || model.type === 521) && model.parent) {
	            model = model.parent;
	        }
	        return model.type === 9 ? {
	           
	            axisType: model.axisType === 1 ? 'y' : "x",
	            axisPosition: model.position === 1 ? 'primary' : 'secondary'
	        } : {};
	    }
	
	   
	   
	   
	   
	   
	   
	   
	   
	
	    function getChartClickedOptions(elementType, chart, args) {
	        var info = {};
	        switch (elementType) {
	            case 0 
	            :
	                info = getSeriesClickedInfo(chart, args);
	                break;
	            case 1 
	            :
	                info = getAxisClickedInfo(chart, args);
	                break;
	           
	           
	           
	           
	           
	           
	           
	           
	           
	           
	            default:
	                break;
	        }
	
	        var allSeries = chart.series().AllSers;
	        var category = [];
	        for (var i = 0; i < allSeries.length; i++) {
	            category.push(allSeries[i].Name || getSeriesIndexByName(allSeries[i]));
	        }
	
	        return {category: category, info: info};
	    }
	
	    function getChartClickedArgs(chart, args) {
	        var elementType = args.model.type;
	        var chartElementType = getChartSelectedType(elementType);
	        return {
	            chart: chart,
	            elementType: chartElementType,
	            options: getChartClickedOptions(chartElementType, chart, args)
	        };
	    }
	
	
	    function getSeriesIndexByName(series) {
	        if (!series.Name) {
	            var seriesIndex = series.SeriesCollection.IndexOfSource(series);
	            return seriesIndex + 1;
	        }
	    }
	
	    function getRangeInfoByFormula(sheet, formula) {
	        if (formula) {
	            var result = formulaToRanges(sheet, formula, 0, 0), rangeItem = result[0];
	
	            if (rangeItem) {
	                var spread = sheet.parent, worksheet = spread.getSheetFromName(rangeItem.sheetName);
	                if (worksheet) {
	                    return {
	                        sheet: worksheet,
	                        range: rangeItem.ranges && rangeItem.ranges[0]
	                    };
	                }
	            }
	        }
	        return {range: {}};
	    }
	    function calDataRangeWithBubbleSize(sheet, series, targetRange, dataInRow) {
	        var bubbleSizeFormula = series.GetBubbleSizesFormula();
	        var bubbleSizeRangeInfo = getRangeInfoByFormula(sheet, bubbleSizeFormula);
	        var bubbleSizeRange = bubbleSizeRangeInfo.range;
	        if (!$_isEmptyObject(bubbleSizeRange)) {
	            if (dataInRow) {
	                if (bubbleSizeRange.row !== targetRange.row + targetRange.rowCount) {
	                    return;
	                }
	                targetRange.rowCount++;
	            } else {
	                if (bubbleSizeRange.col !== targetRange.col + targetRange.colCount) {
	                    return;
	                }
	                targetRange.colCount++;
	            }
	        }
	        return targetRange;
	    }
	    var Chart = (function (_super) {
	        $.inherit(Chart, _super);
	
	       
	        
	        function Chart(sheet, name, chartType, x, y, width, height, dataRange, dataOrientation) {
	            var _this = this;
	            var chartName = name || generateName(sheet, "Chart ");
	            _super.call(_this, chartName, x, y, width, height);
	            _this.typeName = '2' ;
	            _this._kind = '2' ;
	            _this.sheet(sheet);
	            _this._chart = new ChartModel(_this, chartType);
	            _this._flexDVs = [];
	           
	            if (IsSunburstOrTreemapChart(chartType)) {
	                dataOrientation = keyword_undefined;
	            }
	            if (dataRange) {
	                _this._setDataRange(dataRange, dataOrientation);
	            }
	            _this._initDom();
	        }
	
	        var prototype = Chart.prototype;
	       
	        
	        prototype.chartType = function (value) {
	            var _this = this, chart = _this._chart;
	            if (arguments.length === 0) {
	                return chart.ChartType;
	            }
	            _this._backup('chartType', chart.ChartType);
	           
	            var dataRange = (ChartUtility.IsScatterChart(value) || IsSunburstOrTreemapChart(value)) && _this._getDataRange();
	            if (dataRange) {
	                chart._chartType = value;
	                _this.dataRange(dataRange);
	            } else {
	                chart.ChartType = value;
	            }
	            _this._updateChartModel();
	            return _this;
	        };
	       
	        
	        prototype.title = function (value) {
	            var _this = this, chartModel = _this._chart;
	            if (arguments.length === 0) {
	                return ChartHelper.getChartTitleProperties(chartModel.ChartTitle, true, keyword_undefined, 1, false, true);
	            }
	
	            if (value) {
	                var text = value.text, changedProperties = {};
	                var chartTitle;
	                if (text === "") {
	                    changedProperties.text = getChartTitleText(chartModel.ChartTitle);
	                    chartModel.HasTitle = false;
	                } else {
	                    chartModel.HasTitle = true;
	                    chartTitle = chartModel.ChartTitle;
	                   
	                    var chartTitleFont = chartTitle.Font;
	                    if (value.text) {
	                        changedProperties.text = getChartTitleText(chartTitle);
	                        chartTitle.Text = value.text;
	                    }
	                    if (value.fontFamily) {
	                        changedProperties.fontFamily = chartTitleFont.Name;
	                        chartTitleFont.Name = value.fontFamily;
	                    }
	                    if (value.fontSize) {
	                        changedProperties.fontSize = chartTitleFont.Size;
	                        chartTitleFont.Size = value.fontSize;
	                    }
	                    var color = value.color;
	                    if (color) {
	                        changedProperties.color = colorFormatToString(chartTitleFont, true, true);
	                        chartTitleFont.Color.setColor(this.sheet(), color);
	                    } else if ((color === null || color === '')) {
	                        changedProperties.color = colorFormatToString(chartTitleFont, true, true);
	                        chartTitleFont.Color.ColorType = 0;
	                    }
	                    if (!isNullOrUndefined(value.transparency)) {
	                        changedProperties.transparency = getTransparencyFromColorFormat(chartTitleFont, true);
	                        chartTitleFont.Color.Transparency = value.transparency;
	                    }
	                }
	                if (!$_isEmptyObject(changedProperties)) {
	                    _this._backup('title', changedProperties);
	                }
	                this._updateChartModel();
	            }
	            return this;
	        };
	       
	        
	        prototype.legend = function (value) {
	            var _this = this;
	            var chart = _this._chart, isStockChartType = ChartUtility.IsStockChart(chart.ChartType);
	            if (arguments.length === 0) {
	                if (isStockChartType) {
	                    return keyword_undefined;
	                }
	                var borderStyle = getLineFormatInfo(chart.Legend, false, false, true);
	                return {
	                    visible: chart.HasLegend,
	                    position: chart.Legend ? chart.Legend.Position : 2 ,
	                    borderStyle: borderStyle,
	                    backColor: (chart.Legend && chart.Legend.Format && chart.Legend.Format.Fill) ?
	                        colorFormatToString(chart.Legend.Format.Fill, false, false, true) : keyword_undefined,
	                    backColorTransparency: (chart.Legend && chart.Legend.Format && chart.Legend.Format.Fill) ?
	                        getTransparencyFromColorFormat(chart.Legend.Format.Fill) : keyword_undefined
	                };
	            }
	
	            if (!isStockChartType) {
	                var changedProperties = {};
	                if (!isNullOrUndefined(value.visible)) {
	                    changedProperties.visible = chart.HasLegend;
	                    chart.HasLegend = value.visible;
	                }
	                if (!isNullOrUndefined(value.position) && chart.Legend) {
	                    changedProperties.position = chart.Legend.Position;
	                    chart.Legend.Position = value.position;
	                }
	                var backColor = value.backColor;
	                if (backColor && chart.Legend) {
	                    changedProperties.backColor = colorFormatToString(chart.Legend.Format.Fill, false);
	                    chart.Legend.Format.Fill.Color.setColor(chart._chartView.sheet(), backColor);
	                } else if ((backColor === null || backColor === '') && chart.Legend) {
	                    changedProperties.backColor = colorFormatToString(chart.Legend.Format.Fill, false);
	                    chart.Legend.Format.Fill.Color.ColorType = 0;
	                }
	                if (!isNullOrUndefined(value.backColorTransparency) && chart.Legend) {
	                    changedProperties.backColorTransparency = getTransparencyFromColorFormat(chart.Legend.Format.Fill);
	                    chart.Legend.Format.Fill.Color.Transparency = value.backColorTransparency;
	                }
	                if (!isNullOrUndefined(value.borderStyle) && chart.Legend) {
	                    var formatLine = chart.Legend && chart.Legend.Format && chart.Legend.Format.Line;
	                    if (!isNullOrUndefined(formatLine) && !isNullOrUndefined(value.borderStyle.width)) {
	                        if (isNullOrUndefined(changedProperties.borderStyle)) {
	                            changedProperties.borderStyle = {};
	                        }
	                        changedProperties.borderStyle.width = formatLine.Weight;
	                        formatLine.Weight = value.borderStyle.width;
	                    }
	                    var borderColor = value.borderStyle.color;
	                    if (!isNullOrUndefined(formatLine) && borderColor) {
	                        if (isNullOrUndefined(changedProperties.borderStyle)) {
	                            changedProperties.borderStyle = {};
	                        }
	                        changedProperties.borderStyle.color = colorFormatToString(formatLine, false);
	                        formatLine.Color.setColor(chart._chartView.sheet(), borderColor);
	                    } else if ((borderColor === null || borderColor === '') && formatLine) {
	                        if (isNullOrUndefined(changedProperties.borderStyle)) {
	                            changedProperties.borderStyle = {};
	                        }
	                        changedProperties.borderStyle.color = colorFormatToString(formatLine, false);
	                        formatLine.Color.ColorType = 0;
	                    }
	                    if (!isNullOrUndefined(formatLine) && !isNullOrUndefined(value.borderStyle.transparency)) {
	                        if (isNullOrUndefined(changedProperties.borderStyle)) {
	                            changedProperties.borderStyle = {};
	                        }
	                        changedProperties.borderStyle.transparency = getTransparencyFromColorFormat(formatLine);
	                        formatLine.Color.Transparency = value.borderStyle.transparency;
	                    }
	                }
	                if (!$_isEmptyObject(changedProperties)) {
	                    _this._backup('legend', changedProperties);
	                }
	                _this._updateChartModel();
	            }
	            return _this;
	        };
	       
	        
	        prototype.chartArea = function (value) {
	            var _this = this, chartArea = _this._chart.ChartArea;
	            var backColor, color, fontSize, backColorTransparency, transparency;
	            if (arguments.length === 0) {
	                var chartAreaStyle = ChartHelper.getChartAreaStyle(chartArea, true, 1, false, true),
	                    textStyle = chartAreaStyle.textStyle;
	                var result = {};
	                backColor = chartAreaStyle.style.backgroundColor;
	                backColorTransparency = chartAreaStyle.style.transparency;
	                if (backColor) {
	                    result.backColor = backColor;
	                    result.backColorTransparency = backColorTransparency;
	                } else if (backColor === '') {
	                    result.backColor = backColor;
	                }
	                color = textStyle.color;
	                transparency = textStyle.transparency;
	                if (color) {
	                    result.color = color;
	                    result.transparency = transparency;
	                    result.fontFamily = textStyle.fontFamily;
	                } else if (color === '') {
	                    result.color = color;
	                }
	                fontSize = parseFloat(textStyle.fontSize);
	                if (!isNaN(fontSize)) {
	                    result.fontSize = fontSize;
	                }
	
	                return result;
	            }
	
	            if (value) {
	                var chartFormat = chartArea.GetFormatInternal();
	                var changedProperties = {};
	
	                backColor = value.backColor;
	                if (backColor && chartFormat) {
	                    changedProperties.backColor = colorFormatToString(chartFormat.Fill, true);
	                    chartFormat.Fill.Color.setColor(_this.sheet(), backColor);
	                } else if ((backColor === null || backColor === '') && chartFormat) {
	                    changedProperties.backColor = colorFormatToString(chartFormat.Fill, true);
	                    chartFormat.Fill.Color.ColorType = 0;
	                }
	                backColorTransparency = value.backColorTransparency;
	                if (!isNullOrUndefined(backColorTransparency) && chartFormat) {
	                    changedProperties.backColorTransparency = getTransparencyFromColorFormat(chartFormat.Fill);
	                    chartFormat.Fill.Color.Transparency = backColorTransparency;
	                }
	
	                var fontFormat = chartArea.Font;
	                if (fontFormat) {
	                    color = value.color;
	                    transparency = value.transparency;
	                    if (color) {
	                        changedProperties.color = colorFormatToString(chartArea.Font, true);
	                        chartArea.setFontColor(_this.sheet(), color);
	                    } else if ((color === null || color === '')) {
	                        changedProperties.color = colorFormatToString(chartArea.Font, true);
	                        fontFormat.Color.ColorType = 0;
	                    }
	                    if (!isNullOrUndefined(transparency) && chartFormat) {
	                        changedProperties.transparency = getTransparencyFromColorFormat(chartArea.Font);
	                        chartArea.setFontTransparency(transparency);
	                    }
	                    var fontFamily = value.fontFamily;
	                    if (fontFamily) {
	                        changedProperties.fontFamily = fontFormat.Name;
	                        fontFormat.Name = fontFamily;
	                    }
	                    fontSize = parseFloat(value.fontSize);
	                    if (!isNaN(fontSize)) {
	                        changedProperties.fontSize = fontFormat.Size;
	                        fontFormat.Size = fontSize;
	                    }
	                }
	
	                if (!$_isEmptyObject(changedProperties)) {
	                    _this._backup('chartArea', changedProperties);
	                }
	                _this._updateChartModel();
	            }
	            return _this;
	        };
	       
	        
	        prototype.dataLabels = function (value) {
	            var chart = this._chart, isStockChartType = ChartUtility.IsStockChart(chart.ChartType);
	            if (arguments.length === 0) {
	                if (isStockChartType) {
	                    return keyword_undefined;
	                }
	                var series = chart.SeriesCollection.AllSers[0],
	                    dataLabels = series.GetDataLabels();
	                var result;
	
	                if (dataLabels) {
	                    result = {
	                        showValue: dataLabels.ShowValue,
	                        showSeriesName: dataLabels.ShowSeriesName,
	                        showCategoryName: dataLabels.ShowCategoryName,
	                        showPercentage: dataLabels.ShowPercentage,
	                        position: dataLabels.Position,
	                        format: dataLabels.NumberFormat
	                    };
	                    var color = colorFormatToString(dataLabels.Font, true, false, true);
	                    if (color || color === '') {
	                        result.color = color;
	                    }
	                    var transparency = getTransparencyFromColorFormat(dataLabels.Font);
	                    if (!isNullOrUndefined(transparency)) {
	                        result.transparency = transparency;
	                    }
	                } else {
	                    result = {showValue: false, showSeriesName: false, showCategoryName: false, showPercentage: false};
	                }
	
	               
	                if (!ChartUtility.IsPieOrDoughnutChart(series.InnerChartType)) {
	                    delete result.showPercentage;
	                }
	
	                return result;
	            }
	
	            if (value && !isStockChartType) {
	                updateDataLabels(chart, value, this.sheet());
	                this._updateChartModel();
	            }
	            return this;
	        };
	       
	        
	        prototype.axes = function (value) {
	            var axes = this._chart.Axes;
	            var primaryXAxis = axes.Item(0, 0),
	                primaryYAxis = axes.Item(1, 0),
	                secondaryXAis = axes.Item(0, 1),
	                secondaryYAxis = axes.Item(1, 1);
	            if (arguments.length === 0) {
	                var option = {};
	                if (primaryXAxis) {
	                    option.primaryCategory = ChartHelper.getAxisProperties(primaryXAxis, false, true);
	                }
	                if (primaryYAxis) {
	                    option.primaryValue = ChartHelper.getAxisProperties(primaryYAxis, false, true);
	                }
	                if (secondaryXAis) {
	                    option.secondaryCategory = ChartHelper.getAxisProperties(secondaryXAis, false, true);
	                }
	                if (secondaryYAxis) {
	                    option.secondaryValue = ChartHelper.getAxisProperties(secondaryYAxis, false, true);
	                }
	                return option;
	            }
	
	            var sheet = this.sheet();
	            setAxisOptions(primaryXAxis, value.primaryCategory, sheet, axes, 0, 0);
	            setAxisOptions(primaryYAxis, value.primaryValue, sheet, axes, 1, 0);
	            setAxisOptions(secondaryXAis, value.secondaryCategory, sheet, axes, 0, 1);
	            setAxisOptions(secondaryYAxis, value.secondaryValue, sheet, axes, 1, 1);
	
	            this._updateChartModel();
	            return this;
	        };
	       
	        
	        prototype.series = function () {
	            return this._chart.SeriesCollection;
	        };
	       
	        
	        prototype.dataRange = function (value) {
	            var _this = this, oldDataRange = _this._getDataRange();
	            if (arguments.length === 0) {
	                return oldDataRange;
	            }
	            if (value) {
	                var chartTypes, chartType = _this.chartType();
	                if (chartType === 0 ) {
	                    var seriesCollection = _this._chart.SeriesCollection;
	                    chartTypes = seriesCollection.AllSers.map(function (item) {
	                        return item.ChartType;
	                    });
	                }
	                _this._backup('dataRange', oldDataRange);
	                var dataOrientation = IsSunburstOrTreemapChart(chartType) ? null : getDataOrientation(_this);
	                _this._setDataRange(value, dataOrientation, chartTypes);
	            }
	            return _this;
	        };
	       
	        
	        prototype.useAnimation = function (value) {
	            var _this = this, chartModel = _this._chart, useAnimation = chartModel.UseAnimation;
	            if (arguments.length === 0) {
	                return useAnimation;
	            }
	            if (!isNullOrUndefined(value) && !value !== !useAnimation) {
	                _this._backup('useAnimation', useAnimation);
	                chartModel.UseAnimation = value;
	                _this._updateChartModel();
	            }
	            return _this;
	        };
	
	        function isNearbyNameItems(nameFormulas, sheet, row, col, dataInRow, refSheet) {
	            var count = nameFormulas.length;
	            for (var i = 0; i < count; i++) {
	                var item = nameFormulas[i];
	                if (item) {
	                    var rangeInfo = getRangeInfoByFormula(sheet, item),
	                        range = rangeInfo.range;
	                    if (rangeInfo.sheet !== refSheet) {
	                        return false;
	                    }
	                    if (range.rowCount === 1 && range.colCount === 1) {
	                        if (dataInRow) {
	                            if (!(range.row === row + i && range.col === col - 1)) {
	                                return false;
	                            }
	                        } else if (!(range.col === col + i && range.row === row - 1)) {
	                            return false;
	                        }
	                    } else {
	                        return false;
	                    }
	                } else {
	                    return false;
	                }
	            }
	            return true;
	        }
	
	        prototype._getDataRange = function () {
	            var _seriesCollection = this._chart.SeriesCollection,
	                items = _seriesCollection.AllSers,
	                count = items.length,
	                dataInRow = getDataOrientation(this) === 0 ,
	                chartType = this._chart.ChartType,
	                isBubbleChart = ChartUtility.IsBubbleChart(chartType);
	            if (count > 0) {
	                var sheet = this.sheet();
	                var series = items[0];
	                var xFormula = series.GetXValuesFormula(),
	                    yFormula = series.GetValuesFormula(),
	                    nameFormulas = [],
	                    yRangeInfo = getRangeInfoByFormula(sheet, yFormula),
	                    yRangeSheet = yRangeInfo.sheet,
	                    yRange = yRangeInfo.range,
	                    rowCount = yRange.rowCount,
	                    colCount = yRange.colCount,
	                    row = yRange.row,
	                    col = yRange.col,
	                    targetRange = createRange(row, col, rowCount, colCount),
	                    hasXRange = !!xFormula,
	                    range, i, rangeInfo;
	                    nameFormulas.push(series.GetNameFormula());
	                if (isBubbleChart) {
	                    targetRange = calDataRangeWithBubbleSize(sheet, series, targetRange, dataInRow);
	                    if (isNullOrUndefined(targetRange)) {
	                        return;
	                    }
	                }
	                for (i = 1; i < count; i++) {
	                    series = items[i];
	                    if (hasXRange && xFormula !== series.GetXValuesFormula()) {
	                        return;
	                    }
	                    yFormula = series.GetValuesFormula();
	                    rangeInfo = getRangeInfoByFormula(sheet, yFormula);
	                    range = rangeInfo.range;
	                    if (rangeInfo.sheet !== yRangeSheet || range.rowCount !== rowCount || range.colCount !== colCount) {
	                        return;
	                    }
	                    if (dataInRow) {
	                        if (range.row !== targetRange.row + targetRange.rowCount) {
	                            return;
	                        }
	                        targetRange.rowCount++;
	                    } else {
	                        if (range.col !== targetRange.col + targetRange.colCount) {
	                            return;
	                        }
	                        targetRange.colCount++;
	                    }
	                    if (isBubbleChart) {
	                        targetRange = calDataRangeWithBubbleSize(sheet, series, targetRange, dataInRow);
	                        if (isNullOrUndefined(targetRange)) {
	                            return;
	                        }
	                    }
	                    nameFormulas.push(series.GetNameFormula());
	                }
	               
	                if (hasXRange) {
	                    rangeInfo = getRangeInfoByFormula(sheet, xFormula);
	                    range = rangeInfo.range;
	                    if (rangeInfo.sheet === yRangeSheet) {
	                        if (dataInRow) {
	                            if (range.row === row - range.rowCount && range.col === col && range.colCount === colCount) {
	                                targetRange.row -= range.rowCount;
	                                targetRange.rowCount += range.rowCount;
	                            }
	                        } else if (range.col === col - range.colCount && range.row === row && range.rowCount === rowCount) {
	                            targetRange.col -= range.colCount;
	                            targetRange.colCount += range.colCount;
	                        }
	                    }
	                }
	               
	                if (isNearbyNameItems(nameFormulas, sheet, row, col, dataInRow, yRangeSheet)) {
	                    if (dataInRow) {
	                        targetRange.col--;
	                        targetRange.colCount++;
	                    } else {
	                        targetRange.row--;
	                        targetRange.rowCount++;
	                    }
	                }
	
	                var reference = new Reference(yRangeSheet.name(), targetRange.row, targetRange.col, targetRange.row + targetRange.rowCount - 1, targetRange.col + targetRange.colCount - 1);
	                return sheet.parent.options.referenceStyle === 1  ? reference.ToR1C1Text() : reference.ToA1Text(0, 0);
	            }
	        };
	
	        
	        function _getDataLabelsInfo(seriesItems) {
	            var dataLabelsInfo = {}, withDataLabels = false, count = seriesItems.length;
	            for (var i = 0; i < count; i++) {
	                var item = seriesItems[i];
	                if (item.HasDataLabels) {
	                    dataLabelsInfo[i] = item.DataLabels;
	                    withDataLabels = true;
	                }
	            }
	            if (withDataLabels) {
	                dataLabelsInfo.count = count;  
	            } else {
	                dataLabelsInfo = keyword_null;
	            }
	
	            return dataLabelsInfo;
	        }
	
	        prototype._setDataRange = function (dataRangeFormula, dataOrientation, chartTypes) {
	            var _this = this, sheet = _this.sheet();
	            var rangeInfo = getRangeInfoByFormula(sheet, dataRangeFormula);
	            if (rangeInfo) {
	                var _seriesCollection = _this._chart.SeriesCollection;
	                var seriesItems = _seriesCollection._series;
	                var dataLabelsInfo = _getDataLabelsInfo(seriesItems);
	                seriesItems.length = 0;
	                var dataRange = rangeInfo.range;
	                _seriesCollection.Add(sheet._GetRange(dataRange.row, dataRange.col, dataRange.rowCount, dataRange.colCount, rangeInfo.sheet), dataOrientation, keyword_null, keyword_null, dataLabelsInfo, chartTypes);
	            }
	        };
	        prototype._initDom = function () {
	            var _this = this;
	            var div = document.createElement("div");
	            var style = div.style;
	            style.boxSizing = "border-box";
	            style.border = "1px none gray";
	            style.width = _this.width() + "px";
	            style.height = _this.height() + "px";
	            style.outline = "none";
	            _this.content(div, false);
	        };
	        prototype._needSaveJsonToFloatingObjects = function () {
	            return false;  
	        };
	        prototype._updateChartModel = function (refreshData, rects) {
	            if (refreshData === keyword_undefined) {
	                refreshData = false;
	            }
	            var _this = this, sheet = _this.sheet();
	            refreshData && _this.updateSeries(rects, true);
	            if (!sheet.isPaintSuspended()) {
	                var flexDVs = _this._flexDVs;
	                if (flexDVs.length > 0) {
	                    var model = getChartModelData(_this._chart, sheet);
	                    for (var i = 0, length = flexDVs.length; i < length; i++) {
	                        var chart = flexDVs[i];
	                        chart.load(model);
	                        chart.refresh();
	                    }
	                }
	                this._isDirty = false;
	            } else {
	                this._isDirty = true;
	            }
	        };
	        prototype._updateChartFormula = function (index, formula, r1c1, updatedSeriesCache, shouldDeleteSeries) {
	            var seriesCollection = this._chart.SeriesCollection;
	            var series = seriesCollection.AllSers[index];
	            var modelManager = this.sheet()._modelManager;
	            if (series) {
	               
	                if (modelManager._changes && !updatedSeriesCache.series) {
	                    updatedSeriesCache.series = seriesCollection.get();
	                }
	               
	               
	               
	                if (shouldDeleteSeries) {
	                    updatedSeriesCache.indexes.push(index);
	                } else {
	                    series.UpdateFormula(formula, r1c1);
	                }
	            }
	        };
	        prototype.updateSeries = function (rects, force) {
	            if (force === void 0) {
	                force = false;
	            }
	            var chart = this._chart;
	            if (chart) {
	                chart.UpdateSeries(rects, force);
	            }
	        };
	
	        function detectDataOrientation(sheet, seriesCollection, firstSeries, yRange) {
	           
	            var formulas = [firstSeries.xVlues, firstSeries.name], formula, range;
	           
	            if (seriesCollection.Count > 1) {
	                formulas.push(seriesCollection.get(1).yValues);
	            }
	            for (var i = 0, count = formulas.length; i < count; i++) {
	                formula = formulas[i];
	                if (formula) {
	                    range = getRangeInfoByFormula(sheet, formula).range;
	                    if (yRange.col === range.col) {
	                        return 0 ;
	                    } else if (yRange.row === range.row) {
	                        return 1 ;
	                    }
	                }
	            }
	           
	            return 0 ;
	        }
	
	        function getDataOrientation(chartView) {
	            var seriesCollection = chartView._chart.SeriesCollection,
	                dataOrientation = seriesCollection._dataOrientation;
	            if (isNullOrUndefined(dataOrientation)) {  
	                var sheet = chartView.sheet();
	                var ser = seriesCollection.get(0);
	                if (ser) {
	                    var range = getRangeInfoByFormula(sheet, ser.yValues).range;
	                    if (range.rowCount === 1) {
	                        dataOrientation = range.colCount > 1 ? 0  : detectDataOrientation(sheet, seriesCollection, ser, range);
	                    } else {
	                        dataOrientation = 1 ;
	                    }
	                }
	            }
	
	            return dataOrientation;
	        }
	
	        prototype.getDataOrientation = function () {
	            return getDataOrientation(this);
	        };
	       
	        
	        prototype.switchDataOrientation = function () {
	            var _this = this, dataRange = _this._getDataRange();
	           
	            if (dataRange && !IsSunburstOrTreemapChart(_this.chartType())) {
	                _this._backup('switchDataOrientation');
	                var seriesCollection = _this._chart.SeriesCollection,
	                    dataOrientation = getDataOrientation(_this) ^ 1;  
	                var chartTypes;
	                if (_this.chartType() === 0 ) {
	                    chartTypes = seriesCollection.AllSers.map(function (item) {
	                        return item.ChartType;
	                    });
	                }
	                _this._setDataRange(dataRange, dataOrientation, chartTypes);
	                return true;
	            }
	            return false;
	        };
	        prototype.getFormulas = function () {
	            var chart = this._chart;
	            if (chart) {
	                return chart.SeriesCollection.AllSers.map(function (series) {
	                    return series.Formula;
	                });
	            }
	        };
	        prototype.clone = function (targetSheet) {
	            targetSheet = targetSheet || this.sheet();
	            var newChart = new Chart(targetSheet);
	            newChart.fromJSON(this.toJSON());
	            return newChart;
	        };
	        prototype._getSelectedSeries = function (selectedValue, field) {
	            return ChartHelper.getSeries(this._chart, selectedValue, field);
	        };
	        prototype._selectAllSeries = function () {
	            var selectedRanges = [], _this = this;
	            var sheetName = _this.sheet().name();
	            var allSeries = _this.series().AllSers;
	            var valuesRange, nameRange, xValuesRange, bubbleSizesRange, tmpRange;
	            for (var i = 0; i < allSeries.length; i++) {
	                var ser = allSeries[i];
	                var refer = ser.ValuesRefers[0];
	                if (refer && refer.WorksheetName === sheetName) {
	                    tmpRange = createRange(refer.Row, refer.Column, refer.RowCount, refer.ColumnCount);
	                    if (!valuesRange) {
	                        valuesRange = tmpRange;
	                    } else {
	                        valuesRange = valuesRange.union(tmpRange);
	                    }
	                }
	                var nameRefer = ser.NameRefer;
	                if (nameRefer && nameRefer.WorksheetName === sheetName) {
	                    tmpRange = createRange(nameRefer.Row, nameRefer.Column, nameRefer.RowCount, nameRefer.ColumnCount);
	                    if (!nameRange) {
	                        nameRange = tmpRange;
	                    } else {
	                        nameRange = nameRange.union(tmpRange);
	                    }
	                }
	                var xValueRefer = ser.XValuesRefers[0];
	                if (xValueRefer && xValueRefer.WorksheetName === sheetName) {
	                    tmpRange = createRange(xValueRefer.Row, xValueRefer.Column, xValueRefer.RowCount, xValueRefer.ColumnCount);
	                    if (!xValuesRange) {
	                        xValuesRange = tmpRange;
	                    } else {
	                        xValuesRange = xValuesRange.union(tmpRange);
	                    }
	                }
	                var bubbleSizesReference = ser.BubbleSizesRefers && ser.BubbleSizesRefers[0];
	                if (bubbleSizesReference && bubbleSizesReference.WorksheetName === sheetName) {
	                    tmpRange = createRange(bubbleSizesReference.Row, bubbleSizesReference.Column, bubbleSizesReference.RowCount, bubbleSizesReference.ColumnCount);
	                    if (!bubbleSizesRange) {
	                        bubbleSizesRange = tmpRange;
	                    }else {
	                        bubbleSizesRange = bubbleSizesRange.union(tmpRange);
	                    }
	                }
	            }
	            if (valuesRange) {
	                selectedRanges.push(valuesRange);
	            }
	            if (nameRange) {
	                selectedRanges.push(nameRange);
	            }
	            if (xValuesRange) {
	                selectedRanges.push(xValuesRange);
	            }
	            if (bubbleSizesRange) {
	                selectedRanges.push(bubbleSizesRange);
	            }
	
	            _this._setSelectedRanges(selectedRanges);
	        };
	        prototype._selectSeries = function (selectedValue, field) {
	            var selectedRanges = [], _this = this;
	            var sheetName = _this.sheet().name();
	            var series = _this._getSelectedSeries(selectedValue, field);
	            if (series) {
	                var reference = series.ValuesRefers[0];
	                if (reference && reference.WorksheetName === sheetName) {
	                    selectedRanges.push(createRange(reference.Row, reference.Column, reference.RowCount, reference.ColumnCount));
	                }
	                var nameReference = series.NameRefer;
	                if (nameReference && nameReference.WorksheetName === sheetName) {
	                    selectedRanges.push(createRange(nameReference.Row, nameReference.Column, nameReference.RowCount, nameReference.ColumnCount));
	                }
	                var xValueReference = series.XValuesRefers[0];
	                if (xValueReference && xValueReference.WorksheetName === sheetName) {
	                    selectedRanges.push(createRange(xValueReference.Row, xValueReference.Column, xValueReference.RowCount, xValueReference.ColumnCount));
	                }
	                var bubbleSizesReference = series.BubbleSizesRefers[0];
	                if (bubbleSizesReference && bubbleSizesReference.WorksheetName === sheetName) {
	                    selectedRanges.push(createRange(bubbleSizesReference.Row, bubbleSizesReference.Column, bubbleSizesReference.RowCount, bubbleSizesReference.ColumnCount));
	                }
	            }
	            _this._setSelectedRanges(selectedRanges, series);
	        };
	        prototype._setSelectedRanges = function (selectedRanges, series) {
	            var sheet = this.sheet();
	            var fbx = sheet._formulaTextBoxForChart;
	            if (selectedRanges && selectedRanges.length > 0) {
	                var formula = Sheets.CalcEngine.rangesToFormula(selectedRanges, sheet._activeRowIndex, sheet._activeColIndex, 0 , false);
	                fbx.text("=SERIES(" + formula + ")");
	            } else {
	                fbx.text("");
	            }
	            if (series) {
	                fbx._allowMoveResize = true;
	            } else {
	                fbx._allowMoveResize = false;
	            }
	            fbx.series = series;
	            fbx.chartView = this;
	            sheet._render._paintFormulaTextBox();
	        };
	        prototype.toJSON = function () {
	            var _this = this;
	            var chartData = _super.prototype.toJSON.call(_this);
	            delete chartData.content;
	            chartData.chartSpace = _this._chart.ToOOModel();
	           
	            var excludeFields = ['hiLowLines', 'p', 'variation', 'majorGridlines', 'minorGridlines', 'title'];
	            ChartUtility.simpleJSONObject(chartData, excludeFields);  
	            return chartData;
	        };
	        prototype.fromJSON = function (chartData, noSchema) {
	            var _this = this;
	            _super.prototype.fromJSON.call(_this, chartData, noSchema);
	            _this._chart = new ChartModel(_this);
	            _this._chart.FromOOModel(chartData.chartSpace);
	        };
	        prototype._dispose = function (clearCache) {
	            if (clearCache !== false) {
	                var _this = this;
	                var flexDVs = _this._flexDVs;
	                for (var i = 0, length = flexDVs.length; i < length; i++) {
	                    flexDVs[i].dispose();
	                }
	                _this._flexDVs = [];
	                _this._unbindEvents();
	            }
	        };
	        ChartUtility.defineProperty(prototype, "DrawingType", {
	            get: function () {
	                return 1;
	            }
	        });
	        prototype._ToARGBColor = function (styleColor) {
	            if (styleColor.ColorType === 2) {
	                return ARGBColor.FromArgb(styleColor.Value);
	            }
	            var context = this.sheet();
	            if (context) {
	                return context._ToARGBColor(styleColor);
	            }
	            return new ARGBColor();
	        };
	        prototype._ToFont = function (themeFont) {
	            var context = this.sheet();
	            if (context) {
	                return context._ToFont(themeFont);
	            }
	            return "";
	        };
	        prototype._bindEvents = function (element) {
	            var eventsCache = this._eventsCache;
	            if (!eventsCache) {
	                eventsCache = this._eventsCache = [];
	            }
	            var sheet = this.sheet();
	            var eventName = 'mousedown';
	            var eventHandler = function () {
	                if (sheet.isEditing()) {
	                    var endEditSuccess = sheet.endEdit();
	                    if (!endEditSuccess) {
	                        return;
	                    }
	                }
	                if (!sheet._formulaTextBoxForChart) {
	                    var spread = sheet.parent;
	                    var editingElement = FORMULA_TEXTBOX_MODULE._createEditorElement(spread._host);
	                    var fbx = sheet._formulaTextBoxForChart = new FORMULA_TEXTBOX_MODULE.FormulaTextBox(editingElement, {
	                        rangeSelectMode: true,
	                        absoluteReference: true
	                    }, spread);
	                    fbx._bind('TextChanged', function () {
	                        sheet._render._paintFormulaTextBox();
	                    });
	                    fbx.onRangeMoved = function () {
	                        updateChartRefers(sheet);
	                    };
	                    fbx.onRangeResized = function () {
	                        updateChartRefers(sheet);
	                    };
	                }
	            };
	            element.addEventListener(eventName, eventHandler, true);
	            eventsCache.push([element, eventName, eventHandler]);
	        };
	        prototype._unbindEvents = function () {
	            var eventsCache = this._eventsCache;
	            if (eventsCache) {
	                for (var i = 0, length = eventsCache.length; i < length; i++) {
	                    var temp = eventsCache[i];
	                    temp[0].removeEventListener(temp[1], temp[2]);
	                }
	            }
	            this._eventsCache = keyword_null;
	        };
	        prototype._initFlexDV = function (previewElement, devicePixelRatio, devicePixelRatioIsAuto) {
	            var _this = this, sheet = _this.sheet();
	            var model = getChartModelData(_this._chart, sheet);
	            var dv = __webpack_require__(1);
	            if (dv) {
	                var chart = new dv.FlexDV(previewElement);
	                chart.renderMethod = dv.RenderMethod.Canvas;
	                if (!isNullOrUndefined(devicePixelRatio)) {
	                    chart.devicePixelRatio = devicePixelRatio;
	                    chart.devicePixelRatioIsAuto = devicePixelRatioIsAuto;
	                }
	                chart.load(model);
	                chart.refresh();
	                chart.hitTested.addHandler(function (sender, args) {
	                    if (args.event.action === dv.MotionEvent.ACTION_CLICK && sheet._canSelectFloatingObject(_this)) {
	                        var dvModel = args.model;
	                        var field = args.addition;
	                        var selectedValue = dvModel.items && dvModel.items[0];
	
	                        if (ChartUtility.IsStockChart(_this._chart.ChartType)) {
	                            if (!field && selectedValue) {
	                                field = "volume";
	                            }
	                            _this._selectDVStockChart(chart, field);
	                        }
	
	                        var elementType = getChartSelectedType(dvModel.type);
	                        _this._selectSeriesAndDeselectDVChart(chart, elementType, selectedValue, field);
	
	                        sheet._trigger(Sheets.Events.ChartClicked, getChartClickedArgs(_this, args));
	                    }
	                    _this.getHost()[0].style.cursor = "default";
	                });
	                _this._flexDVs.push(chart);
	            }
	        };
	        prototype._selectDVStockChart = function(dvChart, field) {
	            var fieldString = '[' + field + ']';
	            var dataPoints = dvChart.query(fieldString);
	            dvChart.select(dataPoints, {adorners: true}, fieldString);
	        };
	        prototype._selectSeriesAndDeselectDVChart = function (chart, elementType, selectedValue, field) {
	            var _this = this;
	            if (elementType === 7) {
	                _this._selectAllSeries();
	            } else if (elementType === 0) {
	                if (!isNullOrUndefined(selectedValue)) {
	                    _this._selectSeries(selectedValue, field);
	                } else {
	                    chart.select([]);
	                    _this._selectSeries(keyword_null);
	                }
	            } else {
	                chart.select([]);
	                _this._selectSeries(keyword_null);
	            }
	        };
	        prototype.onNameChanged = function (oldName, newName) {
	            this.sheet()._updateRegisteredFormula(this, {action: 'rename', oldName: oldName, newName: newName});
	        };
	        prototype._onSheetNameChanged = function (oldName, newName) {
	            this.series().AllSers.forEach(function (series) {
	                var nameRefer = series.NameRefer;
	                if (nameRefer && nameRefer.WorksheetName === oldName) {
	                    nameRefer.WorksheetName = newName;
	                }
	
	                var xValuesRefers = series.XValuesRefers;
	                if (xValuesRefers) {
	                    xValuesRefers.forEach(function (refer) {
	                        if (refer.WorksheetName === oldName) {
	                            refer.WorksheetName = newName;
	                        }
	                    });
	                }
	
	                var valuesRefers = series.ValuesRefers;
	                if (valuesRefers) {
	                    valuesRefers.forEach(function (refer) {
	                        if (refer.WorksheetName === oldName) {
	                            refer.WorksheetName = newName;
	                        }
	                    });
	                }
	
	                var bubbleSizeRefers = series.BubbleSizesRefers;
	                if (bubbleSizeRefers) {
	                    bubbleSizeRefers.forEach(function (refer) {
	                        if (refer.WorksheetName === oldName) {
	                            refer.WorksheetName = newName;
	                        }
	                    });
	                }
	            });
	        };
	        prototype.hitTest = function (x, y) {
	            var dv = __webpack_require__(1);
	            if (dv) {
	                var _this = this;
	                var flexDVs = _this._flexDVs;
	                if (flexDVs && flexDVs.length > 0) {
	                    var chart = flexDVs[0];
	                    var spread = _this.sheet().parent, spreadHost = $(spread.getHost());
	                    var spreadOffset = spreadHost.offset(), spreadOffsetLeft = spreadOffset.left,
	                        spreadOffsetTop = spreadOffset.top;
	                    var chartHost = $(_this._host[0]);
	                    var chartOffset = chartHost.offset(), chartOffsetLeft = chartOffset.left,
	                        chartOffsetTop = chartOffset.top;
	                    var hitInfo = chart.hitTest(new dv.core.Point(x + spreadOffsetLeft - chartOffsetLeft, y + spreadOffsetTop - chartOffsetTop));
	                    if (hitInfo) {
	                        return getChartClickedArgs(_this, hitInfo);
	                    }
	                }
	            }
	            return keyword_null;
	        };
	        prototype.refreshContent = function () {
	            var sheet = this.sheet();
	            var spread = sheet.parent;
	            if (spread && spread._isResizing) {
	                var flexDVs = this._flexDVs;
	                if (flexDVs && flexDVs.length > 0) {
	                    for (var i = 0, length = flexDVs.length; i < length; i++) {
	                        var flexDV = flexDVs[i];
	                        flexDV.refresh();
	                    }
	                }
	            }
	        };
	        prototype._backup = function (name, value) {
	            var modelManager = this.sheet()._modelManager;
	            if (modelManager._changes) {
	                var backupObj = {name: name};
	                if (!isNullOrUndefined(value)) {
	                    backupObj.value = value;
	                }
	                modelManager._backupCharts(this, backupObj);
	            }
	        };
	        prototype._updateSeriesByCalcChange = function (updatedSeriesCache) {
	            var seriesCollection = this._chart.SeriesCollection;
	            if (updatedSeriesCache.series) {
	                seriesCollection._backupSeriesByFormulaChange(updatedSeriesCache.series);
	            }
	            seriesCollection._deleteCachedSeries(updatedSeriesCache.indexes);
	        };
	        prototype._restore = function (argValue) {
	            if (!argValue) {
	                return;
	            }
	            var name = argValue.name, value = argValue.value;
	            if (this[name]) {
	                if (name === 'series') {
	                    this[name]()._restore(value);
	                } else {
	                    this[name](value);
	                }
	            } else if (name === 'dataPoint') {
	                var seriesCol = this.series();
	                var dataPoints = seriesCol && seriesCol.dataPoints();
	                dataPoints && dataPoints._restore(value);
	            }
	        };
	        return Chart;
	    })(FloatingObjects.FloatingObject);
	    Charts.Chart = Chart;
	
	   
	   
	    
	
	   
	    
	
	   
	    
	
	   
	   
	   
	   
	   
	
	   
	    
	
	   
	    
	
	   
	    
	
	   
	    
	
	   
	    
	
	   
	    
	
	   
	    
	
	   
	    
	   
	
	    module.exports = Charts;
	}());

/***/ }),
/* 20 */
/***/ (function(module, exports) {

	module.exports = GC.Spread.Sheets.FormulaTextBox;

/***/ }),
/* 21 */
/***/ (function(module, exports, __webpack_require__) {

	(function () {
	    'use strict';
	
	    var Core = __webpack_require__(6);
	    var Calc = __webpack_require__(12);
	    var Common = __webpack_require__(11);
	    var SheetsCalc = Core.CalcEngine;
	    var Types = Common._Types;
	    var extend = Types._extend, inherit = Types._inherit;
	
	    var ChartSource = SheetsCalc.ChartSource = (function (_super) {
	        inherit(ChartSource, _super);
	        function ChartSource(sheet) {
	            _super.call(this, null);
	            this._sheet = sheet;
	            this._chartNameMap = {};       
	            this._chartChangeInfos = {};   
	        }
	
	        return ChartSource;
	    })(Calc.CalcSource);
	
	   
	    function _getChartSerieInfo(name) {
	        if (name) {
	            var pos = name.lastIndexOf(",");
	            if (pos > 0) {
	                return {
	                    index: +name.substr(pos + 1),
	                    name: name.substr(0, pos)
	                };
	            }
	        }
	    }
	
	    function _updateChartByFormula(charts, nameMap, name, changeInfo, useR1C1, chartsCache) {
	        if (charts && name && changeInfo) {
	            var info = _getChartSerieInfo(name);
	            if (info) {
	                var chartName = nameMap[info.name];
	                if (chartName) {
	                    var chart = charts.get(chartName);
	                    if (chart) {
	                        var cacheItem = chartsCache[chartName];
	                        if (!cacheItem) {
	                            cacheItem = chartsCache[chartName] = {
	                                indexes: [],
	                                chart: chart
	                            };
	                        }
	                        var formulaAdjusted = changeInfo.formulaAdjusted;
	                        if (formulaAdjusted) {
	                            chart._shouldSyncFormula = true;
	                        }
	                        chart._updateChartFormula(info.index, changeInfo.formula, useR1C1, cacheItem, formulaAdjusted === 2 );
	                    }
	                }
	            }
	        }
	    }
	    
	    function _updateChartByDataChange(charts, nameMap, name, changeInfo) {
	        if (charts && name && changeInfo) {
	            var info = _getChartSerieInfo(name);
	            if (info) {
	                var chartName = nameMap[info.name];
	                if (chartName) {
	                    var chart = charts.get(chartName);
	                    if (chart) {
	                       
	                        chart._updateChartModel(!changeInfo.formula || changeInfo.formulaAdjusted);
	                    }
	                }
	            }
	        }
	    }
	
	    function addChartFormula(chartSource, chart, chartModel, key, name, syncOnly) {
	        var formulas = chart.getFormulas();
	        chartSource._chartNameMap[key] = name;
	        if (formulas && formulas.length) {
	            formulas.forEach(function (formula, sIndex) {
	                chartModel.setFormulaByName(key + "," + sIndex, formula, syncOnly);
	            });
	        }
	    }
	
	    function removeChartFormula(chartModel, key, syncOnly) {
	        var index = 0;
	        while (true) {
	            if (chartModel._getExpressionWithRowColumnByName(key + "," + index)) {
	                chartModel.setFormulaByName(key + "," + index, null, syncOnly);
	                index++;
	            } else {
	                break;
	            }
	        }
	    }
	
	    function adjustSeriesFormula(changeInfo, formula) {
	       
	       
	       
	       
	       
	       
	       
	       
	        if (formula && formula.indexOf('#REF!') !== -1) {
	            formula = formula.replace(/#REF!/g, '');
	            var formulaArray = formula.split(',');
	            changeInfo.formulaAdjusted = formulaArray[2].length ? 1  : 2 ;
	        }
	        changeInfo.formula = formula;
	    }
	
	    extend(ChartSource.prototype, {
	        createSourceModel: function (calcService) {
	            return new Calc.CalcSourceModel(calcService, this);
	        },
	        getValueByName: function (name) {
	           
	        },
	        setFormulaByName: function (name, formula) {
	           
	            var changeInfos = this._chartChangeInfos, changeInfo = changeInfos[name];
	            if (!changeInfo) {
	                changeInfo = changeInfos[name] = {};
	            }
	            adjustSeriesFormula(changeInfo, formula);
	        },
	        setValueByName: function (name, value) {
	           
	            var changeInfos = this._chartChangeInfos, changeInfo = changeInfos[name];
	            if (!changeInfo) {
	                changeInfo = changeInfos[name] = {};
	            }
	            changeInfo.dataChanged = true;
	        },
	        _addChart: function (chart) {
	            this._updateFormulaForChart(chart, 0 );
	        },
	        _removeChart: function (chart) {
	            this._updateFormulaForChart(chart, 1 );
	        },
	        _updateChart: function (chart, options) {
	            this._updateFormulaForChart(chart, 2 , options);
	        },
	        _updateFormulaForChart: function (chart, action, options) {
	            var self = this, sheet = self._sheet;
	            var service = sheet.getCalcService();
	            var chartModel = service.getSourceModel(this);
	            if (chart) {
	                service.suspend(true);
	                var name = chart.name(), key = name.toUpperCase();
	                if (action === 0) {
	                    addChartFormula(self, chart, chartModel, key, name);
	                } else if (action === 1) {
	                    removeChartFormula(chartModel, key);
	                } else if (options && options.action === 'rename') {
	                    removeChartFormula(chartModel, options.oldName.toUpperCase());
	                    addChartFormula(self, chart, chartModel, options.newName.toUpperCase(), name);
	                } else {
	                    var syncOnly = options && options.syncOnly;
	                    removeChartFormula(chartModel, key, syncOnly);
	                    addChartFormula(self, chart, chartModel, key, name, syncOnly);
	                }
	
	                service.resume(false);
	            }
	        },
	        startCalculation: function () {
	        },
	        endCalculation: function () {
	            
	            var self = this, sheet = self._sheet, charts = sheet.charts,
	                useR1C1 = self.getCalcService().useR1C1;
	            var cacheItem;
	            if (charts) {
	                var nameMap = self._chartNameMap;
	                var changeInfos = this._chartChangeInfos;
	                var chartsCache = {};
	                var chart, changeInfo;
	
	                for (var name in changeInfos) { 
	                    changeInfo = changeInfos[name];
	                    if (changeInfo.formula) {
	                        _updateChartByFormula(charts, nameMap, name, changeInfo, useR1C1, chartsCache);
	                    }
	                }
	                for (name in chartsCache) { 
	                    cacheItem = chartsCache[name];
	                    cacheItem.chart._updateSeriesByCalcChange(cacheItem);
	                }
	                var updatedCharts = {};
	                for (name in changeInfos) { 
	                    if (changeInfos[name].dataChanged) {
	                        var info = _getChartSerieInfo(name);
	                        if (info) {
	                            var chartName = nameMap[info.name];
	                            if (!updatedCharts[chartName]) {
	                                _updateChartByDataChange(charts, nameMap, name, changeInfos[name]);
	                                updatedCharts[chartName] = true;
	                            }
	                        }
	                    }
	                }
	                this._chartChangeInfos = {};  
	                for (name in chartsCache) { 
	                    cacheItem = chartsCache[name];
	                    chart = cacheItem.chart;
	                    if (chart && chart._shouldSyncFormula) {
	                        delete chart._shouldSyncFormula;
	                        sheet._updateRegisteredFormula(chart, { syncOnly: true }); 
	                    }
	                }
	            }
	        }
	    });
	}());

/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {

	(function () {
	    'use strict';
	
	    var Charts = __webpack_require__(3);
	    var Core = __webpack_require__(6),
	        FloatingObjects = __webpack_require__(4),
	        CalcEngine = __webpack_require__(12),
	        Events = Core.Events,
	        GC$ = Core.GC$,
	        Worksheet = Core.Worksheet,
	        Workbook = Core.Workbook,
	       
	        Functions = CalcEngine.Functions,
	        Chart = __webpack_require__(19).Chart,
	        ChartSource = Core.CalcEngine.ChartSource,
	        COMMON_MODULE = Charts,
	        DateTimeExtension = COMMON_MODULE.DateTimeExtension,
	        ChartUtility = COMMON_MODULE.ChartUtility,
	        Range = COMMON_MODULE.Range,
	        CellRect = COMMON_MODULE.CellRect;
	    var keyword_null = null, keyword_undefined = void 0, Math_floor = Math.floor;
	    var CHART_NS = '.chart';
	
	    function getFormatString(style) {
	        var formatter = "General";
	        if (style) {
	            formatter = style.formatter || style._autoFormatter;
	            if (formatter && typeof formatter === 'object') {
	                return formatter.formatString();
	            }
	        }
	        return formatter;
	    }
	
	    GC$.extend(Worksheet.prototype, {
	        _GetSheet: function (name) {
	            return this.parent.getSheetFromName(name);
	        },
	        _GetVisibleCellStyles: function (row, column, rowCount, columnCount) {
	            var result = [];
	            for (var r = 0; r < rowCount; r++) {
	                if (this.getRowVisible(row + r)) {
	                    var rowArray = [];
	                    for (var c = 0; c < columnCount; c++) {
	                        if (this.getColumnVisible(column + c)) {
	                            rowArray.push(this._GetCellStyle(row + r, column + c));
	                        }
	                    }
	                    result.push(rowArray);
	                }
	            }
	            return result;
	        },
	        _GetCellStyles: function (row, column, rowCount, columnCount) {
	            var result = [];
	            for (var r = 0; r < rowCount; r++) {
	                var rowArray = [];
	                for (var c = 0; c < columnCount; c++) {
	                    rowArray.push(this._GetCellStyle(row + r, column + c));
	                }
	                result.push(rowArray);
	            }
	            return result;
	        },
	        _GetCellStyle: function (row, col) {
	            var style = this.getStyle(row, col);
	            return {
	                FormatCode: getFormatString(style),
	                Flag: keyword_null
	            };
	        },
	        _GetCellValues: function (row, column, rowCount, columnCount, tryDataTimeConverter) {
	            if (tryDataTimeConverter === keyword_undefined) {
	                tryDataTimeConverter = false;
	            }
	            var result = [];
	            for (var r = 0; r < rowCount; r++) {
	                var rowArray = [];
	                for (var c = 0; c < columnCount; c++) {
	                    rowArray.push(this._GetCellValue(row + r, column + c, tryDataTimeConverter));
	                }
	                result.push(rowArray);
	            }
	            return result;
	        },
	        _GetVisibleCellValues: function (row, column, rowCount, columnCount, tryDataTimeConverter) {
	            if (tryDataTimeConverter === keyword_undefined) {
	                tryDataTimeConverter = false;
	            }
	            var result = [];
	            for (var r = 0; r < rowCount; r++) {
	                if (this.getRowVisible(row + r)) {
	                    var rowArray = [];
	                    for (var c = 0; c < columnCount; c++) {
	                        if (this.getColumnVisible(column + c)) {
	                            rowArray.push(this._GetCellValue(row + r, column + c, tryDataTimeConverter));
	                        }
	                    }
	                    result.push(rowArray);
	                }
	            }
	            return result;
	        },
	        _GetCellValue: function (row, col, converToDatetime) {
	            var value = this.getValue(row, col);
	            if (converToDatetime && typeof value === 'number' && value > DateTimeExtension.OADateMinAsDouble && value < DateTimeExtension.OADateMaxAsDouble) {
	                return DateTimeExtension.FromOADate(value);
	            }
	            return value;
	        },
	        _GetCellText: function (row, column, rowCount, columnCount) {
	            var text = this.getText(row, column);
	            if (!text) {
	                return '';
	            }
	            if (rowCount > 1 || columnCount > 1) {
	                for (var i = 0; i < rowCount; i++) {
	                    for (var j = 0; j < columnCount; j++) {
	                        if (text !== this.getText(row + i, column + j)) {
	                            return '';
	                        }
	                    }
	                }
	            }
	            return text;
	        },
	        _expressionToReferenceValues: function (expression, references, values, baseRow, baseColumn) {
	            var evaluator = new CalcEngine.Evaluator();
	            var source, expr = expression;
	            if (expr.source) {
	                source = (expr.type === 13  ? expr.source() : expr.source);
	            } else {
	                source = this._getSheetSource();
	            }
	            var context = source.getEvaluatorContext(CalcEngine._createCellIdentity(baseRow, baseColumn));
	
	            var newExpression = CalcEngine._mappingArray(context, expression, false, 0, 0, true, true);
	            var result = evaluator.evaluate(newExpression || expression, context, true, true);
	            if (result instanceof CalcEngine.CalcReference) {
	                var sheetName = result.getSource().getName();
	                for (var rangeIndex = 0; rangeIndex < result.getRangeCount(); rangeIndex++) {
	                    var refer = ChartUtility.CreateReference(sheetName,
	                        result.getRow(rangeIndex), result.getColumn(rangeIndex), result.getRowCount(rangeIndex), result.getColumnCount(rangeIndex));
	                    references.push(refer);
	                }
	            } else if (result instanceof CalcEngine.CalcArray) {
	                for (var r = 0; r < result.getRowCount(); r++) {
	                    for (var c = 0; c < result.getColumnCount(); c++) {
	                        values.push(result.getValue(r, c));
	                    }
	                }
	            }
	        },
	        _ParseFormula: function (formulaText, row, column, isR1C1) {
	            var references = [], values = [];
	            var calcService = this.getCalcService();
	            if (formulaText && calcService) {
	                if (formulaText[0] === '(' && formulaText[formulaText.length - 1] === ')') {
	                    formulaText = formulaText.substring(1, formulaText.length - 1);
	                }
	                var exp = calcService.parse(this._getSheetSource(), formulaText, row, column, false , false , !isR1C1);
	                this._expressionToReferenceValues(exp, references, values, row, column);
	            }
	            return { references: references, values: values };
	        },
	        _GetRange: function (row, column, rowCount, columnCount, sheet) {
	            var defaultRowCount = 1;
	            var defaultColumnCount = 1;
	            if (row < 0) {
	                defaultRowCount = -1;
	            }
	            if (column < 0) {
	                defaultColumnCount = -1;
	            }
	            return new Range(sheet || this, [new CellRect(row, column, rowCount || defaultRowCount, columnCount || defaultColumnCount)]);
	        },
	        _GetHiddens: function (isRows) {
	            var _this = this;
	            var result = [];
	            var length = isRows ? _this.getRowCount() : _this.getColumnCount();
	            var getVisible = isRows ? _this.getRowVisible : _this.getColumnVisible;
	            var index = -1, count = 0;
	            for (var i = 0; i < length; i++) {
	                if (!getVisible.call(_this, i)) {
	                    if (index === -1) {
	                        index = i;
	                        count = 1;
	                    } else {
	                        count++;
	                    }
	                } else if (index !== -1 && count !== 0) {
	                    result.push({ Index: index, Count: count });
	                    index = -1;
	                    count = 0;
	                }
	            }
	            if (index !== -1 && count !== 0) {
	                result.push({ Index: index, Count: count });
	            }
	            return result;
	        },
	        _ToARGBColor: function (color) {
	            var currentTheme = this.currentTheme();
	            return ChartUtility._ToARGBColor(currentTheme, color);
	        },
	        _ToFont: function (themeFont) {
	            var currentTheme = this.currentTheme();
	            return ChartUtility._ToFont(currentTheme, themeFont);
	        },
	        _IsHidden: function (rects) {
	            for (var _i = 0, rects_1 = rects; _i < rects_1.length; _i++) {
	                var item = rects_1[_i];
	                if (item.IsFullRow) {
	                    for (var r = 0, rc = item.RowCount; r < rc; r++) {
	                        if (this.getRowVisible(item.Row + r)) {
	                            return false;
	                        }
	                    }
	                } else if (item.IsFullColumn) {
	                    for (var c = 0, cc = item.ColumnCount; c < cc; c++) {
	                        if (this.getColumnVisible(item.Column + c)) {
	                            return false;
	                        }
	                    }
	                }
	            }
	            return true;
	        },
	       
	       
	       
	       
	       
	       
	       
	       
	       
	       
	        _updateRegisteredFormula: function (chartView, options) {
	            var chartSource = this._chartSource;
	            if (chartSource) {
	                chartSource._updateChart(chartView, options);
	            }
	        },
	        _updateAllChartInSheet: function (refreshData) {
	            var charts = this.charts && this.charts.all(),
	                length = charts && charts.length;
	            for (var i = 0; i < length; i++) {
	                charts[i]._updateChartModel(refreshData);
	            }
	        }
	    });
	
	   
	    
	    var FloatingObjectCollection = FloatingObjects.FloatingObjectCollection;
	    function ChartCollection(sheet) {
	        FloatingObjectCollection.call(this, sheet, '2' );
	    }
	
	    ChartCollection.prototype = new FloatingObjectCollection();
	   
	    
	    ChartCollection.prototype.add = function (name, chartType, x, y, width, height, dataRange, dataOrientation) {
	        var sheet = this._sheet;
	        var chartView = new Chart(sheet, name, chartType, x, y, width, height, dataRange, dataOrientation);
	        sheet._floatingObjectModel._add(chartView);
	        return chartView;
	    };
	    ChartCollection.prototype._add = function (chartView) {
	        this._sheet._floatingObjectModel._add(chartView);
	        return chartView;
	    };
	   
	    
	    ChartCollection.prototype.get = function (name) {
	        return this._sheet._floatingObjectModel._get(name);
	    };
	   
	    
	    ChartCollection.prototype.remove = function (name) {
	        var chartView = this.get(name);
	        var success = this._sheet._floatingObjectModel._remove(name);
	        if (success) {
	            chartView._dispose();
	        }
	    };
	   
	    
	    ChartCollection.prototype.clear = function () {
	        var charts = this.all();
	        this._sheet._floatingObjectModel._clear(this._kind);
	        for (var i = 0; i < charts.length; i++) {
	            charts[i]._dispose();
	        }
	    };
	   
	    
	    ChartCollection.prototype.all = function () {
	        return this._sheet._floatingObjectModel._all(this._kind);
	    };
	   
	    
	    ChartCollection.prototype.zIndex = function (name, zIndex) {
	        return this._sheet._floatingObjectModel._zIndex(name, zIndex);
	    };
	    ChartCollection.prototype._onGroupChanged = function (start, end, isRow) {
	        FloatingObjectCollection.prototype._onGroupChanged.call(this, start, end, isRow);
	
	        var sheet = this._sheet, cellRect;
	        if (isRow) {
	            cellRect = new CellRect(start, 0, end - start + 1, sheet.getColumnCount());
	        } else {
	            cellRect = new CellRect(0, start, sheet.getRowCount(), end - start + 1);
	        }
	        this.all().forEach(function (floatingObject) {
	            floatingObject._updateChartModel(true, cellRect);
	        });
	    };
	    Charts.ChartCollection = ChartCollection;
	
	    function setElementSize(sheet, floatingObject, element, option) {
	        var zoomFactor = sheet.zoom();
	       
	        if (!option || option.width) {
	            element.style.width = Math_floor((floatingObject.width() * zoomFactor)) + "px";
	        }
	        if (!option || option.height) {
	            element.style.height = Math_floor((floatingObject.height() * zoomFactor)) + "px";
	        }
	    }
	
	    function destroyFormulaTextBoxForChart(sheet) {
	        var fbx = sheet._formulaTextBoxForChart;
	        if (fbx) {
	            fbx.series = keyword_undefined;
	            fbx.chartView = keyword_undefined;
	            fbx._unbind('TextChanged');
	            fbx.destroy();
	            sheet._formulaTextBoxForChart = keyword_null;
	        }
	    }
	
	    var _SheetModelManager = Core._SheetModelManager;
	    GC$.extend(_SheetModelManager.prototype, {
	        _backupCharts: function (chart, value) {
	            var self = this;
	            var changes = self._changes;
	            if (changes) {
	                var chartChanges = changes._chartChanges;
	                if (!chartChanges) {
	                    chartChanges = changes._chartChanges = [];
	                }
	                chartChanges.push({ chart: chart, value: value });
	            }
	        },
	        _restoreCharts: function (originalCharts) {
	            if (originalCharts) {
	                for (var i = originalCharts.length - 1; i >= 0; i--) {
	                    var chartItem = originalCharts[i];
	                    chartItem.chart._restore(chartItem.value);
	                }
	            }
	        }
	    });
	    _SheetModelManager._registerFeature('Charts', {
	        init: function () {
	            this._charts = new ChartCollection(this._sheet);
	        },
	        undo: function (changes) {
	            var chartChanges = changes._chartChanges;
	            if (chartChanges) {
	                this._restoreCharts(chartChanges);
	            }
	           
	           
	            this._sheet._updateAllChartInSheet(true);
	        }
	    });
	
	    Worksheet._registerFeature('chart', {
	        init: function () {
	            var _this = this;
	            var chartSource = _this._chartSource = new ChartSource(_this);
	           
	            
	            _this.charts = _this._modelManager._charts;
	            _this._floatingObjectListeners.push({
	                _onAddItem: function (floatingObject) {
	                    if (floatingObject.typeName === '2' ) {
	                        chartSource._addChart(floatingObject);
	                    }
	                }
	            });
	
	            function updateCharts(rects) {
	                for (var _i = 0, _a = _this.charts.all(); _i < _a.length; _i++) {
	                    var item = _a[_i];
	                    item._updateChartModel(true, rects);
	                }
	            }
	
	            _this._bind(Events.RowChanged + CHART_NS, function (event, data) {
	                var propertyName = data.propertyName;
	                if (propertyName === 'isVisible') {
	                    updateCharts([new CellRect(data.row, 0, 1, _this.getColumnCount())]);
	                }
	            });
	            _this._bind(Events.ColumnChanged + CHART_NS, function (event, data) {
	                var propertyName = data.propertyName;
	                if (propertyName === 'isVisible') {
	                    updateCharts([new CellRect(0, data.col, _this.getRowCount(), 1)]);
	                }
	            });
	            _this._bind(Events.FloatingObjectLoaded + CHART_NS, function (event, data) {
	                var chartModel = data.floatingObject._chart;
	                var floatingObject = data.floatingObject;
	                if (chartModel) {
	                    var previewElement = data.element;
	                    floatingObject._bindEvents(previewElement);
	                    setElementSize(_this, floatingObject, previewElement);
	                    floatingObject._initFlexDV(previewElement, Core._DPIHelper._getDevicePixel(), true);
	                }
	            });
	            _this._bind(Events.FloatingObjectChanged + CHART_NS, function (event, data) {
	                var floatingObject = data.floatingObject;
	                var propertyName = data.propertyName;
	                var flexDVs = floatingObject._flexDVs, hostElement;
	                if (floatingObject.getHost().length > 0 && flexDVs && flexDVs.length > 0) {
	                    var isSelected = floatingObject.isSelected();
	                    for (var i = 0, length = flexDVs.length; i < length; i++) {
	                        var flexDV = flexDVs[i];
	                        hostElement = flexDV.hostElement;
	                        if (propertyName === "width" || propertyName === "height") {
	                            var option = {};
	                            option[propertyName] = true;
	                            setElementSize(_this, floatingObject, hostElement, option);
	                            if (floatingObject.width() > 0 && floatingObject.height() > 0) {
	                                flexDV.refresh();
	                            }
	                        } else if (propertyName === "isSelected" && !isSelected) {
	                            flexDV.select(keyword_null);
	                        }
	                    }
	                }
	            });
	            _this._bind(Events.FloatingObjectRemoved + CHART_NS, function (event, data) {
	                var floatingObject = data.floatingObject, flexDVs = floatingObject._flexDVs;
	               
	                if (flexDVs) {
	                    floatingObject._dispose();
	
	                    destroyFormulaTextBoxForChart(_this);
	                }
	            });
	        },
	        dispose: function (clearCache) {
	            if (clearCache !== false) {
	                var sheet = this;
	                sheet._unbind(CHART_NS);
	                destroyFormulaTextBoxForChart(sheet);
	            }
	        },
	        processMouseDown: function (argObj) {
	            var sheet = this;
	            if (!argObj.hitInfo.formulaRangeHitInfo) {
	                destroyFormulaTextBoxForChart(sheet);
	                sheet._render._paintFormulaTextBox();
	            }
	        },
	        toJson: function (data, serializationOption) {
	            var ignoreStyle = serializationOption && serializationOption.ignoreStyle;
	            if (ignoreStyle) {
	                return;
	            }
	            var sheet = this;
	            var chartViews = sheet.charts.all();
	            if (chartViews.length > 0) {
	                data.charts = chartViews.map(function (chartView) {
	                    return chartView.toJSON();
	                });
	            }
	        },
	        fromJsonAfterFormula: function (data, noSchema, deserializationOptions) {
	            var ignoreStyle = deserializationOptions && deserializationOptions.ignoreStyle;
	            if (ignoreStyle) {
	                return;
	            }
	            var charts = data.charts;
	            var sheet = this;
	            if (charts) {
	                for (var _i = 0, charts_1 = charts; _i < charts_1.length; _i++) {
	                    var chart = charts_1[_i];
	                    var chartView = new Chart(sheet);
	                    chartView.fromJSON(chart);
	                    sheet.charts._add(chartView);
	                }
	            }
	        },
	        onLayoutChanged: function (e) {
	            var sheet = this;
	            var changeType = e.changeType;
	            if (changeType === 'zoomSheet') {
	                sheet.charts.all().forEach(function (floatingObject) {
	                    var flexDVs = floatingObject._flexDVs;
	                    if (flexDVs && flexDVs.length > 0) {
	                        for (var i = 0, length = flexDVs.length; i < length; i++) {
	                            var flexDV = flexDVs[i];
	                            setElementSize(sheet, floatingObject, flexDV.hostElement);
	                        }
	                        floatingObject._updateChartModel();
	                    }
	                });
	            }
	        },
	        onPaintSuspend: function (e) {
	            var sheet = this;
	            sheet.charts.all().forEach(function (chart) {
	                if (!e.suspend && chart._isDirty) {
	                    chart._updateChartModel();
	                }
	            });
	        },
	        setName: function (e) {
	            var oldName = e.oldName, newName = e.newName;
	
	            var spread = this.getParent();
	            if (spread) {
	                var sheetCount = spread.getSheetCount();
	                for (var sheetIndex = 0; sheetIndex < sheetCount; sheetIndex++) {
	                    var sheet = spread.getSheet(sheetIndex);
	                    sheet.charts.all().forEach(function (chart) {
	                        chart._onSheetNameChanged(oldName, newName);
	                    });
	                }
	            }
	        },
	        onProtectChanged: function () {
	            this._updateAllChartInSheet();
	        },
	        onGroupChanged: function (args) {
	            this.charts._onGroupChanged(args.start, args.end, args.isRow);
	        }
	    });
	
	    Workbook._registerFeature('chart', {
	        init: function () {
	            if (!Functions.findGlobalFunction('SERIES')) {
	                var func = new Functions.Function('SERIES', 4, 5);
	                func.evaluate = function (args) {  
	                    return 0;
	                };
	                func.acceptsReference = function (index) { 
	                    return true;
	                };
	                func.acceptsArray = function (index) { 
	                    return true;
	                };
	                Functions._customFunctions['SERIES'] = func;
	            }
	        },
	        fromJson: function (data, noSchema, deserializationOptions) {
	           
	           
	            var ignoreStyle = deserializationOptions && deserializationOptions.ignoreStyle;
	            if (ignoreStyle) {
	                return;
	            }
	            this.sheets.forEach(function (sheet) {
	                sheet.charts.all().forEach(function (chart) {
	                    chart.updateSeries(keyword_null, true);
	                });
	            });
	        }
	    });
	
	    module.exports = Charts;
	}());

/***/ })
/******/ ]);
//# sourceMappingURL=gc.spread.sheets.charts.12.0.0.js.map
}));